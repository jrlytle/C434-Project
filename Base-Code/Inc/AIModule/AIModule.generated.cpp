// Copyright 1998-2015 Epic Games, Inc. All Rights Reserved.
/*===========================================================================
	Boilerplate C++ definitions for a single module.
	This is automatically generated by UnrealHeaderTool.
	DO NOT modify this manually! Edit the corresponding .h files instead!
===========================================================================*/

#include "Private/AIModulePrivate.h"
#include "AIModule.generated.dep.h"
PRAGMA_DISABLE_DEPRECATION_WARNINGS
void EmptyLinkFunctionForGeneratedCodeAIModule() {}
static class UEnum* EAILockSource_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern AIMODULE_API class UEnum* Z_Construct_UEnum_AIModule_EAILockSource();
		extern AIMODULE_API class UPackage* Z_Construct_UPackage_AIModule();
		Singleton = GetStaticEnum(Z_Construct_UEnum_AIModule_EAILockSource, Z_Construct_UPackage_AIModule(), TEXT("EAILockSource"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EAILockSource(EAILockSource_StaticEnum, TEXT("/Script/AIModule"));
static class UEnum* EAIRequestPriority_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern AIMODULE_API class UEnum* Z_Construct_UEnum_AIModule_EAIRequestPriority();
		extern AIMODULE_API class UPackage* Z_Construct_UPackage_AIModule();
		Singleton = GetStaticEnum(Z_Construct_UEnum_AIModule_EAIRequestPriority, Z_Construct_UPackage_AIModule(), TEXT("EAIRequestPriority"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EAIRequestPriority(EAIRequestPriority_StaticEnum, TEXT("/Script/AIModule"));
static class UEnum* EPawnActionEventType_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern AIMODULE_API class UEnum* Z_Construct_UEnum_AIModule_EPawnActionEventType();
		extern AIMODULE_API class UPackage* Z_Construct_UPackage_AIModule();
		Singleton = GetStaticEnum(Z_Construct_UEnum_AIModule_EPawnActionEventType, Z_Construct_UPackage_AIModule(), TEXT("EPawnActionEventType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EPawnActionEventType(EPawnActionEventType_StaticEnum, TEXT("/Script/AIModule"));
static class UEnum* EPawnActionResult_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern AIMODULE_API class UEnum* Z_Construct_UEnum_AIModule_EPawnActionResult();
		extern AIMODULE_API class UPackage* Z_Construct_UPackage_AIModule();
		Singleton = GetStaticEnum(Z_Construct_UEnum_AIModule_EPawnActionResult, Z_Construct_UPackage_AIModule(), TEXT("EPawnActionResult"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EPawnActionResult(EPawnActionResult_StaticEnum, TEXT("/Script/AIModule"));
static class UEnum* EPawnActionAbortState_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern AIMODULE_API class UEnum* Z_Construct_UEnum_AIModule_EPawnActionAbortState();
		extern AIMODULE_API class UPackage* Z_Construct_UPackage_AIModule();
		Singleton = GetStaticEnum(Z_Construct_UEnum_AIModule_EPawnActionAbortState, Z_Construct_UPackage_AIModule(), TEXT("EPawnActionAbortState"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EPawnActionAbortState(EPawnActionAbortState_StaticEnum, TEXT("/Script/AIModule"));
static class UEnum* EAIOptionFlag_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern AIMODULE_API class UEnum* Z_Construct_UEnum_AIModule_EAIOptionFlag();
		extern AIMODULE_API class UPackage* Z_Construct_UPackage_AIModule();
		Singleton = GetStaticEnum(Z_Construct_UEnum_AIModule_EAIOptionFlag, Z_Construct_UPackage_AIModule(), TEXT("EAIOptionFlag"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EAIOptionFlag(EAIOptionFlag_StaticEnum, TEXT("/Script/AIModule"));
class UScriptStruct* FAIMoveRequest::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern AIMODULE_API class UScriptStruct* Z_Construct_UScriptStruct_FAIMoveRequest();
		extern AIMODULE_API uint32 Get_Z_Construct_UScriptStruct_FAIMoveRequest_CRC();
		extern AIMODULE_API class UPackage* Z_Construct_UPackage_AIModule();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FAIMoveRequest, Z_Construct_UPackage_AIModule(), TEXT("AIMoveRequest"), sizeof(FAIMoveRequest), Get_Z_Construct_UScriptStruct_FAIMoveRequest_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FAIMoveRequest(FAIMoveRequest::StaticStruct, TEXT("/Script/AIModule"));
static struct FScriptStruct_AIModule_StaticRegisterNativesFAIMoveRequest
{
	FScriptStruct_AIModule_StaticRegisterNativesFAIMoveRequest()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("AIMoveRequest")),new UScriptStruct::TCppStructOps<FAIMoveRequest>);
	}
} ScriptStruct_AIModule_StaticRegisterNativesFAIMoveRequest;
class UScriptStruct* FAIRequestID::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern AIMODULE_API class UScriptStruct* Z_Construct_UScriptStruct_FAIRequestID();
		extern AIMODULE_API uint32 Get_Z_Construct_UScriptStruct_FAIRequestID_CRC();
		extern AIMODULE_API class UPackage* Z_Construct_UPackage_AIModule();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FAIRequestID, Z_Construct_UPackage_AIModule(), TEXT("AIRequestID"), sizeof(FAIRequestID), Get_Z_Construct_UScriptStruct_FAIRequestID_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FAIRequestID(FAIRequestID::StaticStruct, TEXT("/Script/AIModule"));
static struct FScriptStruct_AIModule_StaticRegisterNativesFAIRequestID
{
	FScriptStruct_AIModule_StaticRegisterNativesFAIRequestID()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("AIRequestID")),new UScriptStruct::TCppStructOps<FAIRequestID>);
	}
} ScriptStruct_AIModule_StaticRegisterNativesFAIRequestID;
	void UAIResourceInterface::StaticRegisterNativesUAIResourceInterface()
	{
	}
	IMPLEMENT_CLASS(UAIResourceInterface, 2184568342);
static class UEnum* EPathFollowingRequestResult_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern AIMODULE_API class UEnum* Z_Construct_UEnum_AIModule_EPathFollowingRequestResult();
		extern AIMODULE_API class UPackage* Z_Construct_UPackage_AIModule();
		Singleton = GetStaticEnum(Z_Construct_UEnum_AIModule_EPathFollowingRequestResult, Z_Construct_UPackage_AIModule(), TEXT("EPathFollowingRequestResult"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EPathFollowingRequestResult(EPathFollowingRequestResult_StaticEnum, TEXT("/Script/AIModule"));
static class UEnum* EPathFollowingAction_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern AIMODULE_API class UEnum* Z_Construct_UEnum_AIModule_EPathFollowingAction();
		extern AIMODULE_API class UPackage* Z_Construct_UPackage_AIModule();
		Singleton = GetStaticEnum(Z_Construct_UEnum_AIModule_EPathFollowingAction, Z_Construct_UPackage_AIModule(), TEXT("EPathFollowingAction"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EPathFollowingAction(EPathFollowingAction_StaticEnum, TEXT("/Script/AIModule"));
static class UEnum* EPathFollowingResult_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern AIMODULE_API class UEnum* Z_Construct_UEnum_AIModule_EPathFollowingResult();
		extern AIMODULE_API class UPackage* Z_Construct_UPackage_AIModule();
		Singleton = GetStaticEnum(Z_Construct_UEnum_AIModule_EPathFollowingResult, Z_Construct_UPackage_AIModule(), TEXT("EPathFollowingResult"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EPathFollowingResult(EPathFollowingResult_StaticEnum, TEXT("/Script/AIModule"));
static class UEnum* EPathFollowingStatus_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern AIMODULE_API class UEnum* Z_Construct_UEnum_AIModule_EPathFollowingStatus();
		extern AIMODULE_API class UPackage* Z_Construct_UPackage_AIModule();
		Singleton = GetStaticEnum(Z_Construct_UEnum_AIModule_EPathFollowingStatus, Z_Construct_UPackage_AIModule(), TEXT("EPathFollowingStatus"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EPathFollowingStatus(EPathFollowingStatus_StaticEnum, TEXT("/Script/AIModule"));
	void UPathFollowingComponent::StaticRegisterNativesUPathFollowingComponent()
	{
		FNativeFunctionRegistrar::RegisterFunction(UPathFollowingComponent::StaticClass(),"GetPathActionType",(Native)&UPathFollowingComponent::execGetPathActionType);
		FNativeFunctionRegistrar::RegisterFunction(UPathFollowingComponent::StaticClass(),"GetPathDestination",(Native)&UPathFollowingComponent::execGetPathDestination);
		FNativeFunctionRegistrar::RegisterFunction(UPathFollowingComponent::StaticClass(),"OnActorBump",(Native)&UPathFollowingComponent::execOnActorBump);
	}
	IMPLEMENT_CLASS(UPathFollowingComponent, 1326150295);
	void UAIAsyncTaskBlueprintProxy::StaticRegisterNativesUAIAsyncTaskBlueprintProxy()
	{
		FNativeFunctionRegistrar::RegisterFunction(UAIAsyncTaskBlueprintProxy::StaticClass(),"OnMoveCompleted",(Native)&UAIAsyncTaskBlueprintProxy::execOnMoveCompleted);
	}
	IMPLEMENT_CLASS(UAIAsyncTaskBlueprintProxy, 702228963);
	void UAIBlueprintHelperLibrary::StaticRegisterNativesUAIBlueprintHelperLibrary()
	{
		FNativeFunctionRegistrar::RegisterFunction(UAIBlueprintHelperLibrary::StaticClass(),"CreateMoveToProxyObject",(Native)&UAIBlueprintHelperLibrary::execCreateMoveToProxyObject);
		FNativeFunctionRegistrar::RegisterFunction(UAIBlueprintHelperLibrary::StaticClass(),"GetAIController",(Native)&UAIBlueprintHelperLibrary::execGetAIController);
		FNativeFunctionRegistrar::RegisterFunction(UAIBlueprintHelperLibrary::StaticClass(),"GetBlackboard",(Native)&UAIBlueprintHelperLibrary::execGetBlackboard);
		FNativeFunctionRegistrar::RegisterFunction(UAIBlueprintHelperLibrary::StaticClass(),"IsValidAIDirection",(Native)&UAIBlueprintHelperLibrary::execIsValidAIDirection);
		FNativeFunctionRegistrar::RegisterFunction(UAIBlueprintHelperLibrary::StaticClass(),"IsValidAILocation",(Native)&UAIBlueprintHelperLibrary::execIsValidAILocation);
		FNativeFunctionRegistrar::RegisterFunction(UAIBlueprintHelperLibrary::StaticClass(),"IsValidAIRotation",(Native)&UAIBlueprintHelperLibrary::execIsValidAIRotation);
		FNativeFunctionRegistrar::RegisterFunction(UAIBlueprintHelperLibrary::StaticClass(),"LockAIResourcesWithAnimation",(Native)&UAIBlueprintHelperLibrary::execLockAIResourcesWithAnimation);
		FNativeFunctionRegistrar::RegisterFunction(UAIBlueprintHelperLibrary::StaticClass(),"SendAIMessage",(Native)&UAIBlueprintHelperLibrary::execSendAIMessage);
		FNativeFunctionRegistrar::RegisterFunction(UAIBlueprintHelperLibrary::StaticClass(),"SpawnAIFromClass",(Native)&UAIBlueprintHelperLibrary::execSpawnAIFromClass);
		FNativeFunctionRegistrar::RegisterFunction(UAIBlueprintHelperLibrary::StaticClass(),"UnlockAIResourcesWithAnimation",(Native)&UAIBlueprintHelperLibrary::execUnlockAIResourcesWithAnimation);
	}
	IMPLEMENT_CLASS(UAIBlueprintHelperLibrary, 3000320691);
class UScriptStruct* FPawnActionStack::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern AIMODULE_API class UScriptStruct* Z_Construct_UScriptStruct_FPawnActionStack();
		extern AIMODULE_API uint32 Get_Z_Construct_UScriptStruct_FPawnActionStack_CRC();
		extern AIMODULE_API class UPackage* Z_Construct_UPackage_AIModule();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FPawnActionStack, Z_Construct_UPackage_AIModule(), TEXT("PawnActionStack"), sizeof(FPawnActionStack), Get_Z_Construct_UScriptStruct_FPawnActionStack_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FPawnActionStack(FPawnActionStack::StaticStruct, TEXT("/Script/AIModule"));
static struct FScriptStruct_AIModule_StaticRegisterNativesFPawnActionStack
{
	FScriptStruct_AIModule_StaticRegisterNativesFPawnActionStack()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("PawnActionStack")),new UScriptStruct::TCppStructOps<FPawnActionStack>);
	}
} ScriptStruct_AIModule_StaticRegisterNativesFPawnActionStack;
class UScriptStruct* FPawnActionEvent::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern AIMODULE_API class UScriptStruct* Z_Construct_UScriptStruct_FPawnActionEvent();
		extern AIMODULE_API uint32 Get_Z_Construct_UScriptStruct_FPawnActionEvent_CRC();
		extern AIMODULE_API class UPackage* Z_Construct_UPackage_AIModule();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FPawnActionEvent, Z_Construct_UPackage_AIModule(), TEXT("PawnActionEvent"), sizeof(FPawnActionEvent), Get_Z_Construct_UScriptStruct_FPawnActionEvent_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FPawnActionEvent(FPawnActionEvent::StaticStruct, TEXT("/Script/AIModule"));
static struct FScriptStruct_AIModule_StaticRegisterNativesFPawnActionEvent
{
	FScriptStruct_AIModule_StaticRegisterNativesFPawnActionEvent()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("PawnActionEvent")),new UScriptStruct::TCppStructOps<FPawnActionEvent>);
	}
} ScriptStruct_AIModule_StaticRegisterNativesFPawnActionEvent;
	void UPawnActionsComponent::StaticRegisterNativesUPawnActionsComponent()
	{
		FNativeFunctionRegistrar::RegisterFunction(UPawnActionsComponent::StaticClass(),"K2_AbortAction",(Native)&UPawnActionsComponent::execK2_AbortAction);
		FNativeFunctionRegistrar::RegisterFunction(UPawnActionsComponent::StaticClass(),"K2_ForceAbortAction",(Native)&UPawnActionsComponent::execK2_ForceAbortAction);
		FNativeFunctionRegistrar::RegisterFunction(UPawnActionsComponent::StaticClass(),"K2_PerformAction",(Native)&UPawnActionsComponent::execK2_PerformAction);
		FNativeFunctionRegistrar::RegisterFunction(UPawnActionsComponent::StaticClass(),"K2_PushAction",(Native)&UPawnActionsComponent::execK2_PushAction);
	}
	IMPLEMENT_CLASS(UPawnActionsComponent, 1704844464);
	void UAIPerceptionListenerInterface::StaticRegisterNativesUAIPerceptionListenerInterface()
	{
	}
	IMPLEMENT_CLASS(UAIPerceptionListenerInterface, 2938276292);
static class UEnum* EBTFlowAbortMode_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern AIMODULE_API class UEnum* Z_Construct_UEnum_AIModule_EBTFlowAbortMode();
		extern AIMODULE_API class UPackage* Z_Construct_UPackage_AIModule();
		Singleton = GetStaticEnum(Z_Construct_UEnum_AIModule_EBTFlowAbortMode, Z_Construct_UPackage_AIModule(), TEXT("EBTFlowAbortMode"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EBTFlowAbortMode(EBTFlowAbortMode_StaticEnum, TEXT("/Script/AIModule"));
static class UEnum* EBTNodeResult_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern AIMODULE_API class UEnum* Z_Construct_UEnum_AIModule_EBTNodeResult();
		extern AIMODULE_API class UPackage* Z_Construct_UPackage_AIModule();
		Singleton = GetStaticEnum(Z_Construct_UEnum_AIModule_EBTNodeResult, Z_Construct_UPackage_AIModule(), TEXT("EBTNodeResult"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EBTNodeResult(EBTNodeResult_StaticEnum, TEXT("/Script/AIModule"));
class UScriptStruct* FBlackboardKeySelector::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern AIMODULE_API class UScriptStruct* Z_Construct_UScriptStruct_FBlackboardKeySelector();
		extern AIMODULE_API uint32 Get_Z_Construct_UScriptStruct_FBlackboardKeySelector_CRC();
		extern AIMODULE_API class UPackage* Z_Construct_UPackage_AIModule();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FBlackboardKeySelector, Z_Construct_UPackage_AIModule(), TEXT("BlackboardKeySelector"), sizeof(FBlackboardKeySelector), Get_Z_Construct_UScriptStruct_FBlackboardKeySelector_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FBlackboardKeySelector(FBlackboardKeySelector::StaticStruct, TEXT("/Script/AIModule"));
static struct FScriptStruct_AIModule_StaticRegisterNativesFBlackboardKeySelector
{
	FScriptStruct_AIModule_StaticRegisterNativesFBlackboardKeySelector()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("BlackboardKeySelector")),new UScriptStruct::TCppStructOps<FBlackboardKeySelector>);
	}
} ScriptStruct_AIModule_StaticRegisterNativesFBlackboardKeySelector;
	void UBehaviorTreeTypes::StaticRegisterNativesUBehaviorTreeTypes()
	{
	}
	IMPLEMENT_CLASS(UBehaviorTreeTypes, 1288497821);
static class UEnum* ETeamAttitude_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern AIMODULE_API class UEnum* Z_Construct_UEnum_AIModule_ETeamAttitude();
		extern AIMODULE_API class UPackage* Z_Construct_UPackage_AIModule();
		Singleton = GetStaticEnum(Z_Construct_UEnum_AIModule_ETeamAttitude, Z_Construct_UPackage_AIModule(), TEXT("ETeamAttitude"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ETeamAttitude(ETeamAttitude_StaticEnum, TEXT("/Script/AIModule"));
class UScriptStruct* FGenericTeamId::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern AIMODULE_API class UScriptStruct* Z_Construct_UScriptStruct_FGenericTeamId();
		extern AIMODULE_API uint32 Get_Z_Construct_UScriptStruct_FGenericTeamId_CRC();
		extern AIMODULE_API class UPackage* Z_Construct_UPackage_AIModule();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGenericTeamId, Z_Construct_UPackage_AIModule(), TEXT("GenericTeamId"), sizeof(FGenericTeamId), Get_Z_Construct_UScriptStruct_FGenericTeamId_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGenericTeamId(FGenericTeamId::StaticStruct, TEXT("/Script/AIModule"));
static struct FScriptStruct_AIModule_StaticRegisterNativesFGenericTeamId
{
	FScriptStruct_AIModule_StaticRegisterNativesFGenericTeamId()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GenericTeamId")),new UScriptStruct::TCppStructOps<FGenericTeamId>);
	}
} ScriptStruct_AIModule_StaticRegisterNativesFGenericTeamId;
	void UGenericTeamAgentInterface::StaticRegisterNativesUGenericTeamAgentInterface()
	{
	}
	IMPLEMENT_CLASS(UGenericTeamAgentInterface, 3417586454);
	void AAIController::OnPossess(APawn* PossessedPawn)
	{
		AIController_eventOnPossess_Parms Parms;
		Parms.PossessedPawn=PossessedPawn;
		ProcessEvent(FindFunctionChecked(AIMODULE_OnPossess),&Parms);
	}
	void AAIController::OnUsingBlackBoard(UBlackboardComponent* BlackboardComp, UBlackboardData* BlackboardAsset)
	{
		AIController_eventOnUsingBlackBoard_Parms Parms;
		Parms.BlackboardComp=BlackboardComp;
		Parms.BlackboardAsset=BlackboardAsset;
		ProcessEvent(FindFunctionChecked(AIMODULE_OnUsingBlackBoard),&Parms);
	}
	void AAIController::StaticRegisterNativesAAIController()
	{
		FNativeFunctionRegistrar::RegisterFunction(AAIController::StaticClass(),"GetAIPerceptionComponent",(Native)&AAIController::execGetAIPerceptionComponent);
		FNativeFunctionRegistrar::RegisterFunction(AAIController::StaticClass(),"GetFocalPoint",(Native)&AAIController::execGetFocalPoint);
		FNativeFunctionRegistrar::RegisterFunction(AAIController::StaticClass(),"GetFocalPointOnActor",(Native)&AAIController::execGetFocalPointOnActor);
		FNativeFunctionRegistrar::RegisterFunction(AAIController::StaticClass(),"GetFocusActor",(Native)&AAIController::execGetFocusActor);
		FNativeFunctionRegistrar::RegisterFunction(AAIController::StaticClass(),"GetImmediateMoveDestination",(Native)&AAIController::execGetImmediateMoveDestination);
		FNativeFunctionRegistrar::RegisterFunction(AAIController::StaticClass(),"GetMoveStatus",(Native)&AAIController::execGetMoveStatus);
		FNativeFunctionRegistrar::RegisterFunction(AAIController::StaticClass(),"GetPathFollowingComponent",(Native)&AAIController::execGetPathFollowingComponent);
		FNativeFunctionRegistrar::RegisterFunction(AAIController::StaticClass(),"HasPartialPath",(Native)&AAIController::execHasPartialPath);
		FNativeFunctionRegistrar::RegisterFunction(AAIController::StaticClass(),"K2_ClearFocus",(Native)&AAIController::execK2_ClearFocus);
		FNativeFunctionRegistrar::RegisterFunction(AAIController::StaticClass(),"K2_SetFocalPoint",(Native)&AAIController::execK2_SetFocalPoint);
		FNativeFunctionRegistrar::RegisterFunction(AAIController::StaticClass(),"K2_SetFocus",(Native)&AAIController::execK2_SetFocus);
		FNativeFunctionRegistrar::RegisterFunction(AAIController::StaticClass(),"MoveToActor",(Native)&AAIController::execMoveToActor);
		FNativeFunctionRegistrar::RegisterFunction(AAIController::StaticClass(),"MoveToLocation",(Native)&AAIController::execMoveToLocation);
		FNativeFunctionRegistrar::RegisterFunction(AAIController::StaticClass(),"OnGameplayTaskResourcesClaimed",(Native)&AAIController::execOnGameplayTaskResourcesClaimed);
		FNativeFunctionRegistrar::RegisterFunction(AAIController::StaticClass(),"RunBehaviorTree",(Native)&AAIController::execRunBehaviorTree);
		FNativeFunctionRegistrar::RegisterFunction(AAIController::StaticClass(),"SetMoveBlockDetection",(Native)&AAIController::execSetMoveBlockDetection);
		FNativeFunctionRegistrar::RegisterFunction(AAIController::StaticClass(),"UseBlackboard",(Native)&AAIController::execUseBlackboard);
	}
	IMPLEMENT_CLASS(AAIController, 95909088);
	void ADetourCrowdAIController::StaticRegisterNativesADetourCrowdAIController()
	{
	}
	IMPLEMENT_CLASS(ADetourCrowdAIController, 3354184620);
class UScriptStruct* FAIDataProviderBoolValue::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern AIMODULE_API class UScriptStruct* Z_Construct_UScriptStruct_FAIDataProviderBoolValue();
		extern AIMODULE_API uint32 Get_Z_Construct_UScriptStruct_FAIDataProviderBoolValue_CRC();
		extern AIMODULE_API class UPackage* Z_Construct_UPackage_AIModule();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FAIDataProviderBoolValue, Z_Construct_UPackage_AIModule(), TEXT("AIDataProviderBoolValue"), sizeof(FAIDataProviderBoolValue), Get_Z_Construct_UScriptStruct_FAIDataProviderBoolValue_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FAIDataProviderBoolValue(FAIDataProviderBoolValue::StaticStruct, TEXT("/Script/AIModule"));
static struct FScriptStruct_AIModule_StaticRegisterNativesFAIDataProviderBoolValue
{
	FScriptStruct_AIModule_StaticRegisterNativesFAIDataProviderBoolValue()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("AIDataProviderBoolValue")),new UScriptStruct::TCppStructOps<FAIDataProviderBoolValue>);
	}
} ScriptStruct_AIModule_StaticRegisterNativesFAIDataProviderBoolValue;
class UScriptStruct* FAIDataProviderFloatValue::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern AIMODULE_API class UScriptStruct* Z_Construct_UScriptStruct_FAIDataProviderFloatValue();
		extern AIMODULE_API uint32 Get_Z_Construct_UScriptStruct_FAIDataProviderFloatValue_CRC();
		extern AIMODULE_API class UPackage* Z_Construct_UPackage_AIModule();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FAIDataProviderFloatValue, Z_Construct_UPackage_AIModule(), TEXT("AIDataProviderFloatValue"), sizeof(FAIDataProviderFloatValue), Get_Z_Construct_UScriptStruct_FAIDataProviderFloatValue_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FAIDataProviderFloatValue(FAIDataProviderFloatValue::StaticStruct, TEXT("/Script/AIModule"));
static struct FScriptStruct_AIModule_StaticRegisterNativesFAIDataProviderFloatValue
{
	FScriptStruct_AIModule_StaticRegisterNativesFAIDataProviderFloatValue()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("AIDataProviderFloatValue")),new UScriptStruct::TCppStructOps<FAIDataProviderFloatValue>);
	}
} ScriptStruct_AIModule_StaticRegisterNativesFAIDataProviderFloatValue;
class UScriptStruct* FAIDataProviderIntValue::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern AIMODULE_API class UScriptStruct* Z_Construct_UScriptStruct_FAIDataProviderIntValue();
		extern AIMODULE_API uint32 Get_Z_Construct_UScriptStruct_FAIDataProviderIntValue_CRC();
		extern AIMODULE_API class UPackage* Z_Construct_UPackage_AIModule();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FAIDataProviderIntValue, Z_Construct_UPackage_AIModule(), TEXT("AIDataProviderIntValue"), sizeof(FAIDataProviderIntValue), Get_Z_Construct_UScriptStruct_FAIDataProviderIntValue_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FAIDataProviderIntValue(FAIDataProviderIntValue::StaticStruct, TEXT("/Script/AIModule"));
static struct FScriptStruct_AIModule_StaticRegisterNativesFAIDataProviderIntValue
{
	FScriptStruct_AIModule_StaticRegisterNativesFAIDataProviderIntValue()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("AIDataProviderIntValue")),new UScriptStruct::TCppStructOps<FAIDataProviderIntValue>);
	}
} ScriptStruct_AIModule_StaticRegisterNativesFAIDataProviderIntValue;
class UScriptStruct* FAIDataProviderStructValue::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern AIMODULE_API class UScriptStruct* Z_Construct_UScriptStruct_FAIDataProviderStructValue();
		extern AIMODULE_API uint32 Get_Z_Construct_UScriptStruct_FAIDataProviderStructValue_CRC();
		extern AIMODULE_API class UPackage* Z_Construct_UPackage_AIModule();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FAIDataProviderStructValue, Z_Construct_UPackage_AIModule(), TEXT("AIDataProviderStructValue"), sizeof(FAIDataProviderStructValue), Get_Z_Construct_UScriptStruct_FAIDataProviderStructValue_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FAIDataProviderStructValue(FAIDataProviderStructValue::StaticStruct, TEXT("/Script/AIModule"));
static struct FScriptStruct_AIModule_StaticRegisterNativesFAIDataProviderStructValue
{
	FScriptStruct_AIModule_StaticRegisterNativesFAIDataProviderStructValue()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("AIDataProviderStructValue")),new UScriptStruct::TCppStructOps<FAIDataProviderStructValue>);
	}
} ScriptStruct_AIModule_StaticRegisterNativesFAIDataProviderStructValue;
class UScriptStruct* FAIDataProviderTypedValue::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern AIMODULE_API class UScriptStruct* Z_Construct_UScriptStruct_FAIDataProviderTypedValue();
		extern AIMODULE_API uint32 Get_Z_Construct_UScriptStruct_FAIDataProviderTypedValue_CRC();
		extern AIMODULE_API class UPackage* Z_Construct_UPackage_AIModule();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FAIDataProviderTypedValue, Z_Construct_UPackage_AIModule(), TEXT("AIDataProviderTypedValue"), sizeof(FAIDataProviderTypedValue), Get_Z_Construct_UScriptStruct_FAIDataProviderTypedValue_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FAIDataProviderTypedValue(FAIDataProviderTypedValue::StaticStruct, TEXT("/Script/AIModule"));
static struct FScriptStruct_AIModule_StaticRegisterNativesFAIDataProviderTypedValue
{
	FScriptStruct_AIModule_StaticRegisterNativesFAIDataProviderTypedValue()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("AIDataProviderTypedValue")),new UScriptStruct::TCppStructOps<FAIDataProviderTypedValue>);
	}
} ScriptStruct_AIModule_StaticRegisterNativesFAIDataProviderTypedValue;
class UScriptStruct* FAIDataProviderValue::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern AIMODULE_API class UScriptStruct* Z_Construct_UScriptStruct_FAIDataProviderValue();
		extern AIMODULE_API uint32 Get_Z_Construct_UScriptStruct_FAIDataProviderValue_CRC();
		extern AIMODULE_API class UPackage* Z_Construct_UPackage_AIModule();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FAIDataProviderValue, Z_Construct_UPackage_AIModule(), TEXT("AIDataProviderValue"), sizeof(FAIDataProviderValue), Get_Z_Construct_UScriptStruct_FAIDataProviderValue_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FAIDataProviderValue(FAIDataProviderValue::StaticStruct, TEXT("/Script/AIModule"));
static struct FScriptStruct_AIModule_StaticRegisterNativesFAIDataProviderValue
{
	FScriptStruct_AIModule_StaticRegisterNativesFAIDataProviderValue()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("AIDataProviderValue")),new UScriptStruct::TCppStructOps<FAIDataProviderValue>);
	}
} ScriptStruct_AIModule_StaticRegisterNativesFAIDataProviderValue;
	void UAIDataProvider::StaticRegisterNativesUAIDataProvider()
	{
	}
	IMPLEMENT_CLASS(UAIDataProvider, 1010154626);
	void UAIDataProvider_QueryParams::StaticRegisterNativesUAIDataProvider_QueryParams()
	{
	}
	IMPLEMENT_CLASS(UAIDataProvider_QueryParams, 3793272521);
	void UAIHotSpotManager::StaticRegisterNativesUAIHotSpotManager()
	{
	}
	IMPLEMENT_CLASS(UAIHotSpotManager, 2669441993);
	void UAISystem::StaticRegisterNativesUAISystem()
	{
		FNativeFunctionRegistrar::RegisterFunction(UAISystem::StaticClass(),"AIIgnorePlayers",(Native)&UAISystem::execAIIgnorePlayers);
		FNativeFunctionRegistrar::RegisterFunction(UAISystem::StaticClass(),"AILoggingVerbose",(Native)&UAISystem::execAILoggingVerbose);
	}
	IMPLEMENT_CLASS(UAISystem, 4222249452);
static class UEnum* EAISenseNotifyType_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern AIMODULE_API class UEnum* Z_Construct_UEnum_AIModule_EAISenseNotifyType();
		extern AIMODULE_API class UPackage* Z_Construct_UPackage_AIModule();
		Singleton = GetStaticEnum(Z_Construct_UEnum_AIModule_EAISenseNotifyType, Z_Construct_UPackage_AIModule(), TEXT("EAISenseNotifyType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EAISenseNotifyType(EAISenseNotifyType_StaticEnum, TEXT("/Script/AIModule"));
class UScriptStruct* FAISenseAffiliationFilter::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern AIMODULE_API class UScriptStruct* Z_Construct_UScriptStruct_FAISenseAffiliationFilter();
		extern AIMODULE_API uint32 Get_Z_Construct_UScriptStruct_FAISenseAffiliationFilter_CRC();
		extern AIMODULE_API class UPackage* Z_Construct_UPackage_AIModule();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FAISenseAffiliationFilter, Z_Construct_UPackage_AIModule(), TEXT("AISenseAffiliationFilter"), sizeof(FAISenseAffiliationFilter), Get_Z_Construct_UScriptStruct_FAISenseAffiliationFilter_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FAISenseAffiliationFilter(FAISenseAffiliationFilter::StaticStruct, TEXT("/Script/AIModule"));
static struct FScriptStruct_AIModule_StaticRegisterNativesFAISenseAffiliationFilter
{
	FScriptStruct_AIModule_StaticRegisterNativesFAISenseAffiliationFilter()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("AISenseAffiliationFilter")),new UScriptStruct::TCppStructOps<FAISenseAffiliationFilter>);
	}
} ScriptStruct_AIModule_StaticRegisterNativesFAISenseAffiliationFilter;
class UScriptStruct* FAIStimulus::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern AIMODULE_API class UScriptStruct* Z_Construct_UScriptStruct_FAIStimulus();
		extern AIMODULE_API uint32 Get_Z_Construct_UScriptStruct_FAIStimulus_CRC();
		extern AIMODULE_API class UPackage* Z_Construct_UPackage_AIModule();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FAIStimulus, Z_Construct_UPackage_AIModule(), TEXT("AIStimulus"), sizeof(FAIStimulus), Get_Z_Construct_UScriptStruct_FAIStimulus_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FAIStimulus(FAIStimulus::StaticStruct, TEXT("/Script/AIModule"));
static struct FScriptStruct_AIModule_StaticRegisterNativesFAIStimulus
{
	FScriptStruct_AIModule_StaticRegisterNativesFAIStimulus()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("AIStimulus")),new UScriptStruct::TCppStructOps<FAIStimulus>);
	}
} ScriptStruct_AIModule_StaticRegisterNativesFAIStimulus;
	void UAISense::StaticRegisterNativesUAISense()
	{
	}
	IMPLEMENT_CLASS(UAISense, 1015167788);
	void UAIPerceptionSystem::StaticRegisterNativesUAIPerceptionSystem()
	{
		FNativeFunctionRegistrar::RegisterFunction(UAIPerceptionSystem::StaticClass(),"GetSenseClassForStimulus",(Native)&UAIPerceptionSystem::execGetSenseClassForStimulus);
		FNativeFunctionRegistrar::RegisterFunction(UAIPerceptionSystem::StaticClass(),"OnPerceptionStimuliSourceEndPlay",(Native)&UAIPerceptionSystem::execOnPerceptionStimuliSourceEndPlay);
		FNativeFunctionRegistrar::RegisterFunction(UAIPerceptionSystem::StaticClass(),"RegisterPerceptionStimuliSource",(Native)&UAIPerceptionSystem::execRegisterPerceptionStimuliSource);
		FNativeFunctionRegistrar::RegisterFunction(UAIPerceptionSystem::StaticClass(),"ReportEvent",(Native)&UAIPerceptionSystem::execReportEvent);
		FNativeFunctionRegistrar::RegisterFunction(UAIPerceptionSystem::StaticClass(),"ReportPerceptionEvent",(Native)&UAIPerceptionSystem::execReportPerceptionEvent);
	}
	IMPLEMENT_CLASS(UAIPerceptionSystem, 493866503);
class UScriptStruct* FActorPerceptionBlueprintInfo::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern AIMODULE_API class UScriptStruct* Z_Construct_UScriptStruct_FActorPerceptionBlueprintInfo();
		extern AIMODULE_API uint32 Get_Z_Construct_UScriptStruct_FActorPerceptionBlueprintInfo_CRC();
		extern AIMODULE_API class UPackage* Z_Construct_UPackage_AIModule();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FActorPerceptionBlueprintInfo, Z_Construct_UPackage_AIModule(), TEXT("ActorPerceptionBlueprintInfo"), sizeof(FActorPerceptionBlueprintInfo), Get_Z_Construct_UScriptStruct_FActorPerceptionBlueprintInfo_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FActorPerceptionBlueprintInfo(FActorPerceptionBlueprintInfo::StaticStruct, TEXT("/Script/AIModule"));
static struct FScriptStruct_AIModule_StaticRegisterNativesFActorPerceptionBlueprintInfo
{
	FScriptStruct_AIModule_StaticRegisterNativesFActorPerceptionBlueprintInfo()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("ActorPerceptionBlueprintInfo")),new UScriptStruct::TCppStructOps<FActorPerceptionBlueprintInfo>);
	}
} ScriptStruct_AIModule_StaticRegisterNativesFActorPerceptionBlueprintInfo;
	void UAIPerceptionComponent::StaticRegisterNativesUAIPerceptionComponent()
	{
		FNativeFunctionRegistrar::RegisterFunction(UAIPerceptionComponent::StaticClass(),"GetActorsPerception",(Native)&UAIPerceptionComponent::execGetActorsPerception);
		FNativeFunctionRegistrar::RegisterFunction(UAIPerceptionComponent::StaticClass(),"GetPerceivedActors",(Native)&UAIPerceptionComponent::execGetPerceivedActors);
		FNativeFunctionRegistrar::RegisterFunction(UAIPerceptionComponent::StaticClass(),"GetPerceivedHostileActors",(Native)&UAIPerceptionComponent::execGetPerceivedHostileActors);
		FNativeFunctionRegistrar::RegisterFunction(UAIPerceptionComponent::StaticClass(),"OnOwnerEndPlay",(Native)&UAIPerceptionComponent::execOnOwnerEndPlay);
		FNativeFunctionRegistrar::RegisterFunction(UAIPerceptionComponent::StaticClass(),"RequestStimuliListenerUpdate",(Native)&UAIPerceptionComponent::execRequestStimuliListenerUpdate);
	}
	IMPLEMENT_CLASS(UAIPerceptionComponent, 1878529373);
	void UAIPerceptionStimuliSourceComponent::StaticRegisterNativesUAIPerceptionStimuliSourceComponent()
	{
		FNativeFunctionRegistrar::RegisterFunction(UAIPerceptionStimuliSourceComponent::StaticClass(),"RegisterForSense",(Native)&UAIPerceptionStimuliSourceComponent::execRegisterForSense);
		FNativeFunctionRegistrar::RegisterFunction(UAIPerceptionStimuliSourceComponent::StaticClass(),"RegisterWithPerceptionSystem",(Native)&UAIPerceptionStimuliSourceComponent::execRegisterWithPerceptionSystem);
		FNativeFunctionRegistrar::RegisterFunction(UAIPerceptionStimuliSourceComponent::StaticClass(),"UnregisterFromPerceptionSystem",(Native)&UAIPerceptionStimuliSourceComponent::execUnregisterFromPerceptionSystem);
		FNativeFunctionRegistrar::RegisterFunction(UAIPerceptionStimuliSourceComponent::StaticClass(),"UnregisterFromSense",(Native)&UAIPerceptionStimuliSourceComponent::execUnregisterFromSense);
	}
	IMPLEMENT_CLASS(UAIPerceptionStimuliSourceComponent, 4101256626);
	void UAIResource_Movement::StaticRegisterNativesUAIResource_Movement()
	{
	}
	IMPLEMENT_CLASS(UAIResource_Movement, 939877476);
	void UAIResource_Logic::StaticRegisterNativesUAIResource_Logic()
	{
	}
	IMPLEMENT_CLASS(UAIResource_Logic, 1313374105);
	void UAISense_Blueprint::K2_OnNewPawn(APawn* NewPawn)
	{
		AISense_Blueprint_eventK2_OnNewPawn_Parms Parms;
		Parms.NewPawn=NewPawn;
		ProcessEvent(FindFunctionChecked(AIMODULE_K2_OnNewPawn),&Parms);
	}
	void UAISense_Blueprint::OnListenerRegistered(AActor* ActorListener, UAIPerceptionComponent* PerceptionComponent)
	{
		AISense_Blueprint_eventOnListenerRegistered_Parms Parms;
		Parms.ActorListener=ActorListener;
		Parms.PerceptionComponent=PerceptionComponent;
		ProcessEvent(FindFunctionChecked(AIMODULE_OnListenerRegistered),&Parms);
	}
	void UAISense_Blueprint::OnListenerUnregistered(AActor* ActorListener, UAIPerceptionComponent* PerceptionComponent)
	{
		AISense_Blueprint_eventOnListenerUnregistered_Parms Parms;
		Parms.ActorListener=ActorListener;
		Parms.PerceptionComponent=PerceptionComponent;
		ProcessEvent(FindFunctionChecked(AIMODULE_OnListenerUnregistered),&Parms);
	}
	void UAISense_Blueprint::OnListenerUpdated(AActor* ActorListener, UAIPerceptionComponent* PerceptionComponent)
	{
		AISense_Blueprint_eventOnListenerUpdated_Parms Parms;
		Parms.ActorListener=ActorListener;
		Parms.PerceptionComponent=PerceptionComponent;
		ProcessEvent(FindFunctionChecked(AIMODULE_OnListenerUpdated),&Parms);
	}
	float UAISense_Blueprint::OnUpdate(const TArray<UAISenseEvent*>& EventsToProcess)
	{
		AISense_Blueprint_eventOnUpdate_Parms Parms;
		Parms.EventsToProcess=EventsToProcess;
		ProcessEvent(FindFunctionChecked(AIMODULE_OnUpdate),&Parms);
		return Parms.ReturnValue;
	}
	void UAISense_Blueprint::StaticRegisterNativesUAISense_Blueprint()
	{
		FNativeFunctionRegistrar::RegisterFunction(UAISense_Blueprint::StaticClass(),"GetAllListenerActors",(Native)&UAISense_Blueprint::execGetAllListenerActors);
		FNativeFunctionRegistrar::RegisterFunction(UAISense_Blueprint::StaticClass(),"GetAllListenerComponents",(Native)&UAISense_Blueprint::execGetAllListenerComponents);
	}
	IMPLEMENT_CLASS(UAISense_Blueprint, 1881069504);
class UScriptStruct* FAIDamageEvent::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern AIMODULE_API class UScriptStruct* Z_Construct_UScriptStruct_FAIDamageEvent();
		extern AIMODULE_API uint32 Get_Z_Construct_UScriptStruct_FAIDamageEvent_CRC();
		extern AIMODULE_API class UPackage* Z_Construct_UPackage_AIModule();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FAIDamageEvent, Z_Construct_UPackage_AIModule(), TEXT("AIDamageEvent"), sizeof(FAIDamageEvent), Get_Z_Construct_UScriptStruct_FAIDamageEvent_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FAIDamageEvent(FAIDamageEvent::StaticStruct, TEXT("/Script/AIModule"));
static struct FScriptStruct_AIModule_StaticRegisterNativesFAIDamageEvent
{
	FScriptStruct_AIModule_StaticRegisterNativesFAIDamageEvent()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("AIDamageEvent")),new UScriptStruct::TCppStructOps<FAIDamageEvent>);
	}
} ScriptStruct_AIModule_StaticRegisterNativesFAIDamageEvent;
	void UAISense_Damage::StaticRegisterNativesUAISense_Damage()
	{
		FNativeFunctionRegistrar::RegisterFunction(UAISense_Damage::StaticClass(),"ReportDamageEvent",(Native)&UAISense_Damage::execReportDamageEvent);
	}
	IMPLEMENT_CLASS(UAISense_Damage, 3409984330);
class UScriptStruct* FAINoiseEvent::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern AIMODULE_API class UScriptStruct* Z_Construct_UScriptStruct_FAINoiseEvent();
		extern AIMODULE_API uint32 Get_Z_Construct_UScriptStruct_FAINoiseEvent_CRC();
		extern AIMODULE_API class UPackage* Z_Construct_UPackage_AIModule();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FAINoiseEvent, Z_Construct_UPackage_AIModule(), TEXT("AINoiseEvent"), sizeof(FAINoiseEvent), Get_Z_Construct_UScriptStruct_FAINoiseEvent_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FAINoiseEvent(FAINoiseEvent::StaticStruct, TEXT("/Script/AIModule"));
static struct FScriptStruct_AIModule_StaticRegisterNativesFAINoiseEvent
{
	FScriptStruct_AIModule_StaticRegisterNativesFAINoiseEvent()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("AINoiseEvent")),new UScriptStruct::TCppStructOps<FAINoiseEvent>);
	}
} ScriptStruct_AIModule_StaticRegisterNativesFAINoiseEvent;
	void UAISense_Hearing::StaticRegisterNativesUAISense_Hearing()
	{
		FNativeFunctionRegistrar::RegisterFunction(UAISense_Hearing::StaticClass(),"ReportNoiseEvent",(Native)&UAISense_Hearing::execReportNoiseEvent);
	}
	IMPLEMENT_CLASS(UAISense_Hearing, 1586784409);
class UScriptStruct* FAIPredictionEvent::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern AIMODULE_API class UScriptStruct* Z_Construct_UScriptStruct_FAIPredictionEvent();
		extern AIMODULE_API uint32 Get_Z_Construct_UScriptStruct_FAIPredictionEvent_CRC();
		extern AIMODULE_API class UPackage* Z_Construct_UPackage_AIModule();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FAIPredictionEvent, Z_Construct_UPackage_AIModule(), TEXT("AIPredictionEvent"), sizeof(FAIPredictionEvent), Get_Z_Construct_UScriptStruct_FAIPredictionEvent_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FAIPredictionEvent(FAIPredictionEvent::StaticStruct, TEXT("/Script/AIModule"));
static struct FScriptStruct_AIModule_StaticRegisterNativesFAIPredictionEvent
{
	FScriptStruct_AIModule_StaticRegisterNativesFAIPredictionEvent()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("AIPredictionEvent")),new UScriptStruct::TCppStructOps<FAIPredictionEvent>);
	}
} ScriptStruct_AIModule_StaticRegisterNativesFAIPredictionEvent;
	void UAISense_Prediction::StaticRegisterNativesUAISense_Prediction()
	{
		FNativeFunctionRegistrar::RegisterFunction(UAISense_Prediction::StaticClass(),"RequestControllerPredictionEvent",(Native)&UAISense_Prediction::execRequestControllerPredictionEvent);
		FNativeFunctionRegistrar::RegisterFunction(UAISense_Prediction::StaticClass(),"RequestPawnPredictionEvent",(Native)&UAISense_Prediction::execRequestPawnPredictionEvent);
	}
	IMPLEMENT_CLASS(UAISense_Prediction, 2404729375);
class UScriptStruct* FAISightEvent::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern AIMODULE_API class UScriptStruct* Z_Construct_UScriptStruct_FAISightEvent();
		extern AIMODULE_API uint32 Get_Z_Construct_UScriptStruct_FAISightEvent_CRC();
		extern AIMODULE_API class UPackage* Z_Construct_UPackage_AIModule();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FAISightEvent, Z_Construct_UPackage_AIModule(), TEXT("AISightEvent"), sizeof(FAISightEvent), Get_Z_Construct_UScriptStruct_FAISightEvent_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FAISightEvent(FAISightEvent::StaticStruct, TEXT("/Script/AIModule"));
static struct FScriptStruct_AIModule_StaticRegisterNativesFAISightEvent
{
	FScriptStruct_AIModule_StaticRegisterNativesFAISightEvent()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("AISightEvent")),new UScriptStruct::TCppStructOps<FAISightEvent>);
	}
} ScriptStruct_AIModule_StaticRegisterNativesFAISightEvent;
	void UAISense_Sight::StaticRegisterNativesUAISense_Sight()
	{
	}
	IMPLEMENT_CLASS(UAISense_Sight, 2795673771);
class UScriptStruct* FAITeamStimulusEvent::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern AIMODULE_API class UScriptStruct* Z_Construct_UScriptStruct_FAITeamStimulusEvent();
		extern AIMODULE_API uint32 Get_Z_Construct_UScriptStruct_FAITeamStimulusEvent_CRC();
		extern AIMODULE_API class UPackage* Z_Construct_UPackage_AIModule();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FAITeamStimulusEvent, Z_Construct_UPackage_AIModule(), TEXT("AITeamStimulusEvent"), sizeof(FAITeamStimulusEvent), Get_Z_Construct_UScriptStruct_FAITeamStimulusEvent_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FAITeamStimulusEvent(FAITeamStimulusEvent::StaticStruct, TEXT("/Script/AIModule"));
static struct FScriptStruct_AIModule_StaticRegisterNativesFAITeamStimulusEvent
{
	FScriptStruct_AIModule_StaticRegisterNativesFAITeamStimulusEvent()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("AITeamStimulusEvent")),new UScriptStruct::TCppStructOps<FAITeamStimulusEvent>);
	}
} ScriptStruct_AIModule_StaticRegisterNativesFAITeamStimulusEvent;
	void UAISense_Team::StaticRegisterNativesUAISense_Team()
	{
	}
	IMPLEMENT_CLASS(UAISense_Team, 2413864764);
class UScriptStruct* FAITouchEvent::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern AIMODULE_API class UScriptStruct* Z_Construct_UScriptStruct_FAITouchEvent();
		extern AIMODULE_API uint32 Get_Z_Construct_UScriptStruct_FAITouchEvent_CRC();
		extern AIMODULE_API class UPackage* Z_Construct_UPackage_AIModule();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FAITouchEvent, Z_Construct_UPackage_AIModule(), TEXT("AITouchEvent"), sizeof(FAITouchEvent), Get_Z_Construct_UScriptStruct_FAITouchEvent_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FAITouchEvent(FAITouchEvent::StaticStruct, TEXT("/Script/AIModule"));
static struct FScriptStruct_AIModule_StaticRegisterNativesFAITouchEvent
{
	FScriptStruct_AIModule_StaticRegisterNativesFAITouchEvent()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("AITouchEvent")),new UScriptStruct::TCppStructOps<FAITouchEvent>);
	}
} ScriptStruct_AIModule_StaticRegisterNativesFAITouchEvent;
	void UAISense_Touch::StaticRegisterNativesUAISense_Touch()
	{
	}
	IMPLEMENT_CLASS(UAISense_Touch, 183617185);
	void UAISenseBlueprintListener::StaticRegisterNativesUAISenseBlueprintListener()
	{
	}
	IMPLEMENT_CLASS(UAISenseBlueprintListener, 2993337947);
	void UAISenseConfig::StaticRegisterNativesUAISenseConfig()
	{
	}
	IMPLEMENT_CLASS(UAISenseConfig, 1360500401);
	void UAISenseConfig_Blueprint::StaticRegisterNativesUAISenseConfig_Blueprint()
	{
	}
	IMPLEMENT_CLASS(UAISenseConfig_Blueprint, 1192434622);
	void UAISenseConfig_Damage::StaticRegisterNativesUAISenseConfig_Damage()
	{
	}
	IMPLEMENT_CLASS(UAISenseConfig_Damage, 3656372498);
	void UAISenseConfig_Hearing::StaticRegisterNativesUAISenseConfig_Hearing()
	{
	}
	IMPLEMENT_CLASS(UAISenseConfig_Hearing, 26936008);
	void UAISenseConfig_Prediction::StaticRegisterNativesUAISenseConfig_Prediction()
	{
	}
	IMPLEMENT_CLASS(UAISenseConfig_Prediction, 211334182);
	void UAISenseConfig_Sight::StaticRegisterNativesUAISenseConfig_Sight()
	{
	}
	IMPLEMENT_CLASS(UAISenseConfig_Sight, 3125303008);
	void UAISenseConfig_Team::StaticRegisterNativesUAISenseConfig_Team()
	{
	}
	IMPLEMENT_CLASS(UAISenseConfig_Team, 397784857);
	void UAISenseConfig_Touch::StaticRegisterNativesUAISenseConfig_Touch()
	{
	}
	IMPLEMENT_CLASS(UAISenseConfig_Touch, 2473517265);
	void UAISenseEvent::StaticRegisterNativesUAISenseEvent()
	{
	}
	IMPLEMENT_CLASS(UAISenseEvent, 3259332714);
	void UAISenseEvent_Damage::StaticRegisterNativesUAISenseEvent_Damage()
	{
	}
	IMPLEMENT_CLASS(UAISenseEvent_Damage, 3262213017);
	void UAISenseEvent_Hearing::StaticRegisterNativesUAISenseEvent_Hearing()
	{
	}
	IMPLEMENT_CLASS(UAISenseEvent_Hearing, 1113881569);
	void UAISightTargetInterface::StaticRegisterNativesUAISightTargetInterface()
	{
	}
	IMPLEMENT_CLASS(UAISightTargetInterface, 941908397);
static class UEnum* EAITaskPriority_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern AIMODULE_API class UEnum* Z_Construct_UEnum_AIModule_EAITaskPriority();
		extern AIMODULE_API class UPackage* Z_Construct_UPackage_AIModule();
		Singleton = GetStaticEnum(Z_Construct_UEnum_AIModule_EAITaskPriority, Z_Construct_UPackage_AIModule(), TEXT("EAITaskPriority"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EAITaskPriority(EAITaskPriority_StaticEnum, TEXT("/Script/AIModule"));
	void UAITask::StaticRegisterNativesUAITask()
	{
	}
	IMPLEMENT_CLASS(UAITask, 977786851);
	void UAITask_MoveTo::StaticRegisterNativesUAITask_MoveTo()
	{
		FNativeFunctionRegistrar::RegisterFunction(UAITask_MoveTo::StaticClass(),"AIMoveTo",(Native)&UAITask_MoveTo::execAIMoveTo);
	}
	IMPLEMENT_CLASS(UAITask_MoveTo, 1476547711);
	void UBrainComponent::StaticRegisterNativesUBrainComponent()
	{
		FNativeFunctionRegistrar::RegisterFunction(UBrainComponent::StaticClass(),"RestartLogic",(Native)&UBrainComponent::execRestartLogic);
		FNativeFunctionRegistrar::RegisterFunction(UBrainComponent::StaticClass(),"StopLogic",(Native)&UBrainComponent::execStopLogic);
	}
	IMPLEMENT_CLASS(UBrainComponent, 1959566656);
	void UBehaviorTreeComponent::StaticRegisterNativesUBehaviorTreeComponent()
	{
		FNativeFunctionRegistrar::RegisterFunction(UBehaviorTreeComponent::StaticClass(),"AddCooldownTagDuration",(Native)&UBehaviorTreeComponent::execAddCooldownTagDuration);
		FNativeFunctionRegistrar::RegisterFunction(UBehaviorTreeComponent::StaticClass(),"GetTagCooldownEndTime",(Native)&UBehaviorTreeComponent::execGetTagCooldownEndTime);
		FNativeFunctionRegistrar::RegisterFunction(UBehaviorTreeComponent::StaticClass(),"SetDynamicSubtree",(Native)&UBehaviorTreeComponent::execSetDynamicSubtree);
	}
	IMPLEMENT_CLASS(UBehaviorTreeComponent, 3791334005);
	void UBTNode::StaticRegisterNativesUBTNode()
	{
	}
	IMPLEMENT_CLASS(UBTNode, 4116760410);
static class UEnum* EBTDecoratorLogic_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern AIMODULE_API class UEnum* Z_Construct_UEnum_AIModule_EBTDecoratorLogic();
		extern AIMODULE_API class UPackage* Z_Construct_UPackage_AIModule();
		Singleton = GetStaticEnum(Z_Construct_UEnum_AIModule_EBTDecoratorLogic, Z_Construct_UPackage_AIModule(), TEXT("EBTDecoratorLogic"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EBTDecoratorLogic(EBTDecoratorLogic_StaticEnum, TEXT("/Script/AIModule"));
static class UEnum* EBTChildIndex_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern AIMODULE_API class UEnum* Z_Construct_UEnum_AIModule_EBTChildIndex();
		extern AIMODULE_API class UPackage* Z_Construct_UPackage_AIModule();
		Singleton = GetStaticEnum(Z_Construct_UEnum_AIModule_EBTChildIndex, Z_Construct_UPackage_AIModule(), TEXT("EBTChildIndex"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EBTChildIndex(EBTChildIndex_StaticEnum, TEXT("/Script/AIModule"));
class UScriptStruct* FBTCompositeChild::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern AIMODULE_API class UScriptStruct* Z_Construct_UScriptStruct_FBTCompositeChild();
		extern AIMODULE_API uint32 Get_Z_Construct_UScriptStruct_FBTCompositeChild_CRC();
		extern AIMODULE_API class UPackage* Z_Construct_UPackage_AIModule();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FBTCompositeChild, Z_Construct_UPackage_AIModule(), TEXT("BTCompositeChild"), sizeof(FBTCompositeChild), Get_Z_Construct_UScriptStruct_FBTCompositeChild_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FBTCompositeChild(FBTCompositeChild::StaticStruct, TEXT("/Script/AIModule"));
static struct FScriptStruct_AIModule_StaticRegisterNativesFBTCompositeChild
{
	FScriptStruct_AIModule_StaticRegisterNativesFBTCompositeChild()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("BTCompositeChild")),new UScriptStruct::TCppStructOps<FBTCompositeChild>);
	}
} ScriptStruct_AIModule_StaticRegisterNativesFBTCompositeChild;
class UScriptStruct* FBTDecoratorLogic::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern AIMODULE_API class UScriptStruct* Z_Construct_UScriptStruct_FBTDecoratorLogic();
		extern AIMODULE_API uint32 Get_Z_Construct_UScriptStruct_FBTDecoratorLogic_CRC();
		extern AIMODULE_API class UPackage* Z_Construct_UPackage_AIModule();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FBTDecoratorLogic, Z_Construct_UPackage_AIModule(), TEXT("BTDecoratorLogic"), sizeof(FBTDecoratorLogic), Get_Z_Construct_UScriptStruct_FBTDecoratorLogic_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FBTDecoratorLogic(FBTDecoratorLogic::StaticStruct, TEXT("/Script/AIModule"));
static struct FScriptStruct_AIModule_StaticRegisterNativesFBTDecoratorLogic
{
	FScriptStruct_AIModule_StaticRegisterNativesFBTDecoratorLogic()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("BTDecoratorLogic")),new UScriptStruct::TCppStructOps<FBTDecoratorLogic>);
	}
} ScriptStruct_AIModule_StaticRegisterNativesFBTDecoratorLogic;
	void UBTCompositeNode::StaticRegisterNativesUBTCompositeNode()
	{
	}
	IMPLEMENT_CLASS(UBTCompositeNode, 303241399);
	void UBTTaskNode::StaticRegisterNativesUBTTaskNode()
	{
	}
	IMPLEMENT_CLASS(UBTTaskNode, 1475826063);
	void UBehaviorTree::StaticRegisterNativesUBehaviorTree()
	{
	}
	IMPLEMENT_CLASS(UBehaviorTree, 1404344146);
class UScriptStruct* FBehaviorTreeTemplateInfo::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern AIMODULE_API class UScriptStruct* Z_Construct_UScriptStruct_FBehaviorTreeTemplateInfo();
		extern AIMODULE_API uint32 Get_Z_Construct_UScriptStruct_FBehaviorTreeTemplateInfo_CRC();
		extern AIMODULE_API class UPackage* Z_Construct_UPackage_AIModule();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FBehaviorTreeTemplateInfo, Z_Construct_UPackage_AIModule(), TEXT("BehaviorTreeTemplateInfo"), sizeof(FBehaviorTreeTemplateInfo), Get_Z_Construct_UScriptStruct_FBehaviorTreeTemplateInfo_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FBehaviorTreeTemplateInfo(FBehaviorTreeTemplateInfo::StaticStruct, TEXT("/Script/AIModule"));
static struct FScriptStruct_AIModule_StaticRegisterNativesFBehaviorTreeTemplateInfo
{
	FScriptStruct_AIModule_StaticRegisterNativesFBehaviorTreeTemplateInfo()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("BehaviorTreeTemplateInfo")),new UScriptStruct::TCppStructOps<FBehaviorTreeTemplateInfo>);
	}
} ScriptStruct_AIModule_StaticRegisterNativesFBehaviorTreeTemplateInfo;
	void UBehaviorTreeManager::StaticRegisterNativesUBehaviorTreeManager()
	{
	}
	IMPLEMENT_CLASS(UBehaviorTreeManager, 3973115188);
static class UEnum* ETextKeyOperation_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern AIMODULE_API class UEnum* Z_Construct_UEnum_AIModule_ETextKeyOperation();
		extern AIMODULE_API class UPackage* Z_Construct_UPackage_AIModule();
		Singleton = GetStaticEnum(Z_Construct_UEnum_AIModule_ETextKeyOperation, Z_Construct_UPackage_AIModule(), TEXT("ETextKeyOperation"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ETextKeyOperation(ETextKeyOperation_StaticEnum, TEXT("/Script/AIModule"));
static class UEnum* EArithmeticKeyOperation_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern AIMODULE_API class UEnum* Z_Construct_UEnum_AIModule_EArithmeticKeyOperation();
		extern AIMODULE_API class UPackage* Z_Construct_UPackage_AIModule();
		Singleton = GetStaticEnum(Z_Construct_UEnum_AIModule_EArithmeticKeyOperation, Z_Construct_UPackage_AIModule(), TEXT("EArithmeticKeyOperation"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EArithmeticKeyOperation(EArithmeticKeyOperation_StaticEnum, TEXT("/Script/AIModule"));
static class UEnum* EBasicKeyOperation_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern AIMODULE_API class UEnum* Z_Construct_UEnum_AIModule_EBasicKeyOperation();
		extern AIMODULE_API class UPackage* Z_Construct_UPackage_AIModule();
		Singleton = GetStaticEnum(Z_Construct_UEnum_AIModule_EBasicKeyOperation, Z_Construct_UPackage_AIModule(), TEXT("EBasicKeyOperation"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EBasicKeyOperation(EBasicKeyOperation_StaticEnum, TEXT("/Script/AIModule"));
	void UBlackboardKeyType::StaticRegisterNativesUBlackboardKeyType()
	{
	}
	IMPLEMENT_CLASS(UBlackboardKeyType, 1274781401);
	void UBlackboardKeyType_Enum::StaticRegisterNativesUBlackboardKeyType_Enum()
	{
	}
	IMPLEMENT_CLASS(UBlackboardKeyType_Enum, 419849252);
	void UBlackboardKeyType_NativeEnum::StaticRegisterNativesUBlackboardKeyType_NativeEnum()
	{
	}
	IMPLEMENT_CLASS(UBlackboardKeyType_NativeEnum, 4121547198);
class UScriptStruct* FBlackboardEntry::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern AIMODULE_API class UScriptStruct* Z_Construct_UScriptStruct_FBlackboardEntry();
		extern AIMODULE_API uint32 Get_Z_Construct_UScriptStruct_FBlackboardEntry_CRC();
		extern AIMODULE_API class UPackage* Z_Construct_UPackage_AIModule();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FBlackboardEntry, Z_Construct_UPackage_AIModule(), TEXT("BlackboardEntry"), sizeof(FBlackboardEntry), Get_Z_Construct_UScriptStruct_FBlackboardEntry_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FBlackboardEntry(FBlackboardEntry::StaticStruct, TEXT("/Script/AIModule"));
static struct FScriptStruct_AIModule_StaticRegisterNativesFBlackboardEntry
{
	FScriptStruct_AIModule_StaticRegisterNativesFBlackboardEntry()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("BlackboardEntry")),new UScriptStruct::TCppStructOps<FBlackboardEntry>);
	}
} ScriptStruct_AIModule_StaticRegisterNativesFBlackboardEntry;
	void UBlackboardData::StaticRegisterNativesUBlackboardData()
	{
	}
	IMPLEMENT_CLASS(UBlackboardData, 894540143);
	void UBlackboardComponent::StaticRegisterNativesUBlackboardComponent()
	{
		FNativeFunctionRegistrar::RegisterFunction(UBlackboardComponent::StaticClass(),"ClearValue",(Native)&UBlackboardComponent::execClearValue);
		FNativeFunctionRegistrar::RegisterFunction(UBlackboardComponent::StaticClass(),"ClearValueAsRotator",(Native)&UBlackboardComponent::execClearValueAsRotator);
		FNativeFunctionRegistrar::RegisterFunction(UBlackboardComponent::StaticClass(),"ClearValueAsVector",(Native)&UBlackboardComponent::execClearValueAsVector);
		FNativeFunctionRegistrar::RegisterFunction(UBlackboardComponent::StaticClass(),"GetLocationFromEntry",(Native)&UBlackboardComponent::execGetLocationFromEntry);
		FNativeFunctionRegistrar::RegisterFunction(UBlackboardComponent::StaticClass(),"GetRotationFromEntry",(Native)&UBlackboardComponent::execGetRotationFromEntry);
		FNativeFunctionRegistrar::RegisterFunction(UBlackboardComponent::StaticClass(),"GetValueAsBool",(Native)&UBlackboardComponent::execGetValueAsBool);
		FNativeFunctionRegistrar::RegisterFunction(UBlackboardComponent::StaticClass(),"GetValueAsClass",(Native)&UBlackboardComponent::execGetValueAsClass);
		FNativeFunctionRegistrar::RegisterFunction(UBlackboardComponent::StaticClass(),"GetValueAsEnum",(Native)&UBlackboardComponent::execGetValueAsEnum);
		FNativeFunctionRegistrar::RegisterFunction(UBlackboardComponent::StaticClass(),"GetValueAsFloat",(Native)&UBlackboardComponent::execGetValueAsFloat);
		FNativeFunctionRegistrar::RegisterFunction(UBlackboardComponent::StaticClass(),"GetValueAsInt",(Native)&UBlackboardComponent::execGetValueAsInt);
		FNativeFunctionRegistrar::RegisterFunction(UBlackboardComponent::StaticClass(),"GetValueAsName",(Native)&UBlackboardComponent::execGetValueAsName);
		FNativeFunctionRegistrar::RegisterFunction(UBlackboardComponent::StaticClass(),"GetValueAsObject",(Native)&UBlackboardComponent::execGetValueAsObject);
		FNativeFunctionRegistrar::RegisterFunction(UBlackboardComponent::StaticClass(),"GetValueAsRotator",(Native)&UBlackboardComponent::execGetValueAsRotator);
		FNativeFunctionRegistrar::RegisterFunction(UBlackboardComponent::StaticClass(),"GetValueAsString",(Native)&UBlackboardComponent::execGetValueAsString);
		FNativeFunctionRegistrar::RegisterFunction(UBlackboardComponent::StaticClass(),"GetValueAsVector",(Native)&UBlackboardComponent::execGetValueAsVector);
		FNativeFunctionRegistrar::RegisterFunction(UBlackboardComponent::StaticClass(),"IsVectorValueSet",(Native)&UBlackboardComponent::execIsVectorValueSet);
		FNativeFunctionRegistrar::RegisterFunction(UBlackboardComponent::StaticClass(),"SetValueAsBool",(Native)&UBlackboardComponent::execSetValueAsBool);
		FNativeFunctionRegistrar::RegisterFunction(UBlackboardComponent::StaticClass(),"SetValueAsClass",(Native)&UBlackboardComponent::execSetValueAsClass);
		FNativeFunctionRegistrar::RegisterFunction(UBlackboardComponent::StaticClass(),"SetValueAsEnum",(Native)&UBlackboardComponent::execSetValueAsEnum);
		FNativeFunctionRegistrar::RegisterFunction(UBlackboardComponent::StaticClass(),"SetValueAsFloat",(Native)&UBlackboardComponent::execSetValueAsFloat);
		FNativeFunctionRegistrar::RegisterFunction(UBlackboardComponent::StaticClass(),"SetValueAsInt",(Native)&UBlackboardComponent::execSetValueAsInt);
		FNativeFunctionRegistrar::RegisterFunction(UBlackboardComponent::StaticClass(),"SetValueAsName",(Native)&UBlackboardComponent::execSetValueAsName);
		FNativeFunctionRegistrar::RegisterFunction(UBlackboardComponent::StaticClass(),"SetValueAsObject",(Native)&UBlackboardComponent::execSetValueAsObject);
		FNativeFunctionRegistrar::RegisterFunction(UBlackboardComponent::StaticClass(),"SetValueAsRotator",(Native)&UBlackboardComponent::execSetValueAsRotator);
		FNativeFunctionRegistrar::RegisterFunction(UBlackboardComponent::StaticClass(),"SetValueAsString",(Native)&UBlackboardComponent::execSetValueAsString);
		FNativeFunctionRegistrar::RegisterFunction(UBlackboardComponent::StaticClass(),"SetValueAsVector",(Native)&UBlackboardComponent::execSetValueAsVector);
	}
	IMPLEMENT_CLASS(UBlackboardComponent, 1487665362);
	void UBlackboardKeyType_Bool::StaticRegisterNativesUBlackboardKeyType_Bool()
	{
	}
	IMPLEMENT_CLASS(UBlackboardKeyType_Bool, 383904538);
	void UBlackboardKeyType_Class::StaticRegisterNativesUBlackboardKeyType_Class()
	{
	}
	IMPLEMENT_CLASS(UBlackboardKeyType_Class, 4195807658);
	void UBlackboardKeyType_Float::StaticRegisterNativesUBlackboardKeyType_Float()
	{
	}
	IMPLEMENT_CLASS(UBlackboardKeyType_Float, 2619973272);
	void UBlackboardKeyType_Int::StaticRegisterNativesUBlackboardKeyType_Int()
	{
	}
	IMPLEMENT_CLASS(UBlackboardKeyType_Int, 657319279);
	void UBlackboardKeyType_Name::StaticRegisterNativesUBlackboardKeyType_Name()
	{
	}
	IMPLEMENT_CLASS(UBlackboardKeyType_Name, 1311805023);
	void UBlackboardKeyType_Object::StaticRegisterNativesUBlackboardKeyType_Object()
	{
	}
	IMPLEMENT_CLASS(UBlackboardKeyType_Object, 4135641913);
	void UBlackboardKeyType_Rotator::StaticRegisterNativesUBlackboardKeyType_Rotator()
	{
	}
	IMPLEMENT_CLASS(UBlackboardKeyType_Rotator, 1850562812);
	void UBlackboardKeyType_String::StaticRegisterNativesUBlackboardKeyType_String()
	{
	}
	IMPLEMENT_CLASS(UBlackboardKeyType_String, 124501557);
	void UBlackboardKeyType_Vector::StaticRegisterNativesUBlackboardKeyType_Vector()
	{
	}
	IMPLEMENT_CLASS(UBlackboardKeyType_Vector, 875459489);
	void UBTFunctionLibrary::StaticRegisterNativesUBTFunctionLibrary()
	{
		FNativeFunctionRegistrar::RegisterFunction(UBTFunctionLibrary::StaticClass(),"ClearBlackboardValue",(Native)&UBTFunctionLibrary::execClearBlackboardValue);
		FNativeFunctionRegistrar::RegisterFunction(UBTFunctionLibrary::StaticClass(),"ClearBlackboardValueAsVector",(Native)&UBTFunctionLibrary::execClearBlackboardValueAsVector);
		FNativeFunctionRegistrar::RegisterFunction(UBTFunctionLibrary::StaticClass(),"GetBlackboardValueAsActor",(Native)&UBTFunctionLibrary::execGetBlackboardValueAsActor);
		FNativeFunctionRegistrar::RegisterFunction(UBTFunctionLibrary::StaticClass(),"GetBlackboardValueAsBool",(Native)&UBTFunctionLibrary::execGetBlackboardValueAsBool);
		FNativeFunctionRegistrar::RegisterFunction(UBTFunctionLibrary::StaticClass(),"GetBlackboardValueAsClass",(Native)&UBTFunctionLibrary::execGetBlackboardValueAsClass);
		FNativeFunctionRegistrar::RegisterFunction(UBTFunctionLibrary::StaticClass(),"GetBlackboardValueAsEnum",(Native)&UBTFunctionLibrary::execGetBlackboardValueAsEnum);
		FNativeFunctionRegistrar::RegisterFunction(UBTFunctionLibrary::StaticClass(),"GetBlackboardValueAsFloat",(Native)&UBTFunctionLibrary::execGetBlackboardValueAsFloat);
		FNativeFunctionRegistrar::RegisterFunction(UBTFunctionLibrary::StaticClass(),"GetBlackboardValueAsInt",(Native)&UBTFunctionLibrary::execGetBlackboardValueAsInt);
		FNativeFunctionRegistrar::RegisterFunction(UBTFunctionLibrary::StaticClass(),"GetBlackboardValueAsName",(Native)&UBTFunctionLibrary::execGetBlackboardValueAsName);
		FNativeFunctionRegistrar::RegisterFunction(UBTFunctionLibrary::StaticClass(),"GetBlackboardValueAsObject",(Native)&UBTFunctionLibrary::execGetBlackboardValueAsObject);
		FNativeFunctionRegistrar::RegisterFunction(UBTFunctionLibrary::StaticClass(),"GetBlackboardValueAsRotator",(Native)&UBTFunctionLibrary::execGetBlackboardValueAsRotator);
		FNativeFunctionRegistrar::RegisterFunction(UBTFunctionLibrary::StaticClass(),"GetBlackboardValueAsString",(Native)&UBTFunctionLibrary::execGetBlackboardValueAsString);
		FNativeFunctionRegistrar::RegisterFunction(UBTFunctionLibrary::StaticClass(),"GetBlackboardValueAsVector",(Native)&UBTFunctionLibrary::execGetBlackboardValueAsVector);
		FNativeFunctionRegistrar::RegisterFunction(UBTFunctionLibrary::StaticClass(),"GetOwnerComponent",(Native)&UBTFunctionLibrary::execGetOwnerComponent);
		FNativeFunctionRegistrar::RegisterFunction(UBTFunctionLibrary::StaticClass(),"GetOwnersBlackboard",(Native)&UBTFunctionLibrary::execGetOwnersBlackboard);
		FNativeFunctionRegistrar::RegisterFunction(UBTFunctionLibrary::StaticClass(),"SetBlackboardValueAsBool",(Native)&UBTFunctionLibrary::execSetBlackboardValueAsBool);
		FNativeFunctionRegistrar::RegisterFunction(UBTFunctionLibrary::StaticClass(),"SetBlackboardValueAsClass",(Native)&UBTFunctionLibrary::execSetBlackboardValueAsClass);
		FNativeFunctionRegistrar::RegisterFunction(UBTFunctionLibrary::StaticClass(),"SetBlackboardValueAsEnum",(Native)&UBTFunctionLibrary::execSetBlackboardValueAsEnum);
		FNativeFunctionRegistrar::RegisterFunction(UBTFunctionLibrary::StaticClass(),"SetBlackboardValueAsFloat",(Native)&UBTFunctionLibrary::execSetBlackboardValueAsFloat);
		FNativeFunctionRegistrar::RegisterFunction(UBTFunctionLibrary::StaticClass(),"SetBlackboardValueAsInt",(Native)&UBTFunctionLibrary::execSetBlackboardValueAsInt);
		FNativeFunctionRegistrar::RegisterFunction(UBTFunctionLibrary::StaticClass(),"SetBlackboardValueAsName",(Native)&UBTFunctionLibrary::execSetBlackboardValueAsName);
		FNativeFunctionRegistrar::RegisterFunction(UBTFunctionLibrary::StaticClass(),"SetBlackboardValueAsObject",(Native)&UBTFunctionLibrary::execSetBlackboardValueAsObject);
		FNativeFunctionRegistrar::RegisterFunction(UBTFunctionLibrary::StaticClass(),"SetBlackboardValueAsRotator",(Native)&UBTFunctionLibrary::execSetBlackboardValueAsRotator);
		FNativeFunctionRegistrar::RegisterFunction(UBTFunctionLibrary::StaticClass(),"SetBlackboardValueAsString",(Native)&UBTFunctionLibrary::execSetBlackboardValueAsString);
		FNativeFunctionRegistrar::RegisterFunction(UBTFunctionLibrary::StaticClass(),"SetBlackboardValueAsVector",(Native)&UBTFunctionLibrary::execSetBlackboardValueAsVector);
		FNativeFunctionRegistrar::RegisterFunction(UBTFunctionLibrary::StaticClass(),"StartUsingExternalEvent",(Native)&UBTFunctionLibrary::execStartUsingExternalEvent);
		FNativeFunctionRegistrar::RegisterFunction(UBTFunctionLibrary::StaticClass(),"StopUsingExternalEvent",(Native)&UBTFunctionLibrary::execStopUsingExternalEvent);
	}
	IMPLEMENT_CLASS(UBTFunctionLibrary, 3395944139);
	void UBTAuxiliaryNode::StaticRegisterNativesUBTAuxiliaryNode()
	{
	}
	IMPLEMENT_CLASS(UBTAuxiliaryNode, 2835788803);
	void UBTDecorator::StaticRegisterNativesUBTDecorator()
	{
	}
	IMPLEMENT_CLASS(UBTDecorator, 3213803896);
	void UBTDecorator_BlackboardBase::StaticRegisterNativesUBTDecorator_BlackboardBase()
	{
	}
	IMPLEMENT_CLASS(UBTDecorator_BlackboardBase, 3999493915);
static class UEnum* EBTBlackboardRestart_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern AIMODULE_API class UEnum* Z_Construct_UEnum_AIModule_EBTBlackboardRestart();
		extern AIMODULE_API class UPackage* Z_Construct_UPackage_AIModule();
		Singleton = GetStaticEnum(Z_Construct_UEnum_AIModule_EBTBlackboardRestart, Z_Construct_UPackage_AIModule(), TEXT("EBTBlackboardRestart"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EBTBlackboardRestart(EBTBlackboardRestart_StaticEnum, TEXT("/Script/AIModule"));
	void UBTDecorator_Blackboard::StaticRegisterNativesUBTDecorator_Blackboard()
	{
	}
	IMPLEMENT_CLASS(UBTDecorator_Blackboard, 2707669349);
	void UBTDecorator_ConditionalLoop::StaticRegisterNativesUBTDecorator_ConditionalLoop()
	{
	}
	IMPLEMENT_CLASS(UBTDecorator_ConditionalLoop, 2778530765);
	void UBTDecorator_IsAtLocation::StaticRegisterNativesUBTDecorator_IsAtLocation()
	{
	}
	IMPLEMENT_CLASS(UBTDecorator_IsAtLocation, 2330555338);
	void UBTDecorator_IsBBEntryOfClass::StaticRegisterNativesUBTDecorator_IsBBEntryOfClass()
	{
	}
	IMPLEMENT_CLASS(UBTDecorator_IsBBEntryOfClass, 1347722851);
	bool UBTDecorator_BlueprintBase::PerformConditionCheck(AActor* OwnerActor)
	{
		BTDecorator_BlueprintBase_eventPerformConditionCheck_Parms Parms;
		Parms.OwnerActor=OwnerActor;
		ProcessEvent(FindFunctionChecked(AIMODULE_PerformConditionCheck),&Parms);
		return !!Parms.ReturnValue;
	}
	bool UBTDecorator_BlueprintBase::PerformConditionCheckAI(AAIController* OwnerController, APawn* ControlledPawn)
	{
		BTDecorator_BlueprintBase_eventPerformConditionCheckAI_Parms Parms;
		Parms.OwnerController=OwnerController;
		Parms.ControlledPawn=ControlledPawn;
		ProcessEvent(FindFunctionChecked(AIMODULE_PerformConditionCheckAI),&Parms);
		return !!Parms.ReturnValue;
	}
	void UBTDecorator_BlueprintBase::ReceiveConditionCheck(AActor* OwnerActor)
	{
		BTDecorator_BlueprintBase_eventReceiveConditionCheck_Parms Parms;
		Parms.OwnerActor=OwnerActor;
		ProcessEvent(FindFunctionChecked(AIMODULE_ReceiveConditionCheck),&Parms);
	}
	void UBTDecorator_BlueprintBase::ReceiveExecutionFinish(AActor* OwnerActor, EBTNodeResult::Type NodeResult)
	{
		BTDecorator_BlueprintBase_eventReceiveExecutionFinish_Parms Parms;
		Parms.OwnerActor=OwnerActor;
		Parms.NodeResult=NodeResult;
		ProcessEvent(FindFunctionChecked(AIMODULE_ReceiveExecutionFinish),&Parms);
	}
	void UBTDecorator_BlueprintBase::ReceiveExecutionFinishAI(AAIController* OwnerController, APawn* ControlledPawn, EBTNodeResult::Type NodeResult)
	{
		BTDecorator_BlueprintBase_eventReceiveExecutionFinishAI_Parms Parms;
		Parms.OwnerController=OwnerController;
		Parms.ControlledPawn=ControlledPawn;
		Parms.NodeResult=NodeResult;
		ProcessEvent(FindFunctionChecked(AIMODULE_ReceiveExecutionFinishAI),&Parms);
	}
	void UBTDecorator_BlueprintBase::ReceiveExecutionStart(AActor* OwnerActor)
	{
		BTDecorator_BlueprintBase_eventReceiveExecutionStart_Parms Parms;
		Parms.OwnerActor=OwnerActor;
		ProcessEvent(FindFunctionChecked(AIMODULE_ReceiveExecutionStart),&Parms);
	}
	void UBTDecorator_BlueprintBase::ReceiveExecutionStartAI(AAIController* OwnerController, APawn* ControlledPawn)
	{
		BTDecorator_BlueprintBase_eventReceiveExecutionStartAI_Parms Parms;
		Parms.OwnerController=OwnerController;
		Parms.ControlledPawn=ControlledPawn;
		ProcessEvent(FindFunctionChecked(AIMODULE_ReceiveExecutionStartAI),&Parms);
	}
	void UBTDecorator_BlueprintBase::ReceiveObserverActivated(AActor* OwnerActor)
	{
		BTDecorator_BlueprintBase_eventReceiveObserverActivated_Parms Parms;
		Parms.OwnerActor=OwnerActor;
		ProcessEvent(FindFunctionChecked(AIMODULE_ReceiveObserverActivated),&Parms);
	}
	void UBTDecorator_BlueprintBase::ReceiveObserverActivatedAI(AAIController* OwnerController, APawn* ControlledPawn)
	{
		BTDecorator_BlueprintBase_eventReceiveObserverActivatedAI_Parms Parms;
		Parms.OwnerController=OwnerController;
		Parms.ControlledPawn=ControlledPawn;
		ProcessEvent(FindFunctionChecked(AIMODULE_ReceiveObserverActivatedAI),&Parms);
	}
	void UBTDecorator_BlueprintBase::ReceiveObserverDeactivated(AActor* OwnerActor)
	{
		BTDecorator_BlueprintBase_eventReceiveObserverDeactivated_Parms Parms;
		Parms.OwnerActor=OwnerActor;
		ProcessEvent(FindFunctionChecked(AIMODULE_ReceiveObserverDeactivated),&Parms);
	}
	void UBTDecorator_BlueprintBase::ReceiveObserverDeactivatedAI(AAIController* OwnerController, APawn* ControlledPawn)
	{
		BTDecorator_BlueprintBase_eventReceiveObserverDeactivatedAI_Parms Parms;
		Parms.OwnerController=OwnerController;
		Parms.ControlledPawn=ControlledPawn;
		ProcessEvent(FindFunctionChecked(AIMODULE_ReceiveObserverDeactivatedAI),&Parms);
	}
	void UBTDecorator_BlueprintBase::ReceiveTick(AActor* OwnerActor, float DeltaSeconds)
	{
		BTDecorator_BlueprintBase_eventReceiveTick_Parms Parms;
		Parms.OwnerActor=OwnerActor;
		Parms.DeltaSeconds=DeltaSeconds;
		ProcessEvent(FindFunctionChecked(AIMODULE_ReceiveTick),&Parms);
	}
	void UBTDecorator_BlueprintBase::ReceiveTickAI(AAIController* OwnerController, APawn* ControlledPawn, float DeltaSeconds)
	{
		BTDecorator_BlueprintBase_eventReceiveTickAI_Parms Parms;
		Parms.OwnerController=OwnerController;
		Parms.ControlledPawn=ControlledPawn;
		Parms.DeltaSeconds=DeltaSeconds;
		ProcessEvent(FindFunctionChecked(AIMODULE_ReceiveTickAI),&Parms);
	}
	void UBTDecorator_BlueprintBase::StaticRegisterNativesUBTDecorator_BlueprintBase()
	{
		FNativeFunctionRegistrar::RegisterFunction(UBTDecorator_BlueprintBase::StaticClass(),"FinishConditionCheck",(Native)&UBTDecorator_BlueprintBase::execFinishConditionCheck);
		FNativeFunctionRegistrar::RegisterFunction(UBTDecorator_BlueprintBase::StaticClass(),"IsDecoratorExecutionActive",(Native)&UBTDecorator_BlueprintBase::execIsDecoratorExecutionActive);
		FNativeFunctionRegistrar::RegisterFunction(UBTDecorator_BlueprintBase::StaticClass(),"IsDecoratorObserverActive",(Native)&UBTDecorator_BlueprintBase::execIsDecoratorObserverActive);
	}
	IMPLEMENT_CLASS(UBTDecorator_BlueprintBase, 2717439434);
	void UBTDecorator_CheckGameplayTagsOnActor::StaticRegisterNativesUBTDecorator_CheckGameplayTagsOnActor()
	{
	}
	IMPLEMENT_CLASS(UBTDecorator_CheckGameplayTagsOnActor, 2361602325);
static class UEnum* EBlackBoardEntryComparison_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern AIMODULE_API class UEnum* Z_Construct_UEnum_AIModule_EBlackBoardEntryComparison();
		extern AIMODULE_API class UPackage* Z_Construct_UPackage_AIModule();
		Singleton = GetStaticEnum(Z_Construct_UEnum_AIModule_EBlackBoardEntryComparison, Z_Construct_UPackage_AIModule(), TEXT("EBlackBoardEntryComparison"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EBlackBoardEntryComparison(EBlackBoardEntryComparison_StaticEnum, TEXT("/Script/AIModule"));
	void UBTDecorator_CompareBBEntries::StaticRegisterNativesUBTDecorator_CompareBBEntries()
	{
	}
	IMPLEMENT_CLASS(UBTDecorator_CompareBBEntries, 3222387378);
	void UBTDecorator_ConeCheck::StaticRegisterNativesUBTDecorator_ConeCheck()
	{
	}
	IMPLEMENT_CLASS(UBTDecorator_ConeCheck, 1443060462);
	void UBTDecorator_Cooldown::StaticRegisterNativesUBTDecorator_Cooldown()
	{
	}
	IMPLEMENT_CLASS(UBTDecorator_Cooldown, 2300142077);
static class UEnum* EPathExistanceQueryType_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern AIMODULE_API class UEnum* Z_Construct_UEnum_AIModule_EPathExistanceQueryType();
		extern AIMODULE_API class UPackage* Z_Construct_UPackage_AIModule();
		Singleton = GetStaticEnum(Z_Construct_UEnum_AIModule_EPathExistanceQueryType, Z_Construct_UPackage_AIModule(), TEXT("EPathExistanceQueryType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EPathExistanceQueryType(EPathExistanceQueryType_StaticEnum, TEXT("/Script/AIModule"));
	void UBTDecorator_DoesPathExist::StaticRegisterNativesUBTDecorator_DoesPathExist()
	{
	}
	IMPLEMENT_CLASS(UBTDecorator_DoesPathExist, 4264881175);
	void UBTDecorator_ForceSuccess::StaticRegisterNativesUBTDecorator_ForceSuccess()
	{
	}
	IMPLEMENT_CLASS(UBTDecorator_ForceSuccess, 2484645244);
	void UBTDecorator_KeepInCone::StaticRegisterNativesUBTDecorator_KeepInCone()
	{
	}
	IMPLEMENT_CLASS(UBTDecorator_KeepInCone, 7972854);
	void UBTDecorator_Loop::StaticRegisterNativesUBTDecorator_Loop()
	{
	}
	IMPLEMENT_CLASS(UBTDecorator_Loop, 1152831875);
	void UBTDecorator_ReachedMoveGoal::StaticRegisterNativesUBTDecorator_ReachedMoveGoal()
	{
	}
	IMPLEMENT_CLASS(UBTDecorator_ReachedMoveGoal, 2774321091);
	void UBTDecorator_SetTagCooldown::StaticRegisterNativesUBTDecorator_SetTagCooldown()
	{
	}
	IMPLEMENT_CLASS(UBTDecorator_SetTagCooldown, 724434459);
	void UBTDecorator_TagCooldown::StaticRegisterNativesUBTDecorator_TagCooldown()
	{
	}
	IMPLEMENT_CLASS(UBTDecorator_TagCooldown, 198171866);
	void UBTDecorator_TimeLimit::StaticRegisterNativesUBTDecorator_TimeLimit()
	{
	}
	IMPLEMENT_CLASS(UBTDecorator_TimeLimit, 2369953527);
	void UBTService::StaticRegisterNativesUBTService()
	{
	}
	IMPLEMENT_CLASS(UBTService, 1019839446);
	void UBTService_BlackboardBase::StaticRegisterNativesUBTService_BlackboardBase()
	{
	}
	IMPLEMENT_CLASS(UBTService_BlackboardBase, 1310400524);
	void UBTService_DefaultFocus::StaticRegisterNativesUBTService_DefaultFocus()
	{
	}
	IMPLEMENT_CLASS(UBTService_DefaultFocus, 425505944);
	void UBTService_BlueprintBase::ReceiveActivation(AActor* OwnerActor)
	{
		BTService_BlueprintBase_eventReceiveActivation_Parms Parms;
		Parms.OwnerActor=OwnerActor;
		ProcessEvent(FindFunctionChecked(AIMODULE_ReceiveActivation),&Parms);
	}
	void UBTService_BlueprintBase::ReceiveActivationAI(AAIController* OwnerController, APawn* ControlledPawn)
	{
		BTService_BlueprintBase_eventReceiveActivationAI_Parms Parms;
		Parms.OwnerController=OwnerController;
		Parms.ControlledPawn=ControlledPawn;
		ProcessEvent(FindFunctionChecked(AIMODULE_ReceiveActivationAI),&Parms);
	}
	void UBTService_BlueprintBase::ReceiveDeactivation(AActor* OwnerActor)
	{
		BTService_BlueprintBase_eventReceiveDeactivation_Parms Parms;
		Parms.OwnerActor=OwnerActor;
		ProcessEvent(FindFunctionChecked(AIMODULE_ReceiveDeactivation),&Parms);
	}
	void UBTService_BlueprintBase::ReceiveDeactivationAI(AAIController* OwnerController, APawn* ControlledPawn)
	{
		BTService_BlueprintBase_eventReceiveDeactivationAI_Parms Parms;
		Parms.OwnerController=OwnerController;
		Parms.ControlledPawn=ControlledPawn;
		ProcessEvent(FindFunctionChecked(AIMODULE_ReceiveDeactivationAI),&Parms);
	}
	void UBTService_BlueprintBase::ReceiveSearchStart(AActor* OwnerActor)
	{
		BTService_BlueprintBase_eventReceiveSearchStart_Parms Parms;
		Parms.OwnerActor=OwnerActor;
		ProcessEvent(FindFunctionChecked(AIMODULE_ReceiveSearchStart),&Parms);
	}
	void UBTService_BlueprintBase::ReceiveSearchStartAI(AAIController* OwnerController, APawn* ControlledPawn)
	{
		BTService_BlueprintBase_eventReceiveSearchStartAI_Parms Parms;
		Parms.OwnerController=OwnerController;
		Parms.ControlledPawn=ControlledPawn;
		ProcessEvent(FindFunctionChecked(AIMODULE_ReceiveSearchStartAI),&Parms);
	}
	void UBTService_BlueprintBase::ReceiveTick(AActor* OwnerActor, float DeltaSeconds)
	{
		BTService_BlueprintBase_eventReceiveTick_Parms Parms;
		Parms.OwnerActor=OwnerActor;
		Parms.DeltaSeconds=DeltaSeconds;
		ProcessEvent(FindFunctionChecked(AIMODULE_ReceiveTick),&Parms);
	}
	void UBTService_BlueprintBase::ReceiveTickAI(AAIController* OwnerController, APawn* ControlledPawn, float DeltaSeconds)
	{
		BTService_BlueprintBase_eventReceiveTickAI_Parms Parms;
		Parms.OwnerController=OwnerController;
		Parms.ControlledPawn=ControlledPawn;
		Parms.DeltaSeconds=DeltaSeconds;
		ProcessEvent(FindFunctionChecked(AIMODULE_ReceiveTickAI),&Parms);
	}
	void UBTService_BlueprintBase::StaticRegisterNativesUBTService_BlueprintBase()
	{
		FNativeFunctionRegistrar::RegisterFunction(UBTService_BlueprintBase::StaticClass(),"IsServiceActive",(Native)&UBTService_BlueprintBase::execIsServiceActive);
	}
	IMPLEMENT_CLASS(UBTService_BlueprintBase, 4172425617);
	void UBTComposite_Selector::StaticRegisterNativesUBTComposite_Selector()
	{
	}
	IMPLEMENT_CLASS(UBTComposite_Selector, 923998119);
	void UBTComposite_Sequence::StaticRegisterNativesUBTComposite_Sequence()
	{
	}
	IMPLEMENT_CLASS(UBTComposite_Sequence, 2485938131);
static class UEnum* EBTParallelMode_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern AIMODULE_API class UEnum* Z_Construct_UEnum_AIModule_EBTParallelMode();
		extern AIMODULE_API class UPackage* Z_Construct_UPackage_AIModule();
		Singleton = GetStaticEnum(Z_Construct_UEnum_AIModule_EBTParallelMode, Z_Construct_UPackage_AIModule(), TEXT("EBTParallelMode"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EBTParallelMode(EBTParallelMode_StaticEnum, TEXT("/Script/AIModule"));
	void UBTComposite_SimpleParallel::StaticRegisterNativesUBTComposite_SimpleParallel()
	{
	}
	IMPLEMENT_CLASS(UBTComposite_SimpleParallel, 1410219772);
	void UBTTask_BlackboardBase::StaticRegisterNativesUBTTask_BlackboardBase()
	{
	}
	IMPLEMENT_CLASS(UBTTask_BlackboardBase, 2122605997);
	void UBTTask_MoveDirectlyToward::StaticRegisterNativesUBTTask_MoveDirectlyToward()
	{
	}
	IMPLEMENT_CLASS(UBTTask_MoveDirectlyToward, 1585335129);
	void UBTTask_MoveTo::StaticRegisterNativesUBTTask_MoveTo()
	{
	}
	IMPLEMENT_CLASS(UBTTask_MoveTo, 749591968);
	void UBTTask_RotateToFaceBBEntry::StaticRegisterNativesUBTTask_RotateToFaceBBEntry()
	{
	}
	IMPLEMENT_CLASS(UBTTask_RotateToFaceBBEntry, 3357428703);
	void UEnvQueryItemType::StaticRegisterNativesUEnvQueryItemType()
	{
	}
	IMPLEMENT_CLASS(UEnvQueryItemType, 3574135661);
	void UEnvQueryContext::StaticRegisterNativesUEnvQueryContext()
	{
	}
	IMPLEMENT_CLASS(UEnvQueryContext, 3299218252);
static class UEnum* EEnvQueryTestClamping_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern AIMODULE_API class UEnum* Z_Construct_UEnum_AIModule_EEnvQueryTestClamping();
		extern AIMODULE_API class UPackage* Z_Construct_UPackage_AIModule();
		Singleton = GetStaticEnum(Z_Construct_UEnum_AIModule_EEnvQueryTestClamping, Z_Construct_UPackage_AIModule(), TEXT("EEnvQueryTestClamping"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EEnvQueryTestClamping(EEnvQueryTestClamping_StaticEnum, TEXT("/Script/AIModule"));
static class UEnum* EEnvDirection_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern AIMODULE_API class UEnum* Z_Construct_UEnum_AIModule_EEnvDirection();
		extern AIMODULE_API class UPackage* Z_Construct_UPackage_AIModule();
		Singleton = GetStaticEnum(Z_Construct_UEnum_AIModule_EEnvDirection, Z_Construct_UPackage_AIModule(), TEXT("EEnvDirection"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EEnvDirection(EEnvDirection_StaticEnum, TEXT("/Script/AIModule"));
static class UEnum* EEnvTraceShape_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern AIMODULE_API class UEnum* Z_Construct_UEnum_AIModule_EEnvTraceShape();
		extern AIMODULE_API class UPackage* Z_Construct_UPackage_AIModule();
		Singleton = GetStaticEnum(Z_Construct_UEnum_AIModule_EEnvTraceShape, Z_Construct_UPackage_AIModule(), TEXT("EEnvTraceShape"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EEnvTraceShape(EEnvTraceShape_StaticEnum, TEXT("/Script/AIModule"));
static class UEnum* EEnvQueryTrace_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern AIMODULE_API class UEnum* Z_Construct_UEnum_AIModule_EEnvQueryTrace();
		extern AIMODULE_API class UPackage* Z_Construct_UPackage_AIModule();
		Singleton = GetStaticEnum(Z_Construct_UEnum_AIModule_EEnvQueryTrace, Z_Construct_UPackage_AIModule(), TEXT("EEnvQueryTrace"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EEnvQueryTrace(EEnvQueryTrace_StaticEnum, TEXT("/Script/AIModule"));
static class UEnum* EEnvQueryParam_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern AIMODULE_API class UEnum* Z_Construct_UEnum_AIModule_EEnvQueryParam();
		extern AIMODULE_API class UPackage* Z_Construct_UPackage_AIModule();
		Singleton = GetStaticEnum(Z_Construct_UEnum_AIModule_EEnvQueryParam, Z_Construct_UPackage_AIModule(), TEXT("EEnvQueryParam"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EEnvQueryParam(EEnvQueryParam_StaticEnum, TEXT("/Script/AIModule"));
static class UEnum* EEnvQueryRunMode_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern AIMODULE_API class UEnum* Z_Construct_UEnum_AIModule_EEnvQueryRunMode();
		extern AIMODULE_API class UPackage* Z_Construct_UPackage_AIModule();
		Singleton = GetStaticEnum(Z_Construct_UEnum_AIModule_EEnvQueryRunMode, Z_Construct_UPackage_AIModule(), TEXT("EEnvQueryRunMode"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EEnvQueryRunMode(EEnvQueryRunMode_StaticEnum, TEXT("/Script/AIModule"));
static class UEnum* EEnvQueryStatus_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern AIMODULE_API class UEnum* Z_Construct_UEnum_AIModule_EEnvQueryStatus();
		extern AIMODULE_API class UPackage* Z_Construct_UPackage_AIModule();
		Singleton = GetStaticEnum(Z_Construct_UEnum_AIModule_EEnvQueryStatus, Z_Construct_UPackage_AIModule(), TEXT("EEnvQueryStatus"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EEnvQueryStatus(EEnvQueryStatus_StaticEnum, TEXT("/Script/AIModule"));
static class UEnum* EEnvTestScoreOperator_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern AIMODULE_API class UEnum* Z_Construct_UEnum_AIModule_EEnvTestScoreOperator();
		extern AIMODULE_API class UPackage* Z_Construct_UPackage_AIModule();
		Singleton = GetStaticEnum(Z_Construct_UEnum_AIModule_EEnvTestScoreOperator, Z_Construct_UPackage_AIModule(), TEXT("EEnvTestScoreOperator"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EEnvTestScoreOperator(EEnvTestScoreOperator_StaticEnum, TEXT("/Script/AIModule"));
static class UEnum* EEnvTestFilterOperator_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern AIMODULE_API class UEnum* Z_Construct_UEnum_AIModule_EEnvTestFilterOperator();
		extern AIMODULE_API class UPackage* Z_Construct_UPackage_AIModule();
		Singleton = GetStaticEnum(Z_Construct_UEnum_AIModule_EEnvTestFilterOperator, Z_Construct_UPackage_AIModule(), TEXT("EEnvTestFilterOperator"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EEnvTestFilterOperator(EEnvTestFilterOperator_StaticEnum, TEXT("/Script/AIModule"));
static class UEnum* EEnvTestCost_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern AIMODULE_API class UEnum* Z_Construct_UEnum_AIModule_EEnvTestCost();
		extern AIMODULE_API class UPackage* Z_Construct_UPackage_AIModule();
		Singleton = GetStaticEnum(Z_Construct_UEnum_AIModule_EEnvTestCost, Z_Construct_UPackage_AIModule(), TEXT("EEnvTestCost"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EEnvTestCost(EEnvTestCost_StaticEnum, TEXT("/Script/AIModule"));
static class UEnum* EEnvTestWeight_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern AIMODULE_API class UEnum* Z_Construct_UEnum_AIModule_EEnvTestWeight();
		extern AIMODULE_API class UPackage* Z_Construct_UPackage_AIModule();
		Singleton = GetStaticEnum(Z_Construct_UEnum_AIModule_EEnvTestWeight, Z_Construct_UPackage_AIModule(), TEXT("EEnvTestWeight"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EEnvTestWeight(EEnvTestWeight_StaticEnum, TEXT("/Script/AIModule"));
static class UEnum* EEnvTestScoreEquation_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern AIMODULE_API class UEnum* Z_Construct_UEnum_AIModule_EEnvTestScoreEquation();
		extern AIMODULE_API class UPackage* Z_Construct_UPackage_AIModule();
		Singleton = GetStaticEnum(Z_Construct_UEnum_AIModule_EEnvTestScoreEquation, Z_Construct_UPackage_AIModule(), TEXT("EEnvTestScoreEquation"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EEnvTestScoreEquation(EEnvTestScoreEquation_StaticEnum, TEXT("/Script/AIModule"));
static class UEnum* EEnvTestFilterType_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern AIMODULE_API class UEnum* Z_Construct_UEnum_AIModule_EEnvTestFilterType();
		extern AIMODULE_API class UPackage* Z_Construct_UPackage_AIModule();
		Singleton = GetStaticEnum(Z_Construct_UEnum_AIModule_EEnvTestFilterType, Z_Construct_UPackage_AIModule(), TEXT("EEnvTestFilterType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EEnvTestFilterType(EEnvTestFilterType_StaticEnum, TEXT("/Script/AIModule"));
static class UEnum* EEnvTestPurpose_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern AIMODULE_API class UEnum* Z_Construct_UEnum_AIModule_EEnvTestPurpose();
		extern AIMODULE_API class UPackage* Z_Construct_UPackage_AIModule();
		Singleton = GetStaticEnum(Z_Construct_UEnum_AIModule_EEnvTestPurpose, Z_Construct_UPackage_AIModule(), TEXT("EEnvTestPurpose"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EEnvTestPurpose(EEnvTestPurpose_StaticEnum, TEXT("/Script/AIModule"));
class UScriptStruct* FEnvBoolParam::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern AIMODULE_API class UScriptStruct* Z_Construct_UScriptStruct_FEnvBoolParam();
		extern AIMODULE_API uint32 Get_Z_Construct_UScriptStruct_FEnvBoolParam_CRC();
		extern AIMODULE_API class UPackage* Z_Construct_UPackage_AIModule();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FEnvBoolParam, Z_Construct_UPackage_AIModule(), TEXT("EnvBoolParam"), sizeof(FEnvBoolParam), Get_Z_Construct_UScriptStruct_FEnvBoolParam_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FEnvBoolParam(FEnvBoolParam::StaticStruct, TEXT("/Script/AIModule"));
static struct FScriptStruct_AIModule_StaticRegisterNativesFEnvBoolParam
{
	FScriptStruct_AIModule_StaticRegisterNativesFEnvBoolParam()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("EnvBoolParam")),new UScriptStruct::TCppStructOps<FEnvBoolParam>);
	}
} ScriptStruct_AIModule_StaticRegisterNativesFEnvBoolParam;
class UScriptStruct* FEnvIntParam::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern AIMODULE_API class UScriptStruct* Z_Construct_UScriptStruct_FEnvIntParam();
		extern AIMODULE_API uint32 Get_Z_Construct_UScriptStruct_FEnvIntParam_CRC();
		extern AIMODULE_API class UPackage* Z_Construct_UPackage_AIModule();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FEnvIntParam, Z_Construct_UPackage_AIModule(), TEXT("EnvIntParam"), sizeof(FEnvIntParam), Get_Z_Construct_UScriptStruct_FEnvIntParam_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FEnvIntParam(FEnvIntParam::StaticStruct, TEXT("/Script/AIModule"));
static struct FScriptStruct_AIModule_StaticRegisterNativesFEnvIntParam
{
	FScriptStruct_AIModule_StaticRegisterNativesFEnvIntParam()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("EnvIntParam")),new UScriptStruct::TCppStructOps<FEnvIntParam>);
	}
} ScriptStruct_AIModule_StaticRegisterNativesFEnvIntParam;
class UScriptStruct* FEnvFloatParam::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern AIMODULE_API class UScriptStruct* Z_Construct_UScriptStruct_FEnvFloatParam();
		extern AIMODULE_API uint32 Get_Z_Construct_UScriptStruct_FEnvFloatParam_CRC();
		extern AIMODULE_API class UPackage* Z_Construct_UPackage_AIModule();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FEnvFloatParam, Z_Construct_UPackage_AIModule(), TEXT("EnvFloatParam"), sizeof(FEnvFloatParam), Get_Z_Construct_UScriptStruct_FEnvFloatParam_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FEnvFloatParam(FEnvFloatParam::StaticStruct, TEXT("/Script/AIModule"));
static struct FScriptStruct_AIModule_StaticRegisterNativesFEnvFloatParam
{
	FScriptStruct_AIModule_StaticRegisterNativesFEnvFloatParam()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("EnvFloatParam")),new UScriptStruct::TCppStructOps<FEnvFloatParam>);
	}
} ScriptStruct_AIModule_StaticRegisterNativesFEnvFloatParam;
class UScriptStruct* FEnvBoolParam_DEPRECATED::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern AIMODULE_API class UScriptStruct* Z_Construct_UScriptStruct_FEnvBoolParam_DEPRECATED();
		extern AIMODULE_API uint32 Get_Z_Construct_UScriptStruct_FEnvBoolParam_DEPRECATED_CRC();
		extern AIMODULE_API class UPackage* Z_Construct_UPackage_AIModule();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FEnvBoolParam_DEPRECATED, Z_Construct_UPackage_AIModule(), TEXT("EnvBoolParam_DEPRECATED"), sizeof(FEnvBoolParam_DEPRECATED), Get_Z_Construct_UScriptStruct_FEnvBoolParam_DEPRECATED_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FEnvBoolParam_DEPRECATED(FEnvBoolParam_DEPRECATED::StaticStruct, TEXT("/Script/AIModule"));
static struct FScriptStruct_AIModule_StaticRegisterNativesFEnvBoolParam_DEPRECATED
{
	FScriptStruct_AIModule_StaticRegisterNativesFEnvBoolParam_DEPRECATED()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("EnvBoolParam_DEPRECATED")),new UScriptStruct::TCppStructOps<FEnvBoolParam_DEPRECATED>);
	}
} ScriptStruct_AIModule_StaticRegisterNativesFEnvBoolParam_DEPRECATED;
class UScriptStruct* FEnvIntParam_DEPRECATED::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern AIMODULE_API class UScriptStruct* Z_Construct_UScriptStruct_FEnvIntParam_DEPRECATED();
		extern AIMODULE_API uint32 Get_Z_Construct_UScriptStruct_FEnvIntParam_DEPRECATED_CRC();
		extern AIMODULE_API class UPackage* Z_Construct_UPackage_AIModule();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FEnvIntParam_DEPRECATED, Z_Construct_UPackage_AIModule(), TEXT("EnvIntParam_DEPRECATED"), sizeof(FEnvIntParam_DEPRECATED), Get_Z_Construct_UScriptStruct_FEnvIntParam_DEPRECATED_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FEnvIntParam_DEPRECATED(FEnvIntParam_DEPRECATED::StaticStruct, TEXT("/Script/AIModule"));
static struct FScriptStruct_AIModule_StaticRegisterNativesFEnvIntParam_DEPRECATED
{
	FScriptStruct_AIModule_StaticRegisterNativesFEnvIntParam_DEPRECATED()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("EnvIntParam_DEPRECATED")),new UScriptStruct::TCppStructOps<FEnvIntParam_DEPRECATED>);
	}
} ScriptStruct_AIModule_StaticRegisterNativesFEnvIntParam_DEPRECATED;
class UScriptStruct* FEnvFloatParam_DEPRECATED::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern AIMODULE_API class UScriptStruct* Z_Construct_UScriptStruct_FEnvFloatParam_DEPRECATED();
		extern AIMODULE_API uint32 Get_Z_Construct_UScriptStruct_FEnvFloatParam_DEPRECATED_CRC();
		extern AIMODULE_API class UPackage* Z_Construct_UPackage_AIModule();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FEnvFloatParam_DEPRECATED, Z_Construct_UPackage_AIModule(), TEXT("EnvFloatParam_DEPRECATED"), sizeof(FEnvFloatParam_DEPRECATED), Get_Z_Construct_UScriptStruct_FEnvFloatParam_DEPRECATED_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FEnvFloatParam_DEPRECATED(FEnvFloatParam_DEPRECATED::StaticStruct, TEXT("/Script/AIModule"));
static struct FScriptStruct_AIModule_StaticRegisterNativesFEnvFloatParam_DEPRECATED
{
	FScriptStruct_AIModule_StaticRegisterNativesFEnvFloatParam_DEPRECATED()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("EnvFloatParam_DEPRECATED")),new UScriptStruct::TCppStructOps<FEnvFloatParam_DEPRECATED>);
	}
} ScriptStruct_AIModule_StaticRegisterNativesFEnvFloatParam_DEPRECATED;
class UScriptStruct* FEnvQueryResult::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern AIMODULE_API class UScriptStruct* Z_Construct_UScriptStruct_FEnvQueryResult();
		extern AIMODULE_API uint32 Get_Z_Construct_UScriptStruct_FEnvQueryResult_CRC();
		extern AIMODULE_API class UPackage* Z_Construct_UPackage_AIModule();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FEnvQueryResult, Z_Construct_UPackage_AIModule(), TEXT("EnvQueryResult"), sizeof(FEnvQueryResult), Get_Z_Construct_UScriptStruct_FEnvQueryResult_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FEnvQueryResult(FEnvQueryResult::StaticStruct, TEXT("/Script/AIModule"));
static struct FScriptStruct_AIModule_StaticRegisterNativesFEnvQueryResult
{
	FScriptStruct_AIModule_StaticRegisterNativesFEnvQueryResult()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("EnvQueryResult")),new UScriptStruct::TCppStructOps<FEnvQueryResult>);
	}
} ScriptStruct_AIModule_StaticRegisterNativesFEnvQueryResult;
class UScriptStruct* FEnvTraceData::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern AIMODULE_API class UScriptStruct* Z_Construct_UScriptStruct_FEnvTraceData();
		extern AIMODULE_API uint32 Get_Z_Construct_UScriptStruct_FEnvTraceData_CRC();
		extern AIMODULE_API class UPackage* Z_Construct_UPackage_AIModule();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FEnvTraceData, Z_Construct_UPackage_AIModule(), TEXT("EnvTraceData"), sizeof(FEnvTraceData), Get_Z_Construct_UScriptStruct_FEnvTraceData_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FEnvTraceData(FEnvTraceData::StaticStruct, TEXT("/Script/AIModule"));
static struct FScriptStruct_AIModule_StaticRegisterNativesFEnvTraceData
{
	FScriptStruct_AIModule_StaticRegisterNativesFEnvTraceData()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("EnvTraceData")),new UScriptStruct::TCppStructOps<FEnvTraceData>);
	}
} ScriptStruct_AIModule_StaticRegisterNativesFEnvTraceData;
class UScriptStruct* FEnvDirection::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern AIMODULE_API class UScriptStruct* Z_Construct_UScriptStruct_FEnvDirection();
		extern AIMODULE_API uint32 Get_Z_Construct_UScriptStruct_FEnvDirection_CRC();
		extern AIMODULE_API class UPackage* Z_Construct_UPackage_AIModule();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FEnvDirection, Z_Construct_UPackage_AIModule(), TEXT("EnvDirection"), sizeof(FEnvDirection), Get_Z_Construct_UScriptStruct_FEnvDirection_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FEnvDirection(FEnvDirection::StaticStruct, TEXT("/Script/AIModule"));
static struct FScriptStruct_AIModule_StaticRegisterNativesFEnvDirection
{
	FScriptStruct_AIModule_StaticRegisterNativesFEnvDirection()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("EnvDirection")),new UScriptStruct::TCppStructOps<FEnvDirection>);
	}
} ScriptStruct_AIModule_StaticRegisterNativesFEnvDirection;
class UScriptStruct* FEnvNamedValue::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern AIMODULE_API class UScriptStruct* Z_Construct_UScriptStruct_FEnvNamedValue();
		extern AIMODULE_API uint32 Get_Z_Construct_UScriptStruct_FEnvNamedValue_CRC();
		extern AIMODULE_API class UPackage* Z_Construct_UPackage_AIModule();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FEnvNamedValue, Z_Construct_UPackage_AIModule(), TEXT("EnvNamedValue"), sizeof(FEnvNamedValue), Get_Z_Construct_UScriptStruct_FEnvNamedValue_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FEnvNamedValue(FEnvNamedValue::StaticStruct, TEXT("/Script/AIModule"));
static struct FScriptStruct_AIModule_StaticRegisterNativesFEnvNamedValue
{
	FScriptStruct_AIModule_StaticRegisterNativesFEnvNamedValue()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("EnvNamedValue")),new UScriptStruct::TCppStructOps<FEnvNamedValue>);
	}
} ScriptStruct_AIModule_StaticRegisterNativesFEnvNamedValue;
	void UEnvQueryTypes::StaticRegisterNativesUEnvQueryTypes()
	{
	}
	IMPLEMENT_CLASS(UEnvQueryTypes, 325874674);
	void UBTTask_RunEQSQuery::StaticRegisterNativesUBTTask_RunEQSQuery()
	{
	}
	IMPLEMENT_CLASS(UBTTask_RunEQSQuery, 1202377079);
	void UBTTask_BlueprintBase::ReceiveAbort(AActor* OwnerActor)
	{
		BTTask_BlueprintBase_eventReceiveAbort_Parms Parms;
		Parms.OwnerActor=OwnerActor;
		ProcessEvent(FindFunctionChecked(AIMODULE_ReceiveAbort),&Parms);
	}
	void UBTTask_BlueprintBase::ReceiveAbortAI(AAIController* OwnerController, APawn* ControlledPawn)
	{
		BTTask_BlueprintBase_eventReceiveAbortAI_Parms Parms;
		Parms.OwnerController=OwnerController;
		Parms.ControlledPawn=ControlledPawn;
		ProcessEvent(FindFunctionChecked(AIMODULE_ReceiveAbortAI),&Parms);
	}
	void UBTTask_BlueprintBase::ReceiveExecute(AActor* OwnerActor)
	{
		BTTask_BlueprintBase_eventReceiveExecute_Parms Parms;
		Parms.OwnerActor=OwnerActor;
		ProcessEvent(FindFunctionChecked(AIMODULE_ReceiveExecute),&Parms);
	}
	void UBTTask_BlueprintBase::ReceiveExecuteAI(AAIController* OwnerController, APawn* ControlledPawn)
	{
		BTTask_BlueprintBase_eventReceiveExecuteAI_Parms Parms;
		Parms.OwnerController=OwnerController;
		Parms.ControlledPawn=ControlledPawn;
		ProcessEvent(FindFunctionChecked(AIMODULE_ReceiveExecuteAI),&Parms);
	}
	void UBTTask_BlueprintBase::ReceiveTick(AActor* OwnerActor, float DeltaSeconds)
	{
		BTTask_BlueprintBase_eventReceiveTick_Parms Parms;
		Parms.OwnerActor=OwnerActor;
		Parms.DeltaSeconds=DeltaSeconds;
		ProcessEvent(FindFunctionChecked(AIMODULE_ReceiveTick),&Parms);
	}
	void UBTTask_BlueprintBase::ReceiveTickAI(AAIController* OwnerController, APawn* ControlledPawn, float DeltaSeconds)
	{
		BTTask_BlueprintBase_eventReceiveTickAI_Parms Parms;
		Parms.OwnerController=OwnerController;
		Parms.ControlledPawn=ControlledPawn;
		Parms.DeltaSeconds=DeltaSeconds;
		ProcessEvent(FindFunctionChecked(AIMODULE_ReceiveTickAI),&Parms);
	}
	void UBTTask_BlueprintBase::StaticRegisterNativesUBTTask_BlueprintBase()
	{
		FNativeFunctionRegistrar::RegisterFunction(UBTTask_BlueprintBase::StaticClass(),"FinishAbort",(Native)&UBTTask_BlueprintBase::execFinishAbort);
		FNativeFunctionRegistrar::RegisterFunction(UBTTask_BlueprintBase::StaticClass(),"FinishExecute",(Native)&UBTTask_BlueprintBase::execFinishExecute);
		FNativeFunctionRegistrar::RegisterFunction(UBTTask_BlueprintBase::StaticClass(),"IsTaskAborting",(Native)&UBTTask_BlueprintBase::execIsTaskAborting);
		FNativeFunctionRegistrar::RegisterFunction(UBTTask_BlueprintBase::StaticClass(),"IsTaskExecuting",(Native)&UBTTask_BlueprintBase::execIsTaskExecuting);
		FNativeFunctionRegistrar::RegisterFunction(UBTTask_BlueprintBase::StaticClass(),"SetFinishOnMessage",(Native)&UBTTask_BlueprintBase::execSetFinishOnMessage);
		FNativeFunctionRegistrar::RegisterFunction(UBTTask_BlueprintBase::StaticClass(),"SetFinishOnMessageWithId",(Native)&UBTTask_BlueprintBase::execSetFinishOnMessageWithId);
	}
	IMPLEMENT_CLASS(UBTTask_BlueprintBase, 218208240);
	void UBTTask_MakeNoise::StaticRegisterNativesUBTTask_MakeNoise()
	{
	}
	IMPLEMENT_CLASS(UBTTask_MakeNoise, 281179519);
static class UEnum* EPawnActionFailHandling_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern AIMODULE_API class UEnum* Z_Construct_UEnum_AIModule_EPawnActionFailHandling();
		extern AIMODULE_API class UPackage* Z_Construct_UPackage_AIModule();
		Singleton = GetStaticEnum(Z_Construct_UEnum_AIModule_EPawnActionFailHandling, Z_Construct_UPackage_AIModule(), TEXT("EPawnActionFailHandling"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EPawnActionFailHandling(EPawnActionFailHandling_StaticEnum, TEXT("/Script/AIModule"));
static class UEnum* EPawnSubActionTriggeringPolicy_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern AIMODULE_API class UEnum* Z_Construct_UEnum_AIModule_EPawnSubActionTriggeringPolicy();
		extern AIMODULE_API class UPackage* Z_Construct_UPackage_AIModule();
		Singleton = GetStaticEnum(Z_Construct_UEnum_AIModule_EPawnSubActionTriggeringPolicy, Z_Construct_UPackage_AIModule(), TEXT("EPawnSubActionTriggeringPolicy"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EPawnSubActionTriggeringPolicy(EPawnSubActionTriggeringPolicy_StaticEnum, TEXT("/Script/AIModule"));
	void UPawnAction::StaticRegisterNativesUPawnAction()
	{
		FNativeFunctionRegistrar::RegisterFunction(UPawnAction::StaticClass(),"CreateActionInstance",(Native)&UPawnAction::execCreateActionInstance);
		FNativeFunctionRegistrar::RegisterFunction(UPawnAction::StaticClass(),"Finish",(Native)&UPawnAction::execFinish);
		FNativeFunctionRegistrar::RegisterFunction(UPawnAction::StaticClass(),"GetActionPriority",(Native)&UPawnAction::execGetActionPriority);
	}
	IMPLEMENT_CLASS(UPawnAction, 2856709053);
	void UBTTask_PawnActionBase::StaticRegisterNativesUBTTask_PawnActionBase()
	{
	}
	IMPLEMENT_CLASS(UBTTask_PawnActionBase, 2208063464);
	void UBTTask_PushPawnAction::StaticRegisterNativesUBTTask_PushPawnAction()
	{
	}
	IMPLEMENT_CLASS(UBTTask_PushPawnAction, 1820461781);
	void UBTTask_PlayAnimation::StaticRegisterNativesUBTTask_PlayAnimation()
	{
	}
	IMPLEMENT_CLASS(UBTTask_PlayAnimation, 4164123985);
	void UBTTask_PlaySound::StaticRegisterNativesUBTTask_PlaySound()
	{
	}
	IMPLEMENT_CLASS(UBTTask_PlaySound, 4285094310);
	void UBTTask_RunBehavior::StaticRegisterNativesUBTTask_RunBehavior()
	{
	}
	IMPLEMENT_CLASS(UBTTask_RunBehavior, 1828834544);
	void UBTTask_RunBehaviorDynamic::StaticRegisterNativesUBTTask_RunBehaviorDynamic()
	{
	}
	IMPLEMENT_CLASS(UBTTask_RunBehaviorDynamic, 4108286435);
	void UBTTask_SetTagCooldown::StaticRegisterNativesUBTTask_SetTagCooldown()
	{
	}
	IMPLEMENT_CLASS(UBTTask_SetTagCooldown, 522676628);
	void UBTTask_Wait::StaticRegisterNativesUBTTask_Wait()
	{
	}
	IMPLEMENT_CLASS(UBTTask_Wait, 168666376);
	void UBTTask_WaitBlackboardTime::StaticRegisterNativesUBTTask_WaitBlackboardTime()
	{
	}
	IMPLEMENT_CLASS(UBTTask_WaitBlackboardTime, 1077496021);
	void UCrowdAgentInterface::StaticRegisterNativesUCrowdAgentInterface()
	{
	}
	IMPLEMENT_CLASS(UCrowdAgentInterface, 1401941894);
class UScriptStruct* FCrowdAvoidanceSamplingPattern::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern AIMODULE_API class UScriptStruct* Z_Construct_UScriptStruct_FCrowdAvoidanceSamplingPattern();
		extern AIMODULE_API uint32 Get_Z_Construct_UScriptStruct_FCrowdAvoidanceSamplingPattern_CRC();
		extern AIMODULE_API class UPackage* Z_Construct_UPackage_AIModule();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FCrowdAvoidanceSamplingPattern, Z_Construct_UPackage_AIModule(), TEXT("CrowdAvoidanceSamplingPattern"), sizeof(FCrowdAvoidanceSamplingPattern), Get_Z_Construct_UScriptStruct_FCrowdAvoidanceSamplingPattern_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FCrowdAvoidanceSamplingPattern(FCrowdAvoidanceSamplingPattern::StaticStruct, TEXT("/Script/AIModule"));
static struct FScriptStruct_AIModule_StaticRegisterNativesFCrowdAvoidanceSamplingPattern
{
	FScriptStruct_AIModule_StaticRegisterNativesFCrowdAvoidanceSamplingPattern()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("CrowdAvoidanceSamplingPattern")),new UScriptStruct::TCppStructOps<FCrowdAvoidanceSamplingPattern>);
	}
} ScriptStruct_AIModule_StaticRegisterNativesFCrowdAvoidanceSamplingPattern;
class UScriptStruct* FCrowdAvoidanceConfig::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern AIMODULE_API class UScriptStruct* Z_Construct_UScriptStruct_FCrowdAvoidanceConfig();
		extern AIMODULE_API uint32 Get_Z_Construct_UScriptStruct_FCrowdAvoidanceConfig_CRC();
		extern AIMODULE_API class UPackage* Z_Construct_UPackage_AIModule();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FCrowdAvoidanceConfig, Z_Construct_UPackage_AIModule(), TEXT("CrowdAvoidanceConfig"), sizeof(FCrowdAvoidanceConfig), Get_Z_Construct_UScriptStruct_FCrowdAvoidanceConfig_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FCrowdAvoidanceConfig(FCrowdAvoidanceConfig::StaticStruct, TEXT("/Script/AIModule"));
static struct FScriptStruct_AIModule_StaticRegisterNativesFCrowdAvoidanceConfig
{
	FScriptStruct_AIModule_StaticRegisterNativesFCrowdAvoidanceConfig()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("CrowdAvoidanceConfig")),new UScriptStruct::TCppStructOps<FCrowdAvoidanceConfig>);
	}
} ScriptStruct_AIModule_StaticRegisterNativesFCrowdAvoidanceConfig;
	void UCrowdManager::StaticRegisterNativesUCrowdManager()
	{
	}
	IMPLEMENT_CLASS(UCrowdManager, 981241386);
	void UEnvQuery::StaticRegisterNativesUEnvQuery()
	{
	}
	IMPLEMENT_CLASS(UEnvQuery, 3394821557);
	void UEnvQueryContext_BlueprintBase::ProvideActorsSet(AActor* QuerierActor, TArray<AActor*>& ResultingActorsSet) const
	{
		EnvQueryContext_BlueprintBase_eventProvideActorsSet_Parms Parms;
		Parms.QuerierActor=QuerierActor;
		Parms.ResultingActorsSet=ResultingActorsSet;
		const_cast<UEnvQueryContext_BlueprintBase*>(this)->ProcessEvent(FindFunctionChecked(AIMODULE_ProvideActorsSet),&Parms);
		ResultingActorsSet=Parms.ResultingActorsSet;
	}
	void UEnvQueryContext_BlueprintBase::ProvideLocationsSet(AActor* QuerierActor, TArray<FVector>& ResultingLocationSet) const
	{
		EnvQueryContext_BlueprintBase_eventProvideLocationsSet_Parms Parms;
		Parms.QuerierActor=QuerierActor;
		Parms.ResultingLocationSet=ResultingLocationSet;
		const_cast<UEnvQueryContext_BlueprintBase*>(this)->ProcessEvent(FindFunctionChecked(AIMODULE_ProvideLocationsSet),&Parms);
		ResultingLocationSet=Parms.ResultingLocationSet;
	}
	void UEnvQueryContext_BlueprintBase::ProvideSingleActor(AActor* QuerierActor, AActor*& ResultingActor) const
	{
		EnvQueryContext_BlueprintBase_eventProvideSingleActor_Parms Parms;
		Parms.QuerierActor=QuerierActor;
		Parms.ResultingActor=ResultingActor;
		const_cast<UEnvQueryContext_BlueprintBase*>(this)->ProcessEvent(FindFunctionChecked(AIMODULE_ProvideSingleActor),&Parms);
		ResultingActor=Parms.ResultingActor;
	}
	void UEnvQueryContext_BlueprintBase::ProvideSingleLocation(AActor* QuerierActor, FVector& ResultingLocation) const
	{
		EnvQueryContext_BlueprintBase_eventProvideSingleLocation_Parms Parms;
		Parms.QuerierActor=QuerierActor;
		Parms.ResultingLocation=ResultingLocation;
		const_cast<UEnvQueryContext_BlueprintBase*>(this)->ProcessEvent(FindFunctionChecked(AIMODULE_ProvideSingleLocation),&Parms);
		ResultingLocation=Parms.ResultingLocation;
	}
	void UEnvQueryContext_BlueprintBase::StaticRegisterNativesUEnvQueryContext_BlueprintBase()
	{
	}
	IMPLEMENT_CLASS(UEnvQueryContext_BlueprintBase, 2882460054);
	void UEnvQueryContext_Item::StaticRegisterNativesUEnvQueryContext_Item()
	{
	}
	IMPLEMENT_CLASS(UEnvQueryContext_Item, 1848891589);
	void UEnvQueryContext_Querier::StaticRegisterNativesUEnvQueryContext_Querier()
	{
	}
	IMPLEMENT_CLASS(UEnvQueryContext_Querier, 1355782635);
	void UVisualLoggerExtension::StaticRegisterNativesUVisualLoggerExtension()
	{
	}
	IMPLEMENT_CLASS(UVisualLoggerExtension, 1175536146);
	void UEnvQueryDebugHelpers::StaticRegisterNativesUEnvQueryDebugHelpers()
	{
	}
	IMPLEMENT_CLASS(UEnvQueryDebugHelpers, 4239158027);
	void UEQSQueryResultSourceInterface::StaticRegisterNativesUEQSQueryResultSourceInterface()
	{
	}
	IMPLEMENT_CLASS(UEQSQueryResultSourceInterface, 641569377);
	void UEnvQueryInstanceBlueprintWrapper::StaticRegisterNativesUEnvQueryInstanceBlueprintWrapper()
	{
		FNativeFunctionRegistrar::RegisterFunction(UEnvQueryInstanceBlueprintWrapper::StaticClass(),"GetItemScore",(Native)&UEnvQueryInstanceBlueprintWrapper::execGetItemScore);
		FNativeFunctionRegistrar::RegisterFunction(UEnvQueryInstanceBlueprintWrapper::StaticClass(),"GetResultsAsActors",(Native)&UEnvQueryInstanceBlueprintWrapper::execGetResultsAsActors);
		FNativeFunctionRegistrar::RegisterFunction(UEnvQueryInstanceBlueprintWrapper::StaticClass(),"GetResultsAsLocations",(Native)&UEnvQueryInstanceBlueprintWrapper::execGetResultsAsLocations);
	}
	IMPLEMENT_CLASS(UEnvQueryInstanceBlueprintWrapper, 4272630052);
	void UEnvQueryItemType_VectorBase::StaticRegisterNativesUEnvQueryItemType_VectorBase()
	{
	}
	IMPLEMENT_CLASS(UEnvQueryItemType_VectorBase, 1038438301);
	void UEnvQueryItemType_ActorBase::StaticRegisterNativesUEnvQueryItemType_ActorBase()
	{
	}
	IMPLEMENT_CLASS(UEnvQueryItemType_ActorBase, 2136698118);
	void UEnvQueryItemType_Actor::StaticRegisterNativesUEnvQueryItemType_Actor()
	{
	}
	IMPLEMENT_CLASS(UEnvQueryItemType_Actor, 4066366419);
	void UEnvQueryItemType_Direction::StaticRegisterNativesUEnvQueryItemType_Direction()
	{
	}
	IMPLEMENT_CLASS(UEnvQueryItemType_Direction, 1066827151);
	void UEnvQueryItemType_Point::StaticRegisterNativesUEnvQueryItemType_Point()
	{
	}
	IMPLEMENT_CLASS(UEnvQueryItemType_Point, 600659284);
class UScriptStruct* FEnvQueryInstanceCache::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern AIMODULE_API class UScriptStruct* Z_Construct_UScriptStruct_FEnvQueryInstanceCache();
		extern AIMODULE_API uint32 Get_Z_Construct_UScriptStruct_FEnvQueryInstanceCache_CRC();
		extern AIMODULE_API class UPackage* Z_Construct_UPackage_AIModule();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FEnvQueryInstanceCache, Z_Construct_UPackage_AIModule(), TEXT("EnvQueryInstanceCache"), sizeof(FEnvQueryInstanceCache), Get_Z_Construct_UScriptStruct_FEnvQueryInstanceCache_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FEnvQueryInstanceCache(FEnvQueryInstanceCache::StaticStruct, TEXT("/Script/AIModule"));
static struct FScriptStruct_AIModule_StaticRegisterNativesFEnvQueryInstanceCache
{
	FScriptStruct_AIModule_StaticRegisterNativesFEnvQueryInstanceCache()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("EnvQueryInstanceCache")),new UScriptStruct::TCppStructOps<FEnvQueryInstanceCache>);
	}
} ScriptStruct_AIModule_StaticRegisterNativesFEnvQueryInstanceCache;
class UScriptStruct* FEnvQueryRequest::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern AIMODULE_API class UScriptStruct* Z_Construct_UScriptStruct_FEnvQueryRequest();
		extern AIMODULE_API uint32 Get_Z_Construct_UScriptStruct_FEnvQueryRequest_CRC();
		extern AIMODULE_API class UPackage* Z_Construct_UPackage_AIModule();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FEnvQueryRequest, Z_Construct_UPackage_AIModule(), TEXT("EnvQueryRequest"), sizeof(FEnvQueryRequest), Get_Z_Construct_UScriptStruct_FEnvQueryRequest_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FEnvQueryRequest(FEnvQueryRequest::StaticStruct, TEXT("/Script/AIModule"));
static struct FScriptStruct_AIModule_StaticRegisterNativesFEnvQueryRequest
{
	FScriptStruct_AIModule_StaticRegisterNativesFEnvQueryRequest()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("EnvQueryRequest")),new UScriptStruct::TCppStructOps<FEnvQueryRequest>);
	}
} ScriptStruct_AIModule_StaticRegisterNativesFEnvQueryRequest;
	void UEnvQueryManager::StaticRegisterNativesUEnvQueryManager()
	{
		FNativeFunctionRegistrar::RegisterFunction(UEnvQueryManager::StaticClass(),"RunEQSQuery",(Native)&UEnvQueryManager::execRunEQSQuery);
	}
	IMPLEMENT_CLASS(UEnvQueryManager, 2793489624);
	void UEnvQueryNode::StaticRegisterNativesUEnvQueryNode()
	{
	}
	IMPLEMENT_CLASS(UEnvQueryNode, 3585669549);
	void UEnvQueryGenerator::StaticRegisterNativesUEnvQueryGenerator()
	{
	}
	IMPLEMENT_CLASS(UEnvQueryGenerator, 386565493);
	void UEnvQueryGenerator_ActorsOfClass::StaticRegisterNativesUEnvQueryGenerator_ActorsOfClass()
	{
	}
	IMPLEMENT_CLASS(UEnvQueryGenerator_ActorsOfClass, 3137704333);
	void UEnvQueryGenerator_BlueprintBase::DoItemGeneration(const TArray<FVector>& ContextLocations) const
	{
		EnvQueryGenerator_BlueprintBase_eventDoItemGeneration_Parms Parms;
		Parms.ContextLocations=ContextLocations;
		const_cast<UEnvQueryGenerator_BlueprintBase*>(this)->ProcessEvent(FindFunctionChecked(AIMODULE_DoItemGeneration),&Parms);
	}
	void UEnvQueryGenerator_BlueprintBase::StaticRegisterNativesUEnvQueryGenerator_BlueprintBase()
	{
		FNativeFunctionRegistrar::RegisterFunction(UEnvQueryGenerator_BlueprintBase::StaticClass(),"AddGeneratedActor",(Native)&UEnvQueryGenerator_BlueprintBase::execAddGeneratedActor);
		FNativeFunctionRegistrar::RegisterFunction(UEnvQueryGenerator_BlueprintBase::StaticClass(),"AddGeneratedVector",(Native)&UEnvQueryGenerator_BlueprintBase::execAddGeneratedVector);
		FNativeFunctionRegistrar::RegisterFunction(UEnvQueryGenerator_BlueprintBase::StaticClass(),"GetQuerier",(Native)&UEnvQueryGenerator_BlueprintBase::execGetQuerier);
	}
	IMPLEMENT_CLASS(UEnvQueryGenerator_BlueprintBase, 4083695014);
	void UEnvQueryGenerator_Composite::StaticRegisterNativesUEnvQueryGenerator_Composite()
	{
	}
	IMPLEMENT_CLASS(UEnvQueryGenerator_Composite, 1511916039);
	void UEnvQueryGenerator_ProjectedPoints::StaticRegisterNativesUEnvQueryGenerator_ProjectedPoints()
	{
	}
	IMPLEMENT_CLASS(UEnvQueryGenerator_ProjectedPoints, 1351754808);
	void UEnvQueryGenerator_Donut::StaticRegisterNativesUEnvQueryGenerator_Donut()
	{
	}
	IMPLEMENT_CLASS(UEnvQueryGenerator_Donut, 4262189833);
	void UEnvQueryGenerator_OnCircle::StaticRegisterNativesUEnvQueryGenerator_OnCircle()
	{
	}
	IMPLEMENT_CLASS(UEnvQueryGenerator_OnCircle, 1848886409);
	void UEnvQueryGenerator_SimpleGrid::StaticRegisterNativesUEnvQueryGenerator_SimpleGrid()
	{
	}
	IMPLEMENT_CLASS(UEnvQueryGenerator_SimpleGrid, 2948929713);
	void UEnvQueryGenerator_PathingGrid::StaticRegisterNativesUEnvQueryGenerator_PathingGrid()
	{
	}
	IMPLEMENT_CLASS(UEnvQueryGenerator_PathingGrid, 2513061346);
	void UEnvQueryTest::StaticRegisterNativesUEnvQueryTest()
	{
	}
	IMPLEMENT_CLASS(UEnvQueryTest, 3167989577);
static class UEnum* EEnvTestDistance_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern AIMODULE_API class UEnum* Z_Construct_UEnum_AIModule_EEnvTestDistance();
		extern AIMODULE_API class UPackage* Z_Construct_UPackage_AIModule();
		Singleton = GetStaticEnum(Z_Construct_UEnum_AIModule_EEnvTestDistance, Z_Construct_UPackage_AIModule(), TEXT("EEnvTestDistance"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EEnvTestDistance(EEnvTestDistance_StaticEnum, TEXT("/Script/AIModule"));
	void UEnvQueryTest_Distance::StaticRegisterNativesUEnvQueryTest_Distance()
	{
	}
	IMPLEMENT_CLASS(UEnvQueryTest_Distance, 2445325495);
static class UEnum* EEnvTestDot_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern AIMODULE_API class UEnum* Z_Construct_UEnum_AIModule_EEnvTestDot();
		extern AIMODULE_API class UPackage* Z_Construct_UPackage_AIModule();
		Singleton = GetStaticEnum(Z_Construct_UEnum_AIModule_EEnvTestDot, Z_Construct_UPackage_AIModule(), TEXT("EEnvTestDot"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EEnvTestDot(EEnvTestDot_StaticEnum, TEXT("/Script/AIModule"));
	void UEnvQueryTest_Dot::StaticRegisterNativesUEnvQueryTest_Dot()
	{
	}
	IMPLEMENT_CLASS(UEnvQueryTest_Dot, 3562872012);
	void UEnvQueryTest_GameplayTags::StaticRegisterNativesUEnvQueryTest_GameplayTags()
	{
	}
	IMPLEMENT_CLASS(UEnvQueryTest_GameplayTags, 1219330013);
static class UEnum* EEnvTestPathfinding_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern AIMODULE_API class UEnum* Z_Construct_UEnum_AIModule_EEnvTestPathfinding();
		extern AIMODULE_API class UPackage* Z_Construct_UPackage_AIModule();
		Singleton = GetStaticEnum(Z_Construct_UEnum_AIModule_EEnvTestPathfinding, Z_Construct_UPackage_AIModule(), TEXT("EEnvTestPathfinding"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EEnvTestPathfinding(EEnvTestPathfinding_StaticEnum, TEXT("/Script/AIModule"));
	void UEnvQueryTest_Pathfinding::StaticRegisterNativesUEnvQueryTest_Pathfinding()
	{
	}
	IMPLEMENT_CLASS(UEnvQueryTest_Pathfinding, 335145517);
	void UEnvQueryTest_PathfindingBatch::StaticRegisterNativesUEnvQueryTest_PathfindingBatch()
	{
	}
	IMPLEMENT_CLASS(UEnvQueryTest_PathfindingBatch, 3936184926);
	void UEnvQueryTest_Random::StaticRegisterNativesUEnvQueryTest_Random()
	{
	}
	IMPLEMENT_CLASS(UEnvQueryTest_Random, 3611455392);
	void UEnvQueryTest_Trace::StaticRegisterNativesUEnvQueryTest_Trace()
	{
	}
	IMPLEMENT_CLASS(UEnvQueryTest_Trace, 2760734923);
	void UEnvQueryOption::StaticRegisterNativesUEnvQueryOption()
	{
	}
	IMPLEMENT_CLASS(UEnvQueryOption, 2970493962);
	void UEQSRenderingComponent::StaticRegisterNativesUEQSRenderingComponent()
	{
	}
	IMPLEMENT_CLASS(UEQSRenderingComponent, 2236259889);
static class UEnum* EEnvQueryHightlightMode_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern AIMODULE_API class UEnum* Z_Construct_UEnum_AIModule_EEnvQueryHightlightMode();
		extern AIMODULE_API class UPackage* Z_Construct_UPackage_AIModule();
		Singleton = GetStaticEnum(Z_Construct_UEnum_AIModule_EEnvQueryHightlightMode, Z_Construct_UPackage_AIModule(), TEXT("EEnvQueryHightlightMode"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EEnvQueryHightlightMode(EEnvQueryHightlightMode_StaticEnum, TEXT("/Script/AIModule"));
	void AEQSTestingPawn::StaticRegisterNativesAEQSTestingPawn()
	{
	}
	IMPLEMENT_CLASS(AEQSTestingPawn, 4193856357);
	void UCrowdFollowingComponent::StaticRegisterNativesUCrowdFollowingComponent()
	{
		FNativeFunctionRegistrar::RegisterFunction(UCrowdFollowingComponent::StaticClass(),"SuspendCrowdSteering",(Native)&UCrowdFollowingComponent::execSuspendCrowdSteering);
	}
	IMPLEMENT_CLASS(UCrowdFollowingComponent, 2468967112);
	void UPawnAction_BlueprintBase::ActionFinished(APawn* ControlledPawn, EPawnActionResult::Type WithResult)
	{
		PawnAction_BlueprintBase_eventActionFinished_Parms Parms;
		Parms.ControlledPawn=ControlledPawn;
		Parms.WithResult=WithResult;
		ProcessEvent(FindFunctionChecked(AIMODULE_ActionFinished),&Parms);
	}
	void UPawnAction_BlueprintBase::ActionPause(APawn* ControlledPawn)
	{
		PawnAction_BlueprintBase_eventActionPause_Parms Parms;
		Parms.ControlledPawn=ControlledPawn;
		ProcessEvent(FindFunctionChecked(AIMODULE_ActionPause),&Parms);
	}
	void UPawnAction_BlueprintBase::ActionResume(APawn* ControlledPawn)
	{
		PawnAction_BlueprintBase_eventActionResume_Parms Parms;
		Parms.ControlledPawn=ControlledPawn;
		ProcessEvent(FindFunctionChecked(AIMODULE_ActionResume),&Parms);
	}
	void UPawnAction_BlueprintBase::ActionStart(APawn* ControlledPawn)
	{
		PawnAction_BlueprintBase_eventActionStart_Parms Parms;
		Parms.ControlledPawn=ControlledPawn;
		ProcessEvent(FindFunctionChecked(AIMODULE_ActionStart),&Parms);
	}
	void UPawnAction_BlueprintBase::ActionTick(APawn* ControlledPawn, float DeltaSeconds)
	{
		PawnAction_BlueprintBase_eventActionTick_Parms Parms;
		Parms.ControlledPawn=ControlledPawn;
		Parms.DeltaSeconds=DeltaSeconds;
		ProcessEvent(FindFunctionChecked(AIMODULE_ActionTick),&Parms);
	}
	void UPawnAction_BlueprintBase::StaticRegisterNativesUPawnAction_BlueprintBase()
	{
	}
	IMPLEMENT_CLASS(UPawnAction_BlueprintBase, 3347211618);
static class UEnum* EPawnActionMoveMode_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern AIMODULE_API class UEnum* Z_Construct_UEnum_AIModule_EPawnActionMoveMode();
		extern AIMODULE_API class UPackage* Z_Construct_UPackage_AIModule();
		Singleton = GetStaticEnum(Z_Construct_UEnum_AIModule_EPawnActionMoveMode, Z_Construct_UPackage_AIModule(), TEXT("EPawnActionMoveMode"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EPawnActionMoveMode(EPawnActionMoveMode_StaticEnum, TEXT("/Script/AIModule"));
	void UPawnAction_Move::StaticRegisterNativesUPawnAction_Move()
	{
	}
	IMPLEMENT_CLASS(UPawnAction_Move, 552983242);
	void UPawnAction_Repeat::StaticRegisterNativesUPawnAction_Repeat()
	{
	}
	IMPLEMENT_CLASS(UPawnAction_Repeat, 2229032268);
	void UPawnAction_Sequence::StaticRegisterNativesUPawnAction_Sequence()
	{
	}
	IMPLEMENT_CLASS(UPawnAction_Sequence, 2839755065);
	void UPawnAction_Wait::StaticRegisterNativesUPawnAction_Wait()
	{
	}
	IMPLEMENT_CLASS(UPawnAction_Wait, 1829675482);
	void UPawnSensingComponent::StaticRegisterNativesUPawnSensingComponent()
	{
		FNativeFunctionRegistrar::RegisterFunction(UPawnSensingComponent::StaticClass(),"GetPeripheralVisionAngle",(Native)&UPawnSensingComponent::execGetPeripheralVisionAngle);
		FNativeFunctionRegistrar::RegisterFunction(UPawnSensingComponent::StaticClass(),"GetPeripheralVisionCosine",(Native)&UPawnSensingComponent::execGetPeripheralVisionCosine);
		FNativeFunctionRegistrar::RegisterFunction(UPawnSensingComponent::StaticClass(),"SetPeripheralVisionAngle",(Native)&UPawnSensingComponent::execSetPeripheralVisionAngle);
		FNativeFunctionRegistrar::RegisterFunction(UPawnSensingComponent::StaticClass(),"SetSensingInterval",(Native)&UPawnSensingComponent::execSetSensingInterval);
		FNativeFunctionRegistrar::RegisterFunction(UPawnSensingComponent::StaticClass(),"SetSensingUpdatesEnabled",(Native)&UPawnSensingComponent::execSetSensingUpdatesEnabled);
	}
	IMPLEMENT_CLASS(UPawnSensingComponent, 878681292);
FName AIMODULE_ActionFinished = FName(TEXT("ActionFinished"));
FName AIMODULE_ActionPause = FName(TEXT("ActionPause"));
FName AIMODULE_ActionResume = FName(TEXT("ActionResume"));
FName AIMODULE_ActionStart = FName(TEXT("ActionStart"));
FName AIMODULE_ActionTick = FName(TEXT("ActionTick"));
FName AIMODULE_DoItemGeneration = FName(TEXT("DoItemGeneration"));
FName AIMODULE_K2_OnNewPawn = FName(TEXT("K2_OnNewPawn"));
FName AIMODULE_OnListenerRegistered = FName(TEXT("OnListenerRegistered"));
FName AIMODULE_OnListenerUnregistered = FName(TEXT("OnListenerUnregistered"));
FName AIMODULE_OnListenerUpdated = FName(TEXT("OnListenerUpdated"));
FName AIMODULE_OnPossess = FName(TEXT("OnPossess"));
FName AIMODULE_OnUpdate = FName(TEXT("OnUpdate"));
FName AIMODULE_OnUsingBlackBoard = FName(TEXT("OnUsingBlackBoard"));
FName AIMODULE_PerformConditionCheck = FName(TEXT("PerformConditionCheck"));
FName AIMODULE_PerformConditionCheckAI = FName(TEXT("PerformConditionCheckAI"));
FName AIMODULE_ProvideActorsSet = FName(TEXT("ProvideActorsSet"));
FName AIMODULE_ProvideLocationsSet = FName(TEXT("ProvideLocationsSet"));
FName AIMODULE_ProvideSingleActor = FName(TEXT("ProvideSingleActor"));
FName AIMODULE_ProvideSingleLocation = FName(TEXT("ProvideSingleLocation"));
FName AIMODULE_ReceiveAbort = FName(TEXT("ReceiveAbort"));
FName AIMODULE_ReceiveAbortAI = FName(TEXT("ReceiveAbortAI"));
FName AIMODULE_ReceiveActivation = FName(TEXT("ReceiveActivation"));
FName AIMODULE_ReceiveActivationAI = FName(TEXT("ReceiveActivationAI"));
FName AIMODULE_ReceiveConditionCheck = FName(TEXT("ReceiveConditionCheck"));
FName AIMODULE_ReceiveDeactivation = FName(TEXT("ReceiveDeactivation"));
FName AIMODULE_ReceiveDeactivationAI = FName(TEXT("ReceiveDeactivationAI"));
FName AIMODULE_ReceiveExecute = FName(TEXT("ReceiveExecute"));
FName AIMODULE_ReceiveExecuteAI = FName(TEXT("ReceiveExecuteAI"));
FName AIMODULE_ReceiveExecutionFinish = FName(TEXT("ReceiveExecutionFinish"));
FName AIMODULE_ReceiveExecutionFinishAI = FName(TEXT("ReceiveExecutionFinishAI"));
FName AIMODULE_ReceiveExecutionStart = FName(TEXT("ReceiveExecutionStart"));
FName AIMODULE_ReceiveExecutionStartAI = FName(TEXT("ReceiveExecutionStartAI"));
FName AIMODULE_ReceiveObserverActivated = FName(TEXT("ReceiveObserverActivated"));
FName AIMODULE_ReceiveObserverActivatedAI = FName(TEXT("ReceiveObserverActivatedAI"));
FName AIMODULE_ReceiveObserverDeactivated = FName(TEXT("ReceiveObserverDeactivated"));
FName AIMODULE_ReceiveObserverDeactivatedAI = FName(TEXT("ReceiveObserverDeactivatedAI"));
FName AIMODULE_ReceiveSearchStart = FName(TEXT("ReceiveSearchStart"));
FName AIMODULE_ReceiveSearchStartAI = FName(TEXT("ReceiveSearchStartAI"));
FName AIMODULE_ReceiveTick = FName(TEXT("ReceiveTick"));
FName AIMODULE_ReceiveTickAI = FName(TEXT("ReceiveTickAI"));
#if USE_COMPILED_IN_NATIVES
// Cross Module References
	ENGINE_API class UClass* Z_Construct_UClass_AActor_NoRegister();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FVector();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FHitResult();
	ENGINE_API class UClass* Z_Construct_UClass_UActorComponent();
	ENGINE_API class UClass* Z_Construct_UClass_ANavigationData_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UNavMovementComponent_NoRegister();
	COREUOBJECT_API class UClass* Z_Construct_UClass_UObject();
	ENGINE_API class UClass* Z_Construct_UClass_APawn_NoRegister();
	COREUOBJECT_API class UClass* Z_Construct_UClass_UObject_NoRegister();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FRotator();
	ENGINE_API class UClass* Z_Construct_UClass_UAnimInstance_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UBlueprintFunctionLibrary();
	ENGINE_API class UClass* Z_Construct_UClass_UNavigationQueryFilter_NoRegister();
	GAMEPLAYTASKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGameplayResourceSet();
	ENGINE_API class UClass* Z_Construct_UClass_AController();
	GAMEPLAYTASKS_API class UClass* Z_Construct_UClass_UGameplayTasksComponent_NoRegister();
	GAMEPLAYTASKS_API class UClass* Z_Construct_UClass_UGameplayTaskOwnerInterface_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UAISystemBase();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FStringClassReference();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FColor();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EEndPlayReason();
	GAMEPLAYTASKS_API class UClass* Z_Construct_UClass_UGameplayTaskResource();
	ENGINE_API class UClass* Z_Construct_UClass_UUserDefinedStruct_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UUserDefinedStruct();
	GAMEPLAYTASKS_API class UClass* Z_Construct_UClass_UGameplayTask();
	GAMEPLAYTASKS_API class UFunction* Z_Construct_UDelegateFunction_UGameplayTask_GenericGameplayTaskDelegate__DelegateSignature();
	GAMEPLAYTAGS_API class UScriptStruct* Z_Construct_UScriptStruct_FGameplayTag();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FEditedDocumentInfo();
	ENGINE_API class UClass* Z_Construct_UClass_UEdGraph_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UDataAsset();
	GAMEPLAYTAGS_API class UScriptStruct* Z_Construct_UScriptStruct_FGameplayTagContainer();
	GAMEPLAYTAGS_API class UEnum* Z_Construct_UEnum_GameplayTags_EGameplayContainerMatchType();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ECollisionChannel();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ETraceTypeQuery();
	ENGINE_API class UClass* Z_Construct_UClass_USkeletalMeshComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UAnimationAsset_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USoundCue_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UWorld_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UPrimitiveComponent();
	ENGINE_API class UClass* Z_Construct_UClass_ACharacter();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FNavAvoidanceMask();
	ENGINE_API class UClass* Z_Construct_UClass_UCharacterMovementComponent_NoRegister();

	AIMODULE_API class UEnum* Z_Construct_UEnum_AIModule_EAILockSource();
	AIMODULE_API class UEnum* Z_Construct_UEnum_AIModule_EAIRequestPriority();
	AIMODULE_API class UEnum* Z_Construct_UEnum_AIModule_EPawnActionEventType();
	AIMODULE_API class UEnum* Z_Construct_UEnum_AIModule_EPawnActionResult();
	AIMODULE_API class UEnum* Z_Construct_UEnum_AIModule_EPawnActionAbortState();
	AIMODULE_API class UEnum* Z_Construct_UEnum_AIModule_EAIOptionFlag();
	AIMODULE_API class UScriptStruct* Z_Construct_UScriptStruct_FAIMoveRequest();
	AIMODULE_API class UScriptStruct* Z_Construct_UScriptStruct_FAIRequestID();
	AIMODULE_API class UClass* Z_Construct_UClass_UAIResourceInterface_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UAIResourceInterface();
	AIMODULE_API class UEnum* Z_Construct_UEnum_AIModule_EPathFollowingRequestResult();
	AIMODULE_API class UEnum* Z_Construct_UEnum_AIModule_EPathFollowingAction();
	AIMODULE_API class UEnum* Z_Construct_UEnum_AIModule_EPathFollowingResult();
	AIMODULE_API class UEnum* Z_Construct_UEnum_AIModule_EPathFollowingStatus();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UPathFollowingComponent_GetPathActionType();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UPathFollowingComponent_GetPathDestination();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UPathFollowingComponent_OnActorBump();
	AIMODULE_API class UClass* Z_Construct_UClass_UPathFollowingComponent_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UPathFollowingComponent();
	AIMODULE_API class UFunction* Z_Construct_UDelegateFunction_AIModule_OAISimpleDelegate__DelegateSignature();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UAIAsyncTaskBlueprintProxy_OnMoveCompleted();
	AIMODULE_API class UClass* Z_Construct_UClass_UAIAsyncTaskBlueprintProxy_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UAIAsyncTaskBlueprintProxy();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UAIBlueprintHelperLibrary_CreateMoveToProxyObject();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UAIBlueprintHelperLibrary_GetAIController();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UAIBlueprintHelperLibrary_GetBlackboard();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UAIBlueprintHelperLibrary_IsValidAIDirection();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UAIBlueprintHelperLibrary_IsValidAILocation();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UAIBlueprintHelperLibrary_IsValidAIRotation();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UAIBlueprintHelperLibrary_LockAIResourcesWithAnimation();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UAIBlueprintHelperLibrary_SendAIMessage();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UAIBlueprintHelperLibrary_SpawnAIFromClass();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UAIBlueprintHelperLibrary_UnlockAIResourcesWithAnimation();
	AIMODULE_API class UClass* Z_Construct_UClass_UAIBlueprintHelperLibrary_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UAIBlueprintHelperLibrary();
	AIMODULE_API class UScriptStruct* Z_Construct_UScriptStruct_FPawnActionStack();
	AIMODULE_API class UScriptStruct* Z_Construct_UScriptStruct_FPawnActionEvent();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UPawnActionsComponent_K2_AbortAction();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UPawnActionsComponent_K2_ForceAbortAction();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UPawnActionsComponent_K2_PerformAction();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UPawnActionsComponent_K2_PushAction();
	AIMODULE_API class UClass* Z_Construct_UClass_UPawnActionsComponent_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UPawnActionsComponent();
	AIMODULE_API class UClass* Z_Construct_UClass_UAIPerceptionListenerInterface_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UAIPerceptionListenerInterface();
	AIMODULE_API class UEnum* Z_Construct_UEnum_AIModule_EBTFlowAbortMode();
	AIMODULE_API class UEnum* Z_Construct_UEnum_AIModule_EBTNodeResult();
	AIMODULE_API class UScriptStruct* Z_Construct_UScriptStruct_FBlackboardKeySelector();
	AIMODULE_API class UClass* Z_Construct_UClass_UBehaviorTreeTypes_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UBehaviorTreeTypes();
	AIMODULE_API class UEnum* Z_Construct_UEnum_AIModule_ETeamAttitude();
	AIMODULE_API class UScriptStruct* Z_Construct_UScriptStruct_FGenericTeamId();
	AIMODULE_API class UClass* Z_Construct_UClass_UGenericTeamAgentInterface_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UGenericTeamAgentInterface();
	AIMODULE_API class UFunction* Z_Construct_UDelegateFunction_AIModule_AIMoveCompletedSignature__DelegateSignature();
	AIMODULE_API class UFunction* Z_Construct_UFunction_AAIController_GetAIPerceptionComponent();
	AIMODULE_API class UFunction* Z_Construct_UFunction_AAIController_GetFocalPoint();
	AIMODULE_API class UFunction* Z_Construct_UFunction_AAIController_GetFocalPointOnActor();
	AIMODULE_API class UFunction* Z_Construct_UFunction_AAIController_GetFocusActor();
	AIMODULE_API class UFunction* Z_Construct_UFunction_AAIController_GetImmediateMoveDestination();
	AIMODULE_API class UFunction* Z_Construct_UFunction_AAIController_GetMoveStatus();
	AIMODULE_API class UFunction* Z_Construct_UFunction_AAIController_GetPathFollowingComponent();
	AIMODULE_API class UFunction* Z_Construct_UFunction_AAIController_HasPartialPath();
	AIMODULE_API class UFunction* Z_Construct_UFunction_AAIController_K2_ClearFocus();
	AIMODULE_API class UFunction* Z_Construct_UFunction_AAIController_K2_SetFocalPoint();
	AIMODULE_API class UFunction* Z_Construct_UFunction_AAIController_K2_SetFocus();
	AIMODULE_API class UFunction* Z_Construct_UFunction_AAIController_MoveToActor();
	AIMODULE_API class UFunction* Z_Construct_UFunction_AAIController_MoveToLocation();
	AIMODULE_API class UFunction* Z_Construct_UFunction_AAIController_OnGameplayTaskResourcesClaimed();
	AIMODULE_API class UFunction* Z_Construct_UFunction_AAIController_OnPossess();
	AIMODULE_API class UFunction* Z_Construct_UFunction_AAIController_OnUsingBlackBoard();
	AIMODULE_API class UFunction* Z_Construct_UFunction_AAIController_RunBehaviorTree();
	AIMODULE_API class UFunction* Z_Construct_UFunction_AAIController_SetMoveBlockDetection();
	AIMODULE_API class UFunction* Z_Construct_UFunction_AAIController_UseBlackboard();
	AIMODULE_API class UClass* Z_Construct_UClass_AAIController_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_AAIController();
	AIMODULE_API class UClass* Z_Construct_UClass_ADetourCrowdAIController_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_ADetourCrowdAIController();
	AIMODULE_API class UScriptStruct* Z_Construct_UScriptStruct_FAIDataProviderBoolValue();
	AIMODULE_API class UScriptStruct* Z_Construct_UScriptStruct_FAIDataProviderFloatValue();
	AIMODULE_API class UScriptStruct* Z_Construct_UScriptStruct_FAIDataProviderIntValue();
	AIMODULE_API class UScriptStruct* Z_Construct_UScriptStruct_FAIDataProviderStructValue();
	AIMODULE_API class UScriptStruct* Z_Construct_UScriptStruct_FAIDataProviderTypedValue();
	AIMODULE_API class UScriptStruct* Z_Construct_UScriptStruct_FAIDataProviderValue();
	AIMODULE_API class UClass* Z_Construct_UClass_UAIDataProvider_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UAIDataProvider();
	AIMODULE_API class UClass* Z_Construct_UClass_UAIDataProvider_QueryParams_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UAIDataProvider_QueryParams();
	AIMODULE_API class UClass* Z_Construct_UClass_UAIHotSpotManager_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UAIHotSpotManager();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UAISystem_AIIgnorePlayers();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UAISystem_AILoggingVerbose();
	AIMODULE_API class UClass* Z_Construct_UClass_UAISystem_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UAISystem();
	AIMODULE_API class UEnum* Z_Construct_UEnum_AIModule_EAISenseNotifyType();
	AIMODULE_API class UScriptStruct* Z_Construct_UScriptStruct_FAISenseAffiliationFilter();
	AIMODULE_API class UScriptStruct* Z_Construct_UScriptStruct_FAIStimulus();
	AIMODULE_API class UClass* Z_Construct_UClass_UAISense_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UAISense();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UAIPerceptionSystem_GetSenseClassForStimulus();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UAIPerceptionSystem_OnPerceptionStimuliSourceEndPlay();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UAIPerceptionSystem_RegisterPerceptionStimuliSource();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UAIPerceptionSystem_ReportEvent();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UAIPerceptionSystem_ReportPerceptionEvent();
	AIMODULE_API class UClass* Z_Construct_UClass_UAIPerceptionSystem_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UAIPerceptionSystem();
	AIMODULE_API class UFunction* Z_Construct_UDelegateFunction_AIModule_ActorPerceptionUpdatedDelegate__DelegateSignature();
	AIMODULE_API class UFunction* Z_Construct_UDelegateFunction_AIModule_PerceptionUpdatedDelegate__DelegateSignature();
	AIMODULE_API class UScriptStruct* Z_Construct_UScriptStruct_FActorPerceptionBlueprintInfo();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UAIPerceptionComponent_GetActorsPerception();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UAIPerceptionComponent_GetPerceivedActors();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UAIPerceptionComponent_GetPerceivedHostileActors();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UAIPerceptionComponent_OnOwnerEndPlay();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UAIPerceptionComponent_RequestStimuliListenerUpdate();
	AIMODULE_API class UClass* Z_Construct_UClass_UAIPerceptionComponent_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UAIPerceptionComponent();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UAIPerceptionStimuliSourceComponent_RegisterForSense();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UAIPerceptionStimuliSourceComponent_RegisterWithPerceptionSystem();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UAIPerceptionStimuliSourceComponent_UnregisterFromPerceptionSystem();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UAIPerceptionStimuliSourceComponent_UnregisterFromSense();
	AIMODULE_API class UClass* Z_Construct_UClass_UAIPerceptionStimuliSourceComponent_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UAIPerceptionStimuliSourceComponent();
	AIMODULE_API class UClass* Z_Construct_UClass_UAIResource_Movement_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UAIResource_Movement();
	AIMODULE_API class UClass* Z_Construct_UClass_UAIResource_Logic_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UAIResource_Logic();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UAISense_Blueprint_GetAllListenerActors();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UAISense_Blueprint_GetAllListenerComponents();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UAISense_Blueprint_K2_OnNewPawn();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UAISense_Blueprint_OnListenerRegistered();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UAISense_Blueprint_OnListenerUnregistered();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UAISense_Blueprint_OnListenerUpdated();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UAISense_Blueprint_OnUpdate();
	AIMODULE_API class UClass* Z_Construct_UClass_UAISense_Blueprint_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UAISense_Blueprint();
	AIMODULE_API class UScriptStruct* Z_Construct_UScriptStruct_FAIDamageEvent();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UAISense_Damage_ReportDamageEvent();
	AIMODULE_API class UClass* Z_Construct_UClass_UAISense_Damage_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UAISense_Damage();
	AIMODULE_API class UScriptStruct* Z_Construct_UScriptStruct_FAINoiseEvent();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UAISense_Hearing_ReportNoiseEvent();
	AIMODULE_API class UClass* Z_Construct_UClass_UAISense_Hearing_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UAISense_Hearing();
	AIMODULE_API class UScriptStruct* Z_Construct_UScriptStruct_FAIPredictionEvent();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UAISense_Prediction_RequestControllerPredictionEvent();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UAISense_Prediction_RequestPawnPredictionEvent();
	AIMODULE_API class UClass* Z_Construct_UClass_UAISense_Prediction_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UAISense_Prediction();
	AIMODULE_API class UScriptStruct* Z_Construct_UScriptStruct_FAISightEvent();
	AIMODULE_API class UClass* Z_Construct_UClass_UAISense_Sight_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UAISense_Sight();
	AIMODULE_API class UScriptStruct* Z_Construct_UScriptStruct_FAITeamStimulusEvent();
	AIMODULE_API class UClass* Z_Construct_UClass_UAISense_Team_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UAISense_Team();
	AIMODULE_API class UScriptStruct* Z_Construct_UScriptStruct_FAITouchEvent();
	AIMODULE_API class UClass* Z_Construct_UClass_UAISense_Touch_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UAISense_Touch();
	AIMODULE_API class UClass* Z_Construct_UClass_UAISenseBlueprintListener_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UAISenseBlueprintListener();
	AIMODULE_API class UClass* Z_Construct_UClass_UAISenseConfig_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UAISenseConfig();
	AIMODULE_API class UClass* Z_Construct_UClass_UAISenseConfig_Blueprint_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UAISenseConfig_Blueprint();
	AIMODULE_API class UClass* Z_Construct_UClass_UAISenseConfig_Damage_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UAISenseConfig_Damage();
	AIMODULE_API class UClass* Z_Construct_UClass_UAISenseConfig_Hearing_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UAISenseConfig_Hearing();
	AIMODULE_API class UClass* Z_Construct_UClass_UAISenseConfig_Prediction_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UAISenseConfig_Prediction();
	AIMODULE_API class UClass* Z_Construct_UClass_UAISenseConfig_Sight_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UAISenseConfig_Sight();
	AIMODULE_API class UClass* Z_Construct_UClass_UAISenseConfig_Team_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UAISenseConfig_Team();
	AIMODULE_API class UClass* Z_Construct_UClass_UAISenseConfig_Touch_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UAISenseConfig_Touch();
	AIMODULE_API class UClass* Z_Construct_UClass_UAISenseEvent_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UAISenseEvent();
	AIMODULE_API class UClass* Z_Construct_UClass_UAISenseEvent_Damage_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UAISenseEvent_Damage();
	AIMODULE_API class UClass* Z_Construct_UClass_UAISenseEvent_Hearing_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UAISenseEvent_Hearing();
	AIMODULE_API class UClass* Z_Construct_UClass_UAISightTargetInterface_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UAISightTargetInterface();
	AIMODULE_API class UEnum* Z_Construct_UEnum_AIModule_EAITaskPriority();
	AIMODULE_API class UClass* Z_Construct_UClass_UAITask_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UAITask();
	AIMODULE_API class UFunction* Z_Construct_UDelegateFunction_AIModule_MoveTaskCompletedSignature__DelegateSignature();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UAITask_MoveTo_AIMoveTo();
	AIMODULE_API class UClass* Z_Construct_UClass_UAITask_MoveTo_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UAITask_MoveTo();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UBrainComponent_RestartLogic();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UBrainComponent_StopLogic();
	AIMODULE_API class UClass* Z_Construct_UClass_UBrainComponent_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UBrainComponent();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UBehaviorTreeComponent_AddCooldownTagDuration();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UBehaviorTreeComponent_GetTagCooldownEndTime();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UBehaviorTreeComponent_SetDynamicSubtree();
	AIMODULE_API class UClass* Z_Construct_UClass_UBehaviorTreeComponent_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UBehaviorTreeComponent();
	AIMODULE_API class UClass* Z_Construct_UClass_UBTNode_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UBTNode();
	AIMODULE_API class UEnum* Z_Construct_UEnum_AIModule_EBTDecoratorLogic();
	AIMODULE_API class UEnum* Z_Construct_UEnum_AIModule_EBTChildIndex();
	AIMODULE_API class UScriptStruct* Z_Construct_UScriptStruct_FBTCompositeChild();
	AIMODULE_API class UScriptStruct* Z_Construct_UScriptStruct_FBTDecoratorLogic();
	AIMODULE_API class UClass* Z_Construct_UClass_UBTCompositeNode_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UBTCompositeNode();
	AIMODULE_API class UClass* Z_Construct_UClass_UBTTaskNode_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UBTTaskNode();
	AIMODULE_API class UClass* Z_Construct_UClass_UBehaviorTree_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UBehaviorTree();
	AIMODULE_API class UScriptStruct* Z_Construct_UScriptStruct_FBehaviorTreeTemplateInfo();
	AIMODULE_API class UClass* Z_Construct_UClass_UBehaviorTreeManager_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UBehaviorTreeManager();
	AIMODULE_API class UEnum* Z_Construct_UEnum_AIModule_ETextKeyOperation();
	AIMODULE_API class UEnum* Z_Construct_UEnum_AIModule_EArithmeticKeyOperation();
	AIMODULE_API class UEnum* Z_Construct_UEnum_AIModule_EBasicKeyOperation();
	AIMODULE_API class UClass* Z_Construct_UClass_UBlackboardKeyType_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UBlackboardKeyType();
	AIMODULE_API class UClass* Z_Construct_UClass_UBlackboardKeyType_Enum_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UBlackboardKeyType_Enum();
	AIMODULE_API class UClass* Z_Construct_UClass_UBlackboardKeyType_NativeEnum_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UBlackboardKeyType_NativeEnum();
	AIMODULE_API class UScriptStruct* Z_Construct_UScriptStruct_FBlackboardEntry();
	AIMODULE_API class UClass* Z_Construct_UClass_UBlackboardData_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UBlackboardData();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UBlackboardComponent_ClearValue();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UBlackboardComponent_ClearValueAsRotator();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UBlackboardComponent_ClearValueAsVector();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UBlackboardComponent_GetLocationFromEntry();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UBlackboardComponent_GetRotationFromEntry();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UBlackboardComponent_GetValueAsBool();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UBlackboardComponent_GetValueAsClass();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UBlackboardComponent_GetValueAsEnum();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UBlackboardComponent_GetValueAsFloat();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UBlackboardComponent_GetValueAsInt();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UBlackboardComponent_GetValueAsName();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UBlackboardComponent_GetValueAsObject();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UBlackboardComponent_GetValueAsRotator();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UBlackboardComponent_GetValueAsString();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UBlackboardComponent_GetValueAsVector();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UBlackboardComponent_IsVectorValueSet();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UBlackboardComponent_SetValueAsBool();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UBlackboardComponent_SetValueAsClass();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UBlackboardComponent_SetValueAsEnum();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UBlackboardComponent_SetValueAsFloat();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UBlackboardComponent_SetValueAsInt();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UBlackboardComponent_SetValueAsName();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UBlackboardComponent_SetValueAsObject();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UBlackboardComponent_SetValueAsRotator();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UBlackboardComponent_SetValueAsString();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UBlackboardComponent_SetValueAsVector();
	AIMODULE_API class UClass* Z_Construct_UClass_UBlackboardComponent_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UBlackboardComponent();
	AIMODULE_API class UClass* Z_Construct_UClass_UBlackboardKeyType_Bool_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UBlackboardKeyType_Bool();
	AIMODULE_API class UClass* Z_Construct_UClass_UBlackboardKeyType_Class_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UBlackboardKeyType_Class();
	AIMODULE_API class UClass* Z_Construct_UClass_UBlackboardKeyType_Float_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UBlackboardKeyType_Float();
	AIMODULE_API class UClass* Z_Construct_UClass_UBlackboardKeyType_Int_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UBlackboardKeyType_Int();
	AIMODULE_API class UClass* Z_Construct_UClass_UBlackboardKeyType_Name_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UBlackboardKeyType_Name();
	AIMODULE_API class UClass* Z_Construct_UClass_UBlackboardKeyType_Object_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UBlackboardKeyType_Object();
	AIMODULE_API class UClass* Z_Construct_UClass_UBlackboardKeyType_Rotator_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UBlackboardKeyType_Rotator();
	AIMODULE_API class UClass* Z_Construct_UClass_UBlackboardKeyType_String_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UBlackboardKeyType_String();
	AIMODULE_API class UClass* Z_Construct_UClass_UBlackboardKeyType_Vector_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UBlackboardKeyType_Vector();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UBTFunctionLibrary_ClearBlackboardValue();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UBTFunctionLibrary_ClearBlackboardValueAsVector();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UBTFunctionLibrary_GetBlackboardValueAsActor();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UBTFunctionLibrary_GetBlackboardValueAsBool();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UBTFunctionLibrary_GetBlackboardValueAsClass();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UBTFunctionLibrary_GetBlackboardValueAsEnum();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UBTFunctionLibrary_GetBlackboardValueAsFloat();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UBTFunctionLibrary_GetBlackboardValueAsInt();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UBTFunctionLibrary_GetBlackboardValueAsName();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UBTFunctionLibrary_GetBlackboardValueAsObject();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UBTFunctionLibrary_GetBlackboardValueAsRotator();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UBTFunctionLibrary_GetBlackboardValueAsString();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UBTFunctionLibrary_GetBlackboardValueAsVector();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UBTFunctionLibrary_GetOwnerComponent();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UBTFunctionLibrary_GetOwnersBlackboard();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UBTFunctionLibrary_SetBlackboardValueAsBool();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UBTFunctionLibrary_SetBlackboardValueAsClass();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UBTFunctionLibrary_SetBlackboardValueAsEnum();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UBTFunctionLibrary_SetBlackboardValueAsFloat();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UBTFunctionLibrary_SetBlackboardValueAsInt();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UBTFunctionLibrary_SetBlackboardValueAsName();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UBTFunctionLibrary_SetBlackboardValueAsObject();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UBTFunctionLibrary_SetBlackboardValueAsRotator();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UBTFunctionLibrary_SetBlackboardValueAsString();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UBTFunctionLibrary_SetBlackboardValueAsVector();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UBTFunctionLibrary_StartUsingExternalEvent();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UBTFunctionLibrary_StopUsingExternalEvent();
	AIMODULE_API class UClass* Z_Construct_UClass_UBTFunctionLibrary_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UBTFunctionLibrary();
	AIMODULE_API class UClass* Z_Construct_UClass_UBTAuxiliaryNode_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UBTAuxiliaryNode();
	AIMODULE_API class UClass* Z_Construct_UClass_UBTDecorator_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UBTDecorator();
	AIMODULE_API class UClass* Z_Construct_UClass_UBTDecorator_BlackboardBase_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UBTDecorator_BlackboardBase();
	AIMODULE_API class UEnum* Z_Construct_UEnum_AIModule_EBTBlackboardRestart();
	AIMODULE_API class UClass* Z_Construct_UClass_UBTDecorator_Blackboard_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UBTDecorator_Blackboard();
	AIMODULE_API class UClass* Z_Construct_UClass_UBTDecorator_ConditionalLoop_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UBTDecorator_ConditionalLoop();
	AIMODULE_API class UClass* Z_Construct_UClass_UBTDecorator_IsAtLocation_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UBTDecorator_IsAtLocation();
	AIMODULE_API class UClass* Z_Construct_UClass_UBTDecorator_IsBBEntryOfClass_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UBTDecorator_IsBBEntryOfClass();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UBTDecorator_BlueprintBase_FinishConditionCheck();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UBTDecorator_BlueprintBase_IsDecoratorExecutionActive();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UBTDecorator_BlueprintBase_IsDecoratorObserverActive();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UBTDecorator_BlueprintBase_PerformConditionCheck();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UBTDecorator_BlueprintBase_PerformConditionCheckAI();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UBTDecorator_BlueprintBase_ReceiveConditionCheck();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UBTDecorator_BlueprintBase_ReceiveExecutionFinish();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UBTDecorator_BlueprintBase_ReceiveExecutionFinishAI();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UBTDecorator_BlueprintBase_ReceiveExecutionStart();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UBTDecorator_BlueprintBase_ReceiveExecutionStartAI();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UBTDecorator_BlueprintBase_ReceiveObserverActivated();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UBTDecorator_BlueprintBase_ReceiveObserverActivatedAI();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UBTDecorator_BlueprintBase_ReceiveObserverDeactivated();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UBTDecorator_BlueprintBase_ReceiveObserverDeactivatedAI();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UBTDecorator_BlueprintBase_ReceiveTick();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UBTDecorator_BlueprintBase_ReceiveTickAI();
	AIMODULE_API class UClass* Z_Construct_UClass_UBTDecorator_BlueprintBase_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UBTDecorator_BlueprintBase();
	AIMODULE_API class UClass* Z_Construct_UClass_UBTDecorator_CheckGameplayTagsOnActor_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UBTDecorator_CheckGameplayTagsOnActor();
	AIMODULE_API class UEnum* Z_Construct_UEnum_AIModule_EBlackBoardEntryComparison();
	AIMODULE_API class UClass* Z_Construct_UClass_UBTDecorator_CompareBBEntries_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UBTDecorator_CompareBBEntries();
	AIMODULE_API class UClass* Z_Construct_UClass_UBTDecorator_ConeCheck_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UBTDecorator_ConeCheck();
	AIMODULE_API class UClass* Z_Construct_UClass_UBTDecorator_Cooldown_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UBTDecorator_Cooldown();
	AIMODULE_API class UEnum* Z_Construct_UEnum_AIModule_EPathExistanceQueryType();
	AIMODULE_API class UClass* Z_Construct_UClass_UBTDecorator_DoesPathExist_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UBTDecorator_DoesPathExist();
	AIMODULE_API class UClass* Z_Construct_UClass_UBTDecorator_ForceSuccess_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UBTDecorator_ForceSuccess();
	AIMODULE_API class UClass* Z_Construct_UClass_UBTDecorator_KeepInCone_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UBTDecorator_KeepInCone();
	AIMODULE_API class UClass* Z_Construct_UClass_UBTDecorator_Loop_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UBTDecorator_Loop();
	AIMODULE_API class UClass* Z_Construct_UClass_UBTDecorator_ReachedMoveGoal_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UBTDecorator_ReachedMoveGoal();
	AIMODULE_API class UClass* Z_Construct_UClass_UBTDecorator_SetTagCooldown_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UBTDecorator_SetTagCooldown();
	AIMODULE_API class UClass* Z_Construct_UClass_UBTDecorator_TagCooldown_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UBTDecorator_TagCooldown();
	AIMODULE_API class UClass* Z_Construct_UClass_UBTDecorator_TimeLimit_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UBTDecorator_TimeLimit();
	AIMODULE_API class UClass* Z_Construct_UClass_UBTService_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UBTService();
	AIMODULE_API class UClass* Z_Construct_UClass_UBTService_BlackboardBase_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UBTService_BlackboardBase();
	AIMODULE_API class UClass* Z_Construct_UClass_UBTService_DefaultFocus_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UBTService_DefaultFocus();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UBTService_BlueprintBase_IsServiceActive();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UBTService_BlueprintBase_ReceiveActivation();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UBTService_BlueprintBase_ReceiveActivationAI();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UBTService_BlueprintBase_ReceiveDeactivation();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UBTService_BlueprintBase_ReceiveDeactivationAI();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UBTService_BlueprintBase_ReceiveSearchStart();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UBTService_BlueprintBase_ReceiveSearchStartAI();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UBTService_BlueprintBase_ReceiveTick();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UBTService_BlueprintBase_ReceiveTickAI();
	AIMODULE_API class UClass* Z_Construct_UClass_UBTService_BlueprintBase_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UBTService_BlueprintBase();
	AIMODULE_API class UClass* Z_Construct_UClass_UBTComposite_Selector_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UBTComposite_Selector();
	AIMODULE_API class UClass* Z_Construct_UClass_UBTComposite_Sequence_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UBTComposite_Sequence();
	AIMODULE_API class UEnum* Z_Construct_UEnum_AIModule_EBTParallelMode();
	AIMODULE_API class UClass* Z_Construct_UClass_UBTComposite_SimpleParallel_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UBTComposite_SimpleParallel();
	AIMODULE_API class UClass* Z_Construct_UClass_UBTTask_BlackboardBase_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UBTTask_BlackboardBase();
	AIMODULE_API class UClass* Z_Construct_UClass_UBTTask_MoveDirectlyToward_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UBTTask_MoveDirectlyToward();
	AIMODULE_API class UClass* Z_Construct_UClass_UBTTask_MoveTo_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UBTTask_MoveTo();
	AIMODULE_API class UClass* Z_Construct_UClass_UBTTask_RotateToFaceBBEntry_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UBTTask_RotateToFaceBBEntry();
	AIMODULE_API class UClass* Z_Construct_UClass_UEnvQueryItemType_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UEnvQueryItemType();
	AIMODULE_API class UClass* Z_Construct_UClass_UEnvQueryContext_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UEnvQueryContext();
	AIMODULE_API class UEnum* Z_Construct_UEnum_AIModule_EEnvQueryTestClamping();
	AIMODULE_API class UEnum* Z_Construct_UEnum_AIModule_EEnvDirection();
	AIMODULE_API class UEnum* Z_Construct_UEnum_AIModule_EEnvTraceShape();
	AIMODULE_API class UEnum* Z_Construct_UEnum_AIModule_EEnvQueryTrace();
	AIMODULE_API class UEnum* Z_Construct_UEnum_AIModule_EEnvQueryParam();
	AIMODULE_API class UEnum* Z_Construct_UEnum_AIModule_EEnvQueryRunMode();
	AIMODULE_API class UEnum* Z_Construct_UEnum_AIModule_EEnvQueryStatus();
	AIMODULE_API class UEnum* Z_Construct_UEnum_AIModule_EEnvTestScoreOperator();
	AIMODULE_API class UEnum* Z_Construct_UEnum_AIModule_EEnvTestFilterOperator();
	AIMODULE_API class UEnum* Z_Construct_UEnum_AIModule_EEnvTestCost();
	AIMODULE_API class UEnum* Z_Construct_UEnum_AIModule_EEnvTestWeight();
	AIMODULE_API class UEnum* Z_Construct_UEnum_AIModule_EEnvTestScoreEquation();
	AIMODULE_API class UEnum* Z_Construct_UEnum_AIModule_EEnvTestFilterType();
	AIMODULE_API class UEnum* Z_Construct_UEnum_AIModule_EEnvTestPurpose();
	AIMODULE_API class UScriptStruct* Z_Construct_UScriptStruct_FEnvBoolParam();
	AIMODULE_API class UScriptStruct* Z_Construct_UScriptStruct_FEnvIntParam();
	AIMODULE_API class UScriptStruct* Z_Construct_UScriptStruct_FEnvFloatParam();
	AIMODULE_API class UScriptStruct* Z_Construct_UScriptStruct_FEnvBoolParam_DEPRECATED();
	AIMODULE_API class UScriptStruct* Z_Construct_UScriptStruct_FEnvIntParam_DEPRECATED();
	AIMODULE_API class UScriptStruct* Z_Construct_UScriptStruct_FEnvFloatParam_DEPRECATED();
	AIMODULE_API class UScriptStruct* Z_Construct_UScriptStruct_FEnvQueryResult();
	AIMODULE_API class UScriptStruct* Z_Construct_UScriptStruct_FEnvTraceData();
	AIMODULE_API class UScriptStruct* Z_Construct_UScriptStruct_FEnvDirection();
	AIMODULE_API class UScriptStruct* Z_Construct_UScriptStruct_FEnvNamedValue();
	AIMODULE_API class UClass* Z_Construct_UClass_UEnvQueryTypes_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UEnvQueryTypes();
	AIMODULE_API class UClass* Z_Construct_UClass_UBTTask_RunEQSQuery_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UBTTask_RunEQSQuery();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UBTTask_BlueprintBase_FinishAbort();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UBTTask_BlueprintBase_FinishExecute();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UBTTask_BlueprintBase_IsTaskAborting();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UBTTask_BlueprintBase_IsTaskExecuting();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UBTTask_BlueprintBase_ReceiveAbort();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UBTTask_BlueprintBase_ReceiveAbortAI();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UBTTask_BlueprintBase_ReceiveExecute();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UBTTask_BlueprintBase_ReceiveExecuteAI();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UBTTask_BlueprintBase_ReceiveTick();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UBTTask_BlueprintBase_ReceiveTickAI();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UBTTask_BlueprintBase_SetFinishOnMessage();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UBTTask_BlueprintBase_SetFinishOnMessageWithId();
	AIMODULE_API class UClass* Z_Construct_UClass_UBTTask_BlueprintBase_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UBTTask_BlueprintBase();
	AIMODULE_API class UClass* Z_Construct_UClass_UBTTask_MakeNoise_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UBTTask_MakeNoise();
	AIMODULE_API class UEnum* Z_Construct_UEnum_AIModule_EPawnActionFailHandling();
	AIMODULE_API class UEnum* Z_Construct_UEnum_AIModule_EPawnSubActionTriggeringPolicy();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UPawnAction_CreateActionInstance();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UPawnAction_Finish();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UPawnAction_GetActionPriority();
	AIMODULE_API class UClass* Z_Construct_UClass_UPawnAction_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UPawnAction();
	AIMODULE_API class UClass* Z_Construct_UClass_UBTTask_PawnActionBase_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UBTTask_PawnActionBase();
	AIMODULE_API class UClass* Z_Construct_UClass_UBTTask_PushPawnAction_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UBTTask_PushPawnAction();
	AIMODULE_API class UClass* Z_Construct_UClass_UBTTask_PlayAnimation_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UBTTask_PlayAnimation();
	AIMODULE_API class UClass* Z_Construct_UClass_UBTTask_PlaySound_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UBTTask_PlaySound();
	AIMODULE_API class UClass* Z_Construct_UClass_UBTTask_RunBehavior_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UBTTask_RunBehavior();
	AIMODULE_API class UClass* Z_Construct_UClass_UBTTask_RunBehaviorDynamic_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UBTTask_RunBehaviorDynamic();
	AIMODULE_API class UClass* Z_Construct_UClass_UBTTask_SetTagCooldown_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UBTTask_SetTagCooldown();
	AIMODULE_API class UClass* Z_Construct_UClass_UBTTask_Wait_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UBTTask_Wait();
	AIMODULE_API class UClass* Z_Construct_UClass_UBTTask_WaitBlackboardTime_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UBTTask_WaitBlackboardTime();
	AIMODULE_API class UClass* Z_Construct_UClass_UCrowdAgentInterface_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UCrowdAgentInterface();
	AIMODULE_API class UScriptStruct* Z_Construct_UScriptStruct_FCrowdAvoidanceSamplingPattern();
	AIMODULE_API class UScriptStruct* Z_Construct_UScriptStruct_FCrowdAvoidanceConfig();
	AIMODULE_API class UClass* Z_Construct_UClass_UCrowdManager_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UCrowdManager();
	AIMODULE_API class UClass* Z_Construct_UClass_UEnvQuery_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UEnvQuery();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UEnvQueryContext_BlueprintBase_ProvideActorsSet();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UEnvQueryContext_BlueprintBase_ProvideLocationsSet();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UEnvQueryContext_BlueprintBase_ProvideSingleActor();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UEnvQueryContext_BlueprintBase_ProvideSingleLocation();
	AIMODULE_API class UClass* Z_Construct_UClass_UEnvQueryContext_BlueprintBase_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UEnvQueryContext_BlueprintBase();
	AIMODULE_API class UClass* Z_Construct_UClass_UEnvQueryContext_Item_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UEnvQueryContext_Item();
	AIMODULE_API class UClass* Z_Construct_UClass_UEnvQueryContext_Querier_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UEnvQueryContext_Querier();
	AIMODULE_API class UClass* Z_Construct_UClass_UVisualLoggerExtension_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UVisualLoggerExtension();
	AIMODULE_API class UClass* Z_Construct_UClass_UEnvQueryDebugHelpers_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UEnvQueryDebugHelpers();
	AIMODULE_API class UClass* Z_Construct_UClass_UEQSQueryResultSourceInterface_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UEQSQueryResultSourceInterface();
	AIMODULE_API class UFunction* Z_Construct_UDelegateFunction_UEnvQueryInstanceBlueprintWrapper_EQSQueryDoneSignature__DelegateSignature();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UEnvQueryInstanceBlueprintWrapper_GetItemScore();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UEnvQueryInstanceBlueprintWrapper_GetResultsAsActors();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UEnvQueryInstanceBlueprintWrapper_GetResultsAsLocations();
	AIMODULE_API class UClass* Z_Construct_UClass_UEnvQueryInstanceBlueprintWrapper_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UEnvQueryInstanceBlueprintWrapper();
	AIMODULE_API class UClass* Z_Construct_UClass_UEnvQueryItemType_VectorBase_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UEnvQueryItemType_VectorBase();
	AIMODULE_API class UClass* Z_Construct_UClass_UEnvQueryItemType_ActorBase_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UEnvQueryItemType_ActorBase();
	AIMODULE_API class UClass* Z_Construct_UClass_UEnvQueryItemType_Actor_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UEnvQueryItemType_Actor();
	AIMODULE_API class UClass* Z_Construct_UClass_UEnvQueryItemType_Direction_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UEnvQueryItemType_Direction();
	AIMODULE_API class UClass* Z_Construct_UClass_UEnvQueryItemType_Point_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UEnvQueryItemType_Point();
	AIMODULE_API class UScriptStruct* Z_Construct_UScriptStruct_FEnvQueryInstanceCache();
	AIMODULE_API class UScriptStruct* Z_Construct_UScriptStruct_FEnvQueryRequest();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UEnvQueryManager_RunEQSQuery();
	AIMODULE_API class UClass* Z_Construct_UClass_UEnvQueryManager_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UEnvQueryManager();
	AIMODULE_API class UClass* Z_Construct_UClass_UEnvQueryNode_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UEnvQueryNode();
	AIMODULE_API class UClass* Z_Construct_UClass_UEnvQueryGenerator_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UEnvQueryGenerator();
	AIMODULE_API class UClass* Z_Construct_UClass_UEnvQueryGenerator_ActorsOfClass_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UEnvQueryGenerator_ActorsOfClass();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UEnvQueryGenerator_BlueprintBase_AddGeneratedActor();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UEnvQueryGenerator_BlueprintBase_AddGeneratedVector();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UEnvQueryGenerator_BlueprintBase_DoItemGeneration();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UEnvQueryGenerator_BlueprintBase_GetQuerier();
	AIMODULE_API class UClass* Z_Construct_UClass_UEnvQueryGenerator_BlueprintBase_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UEnvQueryGenerator_BlueprintBase();
	AIMODULE_API class UClass* Z_Construct_UClass_UEnvQueryGenerator_Composite_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UEnvQueryGenerator_Composite();
	AIMODULE_API class UClass* Z_Construct_UClass_UEnvQueryGenerator_ProjectedPoints_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UEnvQueryGenerator_ProjectedPoints();
	AIMODULE_API class UClass* Z_Construct_UClass_UEnvQueryGenerator_Donut_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UEnvQueryGenerator_Donut();
	AIMODULE_API class UClass* Z_Construct_UClass_UEnvQueryGenerator_OnCircle_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UEnvQueryGenerator_OnCircle();
	AIMODULE_API class UClass* Z_Construct_UClass_UEnvQueryGenerator_SimpleGrid_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UEnvQueryGenerator_SimpleGrid();
	AIMODULE_API class UClass* Z_Construct_UClass_UEnvQueryGenerator_PathingGrid_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UEnvQueryGenerator_PathingGrid();
	AIMODULE_API class UClass* Z_Construct_UClass_UEnvQueryTest_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UEnvQueryTest();
	AIMODULE_API class UEnum* Z_Construct_UEnum_AIModule_EEnvTestDistance();
	AIMODULE_API class UClass* Z_Construct_UClass_UEnvQueryTest_Distance_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UEnvQueryTest_Distance();
	AIMODULE_API class UEnum* Z_Construct_UEnum_AIModule_EEnvTestDot();
	AIMODULE_API class UClass* Z_Construct_UClass_UEnvQueryTest_Dot_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UEnvQueryTest_Dot();
	AIMODULE_API class UClass* Z_Construct_UClass_UEnvQueryTest_GameplayTags_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UEnvQueryTest_GameplayTags();
	AIMODULE_API class UEnum* Z_Construct_UEnum_AIModule_EEnvTestPathfinding();
	AIMODULE_API class UClass* Z_Construct_UClass_UEnvQueryTest_Pathfinding_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UEnvQueryTest_Pathfinding();
	AIMODULE_API class UClass* Z_Construct_UClass_UEnvQueryTest_PathfindingBatch_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UEnvQueryTest_PathfindingBatch();
	AIMODULE_API class UClass* Z_Construct_UClass_UEnvQueryTest_Random_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UEnvQueryTest_Random();
	AIMODULE_API class UClass* Z_Construct_UClass_UEnvQueryTest_Trace_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UEnvQueryTest_Trace();
	AIMODULE_API class UClass* Z_Construct_UClass_UEnvQueryOption_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UEnvQueryOption();
	AIMODULE_API class UClass* Z_Construct_UClass_UEQSRenderingComponent_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UEQSRenderingComponent();
	AIMODULE_API class UEnum* Z_Construct_UEnum_AIModule_EEnvQueryHightlightMode();
	AIMODULE_API class UClass* Z_Construct_UClass_AEQSTestingPawn_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_AEQSTestingPawn();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UCrowdFollowingComponent_SuspendCrowdSteering();
	AIMODULE_API class UClass* Z_Construct_UClass_UCrowdFollowingComponent_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UCrowdFollowingComponent();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UPawnAction_BlueprintBase_ActionFinished();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UPawnAction_BlueprintBase_ActionPause();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UPawnAction_BlueprintBase_ActionResume();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UPawnAction_BlueprintBase_ActionStart();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UPawnAction_BlueprintBase_ActionTick();
	AIMODULE_API class UClass* Z_Construct_UClass_UPawnAction_BlueprintBase_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UPawnAction_BlueprintBase();
	AIMODULE_API class UEnum* Z_Construct_UEnum_AIModule_EPawnActionMoveMode();
	AIMODULE_API class UClass* Z_Construct_UClass_UPawnAction_Move_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UPawnAction_Move();
	AIMODULE_API class UClass* Z_Construct_UClass_UPawnAction_Repeat_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UPawnAction_Repeat();
	AIMODULE_API class UClass* Z_Construct_UClass_UPawnAction_Sequence_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UPawnAction_Sequence();
	AIMODULE_API class UClass* Z_Construct_UClass_UPawnAction_Wait_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UPawnAction_Wait();
	AIMODULE_API class UFunction* Z_Construct_UDelegateFunction_UPawnSensingComponent_HearNoiseDelegate__DelegateSignature();
	AIMODULE_API class UFunction* Z_Construct_UDelegateFunction_UPawnSensingComponent_SeePawnDelegate__DelegateSignature();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UPawnSensingComponent_GetPeripheralVisionAngle();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UPawnSensingComponent_GetPeripheralVisionCosine();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UPawnSensingComponent_SetPeripheralVisionAngle();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UPawnSensingComponent_SetSensingInterval();
	AIMODULE_API class UFunction* Z_Construct_UFunction_UPawnSensingComponent_SetSensingUpdatesEnabled();
	AIMODULE_API class UClass* Z_Construct_UClass_UPawnSensingComponent_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UPawnSensingComponent();
	AIMODULE_API class UPackage* Z_Construct_UPackage_AIModule();
	UEnum* Z_Construct_UEnum_AIModule_EAILockSource()
	{
		UPackage* Outer=Z_Construct_UPackage_AIModule();
		extern uint32 Get_Z_Construct_UEnum_AIModule_EAILockSource_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("EAILockSource"), 0, Get_Z_Construct_UEnum_AIModule_EAILockSource_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EAILockSource"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EAILockSource::Animation")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EAILockSource::Logic")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EAILockSource::Script")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EAILockSource::Gameplay")), 3));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EAILockSource::MAX")), 4));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EAILockSource::EAILockSource_MAX")), 5));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("MAX.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/AITypes.h"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_AIModule_EAILockSource_CRC() { return 3529302081U; }
	UEnum* Z_Construct_UEnum_AIModule_EAIRequestPriority()
	{
		UPackage* Outer=Z_Construct_UPackage_AIModule();
		extern uint32 Get_Z_Construct_UEnum_AIModule_EAIRequestPriority_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("EAIRequestPriority"), 0, Get_Z_Construct_UEnum_AIModule_EAIRequestPriority_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EAIRequestPriority"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EAIRequestPriority::SoftScript")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EAIRequestPriority::Logic")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EAIRequestPriority::HardScript")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EAIRequestPriority::Reaction")), 3));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EAIRequestPriority::Ultimate")), 4));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EAIRequestPriority::MAX")), 5));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EAIRequestPriority::EAIRequestPriority_MAX")), 6));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("HardScript.ToolTip"), TEXT("Actions LDs really want AI to perform."));
			MetaData->SetValue(ReturnEnum, TEXT("Logic.ToolTip"), TEXT("Actions AI wants to do due to its internal logic."));
			MetaData->SetValue(ReturnEnum, TEXT("MAX.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/AITypes.h"));
			MetaData->SetValue(ReturnEnum, TEXT("Reaction.ToolTip"), TEXT("Actions being result of game-world mechanics, like hit reactions, death, falling, etc. In general things not depending on what AI's thinking."));
			MetaData->SetValue(ReturnEnum, TEXT("SoftScript.ToolTip"), TEXT("Actions requested by Level Designers by placing AI-hinting elements on the map."));
			MetaData->SetValue(ReturnEnum, TEXT("Ultimate.ToolTip"), TEXT("Ultimate priority, to be used with caution, makes AI perform given action regardless of anything else (for example disabled reactions)."));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_AIModule_EAIRequestPriority_CRC() { return 4138242190U; }
	UEnum* Z_Construct_UEnum_AIModule_EPawnActionEventType()
	{
		UPackage* Outer=Z_Construct_UPackage_AIModule();
		extern uint32 Get_Z_Construct_UEnum_AIModule_EPawnActionEventType_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("EPawnActionEventType"), 0, Get_Z_Construct_UEnum_AIModule_EPawnActionEventType_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EPawnActionEventType"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EPawnActionEventType::Invalid")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EPawnActionEventType::FailedToStart")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EPawnActionEventType::InstantAbort")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EPawnActionEventType::FinishedAborting")), 3));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EPawnActionEventType::FinishedExecution")), 4));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EPawnActionEventType::Push")), 5));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EPawnActionEventType::EPawnActionEventType_MAX")), 6));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/AITypes.h"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_AIModule_EPawnActionEventType_CRC() { return 3908484669U; }
	UEnum* Z_Construct_UEnum_AIModule_EPawnActionResult()
	{
		UPackage* Outer=Z_Construct_UPackage_AIModule();
		extern uint32 Get_Z_Construct_UEnum_AIModule_EPawnActionResult_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("EPawnActionResult"), 0, Get_Z_Construct_UEnum_AIModule_EPawnActionResult_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EPawnActionResult"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EPawnActionResult::NotStarted")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EPawnActionResult::InProgress")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EPawnActionResult::Success")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EPawnActionResult::Failed")), 3));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EPawnActionResult::Aborted")), 4));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EPawnActionResult::EPawnActionResult_MAX")), 5));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/AITypes.h"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_AIModule_EPawnActionResult_CRC() { return 2763387572U; }
	UEnum* Z_Construct_UEnum_AIModule_EPawnActionAbortState()
	{
		UPackage* Outer=Z_Construct_UPackage_AIModule();
		extern uint32 Get_Z_Construct_UEnum_AIModule_EPawnActionAbortState_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("EPawnActionAbortState"), 0, Get_Z_Construct_UEnum_AIModule_EPawnActionAbortState_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EPawnActionAbortState"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EPawnActionAbortState::NeverStarted")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EPawnActionAbortState::NotBeingAborted")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EPawnActionAbortState::MarkPendingAbort")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EPawnActionAbortState::LatentAbortInProgress")), 3));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EPawnActionAbortState::AbortDone")), 4));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EPawnActionAbortState::MAX")), 5));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EPawnActionAbortState::EPawnActionAbortState_MAX")), 6));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("MarkPendingAbort.ToolTip"), TEXT("This means waiting for child to abort before aborting self."));
			MetaData->SetValue(ReturnEnum, TEXT("MAX.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/AITypes.h"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_AIModule_EPawnActionAbortState_CRC() { return 1284008552U; }
	UEnum* Z_Construct_UEnum_AIModule_EAIOptionFlag()
	{
		UPackage* Outer=Z_Construct_UPackage_AIModule();
		extern uint32 Get_Z_Construct_UEnum_AIModule_EAIOptionFlag_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("EAIOptionFlag"), 0, Get_Z_Construct_UEnum_AIModule_EAIOptionFlag_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EAIOptionFlag"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EAIOptionFlag::Default")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EAIOptionFlag::Enable")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EAIOptionFlag::Disable")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EAIOptionFlag::MAX")), 3));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EAIOptionFlag::EAIOptionFlag_MAX")), 4));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("Disable.DisplayName"), TEXT("No"));
			MetaData->SetValue(ReturnEnum, TEXT("Disable.ToolTip"), TEXT("UHT was complaining when tried to use True as value instead of Enable"));
			MetaData->SetValue(ReturnEnum, TEXT("Enable.DisplayName"), TEXT("Yes"));
			MetaData->SetValue(ReturnEnum, TEXT("MAX.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/AITypes.h"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_AIModule_EAIOptionFlag_CRC() { return 2684793248U; }
	UScriptStruct* Z_Construct_UScriptStruct_FAIMoveRequest()
	{
		UPackage* Outer=Z_Construct_UPackage_AIModule();
		extern uint32 Get_Z_Construct_UScriptStruct_FAIMoveRequest_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("AIMoveRequest"), sizeof(FAIMoveRequest), Get_Z_Construct_UScriptStruct_FAIMoveRequest_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("AIMoveRequest"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FAIMoveRequest>, EStructFlags(0x00000201));
			UProperty* NewProp_GoalActor = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("GoalActor"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(GoalActor, FAIMoveRequest), 0x0000080000000000, Z_Construct_UClass_AActor_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/AITypes.h"));
			MetaData->SetValue(NewProp_GoalActor, TEXT("ModuleRelativePath"), TEXT("Classes/AITypes.h"));
			MetaData->SetValue(NewProp_GoalActor, TEXT("ToolTip"), TEXT("move goal: actor"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FAIMoveRequest_CRC() { return 1576742502U; }
	UScriptStruct* Z_Construct_UScriptStruct_FAIRequestID()
	{
		UPackage* Outer=Z_Construct_UPackage_AIModule();
		extern uint32 Get_Z_Construct_UScriptStruct_FAIRequestID_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("AIRequestID"), sizeof(FAIRequestID), Get_Z_Construct_UScriptStruct_FAIRequestID_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("AIRequestID"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FAIRequestID>, EStructFlags(0x00000201));
			UProperty* NewProp_RequestID = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("RequestID"), RF_Public|RF_Transient|RF_Native) UUInt32Property(CPP_PROPERTY_BASE(RequestID, FAIRequestID), 0x0000000000000000);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/AITypes.h"));
			MetaData->SetValue(NewProp_RequestID, TEXT("ModuleRelativePath"), TEXT("Classes/AITypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FAIRequestID_CRC() { return 564210124U; }
	UClass* Z_Construct_UClass_UAIResourceInterface_NoRegister()
	{
		return UAIResourceInterface::StaticClass();
	}
	UClass* Z_Construct_UClass_UAIResourceInterface()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			UInterface::StaticClass();
			Z_Construct_UPackage_AIModule();
			OuterClass = UAIResourceInterface::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20084081;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("CannotImplementInterfaceInBlueprint"), TEXT(""));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAIResourceInterface(Z_Construct_UClass_UAIResourceInterface, TEXT("UAIResourceInterface"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAIResourceInterface);
	UEnum* Z_Construct_UEnum_AIModule_EPathFollowingRequestResult()
	{
		UPackage* Outer=Z_Construct_UPackage_AIModule();
		extern uint32 Get_Z_Construct_UEnum_AIModule_EPathFollowingRequestResult_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("EPathFollowingRequestResult"), 0, Get_Z_Construct_UEnum_AIModule_EPathFollowingRequestResult_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EPathFollowingRequestResult"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EPathFollowingRequestResult::Failed")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EPathFollowingRequestResult::AlreadyAtGoal")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EPathFollowingRequestResult::RequestSuccessful")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EPathFollowingRequestResult::EPathFollowingRequestResult_MAX")), 3));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/Navigation/PathFollowingComponent.h"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_AIModule_EPathFollowingRequestResult_CRC() { return 856582332U; }
	UEnum* Z_Construct_UEnum_AIModule_EPathFollowingAction()
	{
		UPackage* Outer=Z_Construct_UPackage_AIModule();
		extern uint32 Get_Z_Construct_UEnum_AIModule_EPathFollowingAction_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("EPathFollowingAction"), 0, Get_Z_Construct_UEnum_AIModule_EPathFollowingAction_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EPathFollowingAction"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EPathFollowingAction::Error")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EPathFollowingAction::NoMove")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EPathFollowingAction::DirectMove")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EPathFollowingAction::PartialPath")), 3));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EPathFollowingAction::PathToGoal")), 4));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EPathFollowingAction::EPathFollowingAction_MAX")), 5));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/Navigation/PathFollowingComponent.h"));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("left for now, will be removed soon! please use EPathFollowingStatus instead"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_AIModule_EPathFollowingAction_CRC() { return 1621188084U; }
	UEnum* Z_Construct_UEnum_AIModule_EPathFollowingResult()
	{
		UPackage* Outer=Z_Construct_UPackage_AIModule();
		extern uint32 Get_Z_Construct_UEnum_AIModule_EPathFollowingResult_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("EPathFollowingResult"), 0, Get_Z_Construct_UEnum_AIModule_EPathFollowingResult_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EPathFollowingResult"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EPathFollowingResult::Success")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EPathFollowingResult::Blocked")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EPathFollowingResult::OffPath")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EPathFollowingResult::Aborted")), 3));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EPathFollowingResult::Skipped")), 4));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EPathFollowingResult::Invalid")), 5));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EPathFollowingResult::EPathFollowingResult_MAX")), 6));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("Aborted.ToolTip"), TEXT("Aborted and stopped (failure)"));
			MetaData->SetValue(ReturnEnum, TEXT("Blocked.ToolTip"), TEXT("Movement was blocked"));
			MetaData->SetValue(ReturnEnum, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnEnum, TEXT("Invalid.ToolTip"), TEXT("Request was invalid"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/Navigation/PathFollowingComponent.h"));
			MetaData->SetValue(ReturnEnum, TEXT("OffPath.ToolTip"), TEXT("Agent is not on path"));
			MetaData->SetValue(ReturnEnum, TEXT("Skipped.ToolTip"), TEXT("Aborted and replaced with new request"));
			MetaData->SetValue(ReturnEnum, TEXT("Success.ToolTip"), TEXT("Reached destination"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_AIModule_EPathFollowingResult_CRC() { return 371753807U; }
	UEnum* Z_Construct_UEnum_AIModule_EPathFollowingStatus()
	{
		UPackage* Outer=Z_Construct_UPackage_AIModule();
		extern uint32 Get_Z_Construct_UEnum_AIModule_EPathFollowingStatus_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("EPathFollowingStatus"), 0, Get_Z_Construct_UEnum_AIModule_EPathFollowingStatus_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EPathFollowingStatus"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EPathFollowingStatus::Idle")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EPathFollowingStatus::Waiting")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EPathFollowingStatus::Paused")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EPathFollowingStatus::Moving")), 3));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EPathFollowingStatus::EPathFollowingStatus_MAX")), 4));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnEnum, TEXT("Idle.ToolTip"), TEXT("No requests"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/Navigation/PathFollowingComponent.h"));
			MetaData->SetValue(ReturnEnum, TEXT("Moving.ToolTip"), TEXT("Following path"));
			MetaData->SetValue(ReturnEnum, TEXT("Paused.ToolTip"), TEXT("Request paused, will continue after ResumeMove()"));
			MetaData->SetValue(ReturnEnum, TEXT("Waiting.ToolTip"), TEXT("Request with incomplete path, will start after UpdateMove()"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_AIModule_EPathFollowingStatus_CRC() { return 264039895U; }
	UFunction* Z_Construct_UFunction_UPathFollowingComponent_GetPathActionType()
	{
		struct PathFollowingComponent_eventGetPathActionType_Parms
		{
			TEnumAsByte<EPathFollowingAction::Type> ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UPathFollowingComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetPathActionType"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x54020401, 65535, sizeof(PathFollowingComponent_eventGetPathActionType_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(ReturnValue, PathFollowingComponent_eventGetPathActionType_Parms), 0x0000000000000580, Z_Construct_UEnum_AIModule_EPathFollowingAction());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|Components|PathFollowing"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/Navigation/PathFollowingComponent.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("will be deprecated soon, please use AIController.GetMoveStatus instead!"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UPathFollowingComponent_GetPathDestination()
	{
		struct PathFollowingComponent_eventGetPathDestination_Parms
		{
			FVector ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UPathFollowingComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetPathDestination"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x54820401, 65535, sizeof(PathFollowingComponent_eventGetPathDestination_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, PathFollowingComponent_eventGetPathDestination_Parms), 0x0000000000000580, Z_Construct_UScriptStruct_FVector());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|Components|PathFollowing"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/Navigation/PathFollowingComponent.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("will be deprecated soon, please use AIController.GetImmediateMoveDestination instead!"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UPathFollowingComponent_OnActorBump()
	{
		struct PathFollowingComponent_eventOnActorBump_Parms
		{
			AActor* SelfActor;
			AActor* OtherActor;
			FVector NormalImpulse;
			FHitResult Hit;
		};
		UObject* Outer=Z_Construct_UClass_UPathFollowingComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnActorBump"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x00C20400, 65535, sizeof(PathFollowingComponent_eventOnActorBump_Parms));
			UProperty* NewProp_Hit = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Hit"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Hit, PathFollowingComponent_eventOnActorBump_Parms), 0x0000008008000182, Z_Construct_UScriptStruct_FHitResult());
			UProperty* NewProp_NormalImpulse = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NormalImpulse"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(NormalImpulse, PathFollowingComponent_eventOnActorBump_Parms), 0x0000000000000080, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_OtherActor = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OtherActor"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(OtherActor, PathFollowingComponent_eventOnActorBump_Parms), 0x0000000000000080, Z_Construct_UClass_AActor_NoRegister());
			UProperty* NewProp_SelfActor = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SelfActor"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(SelfActor, PathFollowingComponent_eventOnActorBump_Parms), 0x0000000000000080, Z_Construct_UClass_AActor_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/Navigation/PathFollowingComponent.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("called when moving agent collides with another actor"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UPathFollowingComponent_NoRegister()
	{
		return UPathFollowingComponent::StaticClass();
	}
	UClass* Z_Construct_UClass_UPathFollowingComponent()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UActorComponent();
			Z_Construct_UPackage_AIModule();
			OuterClass = UPathFollowingComponent::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20B00084;

				OuterClass->LinkChild(Z_Construct_UFunction_UPathFollowingComponent_GetPathActionType());
				OuterClass->LinkChild(Z_Construct_UFunction_UPathFollowingComponent_GetPathDestination());
				OuterClass->LinkChild(Z_Construct_UFunction_UPathFollowingComponent_OnActorBump());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bUseVisibilityTestsSimplification, UPathFollowingComponent, uint8);
				UProperty* NewProp_bUseVisibilityTestsSimplification = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bUseVisibilityTestsSimplification"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bUseVisibilityTestsSimplification, UPathFollowingComponent), 0x0000080000004000, CPP_BOOL_PROPERTY_BITMASK(bUseVisibilityTestsSimplification, UPathFollowingComponent), sizeof(uint8), false);
				UProperty* NewProp_MyNavData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MyNavData"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(MyNavData, UPathFollowingComponent), 0x0000080000002000, Z_Construct_UClass_ANavigationData_NoRegister());
				UProperty* NewProp_MovementComp = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MovementComp"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(MovementComp, UPathFollowingComponent), 0x0000080000082008, Z_Construct_UClass_UNavMovementComponent_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UPathFollowingComponent_GetPathActionType()); // 2516404940
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UPathFollowingComponent_GetPathDestination()); // 1366923751
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UPathFollowingComponent_OnActorBump()); // 229743449
				OuterClass->ClassConfigName = FName(TEXT("Engine"));
				OuterClass->Interfaces.Add(FImplementedInterface(Z_Construct_UClass_UAIResourceInterface_NoRegister(), VTABLE_OFFSET(UPathFollowingComponent, IAIResourceInterface), false ));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("ComponentReplication"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Navigation/PathFollowingComponent.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Navigation/PathFollowingComponent.h"));
				MetaData->SetValue(NewProp_bUseVisibilityTestsSimplification, TEXT("ModuleRelativePath"), TEXT("Classes/Navigation/PathFollowingComponent.h"));
				MetaData->SetValue(NewProp_bUseVisibilityTestsSimplification, TEXT("ToolTip"), TEXT("set when paths simplification using visibility tests are needed  (disabled by default because of performance)"));
				MetaData->SetValue(NewProp_MyNavData, TEXT("ModuleRelativePath"), TEXT("Classes/Navigation/PathFollowingComponent.h"));
				MetaData->SetValue(NewProp_MyNavData, TEXT("ToolTip"), TEXT("navigation data for agent described in movement component"));
				MetaData->SetValue(NewProp_MovementComp, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_MovementComp, TEXT("ModuleRelativePath"), TEXT("Classes/Navigation/PathFollowingComponent.h"));
				MetaData->SetValue(NewProp_MovementComp, TEXT("ToolTip"), TEXT("associated movement component"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UPathFollowingComponent(Z_Construct_UClass_UPathFollowingComponent, TEXT("UPathFollowingComponent"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UPathFollowingComponent);
	UFunction* Z_Construct_UDelegateFunction_AIModule_OAISimpleDelegate__DelegateSignature()
	{
		struct _Script_AIModule_eventOAISimpleDelegate_Parms
		{
			TEnumAsByte<EPathFollowingResult::Type> MovementResult;
		};
		UObject* Outer=Z_Construct_UPackage_AIModule();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OAISimpleDelegate__DelegateSignature"), RF_Public|RF_Transient|RF_Native) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_AIModule_eventOAISimpleDelegate_Parms));
			UProperty* NewProp_MovementResult = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("MovementResult"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(MovementResult, _Script_AIModule_eventOAISimpleDelegate_Parms), 0x0000000000000080, Z_Construct_UEnum_AIModule_EPathFollowingResult());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/Blueprint/AIAsyncTaskBlueprintProxy.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAIAsyncTaskBlueprintProxy_OnMoveCompleted()
	{
		struct AIAsyncTaskBlueprintProxy_eventOnMoveCompleted_Parms
		{
			FAIRequestID RequestID;
			TEnumAsByte<EPathFollowingResult::Type> MovementResult;
		};
		UObject* Outer=Z_Construct_UClass_UAIAsyncTaskBlueprintProxy();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnMoveCompleted"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x00020401, 65535, sizeof(AIAsyncTaskBlueprintProxy_eventOnMoveCompleted_Parms));
			UProperty* NewProp_MovementResult = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("MovementResult"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(MovementResult, AIAsyncTaskBlueprintProxy_eventOnMoveCompleted_Parms), 0x0000000000000080, Z_Construct_UEnum_AIModule_EPathFollowingResult());
			UProperty* NewProp_RequestID = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RequestID"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(RequestID, AIAsyncTaskBlueprintProxy_eventOnMoveCompleted_Parms), 0x0000000000000080, Z_Construct_UScriptStruct_FAIRequestID());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/Blueprint/AIAsyncTaskBlueprintProxy.h"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UAIAsyncTaskBlueprintProxy_NoRegister()
	{
		return UAIAsyncTaskBlueprintProxy::StaticClass();
	}
	UClass* Z_Construct_UClass_UAIAsyncTaskBlueprintProxy()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage_AIModule();
			OuterClass = UAIAsyncTaskBlueprintProxy::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20880080;

				OuterClass->LinkChild(Z_Construct_UFunction_UAIAsyncTaskBlueprintProxy_OnMoveCompleted());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_OnFail = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnFail"), RF_Public|RF_Transient|RF_Native) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnFail, UAIAsyncTaskBlueprintProxy), 0x0000000010080000, Z_Construct_UDelegateFunction_AIModule_OAISimpleDelegate__DelegateSignature());
				UProperty* NewProp_OnSuccess = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnSuccess"), RF_Public|RF_Transient|RF_Native) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnSuccess, UAIAsyncTaskBlueprintProxy), 0x0000000010080000, Z_Construct_UDelegateFunction_AIModule_OAISimpleDelegate__DelegateSignature());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UAIAsyncTaskBlueprintProxy_OnMoveCompleted()); // 2403627625
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Blueprint/AIAsyncTaskBlueprintProxy.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Blueprint/AIAsyncTaskBlueprintProxy.h"));
				MetaData->SetValue(NewProp_OnFail, TEXT("ModuleRelativePath"), TEXT("Classes/Blueprint/AIAsyncTaskBlueprintProxy.h"));
				MetaData->SetValue(NewProp_OnSuccess, TEXT("ModuleRelativePath"), TEXT("Classes/Blueprint/AIAsyncTaskBlueprintProxy.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAIAsyncTaskBlueprintProxy(Z_Construct_UClass_UAIAsyncTaskBlueprintProxy, TEXT("UAIAsyncTaskBlueprintProxy"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAIAsyncTaskBlueprintProxy);
	UFunction* Z_Construct_UFunction_UAIBlueprintHelperLibrary_CreateMoveToProxyObject()
	{
		struct AIBlueprintHelperLibrary_eventCreateMoveToProxyObject_Parms
		{
			UObject* WorldContextObject;
			APawn* Pawn;
			FVector Destination;
			AActor* TargetActor;
			float AcceptanceRadius;
			bool bStopOnOverlap;
			UAIAsyncTaskBlueprintProxy* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UAIBlueprintHelperLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("CreateMoveToProxyObject"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04822401, 65535, sizeof(AIBlueprintHelperLibrary_eventCreateMoveToProxyObject_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, AIBlueprintHelperLibrary_eventCreateMoveToProxyObject_Parms), 0x0000000000000580, Z_Construct_UClass_UAIAsyncTaskBlueprintProxy_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bStopOnOverlap, AIBlueprintHelperLibrary_eventCreateMoveToProxyObject_Parms, bool);
			UProperty* NewProp_bStopOnOverlap = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("bStopOnOverlap"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bStopOnOverlap, AIBlueprintHelperLibrary_eventCreateMoveToProxyObject_Parms), 0x0000000000000080, CPP_BOOL_PROPERTY_BITMASK(bStopOnOverlap, AIBlueprintHelperLibrary_eventCreateMoveToProxyObject_Parms), sizeof(bool), true);
			UProperty* NewProp_AcceptanceRadius = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("AcceptanceRadius"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(AcceptanceRadius, AIBlueprintHelperLibrary_eventCreateMoveToProxyObject_Parms), 0x0000000000000080);
			UProperty* NewProp_TargetActor = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("TargetActor"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(TargetActor, AIBlueprintHelperLibrary_eventCreateMoveToProxyObject_Parms), 0x0000000000000080, Z_Construct_UClass_AActor_NoRegister());
			UProperty* NewProp_Destination = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Destination"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Destination, AIBlueprintHelperLibrary_eventCreateMoveToProxyObject_Parms), 0x0000000000000080, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_Pawn = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Pawn"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(Pawn, AIBlueprintHelperLibrary_eventCreateMoveToProxyObject_Parms), 0x0000000000000080, Z_Construct_UClass_APawn_NoRegister());
			UProperty* NewProp_WorldContextObject = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("WorldContextObject"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(WorldContextObject, AIBlueprintHelperLibrary_eventCreateMoveToProxyObject_Parms), 0x0000000000000080, Z_Construct_UClass_UObject_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("BlueprintInternalUseOnly"), TEXT("TRUE"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_AcceptanceRadius"), TEXT("5.000000"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_bStopOnOverlap"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/Blueprint/AIBlueprintHelperLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("WorldContext"), TEXT("WorldContextObject"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAIBlueprintHelperLibrary_GetAIController()
	{
		struct AIBlueprintHelperLibrary_eventGetAIController_Parms
		{
			AActor* ControlledActor;
			AAIController* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UAIBlueprintHelperLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetAIController"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(AIBlueprintHelperLibrary_eventGetAIController_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, AIBlueprintHelperLibrary_eventGetAIController_Parms), 0x0000000000000580, Z_Construct_UClass_AAIController_NoRegister());
			UProperty* NewProp_ControlledActor = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ControlledActor"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(ControlledActor, AIBlueprintHelperLibrary_eventGetAIController_Parms), 0x0000000000000080, Z_Construct_UClass_AActor_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI"));
			MetaData->SetValue(ReturnFunction, TEXT("DefaultToSelf"), TEXT("ControlledObject"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/Blueprint/AIBlueprintHelperLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("The way it works exactly is if the actor passed in is a pawn, then the function retrieves\n    pawn's controller cast to AIController. Otherwise the function returns actor cast to AIController."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAIBlueprintHelperLibrary_GetBlackboard()
	{
		struct AIBlueprintHelperLibrary_eventGetBlackboard_Parms
		{
			AActor* Target;
			UBlackboardComponent* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UAIBlueprintHelperLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetBlackboard"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x14022401, 65535, sizeof(AIBlueprintHelperLibrary_eventGetBlackboard_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, AIBlueprintHelperLibrary_eventGetBlackboard_Parms), 0x0000000000080588, Z_Construct_UClass_UBlackboardComponent_NoRegister());
			UProperty* NewProp_Target = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Target"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(Target, AIBlueprintHelperLibrary_eventGetBlackboard_Parms), 0x0000000000000080, Z_Construct_UClass_AActor_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI"));
			MetaData->SetValue(ReturnFunction, TEXT("DefaultToSelf"), TEXT("Target"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/Blueprint/AIBlueprintHelperLibrary.h"));
			MetaData->SetValue(NewProp_ReturnValue, TEXT("EditInline"), TEXT("true"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAIBlueprintHelperLibrary_IsValidAIDirection()
	{
		struct AIBlueprintHelperLibrary_eventIsValidAIDirection_Parms
		{
			FVector DirectionVector;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UAIBlueprintHelperLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("IsValidAIDirection"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x14822401, 65535, sizeof(AIBlueprintHelperLibrary_eventIsValidAIDirection_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, AIBlueprintHelperLibrary_eventIsValidAIDirection_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, AIBlueprintHelperLibrary_eventIsValidAIDirection_Parms), 0x0000000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, AIBlueprintHelperLibrary_eventIsValidAIDirection_Parms), sizeof(bool), true);
			UProperty* NewProp_DirectionVector = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("DirectionVector"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(DirectionVector, AIBlueprintHelperLibrary_eventIsValidAIDirection_Parms), 0x0000000000000080, Z_Construct_UScriptStruct_FVector());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/Blueprint/AIBlueprintHelperLibrary.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAIBlueprintHelperLibrary_IsValidAILocation()
	{
		struct AIBlueprintHelperLibrary_eventIsValidAILocation_Parms
		{
			FVector Location;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UAIBlueprintHelperLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("IsValidAILocation"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x14822401, 65535, sizeof(AIBlueprintHelperLibrary_eventIsValidAILocation_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, AIBlueprintHelperLibrary_eventIsValidAILocation_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, AIBlueprintHelperLibrary_eventIsValidAILocation_Parms), 0x0000000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, AIBlueprintHelperLibrary_eventIsValidAILocation_Parms), sizeof(bool), true);
			UProperty* NewProp_Location = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Location"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Location, AIBlueprintHelperLibrary_eventIsValidAILocation_Parms), 0x0000000000000080, Z_Construct_UScriptStruct_FVector());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/Blueprint/AIBlueprintHelperLibrary.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAIBlueprintHelperLibrary_IsValidAIRotation()
	{
		struct AIBlueprintHelperLibrary_eventIsValidAIRotation_Parms
		{
			FRotator Rotation;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UAIBlueprintHelperLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("IsValidAIRotation"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x14822401, 65535, sizeof(AIBlueprintHelperLibrary_eventIsValidAIRotation_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, AIBlueprintHelperLibrary_eventIsValidAIRotation_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, AIBlueprintHelperLibrary_eventIsValidAIRotation_Parms), 0x0000000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, AIBlueprintHelperLibrary_eventIsValidAIRotation_Parms), sizeof(bool), true);
			UProperty* NewProp_Rotation = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Rotation"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Rotation, AIBlueprintHelperLibrary_eventIsValidAIRotation_Parms), 0x0000000000000080, Z_Construct_UScriptStruct_FRotator());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/Blueprint/AIBlueprintHelperLibrary.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAIBlueprintHelperLibrary_LockAIResourcesWithAnimation()
	{
		struct AIBlueprintHelperLibrary_eventLockAIResourcesWithAnimation_Parms
		{
			UAnimInstance* AnimInstance;
			bool bLockMovement;
			bool LockAILogic;
		};
		UObject* Outer=Z_Construct_UClass_UAIBlueprintHelperLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("LockAIResourcesWithAnimation"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04022405, 65535, sizeof(AIBlueprintHelperLibrary_eventLockAIResourcesWithAnimation_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(LockAILogic, AIBlueprintHelperLibrary_eventLockAIResourcesWithAnimation_Parms, bool);
			UProperty* NewProp_LockAILogic = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("LockAILogic"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(LockAILogic, AIBlueprintHelperLibrary_eventLockAIResourcesWithAnimation_Parms), 0x0000000000000080, CPP_BOOL_PROPERTY_BITMASK(LockAILogic, AIBlueprintHelperLibrary_eventLockAIResourcesWithAnimation_Parms), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bLockMovement, AIBlueprintHelperLibrary_eventLockAIResourcesWithAnimation_Parms, bool);
			UProperty* NewProp_bLockMovement = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("bLockMovement"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bLockMovement, AIBlueprintHelperLibrary_eventLockAIResourcesWithAnimation_Parms), 0x0000000000000080, CPP_BOOL_PROPERTY_BITMASK(bLockMovement, AIBlueprintHelperLibrary_eventLockAIResourcesWithAnimation_Parms), sizeof(bool), true);
			UProperty* NewProp_AnimInstance = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("AnimInstance"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(AnimInstance, AIBlueprintHelperLibrary_eventLockAIResourcesWithAnimation_Parms), 0x0000000000000080, Z_Construct_UClass_UAnimInstance_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Animation"));
			MetaData->SetValue(ReturnFunction, TEXT("DefaultToSelf"), TEXT("AnimInstance"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/Blueprint/AIBlueprintHelperLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("locks indicated AI resources of animated pawn"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAIBlueprintHelperLibrary_SendAIMessage()
	{
		struct AIBlueprintHelperLibrary_eventSendAIMessage_Parms
		{
			APawn* Target;
			FName Message;
			UObject* MessageSource;
			bool bSuccess;
		};
		UObject* Outer=Z_Construct_UClass_UAIBlueprintHelperLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SendAIMessage"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(AIBlueprintHelperLibrary_eventSendAIMessage_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bSuccess, AIBlueprintHelperLibrary_eventSendAIMessage_Parms, bool);
			UProperty* NewProp_bSuccess = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("bSuccess"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bSuccess, AIBlueprintHelperLibrary_eventSendAIMessage_Parms), 0x0000000000000080, CPP_BOOL_PROPERTY_BITMASK(bSuccess, AIBlueprintHelperLibrary_eventSendAIMessage_Parms), sizeof(bool), true);
			UProperty* NewProp_MessageSource = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("MessageSource"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(MessageSource, AIBlueprintHelperLibrary_eventSendAIMessage_Parms), 0x0000000000000080, Z_Construct_UClass_UObject_NoRegister());
			UProperty* NewProp_Message = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Message"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(Message, AIBlueprintHelperLibrary_eventSendAIMessage_Parms), 0x0000000000000080);
			UProperty* NewProp_Target = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Target"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(Target, AIBlueprintHelperLibrary_eventSendAIMessage_Parms), 0x0000000000000080, Z_Construct_UClass_APawn_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_bSuccess"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("DefaultToSelf"), TEXT("MessageSource"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/Blueprint/AIBlueprintHelperLibrary.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAIBlueprintHelperLibrary_SpawnAIFromClass()
	{
		struct AIBlueprintHelperLibrary_eventSpawnAIFromClass_Parms
		{
			UObject* WorldContextObject;
			TSubclassOf<APawn>  PawnClass;
			UBehaviorTree* BehaviorTree;
			FVector Location;
			FRotator Rotation;
			bool bNoCollisionFail;
			APawn* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UAIBlueprintHelperLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SpawnAIFromClass"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04822401, 65535, sizeof(AIBlueprintHelperLibrary_eventSpawnAIFromClass_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, AIBlueprintHelperLibrary_eventSpawnAIFromClass_Parms), 0x0000000000000580, Z_Construct_UClass_APawn_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bNoCollisionFail, AIBlueprintHelperLibrary_eventSpawnAIFromClass_Parms, bool);
			UProperty* NewProp_bNoCollisionFail = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("bNoCollisionFail"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bNoCollisionFail, AIBlueprintHelperLibrary_eventSpawnAIFromClass_Parms), 0x0000000000000080, CPP_BOOL_PROPERTY_BITMASK(bNoCollisionFail, AIBlueprintHelperLibrary_eventSpawnAIFromClass_Parms), sizeof(bool), true);
			UProperty* NewProp_Rotation = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Rotation"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Rotation, AIBlueprintHelperLibrary_eventSpawnAIFromClass_Parms), 0x0000000000000080, Z_Construct_UScriptStruct_FRotator());
			UProperty* NewProp_Location = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Location"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Location, AIBlueprintHelperLibrary_eventSpawnAIFromClass_Parms), 0x0000000000000080, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_BehaviorTree = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("BehaviorTree"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(BehaviorTree, AIBlueprintHelperLibrary_eventSpawnAIFromClass_Parms), 0x0000000000000080, Z_Construct_UClass_UBehaviorTree_NoRegister());
			UProperty* NewProp_PawnClass = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("PawnClass"), RF_Public|RF_Transient|RF_Native) UClassProperty(CPP_PROPERTY_BASE(PawnClass, AIBlueprintHelperLibrary_eventSpawnAIFromClass_Parms), 0x0004000000000080, Z_Construct_UClass_APawn_NoRegister());
			UProperty* NewProp_WorldContextObject = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("WorldContextObject"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(WorldContextObject, AIBlueprintHelperLibrary_eventSpawnAIFromClass_Parms), 0x0000000000000080, Z_Construct_UClass_UObject_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_bNoCollisionFail"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/Blueprint/AIBlueprintHelperLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("UnsafeDuringActorConstruction"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("WorldContext"), TEXT("WorldContextObject"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAIBlueprintHelperLibrary_UnlockAIResourcesWithAnimation()
	{
		struct AIBlueprintHelperLibrary_eventUnlockAIResourcesWithAnimation_Parms
		{
			UAnimInstance* AnimInstance;
			bool bUnlockMovement;
			bool UnlockAILogic;
		};
		UObject* Outer=Z_Construct_UClass_UAIBlueprintHelperLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("UnlockAIResourcesWithAnimation"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04022405, 65535, sizeof(AIBlueprintHelperLibrary_eventUnlockAIResourcesWithAnimation_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(UnlockAILogic, AIBlueprintHelperLibrary_eventUnlockAIResourcesWithAnimation_Parms, bool);
			UProperty* NewProp_UnlockAILogic = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("UnlockAILogic"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(UnlockAILogic, AIBlueprintHelperLibrary_eventUnlockAIResourcesWithAnimation_Parms), 0x0000000000000080, CPP_BOOL_PROPERTY_BITMASK(UnlockAILogic, AIBlueprintHelperLibrary_eventUnlockAIResourcesWithAnimation_Parms), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bUnlockMovement, AIBlueprintHelperLibrary_eventUnlockAIResourcesWithAnimation_Parms, bool);
			UProperty* NewProp_bUnlockMovement = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("bUnlockMovement"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bUnlockMovement, AIBlueprintHelperLibrary_eventUnlockAIResourcesWithAnimation_Parms), 0x0000000000000080, CPP_BOOL_PROPERTY_BITMASK(bUnlockMovement, AIBlueprintHelperLibrary_eventUnlockAIResourcesWithAnimation_Parms), sizeof(bool), true);
			UProperty* NewProp_AnimInstance = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("AnimInstance"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(AnimInstance, AIBlueprintHelperLibrary_eventUnlockAIResourcesWithAnimation_Parms), 0x0000000000000080, Z_Construct_UClass_UAnimInstance_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Animation"));
			MetaData->SetValue(ReturnFunction, TEXT("DefaultToSelf"), TEXT("AnimInstance"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/Blueprint/AIBlueprintHelperLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("unlocks indicated AI resources of animated pawn. Will unlock only animation-locked resources"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UAIBlueprintHelperLibrary_NoRegister()
	{
		return UAIBlueprintHelperLibrary::StaticClass();
	}
	UClass* Z_Construct_UClass_UAIBlueprintHelperLibrary()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UBlueprintFunctionLibrary();
			Z_Construct_UPackage_AIModule();
			OuterClass = UAIBlueprintHelperLibrary::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;

				OuterClass->LinkChild(Z_Construct_UFunction_UAIBlueprintHelperLibrary_CreateMoveToProxyObject());
				OuterClass->LinkChild(Z_Construct_UFunction_UAIBlueprintHelperLibrary_GetAIController());
				OuterClass->LinkChild(Z_Construct_UFunction_UAIBlueprintHelperLibrary_GetBlackboard());
				OuterClass->LinkChild(Z_Construct_UFunction_UAIBlueprintHelperLibrary_IsValidAIDirection());
				OuterClass->LinkChild(Z_Construct_UFunction_UAIBlueprintHelperLibrary_IsValidAILocation());
				OuterClass->LinkChild(Z_Construct_UFunction_UAIBlueprintHelperLibrary_IsValidAIRotation());
				OuterClass->LinkChild(Z_Construct_UFunction_UAIBlueprintHelperLibrary_LockAIResourcesWithAnimation());
				OuterClass->LinkChild(Z_Construct_UFunction_UAIBlueprintHelperLibrary_SendAIMessage());
				OuterClass->LinkChild(Z_Construct_UFunction_UAIBlueprintHelperLibrary_SpawnAIFromClass());
				OuterClass->LinkChild(Z_Construct_UFunction_UAIBlueprintHelperLibrary_UnlockAIResourcesWithAnimation());

				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UAIBlueprintHelperLibrary_CreateMoveToProxyObject()); // 3013266459
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UAIBlueprintHelperLibrary_GetAIController()); // 3315617941
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UAIBlueprintHelperLibrary_GetBlackboard()); // 3964172112
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UAIBlueprintHelperLibrary_IsValidAIDirection()); // 912209684
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UAIBlueprintHelperLibrary_IsValidAILocation()); // 3766992736
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UAIBlueprintHelperLibrary_IsValidAIRotation()); // 4220261578
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UAIBlueprintHelperLibrary_LockAIResourcesWithAnimation()); // 3544446439
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UAIBlueprintHelperLibrary_SendAIMessage()); // 3191666068
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UAIBlueprintHelperLibrary_SpawnAIFromClass()); // 2632780822
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UAIBlueprintHelperLibrary_UnlockAIResourcesWithAnimation()); // 4188997728
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Blueprint/AIBlueprintHelperLibrary.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Blueprint/AIBlueprintHelperLibrary.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAIBlueprintHelperLibrary(Z_Construct_UClass_UAIBlueprintHelperLibrary, TEXT("UAIBlueprintHelperLibrary"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAIBlueprintHelperLibrary);
	UScriptStruct* Z_Construct_UScriptStruct_FPawnActionStack()
	{
		UPackage* Outer=Z_Construct_UPackage_AIModule();
		extern uint32 Get_Z_Construct_UScriptStruct_FPawnActionStack_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("PawnActionStack"), sizeof(FPawnActionStack), Get_Z_Construct_UScriptStruct_FPawnActionStack_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("PawnActionStack"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FPawnActionStack>, EStructFlags(0x00000201));
			UProperty* NewProp_TopAction = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("TopAction"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(TopAction, FPawnActionStack), 0x0000000000000000, Z_Construct_UClass_UPawnAction_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/Actions/PawnActionsComponent.h"));
			MetaData->SetValue(NewProp_TopAction, TEXT("ModuleRelativePath"), TEXT("Classes/Actions/PawnActionsComponent.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FPawnActionStack_CRC() { return 2973955495U; }
	UScriptStruct* Z_Construct_UScriptStruct_FPawnActionEvent()
	{
		UPackage* Outer=Z_Construct_UPackage_AIModule();
		extern uint32 Get_Z_Construct_UScriptStruct_FPawnActionEvent_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("PawnActionEvent"), sizeof(FPawnActionEvent), Get_Z_Construct_UScriptStruct_FPawnActionEvent_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("PawnActionEvent"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FPawnActionEvent>, EStructFlags(0x00000201));
			UProperty* NewProp_Action = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Action"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(Action, FPawnActionEvent), 0x0000000000000000, Z_Construct_UClass_UPawnAction_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/Actions/PawnActionsComponent.h"));
			MetaData->SetValue(NewProp_Action, TEXT("ModuleRelativePath"), TEXT("Classes/Actions/PawnActionsComponent.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FPawnActionEvent_CRC() { return 81823187U; }
	UFunction* Z_Construct_UFunction_UPawnActionsComponent_K2_AbortAction()
	{
		struct PawnActionsComponent_eventK2_AbortAction_Parms
		{
			UPawnAction* ActionToAbort;
			TEnumAsByte<EPawnActionAbortState::Type> ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UPawnActionsComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("K2_AbortAction"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(PawnActionsComponent_eventK2_AbortAction_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(ReturnValue, PawnActionsComponent_eventK2_AbortAction_Parms), 0x0000000000000580, Z_Construct_UEnum_AIModule_EPawnActionAbortState());
			UProperty* NewProp_ActionToAbort = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ActionToAbort"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(ActionToAbort, PawnActionsComponent_eventK2_AbortAction_Parms), 0x0000000000000080, Z_Construct_UClass_UPawnAction_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("PawnAction"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("AbortAction"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/Actions/PawnActionsComponent.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Aborts given action instance"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UPawnActionsComponent_K2_ForceAbortAction()
	{
		struct PawnActionsComponent_eventK2_ForceAbortAction_Parms
		{
			UPawnAction* ActionToAbort;
			TEnumAsByte<EPawnActionAbortState::Type> ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UPawnActionsComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("K2_ForceAbortAction"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(PawnActionsComponent_eventK2_ForceAbortAction_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(ReturnValue, PawnActionsComponent_eventK2_ForceAbortAction_Parms), 0x0000000000000580, Z_Construct_UEnum_AIModule_EPawnActionAbortState());
			UProperty* NewProp_ActionToAbort = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ActionToAbort"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(ActionToAbort, PawnActionsComponent_eventK2_ForceAbortAction_Parms), 0x0000000000000080, Z_Construct_UClass_UPawnAction_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("PawnAction"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("ForceAbortAction"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/Actions/PawnActionsComponent.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Aborts given action instance"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UPawnActionsComponent_K2_PerformAction()
	{
		struct PawnActionsComponent_eventK2_PerformAction_Parms
		{
			APawn* Pawn;
			UPawnAction* Action;
			TEnumAsByte<EAIRequestPriority::Type> Priority;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UPawnActionsComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("K2_PerformAction"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(PawnActionsComponent_eventK2_PerformAction_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, PawnActionsComponent_eventK2_PerformAction_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, PawnActionsComponent_eventK2_PerformAction_Parms), 0x0000000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, PawnActionsComponent_eventK2_PerformAction_Parms), sizeof(bool), true);
			UProperty* NewProp_Priority = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Priority"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(Priority, PawnActionsComponent_eventK2_PerformAction_Parms), 0x0000000000000080, Z_Construct_UEnum_AIModule_EAIRequestPriority());
			UProperty* NewProp_Action = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Action"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(Action, PawnActionsComponent_eventK2_PerformAction_Parms), 0x0000000000000080, Z_Construct_UClass_UPawnAction_NoRegister());
			UProperty* NewProp_Pawn = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Pawn"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(Pawn, PawnActionsComponent_eventK2_PerformAction_Parms), 0x0000000000000080, Z_Construct_UClass_APawn_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|PawnActions"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Priority"), TEXT("HardScript"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("PerformAction"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/Actions/PawnActionsComponent.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("blueprint interface"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UPawnActionsComponent_K2_PushAction()
	{
		struct PawnActionsComponent_eventK2_PushAction_Parms
		{
			UPawnAction* NewAction;
			TEnumAsByte<EAIRequestPriority::Type> Priority;
			UObject* Instigator;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UPawnActionsComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("K2_PushAction"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(PawnActionsComponent_eventK2_PushAction_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, PawnActionsComponent_eventK2_PushAction_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, PawnActionsComponent_eventK2_PushAction_Parms), 0x0000000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, PawnActionsComponent_eventK2_PushAction_Parms), sizeof(bool), true);
			UProperty* NewProp_Instigator = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Instigator"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(Instigator, PawnActionsComponent_eventK2_PushAction_Parms), 0x0000000000000080, Z_Construct_UClass_UObject_NoRegister());
			UProperty* NewProp_Priority = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Priority"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(Priority, PawnActionsComponent_eventK2_PushAction_Parms), 0x0000000000000080, Z_Construct_UEnum_AIModule_EAIRequestPriority());
			UProperty* NewProp_NewAction = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NewAction"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(NewAction, PawnActionsComponent_eventK2_PushAction_Parms), 0x0000000000000080, Z_Construct_UClass_UPawnAction_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("PawnAction"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("PushAction"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/Actions/PawnActionsComponent.h"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UPawnActionsComponent_NoRegister()
	{
		return UPawnActionsComponent::StaticClass();
	}
	UClass* Z_Construct_UClass_UPawnActionsComponent()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UActorComponent();
			Z_Construct_UPackage_AIModule();
			OuterClass = UPawnActionsComponent::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20B00080;

				OuterClass->LinkChild(Z_Construct_UFunction_UPawnActionsComponent_K2_AbortAction());
				OuterClass->LinkChild(Z_Construct_UFunction_UPawnActionsComponent_K2_ForceAbortAction());
				OuterClass->LinkChild(Z_Construct_UFunction_UPawnActionsComponent_K2_PerformAction());
				OuterClass->LinkChild(Z_Construct_UFunction_UPawnActionsComponent_K2_PushAction());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_CurrentAction = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CurrentAction"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(CurrentAction, UPawnActionsComponent), 0x0000080000002000, Z_Construct_UClass_UPawnAction_NoRegister());
				UProperty* NewProp_ActionEvents = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ActionEvents"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(ActionEvents, UPawnActionsComponent), 0x0000080000000000);
				UProperty* NewProp_ActionEvents_Inner = new(EC_InternalUseOnlyConstructor, NewProp_ActionEvents, TEXT("ActionEvents"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FPawnActionEvent());
				UProperty* NewProp_ActionStacks = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ActionStacks"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(ActionStacks, UPawnActionsComponent), 0x0000080000000000);
				UProperty* NewProp_ActionStacks_Inner = new(EC_InternalUseOnlyConstructor, NewProp_ActionStacks, TEXT("ActionStacks"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FPawnActionStack());
				UProperty* NewProp_ControlledPawn = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ControlledPawn"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(ControlledPawn, UPawnActionsComponent), 0x0000080000000014, Z_Construct_UClass_APawn_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UPawnActionsComponent_K2_AbortAction()); // 2004968905
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UPawnActionsComponent_K2_ForceAbortAction()); // 2270363658
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UPawnActionsComponent_K2_PerformAction()); // 1520194234
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UPawnActionsComponent_K2_PushAction()); // 1949340949
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("ComponentReplication"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Actions/PawnActionsComponent.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Actions/PawnActionsComponent.h"));
				MetaData->SetValue(NewProp_CurrentAction, TEXT("ModuleRelativePath"), TEXT("Classes/Actions/PawnActionsComponent.h"));
				MetaData->SetValue(NewProp_ActionEvents, TEXT("ModuleRelativePath"), TEXT("Classes/Actions/PawnActionsComponent.h"));
				MetaData->SetValue(NewProp_ActionStacks, TEXT("ModuleRelativePath"), TEXT("Classes/Actions/PawnActionsComponent.h"));
				MetaData->SetValue(NewProp_ControlledPawn, TEXT("Category"), TEXT("PawnActions"));
				MetaData->SetValue(NewProp_ControlledPawn, TEXT("ModuleRelativePath"), TEXT("Classes/Actions/PawnActionsComponent.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UPawnActionsComponent(Z_Construct_UClass_UPawnActionsComponent, TEXT("UPawnActionsComponent"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UPawnActionsComponent);
	UClass* Z_Construct_UClass_UAIPerceptionListenerInterface_NoRegister()
	{
		return UAIPerceptionListenerInterface::StaticClass();
	}
	UClass* Z_Construct_UClass_UAIPerceptionListenerInterface()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			UInterface::StaticClass();
			Z_Construct_UPackage_AIModule();
			OuterClass = UAIPerceptionListenerInterface::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20104081;


				OuterClass->StaticLink();
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAIPerceptionListenerInterface(Z_Construct_UClass_UAIPerceptionListenerInterface, TEXT("UAIPerceptionListenerInterface"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAIPerceptionListenerInterface);
	UEnum* Z_Construct_UEnum_AIModule_EBTFlowAbortMode()
	{
		UPackage* Outer=Z_Construct_UPackage_AIModule();
		extern uint32 Get_Z_Construct_UEnum_AIModule_EBTFlowAbortMode_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("EBTFlowAbortMode"), 0, Get_Z_Construct_UEnum_AIModule_EBTFlowAbortMode_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EBTFlowAbortMode"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EBTFlowAbortMode::None")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EBTFlowAbortMode::LowerPriority")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EBTFlowAbortMode::Self")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EBTFlowAbortMode::Both")), 3));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EBTFlowAbortMode::EBTFlowAbortMode_MAX")), 4));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("Both.DisplayName"), TEXT("Both"));
			MetaData->SetValue(ReturnEnum, TEXT("LowerPriority.DisplayName"), TEXT("Lower Priority"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BehaviorTreeTypes.h"));
			MetaData->SetValue(ReturnEnum, TEXT("None.DisplayName"), TEXT("Nothing"));
			MetaData->SetValue(ReturnEnum, TEXT("Self.DisplayName"), TEXT("Self"));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("keep in sync with DescribeFlowAbortMode()"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_AIModule_EBTFlowAbortMode_CRC() { return 747284893U; }
	UEnum* Z_Construct_UEnum_AIModule_EBTNodeResult()
	{
		UPackage* Outer=Z_Construct_UPackage_AIModule();
		extern uint32 Get_Z_Construct_UEnum_AIModule_EBTNodeResult_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("EBTNodeResult"), 0, Get_Z_Construct_UEnum_AIModule_EBTNodeResult_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EBTNodeResult"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EBTNodeResult::Succeeded")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EBTNodeResult::Failed")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EBTNodeResult::Aborted")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EBTNodeResult::InProgress")), 3));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EBTNodeResult::EBTNodeResult_MAX")), 4));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("Aborted.ToolTip"), TEXT("finished as failure"));
			MetaData->SetValue(ReturnEnum, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnEnum, TEXT("Failed.ToolTip"), TEXT("finished as success"));
			MetaData->SetValue(ReturnEnum, TEXT("InProgress.ToolTip"), TEXT("finished aborting = failure"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BehaviorTreeTypes.h"));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("keep in sync with DescribeNodeResult()"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_AIModule_EBTNodeResult_CRC() { return 4198278790U; }
	UScriptStruct* Z_Construct_UScriptStruct_FBlackboardKeySelector()
	{
		UPackage* Outer=Z_Construct_UPackage_AIModule();
		extern uint32 Get_Z_Construct_UScriptStruct_FBlackboardKeySelector_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("BlackboardKeySelector"), sizeof(FBlackboardKeySelector), Get_Z_Construct_UScriptStruct_FBlackboardKeySelector_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("BlackboardKeySelector"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FBlackboardKeySelector>, EStructFlags(0x00000201));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bNoneIsAllowedValue, FBlackboardKeySelector, uint8);
			UProperty* NewProp_bNoneIsAllowedValue = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bNoneIsAllowedValue"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bNoneIsAllowedValue, FBlackboardKeySelector), 0x0000080000002005, CPP_BOOL_PROPERTY_BITMASK(bNoneIsAllowedValue, FBlackboardKeySelector), sizeof(uint8), false);
			UProperty* NewProp_SelectedKeyID = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("SelectedKeyID"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(SelectedKeyID, FBlackboardKeySelector), 0x0000080000002805);
			UProperty* NewProp_SelectedKeyType = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("SelectedKeyType"), RF_Public|RF_Transient|RF_Native) UClassProperty(CPP_PROPERTY_BASE(SelectedKeyType, FBlackboardKeySelector), 0x0004000000002805, Z_Construct_UClass_UBlackboardKeyType_NoRegister());
			UProperty* NewProp_SelectedKeyName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("SelectedKeyName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(SelectedKeyName, FBlackboardKeySelector), 0x0000000000000805);
			UProperty* NewProp_AllowedTypes = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("AllowedTypes"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(AllowedTypes, FBlackboardKeySelector), 0x0000000000002005);
			UProperty* NewProp_AllowedTypes_Inner = new(EC_InternalUseOnlyConstructor, NewProp_AllowedTypes, TEXT("AllowedTypes"), RF_Public|RF_Transient|RF_Native) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UClass_UBlackboardKeyType_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BehaviorTreeTypes.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("helper struct for defining types of allowed blackboard entries\n(e.g. only entries holding points and objects derived form actor class)"));
			MetaData->SetValue(NewProp_bNoneIsAllowedValue, TEXT("Category"), TEXT("Blackboard"));
			MetaData->SetValue(NewProp_bNoneIsAllowedValue, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BehaviorTreeTypes.h"));
			MetaData->SetValue(NewProp_bNoneIsAllowedValue, TEXT("Tooltip"), TEXT(""));
			MetaData->SetValue(NewProp_SelectedKeyID, TEXT("Category"), TEXT("Blackboard"));
			MetaData->SetValue(NewProp_SelectedKeyID, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BehaviorTreeTypes.h"));
			MetaData->SetValue(NewProp_SelectedKeyID, TEXT("ToolTip"), TEXT("ID of selected key"));
			MetaData->SetValue(NewProp_SelectedKeyType, TEXT("Category"), TEXT("Blackboard"));
			MetaData->SetValue(NewProp_SelectedKeyType, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BehaviorTreeTypes.h"));
			MetaData->SetValue(NewProp_SelectedKeyType, TEXT("ToolTip"), TEXT("class of selected key"));
			MetaData->SetValue(NewProp_SelectedKeyName, TEXT("Category"), TEXT("Blackboard"));
			MetaData->SetValue(NewProp_SelectedKeyName, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BehaviorTreeTypes.h"));
			MetaData->SetValue(NewProp_SelectedKeyName, TEXT("ToolTip"), TEXT("name of selected key"));
			MetaData->SetValue(NewProp_AllowedTypes, TEXT("Category"), TEXT("Blackboard"));
			MetaData->SetValue(NewProp_AllowedTypes, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BehaviorTreeTypes.h"));
			MetaData->SetValue(NewProp_AllowedTypes, TEXT("ToolTip"), TEXT("array of allowed types with additional properties (e.g. uobject's base class)\nEditAnywhere is required for FBlackboardSelectorDetails::CacheBlackboardData()"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FBlackboardKeySelector_CRC() { return 3945694901U; }
	UClass* Z_Construct_UClass_UBehaviorTreeTypes_NoRegister()
	{
		return UBehaviorTreeTypes::StaticClass();
	}
	UClass* Z_Construct_UClass_UBehaviorTreeTypes()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage_AIModule();
			OuterClass = UBehaviorTreeTypes::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100081;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("BehaviorTree/BehaviorTreeTypes.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BehaviorTreeTypes.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UBehaviorTreeTypes(Z_Construct_UClass_UBehaviorTreeTypes, TEXT("UBehaviorTreeTypes"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UBehaviorTreeTypes);
	UEnum* Z_Construct_UEnum_AIModule_ETeamAttitude()
	{
		UPackage* Outer=Z_Construct_UPackage_AIModule();
		extern uint32 Get_Z_Construct_UEnum_AIModule_ETeamAttitude_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("ETeamAttitude"), 0, Get_Z_Construct_UEnum_AIModule_ETeamAttitude_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ETeamAttitude"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ETeamAttitude::Friendly")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ETeamAttitude::Neutral")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ETeamAttitude::Hostile")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ETeamAttitude::ETeamAttitude_MAX")), 3));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/GenericTeamAgentInterface.h"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_AIModule_ETeamAttitude_CRC() { return 889003517U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGenericTeamId()
	{
		UPackage* Outer=Z_Construct_UPackage_AIModule();
		extern uint32 Get_Z_Construct_UScriptStruct_FGenericTeamId_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("GenericTeamId"), sizeof(FGenericTeamId), Get_Z_Construct_UScriptStruct_FGenericTeamId_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GenericTeamId"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGenericTeamId>, EStructFlags(0x00000201));
			UProperty* NewProp_TeamID = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("TeamID"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(TeamID, FGenericTeamId), 0x0000080000000005);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/GenericTeamAgentInterface.h"));
			MetaData->SetValue(NewProp_TeamID, TEXT("Category"), TEXT("TeamID"));
			MetaData->SetValue(NewProp_TeamID, TEXT("ModuleRelativePath"), TEXT("Classes/GenericTeamAgentInterface.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGenericTeamId_CRC() { return 3003604677U; }
	UClass* Z_Construct_UClass_UGenericTeamAgentInterface_NoRegister()
	{
		return UGenericTeamAgentInterface::StaticClass();
	}
	UClass* Z_Construct_UClass_UGenericTeamAgentInterface()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			UInterface::StaticClass();
			Z_Construct_UPackage_AIModule();
			OuterClass = UGenericTeamAgentInterface::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20104081;


				OuterClass->StaticLink();
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGenericTeamAgentInterface(Z_Construct_UClass_UGenericTeamAgentInterface, TEXT("UGenericTeamAgentInterface"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGenericTeamAgentInterface);
	UFunction* Z_Construct_UDelegateFunction_AIModule_AIMoveCompletedSignature__DelegateSignature()
	{
		struct _Script_AIModule_eventAIMoveCompletedSignature_Parms
		{
			FAIRequestID RequestID;
			TEnumAsByte<EPathFollowingResult::Type> Result;
		};
		UObject* Outer=Z_Construct_UPackage_AIModule();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("AIMoveCompletedSignature__DelegateSignature"), RF_Public|RF_Transient|RF_Native) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_AIModule_eventAIMoveCompletedSignature_Parms));
			UProperty* NewProp_Result = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Result"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(Result, _Script_AIModule_eventAIMoveCompletedSignature_Parms), 0x0000000000000080, Z_Construct_UEnum_AIModule_EPathFollowingResult());
			UProperty* NewProp_RequestID = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RequestID"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(RequestID, _Script_AIModule_eventAIMoveCompletedSignature_Parms), 0x0000000000000080, Z_Construct_UScriptStruct_FAIRequestID());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AIController.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AAIController_GetAIPerceptionComponent()
	{
		struct AIController_eventGetAIPerceptionComponent_Parms
		{
			UAIPerceptionComponent* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_AAIController();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetAIPerceptionComponent"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x14020401, 65535, sizeof(AIController_eventGetAIPerceptionComponent_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, AIController_eventGetAIPerceptionComponent_Parms), 0x0000000000080588, Z_Construct_UClass_UAIPerceptionComponent_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|Perception"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AIController.h"));
			MetaData->SetValue(NewProp_ReturnValue, TEXT("EditInline"), TEXT("true"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AAIController_GetFocalPoint()
	{
		struct AIController_eventGetFocalPoint_Parms
		{
			FVector ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_AAIController();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetFocalPoint"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x54820401, 65535, sizeof(AIController_eventGetFocalPoint_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, AIController_eventGetFocalPoint_Parms), 0x0000000000000580, Z_Construct_UScriptStruct_FVector());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AIController.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Retrieve the final position that controller should be looking at."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AAIController_GetFocalPointOnActor()
	{
		struct AIController_eventGetFocalPointOnActor_Parms
		{
			const AActor* Actor;
			FVector ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_AAIController();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetFocalPointOnActor"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x54820400, 65535, sizeof(AIController_eventGetFocalPointOnActor_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, AIController_eventGetFocalPointOnActor_Parms), 0x0000000000000580, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_Actor = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Actor"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(Actor, AIController_eventGetFocalPointOnActor_Parms), 0x0000000000000082, Z_Construct_UClass_AActor_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AIController.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Retrieve the focal point this controller should focus to on given actor."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AAIController_GetFocusActor()
	{
		struct AIController_eventGetFocusActor_Parms
		{
			AActor* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_AAIController();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetFocusActor"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x54020401, 65535, sizeof(AIController_eventGetFocusActor_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, AIController_eventGetFocusActor_Parms), 0x0000000000000580, Z_Construct_UClass_AActor_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AIController.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Get the focused actor."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AAIController_GetImmediateMoveDestination()
	{
		struct AIController_eventGetImmediateMoveDestination_Parms
		{
			FVector ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_AAIController();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetImmediateMoveDestination"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x54820401, 65535, sizeof(AIController_eventGetImmediateMoveDestination_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, AIController_eventGetImmediateMoveDestination_Parms), 0x0000000000000580, Z_Construct_UScriptStruct_FVector());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|Navigation"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AIController.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Returns position of current path segment's end."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AAIController_GetMoveStatus()
	{
		struct AIController_eventGetMoveStatus_Parms
		{
			TEnumAsByte<EPathFollowingStatus::Type> ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_AAIController();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetMoveStatus"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x54020401, 65535, sizeof(AIController_eventGetMoveStatus_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(ReturnValue, AIController_eventGetMoveStatus_Parms), 0x0000000000000580, Z_Construct_UEnum_AIModule_EPathFollowingStatus());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|Navigation"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AIController.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Returns status of path following"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AAIController_GetPathFollowingComponent()
	{
		struct AIController_eventGetPathFollowingComponent_Parms
		{
			UPathFollowingComponent* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_AAIController();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetPathFollowingComponent"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x54020401, 65535, sizeof(AIController_eventGetPathFollowingComponent_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, AIController_eventGetPathFollowingComponent_Parms), 0x0000000000080588, Z_Construct_UClass_UPathFollowingComponent_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|Navigation"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AIController.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Returns PathFollowingComponent subobject *"));
			MetaData->SetValue(NewProp_ReturnValue, TEXT("EditInline"), TEXT("true"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AAIController_HasPartialPath()
	{
		struct AIController_eventHasPartialPath_Parms
		{
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_AAIController();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("HasPartialPath"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x54020401, 65535, sizeof(AIController_eventHasPartialPath_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, AIController_eventHasPartialPath_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, AIController_eventHasPartialPath_Parms), 0x0000000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, AIController_eventHasPartialPath_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|Navigation"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AIController.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Returns true if the current PathFollowingComponent's path is partial (does not reach desired destination)."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AAIController_K2_ClearFocus()
	{
		UObject* Outer=Z_Construct_UClass_AAIController();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("K2_ClearFocus"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("ClearFocus"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AIController.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Clears Focus, will also clear FocalPoint as a result"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AAIController_K2_SetFocalPoint()
	{
		struct AIController_eventK2_SetFocalPoint_Parms
		{
			FVector FP;
		};
		UObject* Outer=Z_Construct_UClass_AAIController();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("K2_SetFocalPoint"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04820401, 65535, sizeof(AIController_eventK2_SetFocalPoint_Parms));
			UProperty* NewProp_FP = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("FP"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(FP, AIController_eventK2_SetFocalPoint_Parms), 0x0000000000000080, Z_Construct_UScriptStruct_FVector());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("SetFocalPoint"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AIController.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Set the position that controller should be looking at."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AAIController_K2_SetFocus()
	{
		struct AIController_eventK2_SetFocus_Parms
		{
			AActor* NewFocus;
		};
		UObject* Outer=Z_Construct_UClass_AAIController();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("K2_SetFocus"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(AIController_eventK2_SetFocus_Parms));
			UProperty* NewProp_NewFocus = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NewFocus"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(NewFocus, AIController_eventK2_SetFocus_Parms), 0x0000000000000080, Z_Construct_UClass_AActor_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("SetFocus"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AIController.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Set Focus for actor, will set FocalPoint as a result."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AAIController_MoveToActor()
	{
		struct AIController_eventMoveToActor_Parms
		{
			AActor* Goal;
			float AcceptanceRadius;
			bool bStopOnOverlap;
			bool bUsePathfinding;
			bool bCanStrafe;
			TSubclassOf<UNavigationQueryFilter>  FilterClass;
			bool bAllowPartialPath;
			TEnumAsByte<EPathFollowingRequestResult::Type> ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_AAIController();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("MoveToActor"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(AIController_eventMoveToActor_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(ReturnValue, AIController_eventMoveToActor_Parms), 0x0000000000000580, Z_Construct_UEnum_AIModule_EPathFollowingRequestResult());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bAllowPartialPath, AIController_eventMoveToActor_Parms, bool);
			UProperty* NewProp_bAllowPartialPath = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("bAllowPartialPath"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bAllowPartialPath, AIController_eventMoveToActor_Parms), 0x0000040000000080, CPP_BOOL_PROPERTY_BITMASK(bAllowPartialPath, AIController_eventMoveToActor_Parms), sizeof(bool), true);
			UProperty* NewProp_FilterClass = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("FilterClass"), RF_Public|RF_Transient|RF_Native) UClassProperty(CPP_PROPERTY_BASE(FilterClass, AIController_eventMoveToActor_Parms), 0x0004000000000080, Z_Construct_UClass_UNavigationQueryFilter_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bCanStrafe, AIController_eventMoveToActor_Parms, bool);
			UProperty* NewProp_bCanStrafe = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("bCanStrafe"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bCanStrafe, AIController_eventMoveToActor_Parms), 0x0000040000000080, CPP_BOOL_PROPERTY_BITMASK(bCanStrafe, AIController_eventMoveToActor_Parms), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bUsePathfinding, AIController_eventMoveToActor_Parms, bool);
			UProperty* NewProp_bUsePathfinding = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("bUsePathfinding"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bUsePathfinding, AIController_eventMoveToActor_Parms), 0x0000000000000080, CPP_BOOL_PROPERTY_BITMASK(bUsePathfinding, AIController_eventMoveToActor_Parms), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bStopOnOverlap, AIController_eventMoveToActor_Parms, bool);
			UProperty* NewProp_bStopOnOverlap = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("bStopOnOverlap"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bStopOnOverlap, AIController_eventMoveToActor_Parms), 0x0000040000000080, CPP_BOOL_PROPERTY_BITMASK(bStopOnOverlap, AIController_eventMoveToActor_Parms), sizeof(bool), true);
			UProperty* NewProp_AcceptanceRadius = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("AcceptanceRadius"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(AcceptanceRadius, AIController_eventMoveToActor_Parms), 0x0000000000000080);
			UProperty* NewProp_Goal = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Goal"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(Goal, AIController_eventMoveToActor_Parms), 0x0000000000000080, Z_Construct_UClass_AActor_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("AdvancedDisplay"), TEXT("bStopOnOverlap,bCanStrafe,bAllowPartialPath"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|Navigation"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_AcceptanceRadius"), TEXT("-1.000000"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_bAllowPartialPath"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_bCanStrafe"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_bStopOnOverlap"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_bUsePathfinding"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AIController.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Makes AI go toward specified Goal actor (destination will be continuously updated)\n@param AcceptanceRadius - finish move if pawn gets close enough\n@param bStopOnOverlap - add pawn's radius to AcceptanceRadius\n@param bUsePathfinding - use navigation data to calculate path (otherwise it will go in straight line)\n@param bCanStrafe - set focus related flag: bAllowStrafe\n@param FilterClass - navigation filter for pathfinding adjustments\n@param bAllowPartialPath - use incomplete path when goal can't be reached\n    @note AcceptanceRadius has default value or -1 due to Header Parser not being able to recognize UPathFollowingComponent::DefaultAcceptanceRadius"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AAIController_MoveToLocation()
	{
		struct AIController_eventMoveToLocation_Parms
		{
			FVector Dest;
			float AcceptanceRadius;
			bool bStopOnOverlap;
			bool bUsePathfinding;
			bool bProjectDestinationToNavigation;
			bool bCanStrafe;
			TSubclassOf<UNavigationQueryFilter>  FilterClass;
			bool bAllowPartialPath;
			TEnumAsByte<EPathFollowingRequestResult::Type> ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_AAIController();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("MoveToLocation"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04C20401, 65535, sizeof(AIController_eventMoveToLocation_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(ReturnValue, AIController_eventMoveToLocation_Parms), 0x0000000000000580, Z_Construct_UEnum_AIModule_EPathFollowingRequestResult());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bAllowPartialPath, AIController_eventMoveToLocation_Parms, bool);
			UProperty* NewProp_bAllowPartialPath = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("bAllowPartialPath"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bAllowPartialPath, AIController_eventMoveToLocation_Parms), 0x0000040000000080, CPP_BOOL_PROPERTY_BITMASK(bAllowPartialPath, AIController_eventMoveToLocation_Parms), sizeof(bool), true);
			UProperty* NewProp_FilterClass = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("FilterClass"), RF_Public|RF_Transient|RF_Native) UClassProperty(CPP_PROPERTY_BASE(FilterClass, AIController_eventMoveToLocation_Parms), 0x0004000000000080, Z_Construct_UClass_UNavigationQueryFilter_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bCanStrafe, AIController_eventMoveToLocation_Parms, bool);
			UProperty* NewProp_bCanStrafe = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("bCanStrafe"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bCanStrafe, AIController_eventMoveToLocation_Parms), 0x0000040000000080, CPP_BOOL_PROPERTY_BITMASK(bCanStrafe, AIController_eventMoveToLocation_Parms), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bProjectDestinationToNavigation, AIController_eventMoveToLocation_Parms, bool);
			UProperty* NewProp_bProjectDestinationToNavigation = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("bProjectDestinationToNavigation"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bProjectDestinationToNavigation, AIController_eventMoveToLocation_Parms), 0x0000000000000080, CPP_BOOL_PROPERTY_BITMASK(bProjectDestinationToNavigation, AIController_eventMoveToLocation_Parms), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bUsePathfinding, AIController_eventMoveToLocation_Parms, bool);
			UProperty* NewProp_bUsePathfinding = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("bUsePathfinding"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bUsePathfinding, AIController_eventMoveToLocation_Parms), 0x0000000000000080, CPP_BOOL_PROPERTY_BITMASK(bUsePathfinding, AIController_eventMoveToLocation_Parms), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bStopOnOverlap, AIController_eventMoveToLocation_Parms, bool);
			UProperty* NewProp_bStopOnOverlap = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("bStopOnOverlap"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bStopOnOverlap, AIController_eventMoveToLocation_Parms), 0x0000040000000080, CPP_BOOL_PROPERTY_BITMASK(bStopOnOverlap, AIController_eventMoveToLocation_Parms), sizeof(bool), true);
			UProperty* NewProp_AcceptanceRadius = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("AcceptanceRadius"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(AcceptanceRadius, AIController_eventMoveToLocation_Parms), 0x0000000000000080);
			UProperty* NewProp_Dest = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Dest"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Dest, AIController_eventMoveToLocation_Parms), 0x0000000008000182, Z_Construct_UScriptStruct_FVector());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("AdvancedDisplay"), TEXT("bStopOnOverlap,bCanStrafe,bAllowPartialPath"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|Navigation"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_AcceptanceRadius"), TEXT("-1.000000"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_bAllowPartialPath"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_bCanStrafe"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_bProjectDestinationToNavigation"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_bStopOnOverlap"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_bUsePathfinding"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AIController.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Makes AI go toward specified Dest location\n@param AcceptanceRadius - finish move if pawn gets close enough\n@param bStopOnOverlap - add pawn's radius to AcceptanceRadius\n@param bUsePathfinding - use navigation data to calculate path (otherwise it will go in straight line)\n@param bProjectDestinationToNavigation - project location on navigation data before using it\n@param bCanStrafe - set focus related flag: bAllowStrafe\n@param FilterClass - navigation filter for pathfinding adjustments\n@param bAllowPartialPath - use incomplete path when goal can't be reached\n    @note AcceptanceRadius has default value or -1 due to Header Parser not being able to recognize UPathFollowingComponent::DefaultAcceptanceRadius"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AAIController_OnGameplayTaskResourcesClaimed()
	{
		struct AIController_eventOnGameplayTaskResourcesClaimed_Parms
		{
			FGameplayResourceSet NewlyClaimed;
			FGameplayResourceSet FreshlyReleased;
		};
		UObject* Outer=Z_Construct_UClass_AAIController();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnGameplayTaskResourcesClaimed"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x00020400, 65535, sizeof(AIController_eventOnGameplayTaskResourcesClaimed_Parms));
			UProperty* NewProp_FreshlyReleased = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("FreshlyReleased"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(FreshlyReleased, AIController_eventOnGameplayTaskResourcesClaimed_Parms), 0x0000000000000080, Z_Construct_UScriptStruct_FGameplayResourceSet());
			UProperty* NewProp_NewlyClaimed = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NewlyClaimed"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(NewlyClaimed, AIController_eventOnGameplayTaskResourcesClaimed_Parms), 0x0000000000000080, Z_Construct_UScriptStruct_FGameplayResourceSet());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AIController.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("other GT tasks related"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AAIController_OnPossess()
	{
		UObject* Outer=Z_Construct_UClass_AAIController();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnPossess"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x08020800, 65535, sizeof(AIController_eventOnPossess_Parms));
			UProperty* NewProp_PossessedPawn = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("PossessedPawn"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(PossessedPawn, AIController_eventOnPossess_Parms), 0x0000000000000080, Z_Construct_UClass_APawn_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AIController.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Event called when PossessedPawn is possessed by this controller."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AAIController_OnUsingBlackBoard()
	{
		UObject* Outer=Z_Construct_UClass_AAIController();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnUsingBlackBoard"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x08080800, 65535, sizeof(AIController_eventOnUsingBlackBoard_Parms));
			UProperty* NewProp_BlackboardAsset = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("BlackboardAsset"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(BlackboardAsset, AIController_eventOnUsingBlackBoard_Parms), 0x0000000000000080, Z_Construct_UClass_UBlackboardData_NoRegister());
			UProperty* NewProp_BlackboardComp = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("BlackboardComp"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(BlackboardComp, AIController_eventOnUsingBlackBoard_Parms), 0x0000000000080080, Z_Construct_UClass_UBlackboardComponent_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AIController.h"));
			MetaData->SetValue(NewProp_BlackboardComp, TEXT("EditInline"), TEXT("true"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AAIController_RunBehaviorTree()
	{
		struct AIController_eventRunBehaviorTree_Parms
		{
			UBehaviorTree* BTAsset;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_AAIController();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("RunBehaviorTree"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020400, 65535, sizeof(AIController_eventRunBehaviorTree_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, AIController_eventRunBehaviorTree_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, AIController_eventRunBehaviorTree_Parms), 0x0000000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, AIController_eventRunBehaviorTree_Parms), sizeof(bool), true);
			UProperty* NewProp_BTAsset = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("BTAsset"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(BTAsset, AIController_eventRunBehaviorTree_Parms), 0x0000000000000080, Z_Construct_UClass_UBehaviorTree_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AIController.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Starts executing behavior tree."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AAIController_SetMoveBlockDetection()
	{
		struct AIController_eventSetMoveBlockDetection_Parms
		{
			bool bEnable;
		};
		UObject* Outer=Z_Construct_UClass_AAIController();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetMoveBlockDetection"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(AIController_eventSetMoveBlockDetection_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bEnable, AIController_eventSetMoveBlockDetection_Parms, bool);
			UProperty* NewProp_bEnable = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("bEnable"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bEnable, AIController_eventSetMoveBlockDetection_Parms), 0x0000000000000080, CPP_BOOL_PROPERTY_BITMASK(bEnable, AIController_eventSetMoveBlockDetection_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|Navigation"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AIController.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Updates state of movement block detection."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AAIController_UseBlackboard()
	{
		struct AIController_eventUseBlackboard_Parms
		{
			UBlackboardData* BlackboardAsset;
			UBlackboardComponent* BlackboardComponent;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_AAIController();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("UseBlackboard"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04420401, 65535, sizeof(AIController_eventUseBlackboard_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, AIController_eventUseBlackboard_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, AIController_eventUseBlackboard_Parms), 0x0000000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, AIController_eventUseBlackboard_Parms), sizeof(bool), true);
			UProperty* NewProp_BlackboardComponent = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("BlackboardComponent"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(BlackboardComponent, AIController_eventUseBlackboard_Parms), 0x0000000000080180, Z_Construct_UClass_UBlackboardComponent_NoRegister());
			UProperty* NewProp_BlackboardAsset = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("BlackboardAsset"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(BlackboardAsset, AIController_eventUseBlackboard_Parms), 0x0000000000000080, Z_Construct_UClass_UBlackboardData_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AIController.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Makes AI use the specified Blackboard asset & creates a Blackboard Component if one does not already exist.\n@param       BlackboardAsset                 The Blackboard asset to use.\n@param       BlackboardComponent             The Blackboard component that was used or created to work with the passed-in Blackboard Asset.\n@return true if we successfully linked the blackboard asset to the blackboard component."));
			MetaData->SetValue(NewProp_BlackboardComponent, TEXT("EditInline"), TEXT("true"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_AAIController_NoRegister()
	{
		return AAIController::StaticClass();
	}
	UClass* Z_Construct_UClass_AAIController()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AController();
			Z_Construct_UPackage_AIModule();
			OuterClass = AAIController::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900280;

				OuterClass->LinkChild(Z_Construct_UFunction_AAIController_GetAIPerceptionComponent());
				OuterClass->LinkChild(Z_Construct_UFunction_AAIController_GetFocalPoint());
				OuterClass->LinkChild(Z_Construct_UFunction_AAIController_GetFocalPointOnActor());
				OuterClass->LinkChild(Z_Construct_UFunction_AAIController_GetFocusActor());
				OuterClass->LinkChild(Z_Construct_UFunction_AAIController_GetImmediateMoveDestination());
				OuterClass->LinkChild(Z_Construct_UFunction_AAIController_GetMoveStatus());
				OuterClass->LinkChild(Z_Construct_UFunction_AAIController_GetPathFollowingComponent());
				OuterClass->LinkChild(Z_Construct_UFunction_AAIController_HasPartialPath());
				OuterClass->LinkChild(Z_Construct_UFunction_AAIController_K2_ClearFocus());
				OuterClass->LinkChild(Z_Construct_UFunction_AAIController_K2_SetFocalPoint());
				OuterClass->LinkChild(Z_Construct_UFunction_AAIController_K2_SetFocus());
				OuterClass->LinkChild(Z_Construct_UFunction_AAIController_MoveToActor());
				OuterClass->LinkChild(Z_Construct_UFunction_AAIController_MoveToLocation());
				OuterClass->LinkChild(Z_Construct_UFunction_AAIController_OnGameplayTaskResourcesClaimed());
				OuterClass->LinkChild(Z_Construct_UFunction_AAIController_OnPossess());
				OuterClass->LinkChild(Z_Construct_UFunction_AAIController_OnUsingBlackBoard());
				OuterClass->LinkChild(Z_Construct_UFunction_AAIController_RunBehaviorTree());
				OuterClass->LinkChild(Z_Construct_UFunction_AAIController_SetMoveBlockDetection());
				OuterClass->LinkChild(Z_Construct_UFunction_AAIController_UseBlackboard());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_ReceiveMoveCompleted = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ReceiveMoveCompleted"), RF_Public|RF_Transient|RF_Native) UMulticastDelegateProperty(CPP_PROPERTY_BASE(ReceiveMoveCompleted, AAIController), 0x0000000010080000, Z_Construct_UDelegateFunction_AIModule_AIMoveCompletedSignature__DelegateSignature());
				UProperty* NewProp_CachedGameplayTasksComponent = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CachedGameplayTasksComponent"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(CachedGameplayTasksComponent, AAIController), 0x0000080000080008, Z_Construct_UClass_UGameplayTasksComponent_NoRegister());
				UProperty* NewProp_Blackboard = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Blackboard"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(Blackboard, AAIController), 0x000008000008001c, Z_Construct_UClass_UBlackboardComponent_NoRegister());
				UProperty* NewProp_ActionsComp = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ActionsComp"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(ActionsComp, AAIController), 0x000000000008001c, Z_Construct_UClass_UPawnActionsComponent_NoRegister());
				UProperty* NewProp_PerceptionComponent = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("PerceptionComponent"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(PerceptionComponent, AAIController), 0x00000000000b0009, Z_Construct_UClass_UAIPerceptionComponent_NoRegister());
				UProperty* NewProp_BrainComponent = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("BrainComponent"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(BrainComponent, AAIController), 0x000000000008000c, Z_Construct_UClass_UBrainComponent_NoRegister());
				UProperty* NewProp_PathFollowingComponent = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("PathFollowingComponent"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(PathFollowingComponent, AAIController), 0x00000000000b0009, Z_Construct_UClass_UPathFollowingComponent_NoRegister());
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bWantsPlayerState, AAIController, uint8);
				UProperty* NewProp_bWantsPlayerState = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bWantsPlayerState"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bWantsPlayerState, AAIController), 0x0000000000000000, CPP_BOOL_PROPERTY_BITMASK(bWantsPlayerState, AAIController), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bAllowStrafe, AAIController, uint8);
				UProperty* NewProp_bAllowStrafe = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bAllowStrafe"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bAllowStrafe, AAIController), 0x0000000000000000, CPP_BOOL_PROPERTY_BITMASK(bAllowStrafe, AAIController), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bSkipExtraLOSChecks, AAIController, uint8);
				UProperty* NewProp_bSkipExtraLOSChecks = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bSkipExtraLOSChecks"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bSkipExtraLOSChecks, AAIController), 0x0000000000000000, CPP_BOOL_PROPERTY_BITMASK(bSkipExtraLOSChecks, AAIController), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bLOSflag, AAIController, uint8);
				UProperty* NewProp_bLOSflag = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bLOSflag"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bLOSflag, AAIController), 0x0000000000000000, CPP_BOOL_PROPERTY_BITMASK(bLOSflag, AAIController), sizeof(uint8), false);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_AAIController_GetAIPerceptionComponent()); // 3170498824
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_AAIController_GetFocalPoint()); // 1004176103
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_AAIController_GetFocalPointOnActor()); // 103116058
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_AAIController_GetFocusActor()); // 1555221271
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_AAIController_GetImmediateMoveDestination()); // 4245493129
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_AAIController_GetMoveStatus()); // 415975992
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_AAIController_GetPathFollowingComponent()); // 3396386295
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_AAIController_HasPartialPath()); // 1108675167
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_AAIController_K2_ClearFocus()); // 2244387353
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_AAIController_K2_SetFocalPoint()); // 203034718
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_AAIController_K2_SetFocus()); // 2275877828
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_AAIController_MoveToActor()); // 1125956883
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_AAIController_MoveToLocation()); // 235365663
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_AAIController_OnGameplayTaskResourcesClaimed()); // 3569362284
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_AAIController_OnPossess()); // 951767437
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_AAIController_OnUsingBlackBoard()); // 2624570756
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_AAIController_RunBehaviorTree()); // 3079753325
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_AAIController_SetMoveBlockDetection()); // 400385913
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_AAIController_UseBlackboard()); // 933152491
				OuterClass->Interfaces.Add(FImplementedInterface(Z_Construct_UClass_UAIPerceptionListenerInterface_NoRegister(), VTABLE_OFFSET(AAIController, IAIPerceptionListenerInterface), false ));
				OuterClass->Interfaces.Add(FImplementedInterface(Z_Construct_UClass_UGameplayTaskOwnerInterface_NoRegister(), VTABLE_OFFSET(AAIController, IGameplayTaskOwnerInterface), false ));
				OuterClass->Interfaces.Add(FImplementedInterface(Z_Construct_UClass_UGenericTeamAgentInterface_NoRegister(), VTABLE_OFFSET(AAIController, IGenericTeamAgentInterface), false ));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("ClassGroupNames"), TEXT("AI"));
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Collision Rendering Utilities|Transformation"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("AIController.h"));
				MetaData->SetValue(OuterClass, TEXT("IsBlueprintBase"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/AIController.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("AIController is the base class of controllers for AI-controlled Pawns.\n\nControllers are non-physical actors that can be attached to a pawn to control its actions.\nAIControllers manage the artificial intelligence for the pawns they control.\nIn networked games, they only exist on the server.\n\n@see https://docs.unrealengine.com/latest/INT/Gameplay/Framework/Controller/"));
				MetaData->SetValue(NewProp_ReceiveMoveCompleted, TEXT("DisplayName"), TEXT("MoveCompleted"));
				MetaData->SetValue(NewProp_ReceiveMoveCompleted, TEXT("ModuleRelativePath"), TEXT("Classes/AIController.h"));
				MetaData->SetValue(NewProp_ReceiveMoveCompleted, TEXT("ToolTip"), TEXT("Blueprint notification that we've completed the current movement request"));
				MetaData->SetValue(NewProp_CachedGameplayTasksComponent, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_CachedGameplayTasksComponent, TEXT("ModuleRelativePath"), TEXT("Classes/AIController.h"));
				MetaData->SetValue(NewProp_Blackboard, TEXT("AllowPrivateAccess"), TEXT("true"));
				MetaData->SetValue(NewProp_Blackboard, TEXT("Category"), TEXT("AI"));
				MetaData->SetValue(NewProp_Blackboard, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_Blackboard, TEXT("ModuleRelativePath"), TEXT("Classes/AIController.h"));
				MetaData->SetValue(NewProp_Blackboard, TEXT("ToolTip"), TEXT("blackboard"));
				MetaData->SetValue(NewProp_ActionsComp, TEXT("AllowPrivateAccess"), TEXT("true"));
				MetaData->SetValue(NewProp_ActionsComp, TEXT("Category"), TEXT("AI"));
				MetaData->SetValue(NewProp_ActionsComp, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_ActionsComp, TEXT("ModuleRelativePath"), TEXT("Classes/AIController.h"));
				MetaData->SetValue(NewProp_PerceptionComponent, TEXT("Category"), TEXT("AI"));
				MetaData->SetValue(NewProp_PerceptionComponent, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_PerceptionComponent, TEXT("ModuleRelativePath"), TEXT("Classes/AIController.h"));
				MetaData->SetValue(NewProp_BrainComponent, TEXT("Category"), TEXT("AI"));
				MetaData->SetValue(NewProp_BrainComponent, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_BrainComponent, TEXT("ModuleRelativePath"), TEXT("Classes/AIController.h"));
				MetaData->SetValue(NewProp_BrainComponent, TEXT("ToolTip"), TEXT("Component responsible for behaviors."));
				MetaData->SetValue(NewProp_PathFollowingComponent, TEXT("Category"), TEXT("AI"));
				MetaData->SetValue(NewProp_PathFollowingComponent, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_PathFollowingComponent, TEXT("ModuleRelativePath"), TEXT("Classes/AIController.h"));
				MetaData->SetValue(NewProp_bWantsPlayerState, TEXT("ModuleRelativePath"), TEXT("Classes/AIController.h"));
				MetaData->SetValue(NewProp_bWantsPlayerState, TEXT("ToolTip"), TEXT("Specifies if this AI wants its own PlayerState."));
				MetaData->SetValue(NewProp_bAllowStrafe, TEXT("ModuleRelativePath"), TEXT("Classes/AIController.h"));
				MetaData->SetValue(NewProp_bAllowStrafe, TEXT("ToolTip"), TEXT("Is strafing allowed during movement?"));
				MetaData->SetValue(NewProp_bSkipExtraLOSChecks, TEXT("ModuleRelativePath"), TEXT("Classes/AIController.h"));
				MetaData->SetValue(NewProp_bSkipExtraLOSChecks, TEXT("ToolTip"), TEXT("Skip extra line of sight traces to extremities of target being checked."));
				MetaData->SetValue(NewProp_bLOSflag, TEXT("ModuleRelativePath"), TEXT("Classes/AIController.h"));
				MetaData->SetValue(NewProp_bLOSflag, TEXT("ToolTip"), TEXT("used for alternating LineOfSight traces"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AAIController(Z_Construct_UClass_AAIController, TEXT("AAIController"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(AAIController);
	UClass* Z_Construct_UClass_ADetourCrowdAIController_NoRegister()
	{
		return ADetourCrowdAIController::StaticClass();
	}
	UClass* Z_Construct_UClass_ADetourCrowdAIController()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AAIController();
			Z_Construct_UPackage_AIModule();
			OuterClass = ADetourCrowdAIController::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800280;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Collision Rendering Utilities|Transformation"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("DetourCrowdAIController.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/DetourCrowdAIController.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_ADetourCrowdAIController(Z_Construct_UClass_ADetourCrowdAIController, TEXT("ADetourCrowdAIController"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(ADetourCrowdAIController);
	UScriptStruct* Z_Construct_UScriptStruct_FAIDataProviderBoolValue()
	{
		UPackage* Outer=Z_Construct_UPackage_AIModule();
		extern uint32 Get_Z_Construct_UScriptStruct_FAIDataProviderBoolValue_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("AIDataProviderBoolValue"), sizeof(FAIDataProviderBoolValue), Get_Z_Construct_UScriptStruct_FAIDataProviderBoolValue_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("AIDataProviderBoolValue"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), Z_Construct_UScriptStruct_FAIDataProviderTypedValue(), new UScriptStruct::TCppStructOps<FAIDataProviderBoolValue>, EStructFlags(0x00000205));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(DefaultValue, FAIDataProviderBoolValue, bool);
			UProperty* NewProp_DefaultValue = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("DefaultValue"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(DefaultValue, FAIDataProviderBoolValue), 0x0000000000000001, CPP_BOOL_PROPERTY_BITMASK(DefaultValue, FAIDataProviderBoolValue), sizeof(bool), true);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/DataProviders/AIDataProvider.h"));
			MetaData->SetValue(NewProp_DefaultValue, TEXT("Category"), TEXT("Value"));
			MetaData->SetValue(NewProp_DefaultValue, TEXT("ModuleRelativePath"), TEXT("Classes/DataProviders/AIDataProvider.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FAIDataProviderBoolValue_CRC() { return 180818461U; }
	UScriptStruct* Z_Construct_UScriptStruct_FAIDataProviderFloatValue()
	{
		UPackage* Outer=Z_Construct_UPackage_AIModule();
		extern uint32 Get_Z_Construct_UScriptStruct_FAIDataProviderFloatValue_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("AIDataProviderFloatValue"), sizeof(FAIDataProviderFloatValue), Get_Z_Construct_UScriptStruct_FAIDataProviderFloatValue_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("AIDataProviderFloatValue"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), Z_Construct_UScriptStruct_FAIDataProviderTypedValue(), new UScriptStruct::TCppStructOps<FAIDataProviderFloatValue>, EStructFlags(0x00000205));
			UProperty* NewProp_DefaultValue = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("DefaultValue"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(DefaultValue, FAIDataProviderFloatValue), 0x0000000000000001);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/DataProviders/AIDataProvider.h"));
			MetaData->SetValue(NewProp_DefaultValue, TEXT("Category"), TEXT("Value"));
			MetaData->SetValue(NewProp_DefaultValue, TEXT("ModuleRelativePath"), TEXT("Classes/DataProviders/AIDataProvider.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FAIDataProviderFloatValue_CRC() { return 1295848485U; }
	UScriptStruct* Z_Construct_UScriptStruct_FAIDataProviderIntValue()
	{
		UPackage* Outer=Z_Construct_UPackage_AIModule();
		extern uint32 Get_Z_Construct_UScriptStruct_FAIDataProviderIntValue_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("AIDataProviderIntValue"), sizeof(FAIDataProviderIntValue), Get_Z_Construct_UScriptStruct_FAIDataProviderIntValue_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("AIDataProviderIntValue"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), Z_Construct_UScriptStruct_FAIDataProviderTypedValue(), new UScriptStruct::TCppStructOps<FAIDataProviderIntValue>, EStructFlags(0x00000205));
			UProperty* NewProp_DefaultValue = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("DefaultValue"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(DefaultValue, FAIDataProviderIntValue), 0x0000000000000001);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/DataProviders/AIDataProvider.h"));
			MetaData->SetValue(NewProp_DefaultValue, TEXT("Category"), TEXT("Value"));
			MetaData->SetValue(NewProp_DefaultValue, TEXT("ModuleRelativePath"), TEXT("Classes/DataProviders/AIDataProvider.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FAIDataProviderIntValue_CRC() { return 2051840267U; }
	UScriptStruct* Z_Construct_UScriptStruct_FAIDataProviderStructValue()
	{
		UPackage* Outer=Z_Construct_UPackage_AIModule();
		extern uint32 Get_Z_Construct_UScriptStruct_FAIDataProviderStructValue_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("AIDataProviderStructValue"), sizeof(FAIDataProviderStructValue), Get_Z_Construct_UScriptStruct_FAIDataProviderStructValue_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("AIDataProviderStructValue"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), Z_Construct_UScriptStruct_FAIDataProviderValue(), new UScriptStruct::TCppStructOps<FAIDataProviderStructValue>, EStructFlags(0x00000205));
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/DataProviders/AIDataProvider.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FAIDataProviderStructValue_CRC() { return 2498915988U; }
	UScriptStruct* Z_Construct_UScriptStruct_FAIDataProviderTypedValue()
	{
		UPackage* Outer=Z_Construct_UPackage_AIModule();
		extern uint32 Get_Z_Construct_UScriptStruct_FAIDataProviderTypedValue_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("AIDataProviderTypedValue"), sizeof(FAIDataProviderTypedValue), Get_Z_Construct_UScriptStruct_FAIDataProviderTypedValue_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("AIDataProviderTypedValue"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), Z_Construct_UScriptStruct_FAIDataProviderValue(), new UScriptStruct::TCppStructOps<FAIDataProviderTypedValue>, EStructFlags(0x00000205));
			UProperty* NewProp_PropertyType = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("PropertyType"), RF_Public|RF_Transient|RF_Native) UClassProperty(CPP_PROPERTY_BASE(PropertyType, FAIDataProviderTypedValue), 0x0004000000000000, UProperty::StaticClass());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/DataProviders/AIDataProvider.h"));
			MetaData->SetValue(NewProp_PropertyType, TEXT("ModuleRelativePath"), TEXT("Classes/DataProviders/AIDataProvider.h"));
			MetaData->SetValue(NewProp_PropertyType, TEXT("ToolTip"), TEXT("type of value"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FAIDataProviderTypedValue_CRC() { return 2183162082U; }
	UScriptStruct* Z_Construct_UScriptStruct_FAIDataProviderValue()
	{
		UPackage* Outer=Z_Construct_UPackage_AIModule();
		extern uint32 Get_Z_Construct_UScriptStruct_FAIDataProviderValue_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("AIDataProviderValue"), sizeof(FAIDataProviderValue), Get_Z_Construct_UScriptStruct_FAIDataProviderValue_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("AIDataProviderValue"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FAIDataProviderValue>, EStructFlags(0x00000205));
			UProperty* NewProp_DataField = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("DataField"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(DataField, FAIDataProviderValue), 0x0000000000000001);
			UProperty* NewProp_DataBinding = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("DataBinding"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(DataBinding, FAIDataProviderValue), 0x0002000000080009, Z_Construct_UClass_UAIDataProvider_NoRegister());
			UProperty* NewProp_CachedProperty = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("CachedProperty"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(CachedProperty, FAIDataProviderValue), 0x0000000000002000, UProperty::StaticClass());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/DataProviders/AIDataProvider.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("AIDataProvider is an object that can provide collection of properties\nassociated with bound pawn owner or request Id.\n\nEditable properties are used to set up provider instance,\ncreating additional filters or ways of accessing data (e.g. gameplay tag of ability)\n\nNon editable properties are holding data"));
			MetaData->SetValue(NewProp_DataField, TEXT("Category"), TEXT("Value"));
			MetaData->SetValue(NewProp_DataField, TEXT("ModuleRelativePath"), TEXT("Classes/DataProviders/AIDataProvider.h"));
			MetaData->SetValue(NewProp_DataField, TEXT("ToolTip"), TEXT("name of provider's value property"));
			MetaData->SetValue(NewProp_DataBinding, TEXT("Category"), TEXT("Value"));
			MetaData->SetValue(NewProp_DataBinding, TEXT("EditInline"), TEXT("true"));
			MetaData->SetValue(NewProp_DataBinding, TEXT("ModuleRelativePath"), TEXT("Classes/DataProviders/AIDataProvider.h"));
			MetaData->SetValue(NewProp_DataBinding, TEXT("ToolTip"), TEXT("(optional) provider for dynamic data binding"));
			MetaData->SetValue(NewProp_CachedProperty, TEXT("ModuleRelativePath"), TEXT("Classes/DataProviders/AIDataProvider.h"));
			MetaData->SetValue(NewProp_CachedProperty, TEXT("ToolTip"), TEXT("cached uproperty of provider"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FAIDataProviderValue_CRC() { return 2313799628U; }
	UClass* Z_Construct_UClass_UAIDataProvider_NoRegister()
	{
		return UAIDataProvider::StaticClass();
	}
	UClass* Z_Construct_UClass_UAIDataProvider()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage_AIModule();
			OuterClass = UAIDataProvider::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20103081;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("AutoExpandCategories"), TEXT("Provider"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("DataProviders/AIDataProvider.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/DataProviders/AIDataProvider.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAIDataProvider(Z_Construct_UClass_UAIDataProvider, TEXT("UAIDataProvider"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAIDataProvider);
	UClass* Z_Construct_UClass_UAIDataProvider_QueryParams_NoRegister()
	{
		return UAIDataProvider_QueryParams::StaticClass();
	}
	UClass* Z_Construct_UClass_UAIDataProvider_QueryParams()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UAIDataProvider();
			Z_Construct_UPackage_AIModule();
			OuterClass = UAIDataProvider_QueryParams::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20103080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(BoolValue, UAIDataProvider_QueryParams, bool);
				UProperty* NewProp_BoolValue = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("BoolValue"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(BoolValue, UAIDataProvider_QueryParams), 0x0000000000000000, CPP_BOOL_PROPERTY_BITMASK(BoolValue, UAIDataProvider_QueryParams), sizeof(bool), true);
				UProperty* NewProp_IntValue = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("IntValue"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(IntValue, UAIDataProvider_QueryParams), 0x0000000000000000);
				UProperty* NewProp_FloatValue = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("FloatValue"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(FloatValue, UAIDataProvider_QueryParams), 0x0000000000000000);
				UProperty* NewProp_ParamName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ParamName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(ParamName, UAIDataProvider_QueryParams), 0x0000000000000001);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("AutoExpandCategories"), TEXT("Provider"));
				MetaData->SetValue(OuterClass, TEXT("DisplayName"), TEXT("Query Params"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("DataProviders/AIDataProvider_QueryParams.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/DataProviders/AIDataProvider_QueryParams.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("AIDataProvider_QueryParams is used with environment queries\n\nIt allows defining simple parameters for running query,\nwhich are not tied to any specific pawn, but defined\nfor every query execution."));
				MetaData->SetValue(NewProp_BoolValue, TEXT("ModuleRelativePath"), TEXT("Classes/DataProviders/AIDataProvider_QueryParams.h"));
				MetaData->SetValue(NewProp_IntValue, TEXT("ModuleRelativePath"), TEXT("Classes/DataProviders/AIDataProvider_QueryParams.h"));
				MetaData->SetValue(NewProp_FloatValue, TEXT("ModuleRelativePath"), TEXT("Classes/DataProviders/AIDataProvider_QueryParams.h"));
				MetaData->SetValue(NewProp_ParamName, TEXT("Category"), TEXT("Provider"));
				MetaData->SetValue(NewProp_ParamName, TEXT("ModuleRelativePath"), TEXT("Classes/DataProviders/AIDataProvider_QueryParams.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAIDataProvider_QueryParams(Z_Construct_UClass_UAIDataProvider_QueryParams, TEXT("UAIDataProvider_QueryParams"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAIDataProvider_QueryParams);
	UClass* Z_Construct_UClass_UAIHotSpotManager_NoRegister()
	{
		return UAIHotSpotManager::StaticClass();
	}
	UClass* Z_Construct_UClass_UAIHotSpotManager()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage_AIModule();
			OuterClass = UAIHotSpotManager::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("HotSpots/AIHotSpotManager.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/HotSpots/AIHotSpotManager.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAIHotSpotManager(Z_Construct_UClass_UAIHotSpotManager, TEXT("UAIHotSpotManager"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAIHotSpotManager);
	UFunction* Z_Construct_UFunction_UAISystem_AIIgnorePlayers()
	{
		UObject* Outer=Z_Construct_UClass_UAISystem();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("AIIgnorePlayers"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x00020600, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AISystem.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("cheats"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAISystem_AILoggingVerbose()
	{
		UObject* Outer=Z_Construct_UClass_UAISystem();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("AILoggingVerbose"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x00020600, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AISystem.h"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UAISystem_NoRegister()
	{
		return UAISystem::StaticClass();
	}
	UClass* Z_Construct_UClass_UAISystem()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UAISystemBase();
			Z_Construct_UPackage_AIModule();
			OuterClass = UAISystem::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100086;

				OuterClass->LinkChild(Z_Construct_UFunction_UAISystem_AIIgnorePlayers());
				OuterClass->LinkChild(Z_Construct_UFunction_UAISystem_AILoggingVerbose());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_HotSpotManager = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("HotSpotManager"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(HotSpotManager, UAISystem), 0x0000080000002000, Z_Construct_UClass_UAIHotSpotManager_NoRegister());
				UProperty* NewProp_AllProxyObjects = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AllProxyObjects"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(AllProxyObjects, UAISystem), 0x0000080000002000);
				UProperty* NewProp_AllProxyObjects_Inner = new(EC_InternalUseOnlyConstructor, NewProp_AllProxyObjects, TEXT("AllProxyObjects"), RF_Public|RF_Transient|RF_Native) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UClass_UAIAsyncTaskBlueprintProxy_NoRegister());
				UProperty* NewProp_PerceptionSystem = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("PerceptionSystem"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(PerceptionSystem, UAISystem), 0x0000080000002000, Z_Construct_UClass_UAIPerceptionSystem_NoRegister());
				UProperty* NewProp_EnvironmentQueryManager = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("EnvironmentQueryManager"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(EnvironmentQueryManager, UAISystem), 0x0000080000002000, Z_Construct_UClass_UEnvQueryManager_NoRegister());
				UProperty* NewProp_BehaviorTreeManager = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("BehaviorTreeManager"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(BehaviorTreeManager, UAISystem), 0x0000080000002000, Z_Construct_UClass_UBehaviorTreeManager_NoRegister());
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bEnableBTAITasks, UAISystem, bool);
				UProperty* NewProp_bEnableBTAITasks = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bEnableBTAITasks"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bEnableBTAITasks, UAISystem), 0x0000000000054001, CPP_BOOL_PROPERTY_BITMASK(bEnableBTAITasks, UAISystem), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bAllowStrafing, UAISystem, bool);
				UProperty* NewProp_bAllowStrafing = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bAllowStrafing"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bAllowStrafing, UAISystem), 0x0000000000054001, CPP_BOOL_PROPERTY_BITMASK(bAllowStrafing, UAISystem), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bAcceptPartialPaths, UAISystem, bool);
				UProperty* NewProp_bAcceptPartialPaths = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bAcceptPartialPaths"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bAcceptPartialPaths, UAISystem), 0x0000000000054001, CPP_BOOL_PROPERTY_BITMASK(bAcceptPartialPaths, UAISystem), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bFinishMoveOnGoalOverlap, UAISystem, bool);
				UProperty* NewProp_bFinishMoveOnGoalOverlap = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bFinishMoveOnGoalOverlap"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bFinishMoveOnGoalOverlap, UAISystem), 0x0000000000054001, CPP_BOOL_PROPERTY_BITMASK(bFinishMoveOnGoalOverlap, UAISystem), sizeof(bool), true);
				UProperty* NewProp_AcceptanceRadius = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AcceptanceRadius"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(AcceptanceRadius, UAISystem), 0x0000000000054001);
				UProperty* NewProp_HotSpotManagerClassName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("HotSpotManagerClassName"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(HotSpotManagerClassName, UAISystem), 0x0000080000044001, Z_Construct_UScriptStruct_FStringClassReference());
				UProperty* NewProp_PerceptionSystemClassName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("PerceptionSystemClassName"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(PerceptionSystemClassName, UAISystem), 0x0000080000044001, Z_Construct_UScriptStruct_FStringClassReference());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UAISystem_AIIgnorePlayers()); // 453323583
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UAISystem_AILoggingVerbose()); // 3662977001
				OuterClass->ClassConfigName = FName(TEXT("Engine"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("AISystem.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/AISystem.h"));
				MetaData->SetValue(NewProp_HotSpotManager, TEXT("ModuleRelativePath"), TEXT("Classes/AISystem.h"));
				MetaData->SetValue(NewProp_AllProxyObjects, TEXT("ModuleRelativePath"), TEXT("Classes/AISystem.h"));
				MetaData->SetValue(NewProp_PerceptionSystem, TEXT("ModuleRelativePath"), TEXT("Classes/AISystem.h"));
				MetaData->SetValue(NewProp_EnvironmentQueryManager, TEXT("ModuleRelativePath"), TEXT("Classes/AISystem.h"));
				MetaData->SetValue(NewProp_EnvironmentQueryManager, TEXT("ToolTip"), TEXT("Environment query manager used by game"));
				MetaData->SetValue(NewProp_BehaviorTreeManager, TEXT("ModuleRelativePath"), TEXT("Classes/AISystem.h"));
				MetaData->SetValue(NewProp_BehaviorTreeManager, TEXT("ToolTip"), TEXT("Behavior tree manager used by game"));
				MetaData->SetValue(NewProp_bEnableBTAITasks, TEXT("Category"), TEXT("AISystem | Gameplay Tasks"));
				MetaData->SetValue(NewProp_bEnableBTAITasks, TEXT("ModuleRelativePath"), TEXT("Classes/AISystem.h"));
				MetaData->SetValue(NewProp_bEnableBTAITasks, TEXT("ToolTip"), TEXT("this property is just a transition-time flag - in the end we're going to switch over to Gameplay Tasks anyway, that's the goal."));
				MetaData->SetValue(NewProp_bAllowStrafing, TEXT("Category"), TEXT("AISystem | Movement"));
				MetaData->SetValue(NewProp_bAllowStrafing, TEXT("ModuleRelativePath"), TEXT("Classes/AISystem.h"));
				MetaData->SetValue(NewProp_bAcceptPartialPaths, TEXT("Category"), TEXT("AISystem | Movement"));
				MetaData->SetValue(NewProp_bAcceptPartialPaths, TEXT("ModuleRelativePath"), TEXT("Classes/AISystem.h"));
				MetaData->SetValue(NewProp_bFinishMoveOnGoalOverlap, TEXT("Category"), TEXT("AISystem | Movement"));
				MetaData->SetValue(NewProp_bFinishMoveOnGoalOverlap, TEXT("ModuleRelativePath"), TEXT("Classes/AISystem.h"));
				MetaData->SetValue(NewProp_AcceptanceRadius, TEXT("Category"), TEXT("AISystem | Movement"));
				MetaData->SetValue(NewProp_AcceptanceRadius, TEXT("ModuleRelativePath"), TEXT("Classes/AISystem.h"));
				MetaData->SetValue(NewProp_HotSpotManagerClassName, TEXT("Category"), TEXT("AISystem"));
				MetaData->SetValue(NewProp_HotSpotManagerClassName, TEXT("DisplayName"), TEXT("AIHotSpotManager Class"));
				MetaData->SetValue(NewProp_HotSpotManagerClassName, TEXT("MetaClass"), TEXT("AIHotSpotManager"));
				MetaData->SetValue(NewProp_HotSpotManagerClassName, TEXT("ModuleRelativePath"), TEXT("Classes/AISystem.h"));
				MetaData->SetValue(NewProp_PerceptionSystemClassName, TEXT("Category"), TEXT("AISystem"));
				MetaData->SetValue(NewProp_PerceptionSystemClassName, TEXT("DisplayName"), TEXT("Perception System Class"));
				MetaData->SetValue(NewProp_PerceptionSystemClassName, TEXT("MetaClass"), TEXT("AIPerceptionSystem"));
				MetaData->SetValue(NewProp_PerceptionSystemClassName, TEXT("ModuleRelativePath"), TEXT("Classes/AISystem.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAISystem(Z_Construct_UClass_UAISystem, TEXT("UAISystem"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAISystem);
	UEnum* Z_Construct_UEnum_AIModule_EAISenseNotifyType()
	{
		UPackage* Outer=Z_Construct_UPackage_AIModule();
		extern uint32 Get_Z_Construct_UEnum_AIModule_EAISenseNotifyType_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("EAISenseNotifyType"), 0, Get_Z_Construct_UEnum_AIModule_EAISenseNotifyType_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EAISenseNotifyType"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EAISenseNotifyType::OnEveryPerception")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EAISenseNotifyType::OnPerceptionChange")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EAISenseNotifyType::EAISenseNotifyType_MAX")), 2));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::EnumClass);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AIPerceptionTypes.h"));
			MetaData->SetValue(ReturnEnum, TEXT("OnEveryPerception.ToolTip"), TEXT("Continuous update whenever target is perceived."));
			MetaData->SetValue(ReturnEnum, TEXT("OnPerceptionChange.ToolTip"), TEXT("From \"visible\" to \"not visible\" or vice versa."));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_AIModule_EAISenseNotifyType_CRC() { return 653701366U; }
	UScriptStruct* Z_Construct_UScriptStruct_FAISenseAffiliationFilter()
	{
		UPackage* Outer=Z_Construct_UPackage_AIModule();
		extern uint32 Get_Z_Construct_UScriptStruct_FAISenseAffiliationFilter_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("AISenseAffiliationFilter"), sizeof(FAISenseAffiliationFilter), Get_Z_Construct_UScriptStruct_FAISenseAffiliationFilter_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("AISenseAffiliationFilter"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FAISenseAffiliationFilter>, EStructFlags(0x00000201));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bDetectFriendlies, FAISenseAffiliationFilter, uint8);
			UProperty* NewProp_bDetectFriendlies = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bDetectFriendlies"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bDetectFriendlies, FAISenseAffiliationFilter), 0x0000000000010015, CPP_BOOL_PROPERTY_BITMASK(bDetectFriendlies, FAISenseAffiliationFilter), sizeof(uint8), false);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bDetectNeutrals, FAISenseAffiliationFilter, uint8);
			UProperty* NewProp_bDetectNeutrals = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bDetectNeutrals"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bDetectNeutrals, FAISenseAffiliationFilter), 0x0000000000010015, CPP_BOOL_PROPERTY_BITMASK(bDetectNeutrals, FAISenseAffiliationFilter), sizeof(uint8), false);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bDetectEnemies, FAISenseAffiliationFilter, uint8);
			UProperty* NewProp_bDetectEnemies = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bDetectEnemies"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bDetectEnemies, FAISenseAffiliationFilter), 0x0000000000010015, CPP_BOOL_PROPERTY_BITMASK(bDetectEnemies, FAISenseAffiliationFilter), sizeof(uint8), false);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AIPerceptionTypes.h"));
			MetaData->SetValue(NewProp_bDetectFriendlies, TEXT("Category"), TEXT("Sense"));
			MetaData->SetValue(NewProp_bDetectFriendlies, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AIPerceptionTypes.h"));
			MetaData->SetValue(NewProp_bDetectNeutrals, TEXT("Category"), TEXT("Sense"));
			MetaData->SetValue(NewProp_bDetectNeutrals, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AIPerceptionTypes.h"));
			MetaData->SetValue(NewProp_bDetectEnemies, TEXT("Category"), TEXT("Sense"));
			MetaData->SetValue(NewProp_bDetectEnemies, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AIPerceptionTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FAISenseAffiliationFilter_CRC() { return 1902953519U; }
	UScriptStruct* Z_Construct_UScriptStruct_FAIStimulus()
	{
		UPackage* Outer=Z_Construct_UPackage_AIModule();
		extern uint32 Get_Z_Construct_UScriptStruct_FAIStimulus_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("AIStimulus"), sizeof(FAIStimulus), Get_Z_Construct_UScriptStruct_FAIStimulus_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("AIStimulus"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FAIStimulus>, EStructFlags(0x00000201));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bSuccessfullySensed, FAIStimulus, uint8);
			UProperty* NewProp_bSuccessfullySensed = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bSuccessfullySensed"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bSuccessfullySensed, FAIStimulus), 0x0000080000000004, CPP_BOOL_PROPERTY_BITMASK(bSuccessfullySensed, FAIStimulus), sizeof(uint8), false);
			UProperty* NewProp_Tag = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Tag"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(Tag, FAIStimulus), 0x0000000000000004);
			UProperty* NewProp_ReceiverLocation = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ReceiverLocation"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(ReceiverLocation, FAIStimulus), 0x0000000000000004, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_StimulusLocation = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("StimulusLocation"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(StimulusLocation, FAIStimulus), 0x0000000000000004, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_Strength = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Strength"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(Strength, FAIStimulus), 0x0000000000000004);
			UProperty* NewProp_ExpirationAge = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ExpirationAge"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(ExpirationAge, FAIStimulus), 0x0000080000000004);
			UProperty* NewProp_Age = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Age"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(Age, FAIStimulus), 0x0000080000000004);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AIPerceptionTypes.h"));
			MetaData->SetValue(NewProp_bSuccessfullySensed, TEXT("Category"), TEXT("AI|Perception"));
			MetaData->SetValue(NewProp_bSuccessfullySensed, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AIPerceptionTypes.h"));
			MetaData->SetValue(NewProp_Tag, TEXT("Category"), TEXT("AI|Perception"));
			MetaData->SetValue(NewProp_Tag, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AIPerceptionTypes.h"));
			MetaData->SetValue(NewProp_ReceiverLocation, TEXT("Category"), TEXT("AI|Perception"));
			MetaData->SetValue(NewProp_ReceiverLocation, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AIPerceptionTypes.h"));
			MetaData->SetValue(NewProp_StimulusLocation, TEXT("Category"), TEXT("AI|Perception"));
			MetaData->SetValue(NewProp_StimulusLocation, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AIPerceptionTypes.h"));
			MetaData->SetValue(NewProp_Strength, TEXT("Category"), TEXT("AI|Perception"));
			MetaData->SetValue(NewProp_Strength, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AIPerceptionTypes.h"));
			MetaData->SetValue(NewProp_ExpirationAge, TEXT("Category"), TEXT("AI|Perception"));
			MetaData->SetValue(NewProp_ExpirationAge, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AIPerceptionTypes.h"));
			MetaData->SetValue(NewProp_Age, TEXT("Category"), TEXT("AI|Perception"));
			MetaData->SetValue(NewProp_Age, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AIPerceptionTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FAIStimulus_CRC() { return 2905365709U; }
	UClass* Z_Construct_UClass_UAISense_NoRegister()
	{
		return UAISense::StaticClass();
	}
	UClass* Z_Construct_UClass_UAISense()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage_AIModule();
			OuterClass = UAISense::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100085;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_PerceptionSystemInstance = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("PerceptionSystemInstance"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(PerceptionSystemInstance, UAISense), 0x0000000000000000, Z_Construct_UClass_UAIPerceptionSystem_NoRegister());
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bAutoRegisterAllPawnsAsSources, UAISense, uint8);
				UProperty* NewProp_bAutoRegisterAllPawnsAsSources = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bAutoRegisterAllPawnsAsSources"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bAutoRegisterAllPawnsAsSources, UAISense), 0x0000080000014015, CPP_BOOL_PROPERTY_BITMASK(bAutoRegisterAllPawnsAsSources, UAISense), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bWantsNewPawnNotification, UAISense, uint8);
				UProperty* NewProp_bWantsNewPawnNotification = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bWantsNewPawnNotification"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bWantsNewPawnNotification, UAISense), 0x0000080000014015, CPP_BOOL_PROPERTY_BITMASK(bWantsNewPawnNotification, UAISense), sizeof(uint8), false);
				UProperty* NewProp_NotifyType = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("NotifyType"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(NotifyType, UAISense), 0x0000080000014015, Z_Construct_UEnum_AIModule_EAISenseNotifyType());
				UProperty* NewProp_DefaultExpirationAge = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("DefaultExpirationAge"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(DefaultExpirationAge, UAISense), 0x0000080000004015);
				UProperty* NewProp_DebugName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("DebugName"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(DebugName, UAISense), 0x0000080000000015);
				UProperty* NewProp_DebugDrawColor = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("DebugDrawColor"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(DebugDrawColor, UAISense), 0x0000080000000015, Z_Construct_UScriptStruct_FColor());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->ClassConfigName = FName(TEXT("Engine"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("ClassGroupNames"), TEXT("AI"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Perception/AISense.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AISense.h"));
				MetaData->SetValue(NewProp_PerceptionSystemInstance, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AISense.h"));
				MetaData->SetValue(NewProp_bAutoRegisterAllPawnsAsSources, TEXT("Category"), TEXT("AI Perception"));
				MetaData->SetValue(NewProp_bAutoRegisterAllPawnsAsSources, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AISense.h"));
				MetaData->SetValue(NewProp_bAutoRegisterAllPawnsAsSources, TEXT("ToolTip"), TEXT("If true all newly spawned pawns will get auto registered as source for this sense."));
				MetaData->SetValue(NewProp_bWantsNewPawnNotification, TEXT("Category"), TEXT("AI Perception"));
				MetaData->SetValue(NewProp_bWantsNewPawnNotification, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AISense.h"));
				MetaData->SetValue(NewProp_bWantsNewPawnNotification, TEXT("ToolTip"), TEXT("whether this sense is interested in getting notified about new Pawns being spawned\n    this can be used for example for automated sense sources registration"));
				MetaData->SetValue(NewProp_NotifyType, TEXT("Category"), TEXT("AI Perception"));
				MetaData->SetValue(NewProp_NotifyType, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AISense.h"));
				MetaData->SetValue(NewProp_DefaultExpirationAge, TEXT("Category"), TEXT("AI Perception"));
				MetaData->SetValue(NewProp_DefaultExpirationAge, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AISense.h"));
				MetaData->SetValue(NewProp_DefaultExpirationAge, TEXT("ToolTip"), TEXT("age past which stimulus of this sense are \"forgotten\""));
				MetaData->SetValue(NewProp_DebugName, TEXT("Category"), TEXT("Debug"));
				MetaData->SetValue(NewProp_DebugName, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AISense.h"));
				MetaData->SetValue(NewProp_DebugName, TEXT("ToolTip"), TEXT("Sense name used in debug drawing"));
				MetaData->SetValue(NewProp_DebugDrawColor, TEXT("Category"), TEXT("Debug"));
				MetaData->SetValue(NewProp_DebugDrawColor, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AISense.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAISense(Z_Construct_UClass_UAISense, TEXT("UAISense"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAISense);
	UFunction* Z_Construct_UFunction_UAIPerceptionSystem_GetSenseClassForStimulus()
	{
		struct AIPerceptionSystem_eventGetSenseClassForStimulus_Parms
		{
			UObject* WorldContext;
			FAIStimulus Stimulus;
			TSubclassOf<UAISense>  ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UAIPerceptionSystem();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetSenseClassForStimulus"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04422401, 65535, sizeof(AIPerceptionSystem_eventGetSenseClassForStimulus_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UClassProperty(CPP_PROPERTY_BASE(ReturnValue, AIPerceptionSystem_eventGetSenseClassForStimulus_Parms), 0x0004000000000580, Z_Construct_UClass_UAISense_NoRegister());
			UProperty* NewProp_Stimulus = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Stimulus"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Stimulus, AIPerceptionSystem_eventGetSenseClassForStimulus_Parms), 0x0000000008000182, Z_Construct_UScriptStruct_FAIStimulus());
			UProperty* NewProp_WorldContext = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("WorldContext"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(WorldContext, AIPerceptionSystem_eventGetSenseClassForStimulus_Parms), 0x0000000000000080, Z_Construct_UClass_UObject_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|Perception"));
			MetaData->SetValue(ReturnFunction, TEXT("DefaultToSelf"), TEXT("WorldContext"));
			MetaData->SetValue(ReturnFunction, TEXT("HidePin"), TEXT("WorldContext"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AIPerceptionSystem.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAIPerceptionSystem_OnPerceptionStimuliSourceEndPlay()
	{
		struct AIPerceptionSystem_eventOnPerceptionStimuliSourceEndPlay_Parms
		{
			TEnumAsByte<EEndPlayReason::Type> EndPlayReason;
		};
		UObject* Outer=Z_Construct_UClass_UAIPerceptionSystem();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnPerceptionStimuliSourceEndPlay"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x00080401, 65535, sizeof(AIPerceptionSystem_eventOnPerceptionStimuliSourceEndPlay_Parms));
			UProperty* NewProp_EndPlayReason = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("EndPlayReason"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(EndPlayReason, AIPerceptionSystem_eventOnPerceptionStimuliSourceEndPlay_Parms), 0x0000000000000080, Z_Construct_UEnum_Engine_EEndPlayReason());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AIPerceptionSystem.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAIPerceptionSystem_RegisterPerceptionStimuliSource()
	{
		struct AIPerceptionSystem_eventRegisterPerceptionStimuliSource_Parms
		{
			UObject* WorldContext;
			TSubclassOf<UAISense>  Sense;
			AActor* Target;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UAIPerceptionSystem();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("RegisterPerceptionStimuliSource"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(AIPerceptionSystem_eventRegisterPerceptionStimuliSource_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, AIPerceptionSystem_eventRegisterPerceptionStimuliSource_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, AIPerceptionSystem_eventRegisterPerceptionStimuliSource_Parms), 0x0000000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, AIPerceptionSystem_eventRegisterPerceptionStimuliSource_Parms), sizeof(bool), true);
			UProperty* NewProp_Target = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Target"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(Target, AIPerceptionSystem_eventRegisterPerceptionStimuliSource_Parms), 0x0000000000000080, Z_Construct_UClass_AActor_NoRegister());
			UProperty* NewProp_Sense = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Sense"), RF_Public|RF_Transient|RF_Native) UClassProperty(CPP_PROPERTY_BASE(Sense, AIPerceptionSystem_eventRegisterPerceptionStimuliSource_Parms), 0x0004000000000080, Z_Construct_UClass_UAISense_NoRegister());
			UProperty* NewProp_WorldContext = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("WorldContext"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(WorldContext, AIPerceptionSystem_eventRegisterPerceptionStimuliSource_Parms), 0x0000000000000080, Z_Construct_UClass_UObject_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|Perception"));
			MetaData->SetValue(ReturnFunction, TEXT("DefaultToSelf"), TEXT("WorldContext"));
			MetaData->SetValue(ReturnFunction, TEXT("HidePin"), TEXT("WorldContext"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AIPerceptionSystem.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAIPerceptionSystem_ReportEvent()
	{
		struct AIPerceptionSystem_eventReportEvent_Parms
		{
			UAISenseEvent* PerceptionEvent;
		};
		UObject* Outer=Z_Construct_UClass_UAIPerceptionSystem();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ReportEvent"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(AIPerceptionSystem_eventReportEvent_Parms));
			UProperty* NewProp_PerceptionEvent = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("PerceptionEvent"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(PerceptionEvent, AIPerceptionSystem_eventReportEvent_Parms), 0x0000000000000080, Z_Construct_UClass_UAISenseEvent_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|Perception"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AIPerceptionSystem.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAIPerceptionSystem_ReportPerceptionEvent()
	{
		struct AIPerceptionSystem_eventReportPerceptionEvent_Parms
		{
			UObject* WorldContext;
			UAISenseEvent* PerceptionEvent;
		};
		UObject* Outer=Z_Construct_UClass_UAIPerceptionSystem();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ReportPerceptionEvent"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(AIPerceptionSystem_eventReportPerceptionEvent_Parms));
			UProperty* NewProp_PerceptionEvent = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("PerceptionEvent"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(PerceptionEvent, AIPerceptionSystem_eventReportPerceptionEvent_Parms), 0x0000000000000080, Z_Construct_UClass_UAISenseEvent_NoRegister());
			UProperty* NewProp_WorldContext = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("WorldContext"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(WorldContext, AIPerceptionSystem_eventReportPerceptionEvent_Parms), 0x0000000000000080, Z_Construct_UClass_UObject_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|Perception"));
			MetaData->SetValue(ReturnFunction, TEXT("DefaultToSelf"), TEXT("WorldContext"));
			MetaData->SetValue(ReturnFunction, TEXT("HidePin"), TEXT("WorldContext"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AIPerceptionSystem.h"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UAIPerceptionSystem_NoRegister()
	{
		return UAIPerceptionSystem::StaticClass();
	}
	UClass* Z_Construct_UClass_UAIPerceptionSystem()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage_AIModule();
			OuterClass = UAIPerceptionSystem::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100086;

				OuterClass->LinkChild(Z_Construct_UFunction_UAIPerceptionSystem_GetSenseClassForStimulus());
				OuterClass->LinkChild(Z_Construct_UFunction_UAIPerceptionSystem_OnPerceptionStimuliSourceEndPlay());
				OuterClass->LinkChild(Z_Construct_UFunction_UAIPerceptionSystem_RegisterPerceptionStimuliSource());
				OuterClass->LinkChild(Z_Construct_UFunction_UAIPerceptionSystem_ReportEvent());
				OuterClass->LinkChild(Z_Construct_UFunction_UAIPerceptionSystem_ReportPerceptionEvent());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_PerceptionAgingRate = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("PerceptionAgingRate"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(PerceptionAgingRate, UAIPerceptionSystem), 0x0000080000004001);
				UProperty* NewProp_Senses = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Senses"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(Senses, UAIPerceptionSystem), 0x0000080000000000);
				UProperty* NewProp_Senses_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Senses, TEXT("Senses"), RF_Public|RF_Transient|RF_Native) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UClass_UAISense_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UAIPerceptionSystem_GetSenseClassForStimulus()); // 3219467881
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UAIPerceptionSystem_OnPerceptionStimuliSourceEndPlay()); // 4076659107
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UAIPerceptionSystem_RegisterPerceptionStimuliSource()); // 1566615789
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UAIPerceptionSystem_ReportEvent()); // 3145156545
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UAIPerceptionSystem_ReportPerceptionEvent()); // 2211453570
				OuterClass->ClassConfigName = FName(TEXT("Game"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("ClassGroupNames"), TEXT("AI"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Perception/AIPerceptionSystem.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AIPerceptionSystem.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("By design checks perception between hostile teams"));
				MetaData->SetValue(NewProp_PerceptionAgingRate, TEXT("Category"), TEXT("Perception"));
				MetaData->SetValue(NewProp_PerceptionAgingRate, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AIPerceptionSystem.h"));
				MetaData->SetValue(NewProp_Senses, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AIPerceptionSystem.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAIPerceptionSystem(Z_Construct_UClass_UAIPerceptionSystem, TEXT("UAIPerceptionSystem"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAIPerceptionSystem);
	UFunction* Z_Construct_UDelegateFunction_AIModule_ActorPerceptionUpdatedDelegate__DelegateSignature()
	{
		struct _Script_AIModule_eventActorPerceptionUpdatedDelegate_Parms
		{
			AActor* Actor;
			FAIStimulus Stimulus;
		};
		UObject* Outer=Z_Construct_UPackage_AIModule();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ActorPerceptionUpdatedDelegate__DelegateSignature"), RF_Public|RF_Transient|RF_Native) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_AIModule_eventActorPerceptionUpdatedDelegate_Parms));
			UProperty* NewProp_Stimulus = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Stimulus"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Stimulus, _Script_AIModule_eventActorPerceptionUpdatedDelegate_Parms), 0x0000000000000080, Z_Construct_UScriptStruct_FAIStimulus());
			UProperty* NewProp_Actor = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Actor"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(Actor, _Script_AIModule_eventActorPerceptionUpdatedDelegate_Parms), 0x0000000000000080, Z_Construct_UClass_AActor_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AIPerceptionComponent.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_AIModule_PerceptionUpdatedDelegate__DelegateSignature()
	{
		struct _Script_AIModule_eventPerceptionUpdatedDelegate_Parms
		{
			TArray<AActor*> UpdatedActors;
		};
		UObject* Outer=Z_Construct_UPackage_AIModule();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("PerceptionUpdatedDelegate__DelegateSignature"), RF_Public|RF_Transient|RF_Native) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_AIModule_eventPerceptionUpdatedDelegate_Parms));
			UProperty* NewProp_UpdatedActors = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("UpdatedActors"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(UpdatedActors, _Script_AIModule_eventPerceptionUpdatedDelegate_Parms), 0x0000000000000080);
			UProperty* NewProp_UpdatedActors_Inner = new(EC_InternalUseOnlyConstructor, NewProp_UpdatedActors, TEXT("UpdatedActors"), RF_Public|RF_Transient|RF_Native) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UClass_AActor_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AIPerceptionComponent.h"));
#endif
		}
		return ReturnFunction;
	}
	UScriptStruct* Z_Construct_UScriptStruct_FActorPerceptionBlueprintInfo()
	{
		UPackage* Outer=Z_Construct_UPackage_AIModule();
		extern uint32 Get_Z_Construct_UScriptStruct_FActorPerceptionBlueprintInfo_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("ActorPerceptionBlueprintInfo"), sizeof(FActorPerceptionBlueprintInfo), Get_Z_Construct_UScriptStruct_FActorPerceptionBlueprintInfo_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ActorPerceptionBlueprintInfo"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FActorPerceptionBlueprintInfo>, EStructFlags(0x00000001));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bIsHostile, FActorPerceptionBlueprintInfo, uint8);
			UProperty* NewProp_bIsHostile = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bIsHostile"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bIsHostile, FActorPerceptionBlueprintInfo), 0x0000000000000004, CPP_BOOL_PROPERTY_BITMASK(bIsHostile, FActorPerceptionBlueprintInfo), sizeof(uint8), false);
			UProperty* NewProp_LastSensedStimuli = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("LastSensedStimuli"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(LastSensedStimuli, FActorPerceptionBlueprintInfo), 0x0000000000000004);
			UProperty* NewProp_LastSensedStimuli_Inner = new(EC_InternalUseOnlyConstructor, NewProp_LastSensedStimuli, TEXT("LastSensedStimuli"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FAIStimulus());
			UProperty* NewProp_Target = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Target"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(Target, FActorPerceptionBlueprintInfo), 0x0000000000000004, Z_Construct_UClass_AActor_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("DisplayName"), TEXT("Sensed Actor's Data"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AIPerceptionComponent.h"));
			MetaData->SetValue(NewProp_bIsHostile, TEXT("Category"), TEXT("AI|Perception"));
			MetaData->SetValue(NewProp_bIsHostile, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AIPerceptionComponent.h"));
			MetaData->SetValue(NewProp_LastSensedStimuli, TEXT("Category"), TEXT("AI|Perception"));
			MetaData->SetValue(NewProp_LastSensedStimuli, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AIPerceptionComponent.h"));
			MetaData->SetValue(NewProp_Target, TEXT("Category"), TEXT("AI|Perception"));
			MetaData->SetValue(NewProp_Target, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AIPerceptionComponent.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FActorPerceptionBlueprintInfo_CRC() { return 3049595458U; }
	UFunction* Z_Construct_UFunction_UAIPerceptionComponent_GetActorsPerception()
	{
		struct AIPerceptionComponent_eventGetActorsPerception_Parms
		{
			AActor* Actor;
			FActorPerceptionBlueprintInfo Info;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UAIPerceptionComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetActorsPerception"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04420401, 65535, sizeof(AIPerceptionComponent_eventGetActorsPerception_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, AIPerceptionComponent_eventGetActorsPerception_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, AIPerceptionComponent_eventGetActorsPerception_Parms), 0x0000000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, AIPerceptionComponent_eventGetActorsPerception_Parms), sizeof(bool), true);
			UProperty* NewProp_Info = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Info"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Info, AIPerceptionComponent_eventGetActorsPerception_Parms), 0x0000000000000180, Z_Construct_UScriptStruct_FActorPerceptionBlueprintInfo());
			UProperty* NewProp_Actor = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Actor"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(Actor, AIPerceptionComponent_eventGetActorsPerception_Parms), 0x0000000000000080, Z_Construct_UClass_AActor_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|Perception"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AIPerceptionComponent.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Retrieves whatever has been sensed about given actor"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAIPerceptionComponent_GetPerceivedActors()
	{
		struct AIPerceptionComponent_eventGetPerceivedActors_Parms
		{
			TSubclassOf<UAISense>  SenseToUse;
			TArray<AActor*> OutActors;
		};
		UObject* Outer=Z_Construct_UClass_UAIPerceptionComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetPerceivedActors"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x54420401, 65535, sizeof(AIPerceptionComponent_eventGetPerceivedActors_Parms));
			UProperty* NewProp_OutActors = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OutActors"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(OutActors, AIPerceptionComponent_eventGetPerceivedActors_Parms), 0x0000000000000180);
			UProperty* NewProp_OutActors_Inner = new(EC_InternalUseOnlyConstructor, NewProp_OutActors, TEXT("OutActors"), RF_Public|RF_Transient|RF_Native) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UClass_AActor_NoRegister());
			UProperty* NewProp_SenseToUse = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SenseToUse"), RF_Public|RF_Transient|RF_Native) UClassProperty(CPP_PROPERTY_BASE(SenseToUse, AIPerceptionComponent_eventGetPerceivedActors_Parms), 0x0004000000000080, Z_Construct_UClass_UAISense_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|Perception"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AIPerceptionComponent.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("If SenseToUse is none all actors perceived in any way will get fetched"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAIPerceptionComponent_GetPerceivedHostileActors()
	{
		struct AIPerceptionComponent_eventGetPerceivedHostileActors_Parms
		{
			TArray<AActor*> OutActors;
		};
		UObject* Outer=Z_Construct_UClass_UAIPerceptionComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetPerceivedHostileActors"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x54420401, 65535, sizeof(AIPerceptionComponent_eventGetPerceivedHostileActors_Parms));
			UProperty* NewProp_OutActors = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OutActors"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(OutActors, AIPerceptionComponent_eventGetPerceivedHostileActors_Parms), 0x0000000000000180);
			UProperty* NewProp_OutActors_Inner = new(EC_InternalUseOnlyConstructor, NewProp_OutActors, TEXT("OutActors"), RF_Public|RF_Transient|RF_Native) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UClass_AActor_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|Perception"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AIPerceptionComponent.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("blueprint interface"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAIPerceptionComponent_OnOwnerEndPlay()
	{
		struct AIPerceptionComponent_eventOnOwnerEndPlay_Parms
		{
			TEnumAsByte<EEndPlayReason::Type> EndPlayReason;
		};
		UObject* Outer=Z_Construct_UClass_UAIPerceptionComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnOwnerEndPlay"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x00020401, 65535, sizeof(AIPerceptionComponent_eventOnOwnerEndPlay_Parms));
			UProperty* NewProp_EndPlayReason = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("EndPlayReason"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(EndPlayReason, AIPerceptionComponent_eventOnOwnerEndPlay_Parms), 0x0000000000000080, Z_Construct_UEnum_Engine_EEndPlayReason());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AIPerceptionComponent.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAIPerceptionComponent_RequestStimuliListenerUpdate()
	{
		UObject* Outer=Z_Construct_UClass_UAIPerceptionComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("RequestStimuliListenerUpdate"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|Perception"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AIPerceptionComponent.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Notifies AIPerceptionSystem to update properties for this \"stimuli listener\""));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UAIPerceptionComponent_NoRegister()
	{
		return UAIPerceptionComponent::StaticClass();
	}
	UClass* Z_Construct_UClass_UAIPerceptionComponent()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UActorComponent();
			Z_Construct_UPackage_AIModule();
			OuterClass = UAIPerceptionComponent::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20B00080;

				OuterClass->LinkChild(Z_Construct_UFunction_UAIPerceptionComponent_GetActorsPerception());
				OuterClass->LinkChild(Z_Construct_UFunction_UAIPerceptionComponent_GetPerceivedActors());
				OuterClass->LinkChild(Z_Construct_UFunction_UAIPerceptionComponent_GetPerceivedHostileActors());
				OuterClass->LinkChild(Z_Construct_UFunction_UAIPerceptionComponent_OnOwnerEndPlay());
				OuterClass->LinkChild(Z_Construct_UFunction_UAIPerceptionComponent_RequestStimuliListenerUpdate());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_OnTargetPerceptionUpdated = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnTargetPerceptionUpdated"), RF_Public|RF_Transient|RF_Native) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnTargetPerceptionUpdated, UAIPerceptionComponent), 0x0000000010080000, Z_Construct_UDelegateFunction_AIModule_ActorPerceptionUpdatedDelegate__DelegateSignature());
				UProperty* NewProp_OnPerceptionUpdated = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnPerceptionUpdated"), RF_Public|RF_Transient|RF_Native) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnPerceptionUpdated, UAIPerceptionComponent), 0x0000000010080000, Z_Construct_UDelegateFunction_AIModule_PerceptionUpdatedDelegate__DelegateSignature());
				UProperty* NewProp_AIOwner = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AIOwner"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(AIOwner, UAIPerceptionComponent), 0x0000080000002000, Z_Construct_UClass_AAIController_NoRegister());
				UProperty* NewProp_DominantSense = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("DominantSense"), RF_Public|RF_Transient|RF_Native) UClassProperty(CPP_PROPERTY_BASE(DominantSense, UAIPerceptionComponent), 0x0004080000010001, Z_Construct_UClass_UAISense_NoRegister());
				UProperty* NewProp_SensesConfig = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SensesConfig"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(SensesConfig, UAIPerceptionComponent), 0x0000088000010009);
				UProperty* NewProp_SensesConfig_Inner = new(EC_InternalUseOnlyConstructor, NewProp_SensesConfig, TEXT("SensesConfig"), RF_Public|RF_Transient|RF_Native) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0002000000080008, Z_Construct_UClass_UAISenseConfig_NoRegister());
				UProperty* NewProp_PeripheralVisionAngle = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("PeripheralVisionAngle"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(PeripheralVisionAngle, UAIPerceptionComponent), 0x0000080000030001);
				UProperty* NewProp_LoseSightRadius = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("LoseSightRadius"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(LoseSightRadius, UAIPerceptionComponent), 0x0000080000030001);
				UProperty* NewProp_SightRadius = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SightRadius"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(SightRadius, UAIPerceptionComponent), 0x0000080000030001);
				UProperty* NewProp_LoSHearingRange = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("LoSHearingRange"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(LoSHearingRange, UAIPerceptionComponent), 0x0000080000030001);
				UProperty* NewProp_HearingRange = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("HearingRange"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(HearingRange, UAIPerceptionComponent), 0x0000080000030001);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UAIPerceptionComponent_GetActorsPerception()); // 874540061
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UAIPerceptionComponent_GetPerceivedActors()); // 3467533298
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UAIPerceptionComponent_GetPerceivedHostileActors()); // 1330114699
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UAIPerceptionComponent_OnOwnerEndPlay()); // 227977213
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UAIPerceptionComponent_RequestStimuliListenerUpdate()); // 3046343744
				OuterClass->ClassConfigName = FName(TEXT("Game"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintSpawnableComponent"), TEXT(""));
				MetaData->SetValue(OuterClass, TEXT("ClassGroupNames"), TEXT("AI"));
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Activation Collision ComponentReplication"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Perception/AIPerceptionComponent.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AIPerceptionComponent.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("AIPerceptionComponent is used to register as stimuli listener in AIPerceptionSystem\nand gathers registered stimuli. UpdatePerception is called when component gets new stimuli (batched)"));
				MetaData->SetValue(NewProp_OnTargetPerceptionUpdated, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AIPerceptionComponent.h"));
				MetaData->SetValue(NewProp_OnPerceptionUpdated, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AIPerceptionComponent.h"));
				MetaData->SetValue(NewProp_OnPerceptionUpdated, TEXT("ToolTip"), TEXT("Might want to move these to special \"BP_AIPerceptionComponent\""));
				MetaData->SetValue(NewProp_AIOwner, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AIPerceptionComponent.h"));
				MetaData->SetValue(NewProp_DominantSense, TEXT("Category"), TEXT("AI Perception"));
				MetaData->SetValue(NewProp_DominantSense, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AIPerceptionComponent.h"));
				MetaData->SetValue(NewProp_DominantSense, TEXT("ToolTip"), TEXT("Indicated sense that takes precedence over other senses when determining sensed actor's location.\n    Should be set to one of the sences configured in SensesConfig, or None."));
				MetaData->SetValue(NewProp_SensesConfig, TEXT("Category"), TEXT("AI Perception"));
				MetaData->SetValue(NewProp_SensesConfig, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_SensesConfig, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AIPerceptionComponent.h"));
				MetaData->SetValue(NewProp_SensesConfig_Inner, TEXT("Category"), TEXT("AI Perception"));
				MetaData->SetValue(NewProp_SensesConfig_Inner, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_SensesConfig_Inner, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AIPerceptionComponent.h"));
				MetaData->SetValue(NewProp_PeripheralVisionAngle, TEXT("Category"), TEXT("AI"));
				MetaData->SetValue(NewProp_PeripheralVisionAngle, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AIPerceptionComponent.h"));
				MetaData->SetValue(NewProp_LoseSightRadius, TEXT("Category"), TEXT("AI"));
				MetaData->SetValue(NewProp_LoseSightRadius, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AIPerceptionComponent.h"));
				MetaData->SetValue(NewProp_SightRadius, TEXT("Category"), TEXT("AI"));
				MetaData->SetValue(NewProp_SightRadius, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AIPerceptionComponent.h"));
				MetaData->SetValue(NewProp_LoSHearingRange, TEXT("Category"), TEXT("AI"));
				MetaData->SetValue(NewProp_LoSHearingRange, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AIPerceptionComponent.h"));
				MetaData->SetValue(NewProp_HearingRange, TEXT("Category"), TEXT("AI"));
				MetaData->SetValue(NewProp_HearingRange, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AIPerceptionComponent.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAIPerceptionComponent(Z_Construct_UClass_UAIPerceptionComponent, TEXT("UAIPerceptionComponent"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAIPerceptionComponent);
	UFunction* Z_Construct_UFunction_UAIPerceptionStimuliSourceComponent_RegisterForSense()
	{
		struct AIPerceptionStimuliSourceComponent_eventRegisterForSense_Parms
		{
			TSubclassOf<UAISense>  SenseClass;
		};
		UObject* Outer=Z_Construct_UClass_UAIPerceptionStimuliSourceComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("RegisterForSense"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(AIPerceptionStimuliSourceComponent_eventRegisterForSense_Parms));
			UProperty* NewProp_SenseClass = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SenseClass"), RF_Public|RF_Transient|RF_Native) UClassProperty(CPP_PROPERTY_BASE(SenseClass, AIPerceptionStimuliSourceComponent_eventRegisterForSense_Parms), 0x0004000000000080, Z_Construct_UClass_UAISense_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|Perception"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AIPerceptionStimuliSourceComponent.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Registers owning actor as source for specified sense class"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAIPerceptionStimuliSourceComponent_RegisterWithPerceptionSystem()
	{
		UObject* Outer=Z_Construct_UClass_UAIPerceptionStimuliSourceComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("RegisterWithPerceptionSystem"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|Perception"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AIPerceptionStimuliSourceComponent.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Registers owning actor as source of stimuli for senses specified in RegisterAsSourceForSenses.\n    Note that you don't have to do it if bAutoRegisterAsSource == true"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAIPerceptionStimuliSourceComponent_UnregisterFromPerceptionSystem()
	{
		UObject* Outer=Z_Construct_UClass_UAIPerceptionStimuliSourceComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("UnregisterFromPerceptionSystem"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|Perception"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AIPerceptionStimuliSourceComponent.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Unregister owning actor from being a source of sense stimuli"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAIPerceptionStimuliSourceComponent_UnregisterFromSense()
	{
		struct AIPerceptionStimuliSourceComponent_eventUnregisterFromSense_Parms
		{
			TSubclassOf<UAISense>  SenseClass;
		};
		UObject* Outer=Z_Construct_UClass_UAIPerceptionStimuliSourceComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("UnregisterFromSense"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(AIPerceptionStimuliSourceComponent_eventUnregisterFromSense_Parms));
			UProperty* NewProp_SenseClass = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SenseClass"), RF_Public|RF_Transient|RF_Native) UClassProperty(CPP_PROPERTY_BASE(SenseClass, AIPerceptionStimuliSourceComponent_eventUnregisterFromSense_Parms), 0x0004000000000080, Z_Construct_UClass_UAISense_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|Perception"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AIPerceptionStimuliSourceComponent.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Unregisters owning actor from sources list of a specified sense class"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UAIPerceptionStimuliSourceComponent_NoRegister()
	{
		return UAIPerceptionStimuliSourceComponent::StaticClass();
	}
	UClass* Z_Construct_UClass_UAIPerceptionStimuliSourceComponent()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UActorComponent();
			Z_Construct_UPackage_AIModule();
			OuterClass = UAIPerceptionStimuliSourceComponent::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20B00084;

				OuterClass->LinkChild(Z_Construct_UFunction_UAIPerceptionStimuliSourceComponent_RegisterForSense());
				OuterClass->LinkChild(Z_Construct_UFunction_UAIPerceptionStimuliSourceComponent_RegisterWithPerceptionSystem());
				OuterClass->LinkChild(Z_Construct_UFunction_UAIPerceptionStimuliSourceComponent_UnregisterFromPerceptionSystem());
				OuterClass->LinkChild(Z_Construct_UFunction_UAIPerceptionStimuliSourceComponent_UnregisterFromSense());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_RegisterAsSourceForSenses = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("RegisterAsSourceForSenses"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(RegisterAsSourceForSenses, UAIPerceptionStimuliSourceComponent), 0x0004080000000015);
				UProperty* NewProp_RegisterAsSourceForSenses_Inner = new(EC_InternalUseOnlyConstructor, NewProp_RegisterAsSourceForSenses, TEXT("RegisterAsSourceForSenses"), RF_Public|RF_Transient|RF_Native) UClassProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0004000000000000, Z_Construct_UClass_UAISense_NoRegister());
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bAutoRegisterAsSource, UAIPerceptionStimuliSourceComponent, uint8);
				UProperty* NewProp_bAutoRegisterAsSource = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bAutoRegisterAsSource"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bAutoRegisterAsSource, UAIPerceptionStimuliSourceComponent), 0x0000080000004015, CPP_BOOL_PROPERTY_BITMASK(bAutoRegisterAsSource, UAIPerceptionStimuliSourceComponent), sizeof(uint8), false);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UAIPerceptionStimuliSourceComponent_RegisterForSense()); // 563497521
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UAIPerceptionStimuliSourceComponent_RegisterWithPerceptionSystem()); // 3524002367
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UAIPerceptionStimuliSourceComponent_UnregisterFromPerceptionSystem()); // 4153597353
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UAIPerceptionStimuliSourceComponent_UnregisterFromSense()); // 999118355
				OuterClass->ClassConfigName = FName(TEXT("Game"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintSpawnableComponent"), TEXT(""));
				MetaData->SetValue(OuterClass, TEXT("ClassGroupNames"), TEXT("AI"));
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Activation Collision ComponentReplication"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Perception/AIPerceptionStimuliSourceComponent.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AIPerceptionStimuliSourceComponent.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Gives owning actor a way to auto-register as perception system's sense stimuli source"));
				MetaData->SetValue(NewProp_RegisterAsSourceForSenses, TEXT("Category"), TEXT("AI Perception"));
				MetaData->SetValue(NewProp_RegisterAsSourceForSenses, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AIPerceptionStimuliSourceComponent.h"));
				MetaData->SetValue(NewProp_bAutoRegisterAsSource, TEXT("Category"), TEXT("AI Perception"));
				MetaData->SetValue(NewProp_bAutoRegisterAsSource, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AIPerceptionStimuliSourceComponent.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAIPerceptionStimuliSourceComponent(Z_Construct_UClass_UAIPerceptionStimuliSourceComponent, TEXT("UAIPerceptionStimuliSourceComponent"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAIPerceptionStimuliSourceComponent);
	UClass* Z_Construct_UClass_UAIResource_Movement_NoRegister()
	{
		return UAIResource_Movement::StaticClass();
	}
	UClass* Z_Construct_UClass_UAIResource_Movement()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UGameplayTaskResource();
			Z_Construct_UPackage_AIModule();
			OuterClass = UAIResource_Movement::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100084;


				OuterClass->ClassConfigName = FName(TEXT("Game"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("AIResources.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/AIResources.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAIResource_Movement(Z_Construct_UClass_UAIResource_Movement, TEXT("UAIResource_Movement"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAIResource_Movement);
	UClass* Z_Construct_UClass_UAIResource_Logic_NoRegister()
	{
		return UAIResource_Logic::StaticClass();
	}
	UClass* Z_Construct_UClass_UAIResource_Logic()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UGameplayTaskResource();
			Z_Construct_UPackage_AIModule();
			OuterClass = UAIResource_Logic::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100084;


				OuterClass->ClassConfigName = FName(TEXT("Game"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("AIResources.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/AIResources.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAIResource_Logic(Z_Construct_UClass_UAIResource_Logic, TEXT("UAIResource_Logic"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAIResource_Logic);
	UFunction* Z_Construct_UFunction_UAISense_Blueprint_GetAllListenerActors()
	{
		struct AISense_Blueprint_eventGetAllListenerActors_Parms
		{
			TArray<AActor*> ListenerActors;
		};
		UObject* Outer=Z_Construct_UClass_UAISense_Blueprint();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetAllListenerActors"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x54420401, 65535, sizeof(AISense_Blueprint_eventGetAllListenerActors_Parms));
			UProperty* NewProp_ListenerActors = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ListenerActors"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(ListenerActors, AISense_Blueprint_eventGetAllListenerActors_Parms), 0x0000000000000180);
			UProperty* NewProp_ListenerActors_Inner = new(EC_InternalUseOnlyConstructor, NewProp_ListenerActors, TEXT("ListenerActors"), RF_Public|RF_Transient|RF_Native) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UClass_AActor_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|Perception"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AISense_Blueprint.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAISense_Blueprint_GetAllListenerComponents()
	{
		struct AISense_Blueprint_eventGetAllListenerComponents_Parms
		{
			TArray<UAIPerceptionComponent*> ListenerComponents;
		};
		UObject* Outer=Z_Construct_UClass_UAISense_Blueprint();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetAllListenerComponents"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x54420401, 65535, sizeof(AISense_Blueprint_eventGetAllListenerComponents_Parms));
			UProperty* NewProp_ListenerComponents = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ListenerComponents"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(ListenerComponents, AISense_Blueprint_eventGetAllListenerComponents_Parms), 0x0000008000000180);
			UProperty* NewProp_ListenerComponents_Inner = new(EC_InternalUseOnlyConstructor, NewProp_ListenerComponents, TEXT("ListenerComponents"), RF_Public|RF_Transient|RF_Native) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000080000, Z_Construct_UClass_UAIPerceptionComponent_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|Perception"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AISense_Blueprint.h"));
			MetaData->SetValue(NewProp_ListenerComponents, TEXT("EditInline"), TEXT("true"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAISense_Blueprint_K2_OnNewPawn()
	{
		UObject* Outer=Z_Construct_UClass_UAISense_Blueprint();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("K2_OnNewPawn"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x08020800, 65535, sizeof(AISense_Blueprint_eventK2_OnNewPawn_Parms));
			UProperty* NewProp_NewPawn = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NewPawn"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(NewPawn, AISense_Blueprint_eventK2_OnNewPawn_Parms), 0x0000000000000080, Z_Construct_UClass_APawn_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("OnNewPawn"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AISense_Blueprint.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("called when sense's instance gets notified about new pawn that has just been spawned"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAISense_Blueprint_OnListenerRegistered()
	{
		UObject* Outer=Z_Construct_UClass_UAISense_Blueprint();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnListenerRegistered"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x08020800, 65535, sizeof(AISense_Blueprint_eventOnListenerRegistered_Parms));
			UProperty* NewProp_PerceptionComponent = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("PerceptionComponent"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(PerceptionComponent, AISense_Blueprint_eventOnListenerRegistered_Parms), 0x0000000000080080, Z_Construct_UClass_UAIPerceptionComponent_NoRegister());
			UProperty* NewProp_ActorListener = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ActorListener"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(ActorListener, AISense_Blueprint_eventOnListenerRegistered_Parms), 0x0000000000000080, Z_Construct_UClass_AActor_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AISense_Blueprint.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("@param PerceptionComponent is ActorListener's AIPerceptionComponent instance"));
			MetaData->SetValue(NewProp_PerceptionComponent, TEXT("EditInline"), TEXT("true"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAISense_Blueprint_OnListenerUnregistered()
	{
		UObject* Outer=Z_Construct_UClass_UAISense_Blueprint();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnListenerUnregistered"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x08020800, 65535, sizeof(AISense_Blueprint_eventOnListenerUnregistered_Parms));
			UProperty* NewProp_PerceptionComponent = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("PerceptionComponent"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(PerceptionComponent, AISense_Blueprint_eventOnListenerUnregistered_Parms), 0x0000000000080080, Z_Construct_UClass_UAIPerceptionComponent_NoRegister());
			UProperty* NewProp_ActorListener = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ActorListener"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(ActorListener, AISense_Blueprint_eventOnListenerUnregistered_Parms), 0x0000000000000080, Z_Construct_UClass_AActor_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AISense_Blueprint.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("called when a listener unregistered from this sense. Most often this is called due to actor's death\n    @param PerceptionComponent is ActorListener's AIPerceptionComponent instance"));
			MetaData->SetValue(NewProp_PerceptionComponent, TEXT("EditInline"), TEXT("true"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAISense_Blueprint_OnListenerUpdated()
	{
		UObject* Outer=Z_Construct_UClass_UAISense_Blueprint();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnListenerUpdated"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x08020800, 65535, sizeof(AISense_Blueprint_eventOnListenerUpdated_Parms));
			UProperty* NewProp_PerceptionComponent = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("PerceptionComponent"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(PerceptionComponent, AISense_Blueprint_eventOnListenerUpdated_Parms), 0x0000000000080080, Z_Construct_UClass_UAIPerceptionComponent_NoRegister());
			UProperty* NewProp_ActorListener = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ActorListener"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(ActorListener, AISense_Blueprint_eventOnListenerUpdated_Parms), 0x0000000000000080, Z_Construct_UClass_AActor_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AISense_Blueprint.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("@param PerceptionComponent is ActorListener's AIPerceptionComponent instance"));
			MetaData->SetValue(NewProp_PerceptionComponent, TEXT("EditInline"), TEXT("true"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAISense_Blueprint_OnUpdate()
	{
		UObject* Outer=Z_Construct_UClass_UAISense_Blueprint();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnUpdate"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x08420800, 65535, sizeof(AISense_Blueprint_eventOnUpdate_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(ReturnValue, AISense_Blueprint_eventOnUpdate_Parms), 0x0000000000000580);
			UProperty* NewProp_EventsToProcess = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("EventsToProcess"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(EventsToProcess, AISense_Blueprint_eventOnUpdate_Parms), 0x0000000008000182);
			UProperty* NewProp_EventsToProcess_Inner = new(EC_InternalUseOnlyConstructor, NewProp_EventsToProcess, TEXT("EventsToProcess"), RF_Public|RF_Transient|RF_Native) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UClass_UAISenseEvent_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AISense_Blueprint.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("returns requested amount of time to pass until next frame.\n    Return 0 to get update every frame (WARNING: hits performance)"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UAISense_Blueprint_NoRegister()
	{
		return UAISense_Blueprint::StaticClass();
	}
	UClass* Z_Construct_UClass_UAISense_Blueprint()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UAISense();
			Z_Construct_UPackage_AIModule();
			OuterClass = UAISense_Blueprint::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900085;

				OuterClass->LinkChild(Z_Construct_UFunction_UAISense_Blueprint_GetAllListenerActors());
				OuterClass->LinkChild(Z_Construct_UFunction_UAISense_Blueprint_GetAllListenerComponents());
				OuterClass->LinkChild(Z_Construct_UFunction_UAISense_Blueprint_K2_OnNewPawn());
				OuterClass->LinkChild(Z_Construct_UFunction_UAISense_Blueprint_OnListenerRegistered());
				OuterClass->LinkChild(Z_Construct_UFunction_UAISense_Blueprint_OnListenerUnregistered());
				OuterClass->LinkChild(Z_Construct_UFunction_UAISense_Blueprint_OnListenerUpdated());
				OuterClass->LinkChild(Z_Construct_UFunction_UAISense_Blueprint_OnUpdate());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_UnprocessedEvents = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("UnprocessedEvents"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(UnprocessedEvents, UAISense_Blueprint), 0x0000080000000000);
				UProperty* NewProp_UnprocessedEvents_Inner = new(EC_InternalUseOnlyConstructor, NewProp_UnprocessedEvents, TEXT("UnprocessedEvents"), RF_Public|RF_Transient|RF_Native) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UClass_UAISenseEvent_NoRegister());
				UProperty* NewProp_ListenerContainer = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ListenerContainer"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(ListenerContainer, UAISense_Blueprint), 0x000008800000001c);
				UProperty* NewProp_ListenerContainer_Inner = new(EC_InternalUseOnlyConstructor, NewProp_ListenerContainer, TEXT("ListenerContainer"), RF_Public|RF_Transient|RF_Native) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000080008, Z_Construct_UClass_UAIPerceptionComponent_NoRegister());
				UProperty* NewProp_ListenerDataType = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ListenerDataType"), RF_Public|RF_Transient|RF_Native) UClassProperty(CPP_PROPERTY_BASE(ListenerDataType, UAISense_Blueprint), 0x0004080000000005, Z_Construct_UClass_UUserDefinedStruct_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UAISense_Blueprint_GetAllListenerActors()); // 275050770
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UAISense_Blueprint_GetAllListenerComponents()); // 1565876496
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UAISense_Blueprint_K2_OnNewPawn()); // 3558350596
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UAISense_Blueprint_OnListenerRegistered()); // 2339627021
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UAISense_Blueprint_OnListenerUnregistered()); // 1237102545
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UAISense_Blueprint_OnListenerUpdated()); // 2580759178
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UAISense_Blueprint_OnUpdate()); // 4062578351
				OuterClass->ClassConfigName = FName(TEXT("Engine"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("ClassGroupNames"), TEXT("AI"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Perception/AISense_Blueprint.h"));
				MetaData->SetValue(OuterClass, TEXT("IsBlueprintBase"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AISense_Blueprint.h"));
				MetaData->SetValue(NewProp_UnprocessedEvents, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AISense_Blueprint.h"));
				MetaData->SetValue(NewProp_ListenerContainer, TEXT("Category"), TEXT("Sense"));
				MetaData->SetValue(NewProp_ListenerContainer, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_ListenerContainer, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AISense_Blueprint.h"));
				MetaData->SetValue(NewProp_ListenerDataType, TEXT("Category"), TEXT("Sense"));
				MetaData->SetValue(NewProp_ListenerDataType, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AISense_Blueprint.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAISense_Blueprint(Z_Construct_UClass_UAISense_Blueprint, TEXT("UAISense_Blueprint"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAISense_Blueprint);
	UScriptStruct* Z_Construct_UScriptStruct_FAIDamageEvent()
	{
		UPackage* Outer=Z_Construct_UPackage_AIModule();
		extern uint32 Get_Z_Construct_UScriptStruct_FAIDamageEvent_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("AIDamageEvent"), sizeof(FAIDamageEvent), Get_Z_Construct_UScriptStruct_FAIDamageEvent_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("AIDamageEvent"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FAIDamageEvent>, EStructFlags(0x00000201));
			UProperty* NewProp_Instigator = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Instigator"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(Instigator, FAIDamageEvent), 0x0000000000000005, Z_Construct_UClass_AActor_NoRegister());
			UProperty* NewProp_DamagedActor = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("DamagedActor"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(DamagedActor, FAIDamageEvent), 0x0000000000000005, Z_Construct_UClass_AActor_NoRegister());
			UProperty* NewProp_HitLocation = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HitLocation"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(HitLocation, FAIDamageEvent), 0x0000000000000005, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_Location = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Location"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Location, FAIDamageEvent), 0x0000000000000005, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_Amount = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Amount"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(Amount, FAIDamageEvent), 0x0000000000000005);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AISense_Damage.h"));
			MetaData->SetValue(NewProp_Instigator, TEXT("Category"), TEXT("Sense"));
			MetaData->SetValue(NewProp_Instigator, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AISense_Damage.h"));
			MetaData->SetValue(NewProp_Instigator, TEXT("ToolTip"), TEXT("Actor that instigated damage. Can be None"));
			MetaData->SetValue(NewProp_DamagedActor, TEXT("Category"), TEXT("Sense"));
			MetaData->SetValue(NewProp_DamagedActor, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AISense_Damage.h"));
			MetaData->SetValue(NewProp_DamagedActor, TEXT("ToolTip"), TEXT("Damaged actor"));
			MetaData->SetValue(NewProp_HitLocation, TEXT("Category"), TEXT("Sense"));
			MetaData->SetValue(NewProp_HitLocation, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AISense_Damage.h"));
			MetaData->SetValue(NewProp_HitLocation, TEXT("ToolTip"), TEXT("Event's additional spatial information\n    @TODO document"));
			MetaData->SetValue(NewProp_Location, TEXT("Category"), TEXT("Sense"));
			MetaData->SetValue(NewProp_Location, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AISense_Damage.h"));
			MetaData->SetValue(NewProp_Location, TEXT("ToolTip"), TEXT("Event's \"Location\", or what will be later treated as the perceived location for this sense.\n    If not set, HitLocation will be used, if that is unset too DamagedActor's location"));
			MetaData->SetValue(NewProp_Amount, TEXT("Category"), TEXT("Sense"));
			MetaData->SetValue(NewProp_Amount, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AISense_Damage.h"));
			MetaData->SetValue(NewProp_Amount, TEXT("ToolTip"), TEXT("Damage taken by DamagedActor.\n    @Note 0-damage events do not get ignored"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FAIDamageEvent_CRC() { return 2529676896U; }
	UFunction* Z_Construct_UFunction_UAISense_Damage_ReportDamageEvent()
	{
		struct AISense_Damage_eventReportDamageEvent_Parms
		{
			UObject* WorldContext;
			AActor* DamagedActor;
			AActor* Instigator;
			float DamageAmount;
			FVector EventLocation;
			FVector HitLocation;
		};
		UObject* Outer=Z_Construct_UClass_UAISense_Damage();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ReportDamageEvent"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04822401, 65535, sizeof(AISense_Damage_eventReportDamageEvent_Parms));
			UProperty* NewProp_HitLocation = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("HitLocation"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(HitLocation, AISense_Damage_eventReportDamageEvent_Parms), 0x0000040000000080, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_EventLocation = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("EventLocation"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(EventLocation, AISense_Damage_eventReportDamageEvent_Parms), 0x0000000000000080, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_DamageAmount = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("DamageAmount"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(DamageAmount, AISense_Damage_eventReportDamageEvent_Parms), 0x0000000000000080);
			UProperty* NewProp_Instigator = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Instigator"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(Instigator, AISense_Damage_eventReportDamageEvent_Parms), 0x0000000000000080, Z_Construct_UClass_AActor_NoRegister());
			UProperty* NewProp_DamagedActor = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("DamagedActor"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(DamagedActor, AISense_Damage_eventReportDamageEvent_Parms), 0x0000000000000080, Z_Construct_UClass_AActor_NoRegister());
			UProperty* NewProp_WorldContext = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("WorldContext"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(WorldContext, AISense_Damage_eventReportDamageEvent_Parms), 0x0000000000000080, Z_Construct_UClass_UObject_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("AdvancedDisplay"), TEXT("HitLocation"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|Perception"));
			MetaData->SetValue(ReturnFunction, TEXT("DefaultToSelf"), TEXT("WorldContext"));
			MetaData->SetValue(ReturnFunction, TEXT("HidePin"), TEXT("WorldContext"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AISense_Damage.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("EventLocation will be reported as Instigator's location at the moment of event happening"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UAISense_Damage_NoRegister()
	{
		return UAISense_Damage::StaticClass();
	}
	UClass* Z_Construct_UClass_UAISense_Damage()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UAISense();
			Z_Construct_UPackage_AIModule();
			OuterClass = UAISense_Damage::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100084;

				OuterClass->LinkChild(Z_Construct_UFunction_UAISense_Damage_ReportDamageEvent());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_RegisteredEvents = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("RegisteredEvents"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(RegisteredEvents, UAISense_Damage), 0x0000000000000000);
				UProperty* NewProp_RegisteredEvents_Inner = new(EC_InternalUseOnlyConstructor, NewProp_RegisteredEvents, TEXT("RegisteredEvents"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FAIDamageEvent());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UAISense_Damage_ReportDamageEvent()); // 3294356574
				OuterClass->ClassConfigName = FName(TEXT("Engine"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("ClassGroupNames"), TEXT("AI"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Perception/AISense_Damage.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AISense_Damage.h"));
				MetaData->SetValue(NewProp_RegisteredEvents, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AISense_Damage.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAISense_Damage(Z_Construct_UClass_UAISense_Damage, TEXT("UAISense_Damage"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAISense_Damage);
	UScriptStruct* Z_Construct_UScriptStruct_FAINoiseEvent()
	{
		UPackage* Outer=Z_Construct_UPackage_AIModule();
		extern uint32 Get_Z_Construct_UScriptStruct_FAINoiseEvent_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("AINoiseEvent"), sizeof(FAINoiseEvent), Get_Z_Construct_UScriptStruct_FAINoiseEvent_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("AINoiseEvent"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FAINoiseEvent>, EStructFlags(0x00000201));
			UProperty* NewProp_Tag = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Tag"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(Tag, FAINoiseEvent), 0x0000000000000005);
			UProperty* NewProp_Instigator = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Instigator"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(Instigator, FAINoiseEvent), 0x0000000000000005, Z_Construct_UClass_AActor_NoRegister());
			UProperty* NewProp_MaxRange = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("MaxRange"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(MaxRange, FAINoiseEvent), 0x0000000000000005);
			UProperty* NewProp_Loudness = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Loudness"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(Loudness, FAINoiseEvent), 0x0000000000000005);
			UProperty* NewProp_NoiseLocation = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("NoiseLocation"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(NoiseLocation, FAINoiseEvent), 0x0000000000000005, Z_Construct_UScriptStruct_FVector());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AISense_Hearing.h"));
			MetaData->SetValue(NewProp_Tag, TEXT("Category"), TEXT("Sense"));
			MetaData->SetValue(NewProp_Tag, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AISense_Hearing.h"));
			MetaData->SetValue(NewProp_Tag, TEXT("ToolTip"), TEXT("Named identifier for the noise."));
			MetaData->SetValue(NewProp_Instigator, TEXT("Category"), TEXT("Sense"));
			MetaData->SetValue(NewProp_Instigator, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AISense_Hearing.h"));
			MetaData->SetValue(NewProp_Instigator, TEXT("ToolTip"), TEXT("Actor triggering the sound."));
			MetaData->SetValue(NewProp_MaxRange, TEXT("Category"), TEXT("Sense"));
			MetaData->SetValue(NewProp_MaxRange, TEXT("ClampMin"), TEXT("0"));
			MetaData->SetValue(NewProp_MaxRange, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AISense_Hearing.h"));
			MetaData->SetValue(NewProp_MaxRange, TEXT("ToolTip"), TEXT("Max range at which the sound can be heard. Multiplied by Loudness.\nA value of 0 indicates that there is no range limit, though listeners are still limited by their own hearing range."));
			MetaData->SetValue(NewProp_MaxRange, TEXT("UIMin"), TEXT("0"));
			MetaData->SetValue(NewProp_Loudness, TEXT("Category"), TEXT("Sense"));
			MetaData->SetValue(NewProp_Loudness, TEXT("ClampMin"), TEXT("0"));
			MetaData->SetValue(NewProp_Loudness, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AISense_Hearing.h"));
			MetaData->SetValue(NewProp_Loudness, TEXT("ToolTip"), TEXT("Loudness modifier of the sound.\nIf MaxRange is non-zero, this modifies the range (by multiplication).\nIf there is no MaxRange, then if Square(DistanceToSound) <= Square(HearingRange) * Loudness, the sound is heard, false otherwise."));
			MetaData->SetValue(NewProp_Loudness, TEXT("UIMin"), TEXT("0"));
			MetaData->SetValue(NewProp_NoiseLocation, TEXT("Category"), TEXT("Sense"));
			MetaData->SetValue(NewProp_NoiseLocation, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AISense_Hearing.h"));
			MetaData->SetValue(NewProp_NoiseLocation, TEXT("ToolTip"), TEXT("if not set Instigator's location will be used"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FAINoiseEvent_CRC() { return 1432717939U; }
	UFunction* Z_Construct_UFunction_UAISense_Hearing_ReportNoiseEvent()
	{
		struct AISense_Hearing_eventReportNoiseEvent_Parms
		{
			UObject* WorldContext;
			FVector NoiseLocation;
			float Loudness;
			AActor* Instigator;
			float MaxRange;
			FName Tag;
		};
		UObject* Outer=Z_Construct_UClass_UAISense_Hearing();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ReportNoiseEvent"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04822401, 65535, sizeof(AISense_Hearing_eventReportNoiseEvent_Parms));
			UProperty* NewProp_Tag = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Tag"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(Tag, AISense_Hearing_eventReportNoiseEvent_Parms), 0x0000000000000080);
			UProperty* NewProp_MaxRange = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("MaxRange"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(MaxRange, AISense_Hearing_eventReportNoiseEvent_Parms), 0x0000000000000080);
			UProperty* NewProp_Instigator = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Instigator"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(Instigator, AISense_Hearing_eventReportNoiseEvent_Parms), 0x0000000000000080, Z_Construct_UClass_AActor_NoRegister());
			UProperty* NewProp_Loudness = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Loudness"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(Loudness, AISense_Hearing_eventReportNoiseEvent_Parms), 0x0000000000000080);
			UProperty* NewProp_NoiseLocation = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NoiseLocation"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(NoiseLocation, AISense_Hearing_eventReportNoiseEvent_Parms), 0x0000000000000080, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_WorldContext = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("WorldContext"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(WorldContext, AISense_Hearing_eventReportNoiseEvent_Parms), 0x0000000000000080, Z_Construct_UClass_UObject_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|Perception"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Loudness"), TEXT("1.000000"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_MaxRange"), TEXT("0.000000"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Tag"), TEXT("None"));
			MetaData->SetValue(ReturnFunction, TEXT("DefaultToSelf"), TEXT("WorldContext"));
			MetaData->SetValue(ReturnFunction, TEXT("HidePin"), TEXT("WorldContext"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AISense_Hearing.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Report a noise event.\n\n@param NoiseLocation Location of the noise.\n@param Loudness Loudness of the noise. If MaxRange is non-zero, modifies MaxRange, otherwise modifies the squared distance of the sensor's range.\n@param Instigator Actor that triggered the noise.\n@param MaxRange Max range at which the sound can be heard, multiplied by Loudness. Values <= 0 mean no limit (still limited by listener's range however).\n@param Tag Identifier for the event."));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UAISense_Hearing_NoRegister()
	{
		return UAISense_Hearing::StaticClass();
	}
	UClass* Z_Construct_UClass_UAISense_Hearing()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UAISense();
			Z_Construct_UPackage_AIModule();
			OuterClass = UAISense_Hearing::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100084;

				OuterClass->LinkChild(Z_Construct_UFunction_UAISense_Hearing_ReportNoiseEvent());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_SpeedOfSoundSq = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SpeedOfSoundSq"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(SpeedOfSoundSq, UAISense_Hearing), 0x0000080000004000);
				UProperty* NewProp_NoiseEvents = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("NoiseEvents"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(NoiseEvents, UAISense_Hearing), 0x0000080000000000);
				UProperty* NewProp_NoiseEvents_Inner = new(EC_InternalUseOnlyConstructor, NewProp_NoiseEvents, TEXT("NoiseEvents"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FAINoiseEvent());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UAISense_Hearing_ReportNoiseEvent()); // 1148664874
				OuterClass->ClassConfigName = FName(TEXT("Game"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("ClassGroupNames"), TEXT("AI"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Perception/AISense_Hearing.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AISense_Hearing.h"));
				MetaData->SetValue(NewProp_SpeedOfSoundSq, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AISense_Hearing.h"));
				MetaData->SetValue(NewProp_SpeedOfSoundSq, TEXT("ToolTip"), TEXT("Defaults to 0 to have instant notification. Setting to > 0 will result in delaying\n    when AI hears the sound based on the distance from the source"));
				MetaData->SetValue(NewProp_NoiseEvents, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AISense_Hearing.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAISense_Hearing(Z_Construct_UClass_UAISense_Hearing, TEXT("UAISense_Hearing"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAISense_Hearing);
	UScriptStruct* Z_Construct_UScriptStruct_FAIPredictionEvent()
	{
		UPackage* Outer=Z_Construct_UPackage_AIModule();
		extern uint32 Get_Z_Construct_UScriptStruct_FAIPredictionEvent_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("AIPredictionEvent"), sizeof(FAIPredictionEvent), Get_Z_Construct_UScriptStruct_FAIPredictionEvent_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("AIPredictionEvent"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FAIPredictionEvent>, EStructFlags(0x00000201));
			UProperty* NewProp_PredictedActor = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("PredictedActor"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(PredictedActor, FAIPredictionEvent), 0x0000000000000000, Z_Construct_UClass_AActor_NoRegister());
			UProperty* NewProp_Requestor = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Requestor"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(Requestor, FAIPredictionEvent), 0x0000000000000000, Z_Construct_UClass_AActor_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AISense_Prediction.h"));
			MetaData->SetValue(NewProp_PredictedActor, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AISense_Prediction.h"));
			MetaData->SetValue(NewProp_Requestor, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AISense_Prediction.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FAIPredictionEvent_CRC() { return 398567230U; }
	UFunction* Z_Construct_UFunction_UAISense_Prediction_RequestControllerPredictionEvent()
	{
		struct AISense_Prediction_eventRequestControllerPredictionEvent_Parms
		{
			AAIController* Requestor;
			AActor* PredictedActor;
			float PredictionTime;
		};
		UObject* Outer=Z_Construct_UClass_UAISense_Prediction();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("RequestControllerPredictionEvent"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(AISense_Prediction_eventRequestControllerPredictionEvent_Parms));
			UProperty* NewProp_PredictionTime = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("PredictionTime"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(PredictionTime, AISense_Prediction_eventRequestControllerPredictionEvent_Parms), 0x0000000000000080);
			UProperty* NewProp_PredictedActor = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("PredictedActor"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(PredictedActor, AISense_Prediction_eventRequestControllerPredictionEvent_Parms), 0x0000000000000080, Z_Construct_UClass_AActor_NoRegister());
			UProperty* NewProp_Requestor = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Requestor"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(Requestor, AISense_Prediction_eventRequestControllerPredictionEvent_Parms), 0x0000000000000080, Z_Construct_UClass_AAIController_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|Perception"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AISense_Prediction.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Asks perception system to supply Requestor with PredictedActor's predicted location in PredictionTime seconds\n    Location is being predicted based on PredicterActor's current location and velocity"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAISense_Prediction_RequestPawnPredictionEvent()
	{
		struct AISense_Prediction_eventRequestPawnPredictionEvent_Parms
		{
			APawn* Requestor;
			AActor* PredictedActor;
			float PredictionTime;
		};
		UObject* Outer=Z_Construct_UClass_UAISense_Prediction();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("RequestPawnPredictionEvent"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(AISense_Prediction_eventRequestPawnPredictionEvent_Parms));
			UProperty* NewProp_PredictionTime = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("PredictionTime"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(PredictionTime, AISense_Prediction_eventRequestPawnPredictionEvent_Parms), 0x0000000000000080);
			UProperty* NewProp_PredictedActor = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("PredictedActor"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(PredictedActor, AISense_Prediction_eventRequestPawnPredictionEvent_Parms), 0x0000000000000080, Z_Construct_UClass_AActor_NoRegister());
			UProperty* NewProp_Requestor = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Requestor"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(Requestor, AISense_Prediction_eventRequestPawnPredictionEvent_Parms), 0x0000000000000080, Z_Construct_UClass_APawn_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|Perception"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AISense_Prediction.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Asks perception system to supply Requestor with PredictedActor's predicted location in PredictionTime seconds\n    Location is being predicted based on PredicterActor's current location and velocity"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UAISense_Prediction_NoRegister()
	{
		return UAISense_Prediction::StaticClass();
	}
	UClass* Z_Construct_UClass_UAISense_Prediction()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UAISense();
			Z_Construct_UPackage_AIModule();
			OuterClass = UAISense_Prediction::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100084;

				OuterClass->LinkChild(Z_Construct_UFunction_UAISense_Prediction_RequestControllerPredictionEvent());
				OuterClass->LinkChild(Z_Construct_UFunction_UAISense_Prediction_RequestPawnPredictionEvent());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_RegisteredEvents = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("RegisteredEvents"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(RegisteredEvents, UAISense_Prediction), 0x0000000000000000);
				UProperty* NewProp_RegisteredEvents_Inner = new(EC_InternalUseOnlyConstructor, NewProp_RegisteredEvents, TEXT("RegisteredEvents"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FAIPredictionEvent());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UAISense_Prediction_RequestControllerPredictionEvent()); // 3836434665
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UAISense_Prediction_RequestPawnPredictionEvent()); // 974101161
				OuterClass->ClassConfigName = FName(TEXT("Engine"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("ClassGroupNames"), TEXT("AI"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Perception/AISense_Prediction.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AISense_Prediction.h"));
				MetaData->SetValue(NewProp_RegisteredEvents, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AISense_Prediction.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAISense_Prediction(Z_Construct_UClass_UAISense_Prediction, TEXT("UAISense_Prediction"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAISense_Prediction);
	UScriptStruct* Z_Construct_UScriptStruct_FAISightEvent()
	{
		UPackage* Outer=Z_Construct_UPackage_AIModule();
		extern uint32 Get_Z_Construct_UScriptStruct_FAISightEvent_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("AISightEvent"), sizeof(FAISightEvent), Get_Z_Construct_UScriptStruct_FAISightEvent_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("AISightEvent"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FAISightEvent>, EStructFlags(0x00000201));
			UProperty* NewProp_Observer = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Observer"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(Observer, FAISightEvent), 0x0000000000000000, Z_Construct_UClass_AActor_NoRegister());
			UProperty* NewProp_SeenActor = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("SeenActor"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(SeenActor, FAISightEvent), 0x0000000000000000, Z_Construct_UClass_AActor_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AISense_Sight.h"));
			MetaData->SetValue(NewProp_Observer, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AISense_Sight.h"));
			MetaData->SetValue(NewProp_SeenActor, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AISense_Sight.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FAISightEvent_CRC() { return 604807032U; }
	UClass* Z_Construct_UClass_UAISense_Sight_NoRegister()
	{
		return UAISense_Sight::StaticClass();
	}
	UClass* Z_Construct_UClass_UAISense_Sight()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UAISense();
			Z_Construct_UPackage_AIModule();
			OuterClass = UAISense_Sight::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100084;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_SightLimitQueryImportance = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SightLimitQueryImportance"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(SightLimitQueryImportance, UAISense_Sight), 0x0000080000014001);
				UProperty* NewProp_MaxQueryImportance = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MaxQueryImportance"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(MaxQueryImportance, UAISense_Sight), 0x0000080000014001);
				UProperty* NewProp_HighImportanceQueryDistanceThreshold = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("HighImportanceQueryDistanceThreshold"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(HighImportanceQueryDistanceThreshold, UAISense_Sight), 0x0000080000014001);
				UProperty* NewProp_MaxTracesPerTick = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MaxTracesPerTick"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(MaxTracesPerTick, UAISense_Sight), 0x0000080000014001);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->ClassConfigName = FName(TEXT("Game"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("ClassGroupNames"), TEXT("AI"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Perception/AISense_Sight.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AISense_Sight.h"));
				MetaData->SetValue(NewProp_SightLimitQueryImportance, TEXT("Category"), TEXT("AI Perception"));
				MetaData->SetValue(NewProp_SightLimitQueryImportance, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AISense_Sight.h"));
				MetaData->SetValue(NewProp_MaxQueryImportance, TEXT("Category"), TEXT("AI Perception"));
				MetaData->SetValue(NewProp_MaxQueryImportance, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AISense_Sight.h"));
				MetaData->SetValue(NewProp_HighImportanceQueryDistanceThreshold, TEXT("Category"), TEXT("AI Perception"));
				MetaData->SetValue(NewProp_HighImportanceQueryDistanceThreshold, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AISense_Sight.h"));
				MetaData->SetValue(NewProp_MaxTracesPerTick, TEXT("Category"), TEXT("AI Perception"));
				MetaData->SetValue(NewProp_MaxTracesPerTick, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AISense_Sight.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAISense_Sight(Z_Construct_UClass_UAISense_Sight, TEXT("UAISense_Sight"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAISense_Sight);
	UScriptStruct* Z_Construct_UScriptStruct_FAITeamStimulusEvent()
	{
		UPackage* Outer=Z_Construct_UPackage_AIModule();
		extern uint32 Get_Z_Construct_UScriptStruct_FAITeamStimulusEvent_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("AITeamStimulusEvent"), sizeof(FAITeamStimulusEvent), Get_Z_Construct_UScriptStruct_FAITeamStimulusEvent_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("AITeamStimulusEvent"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FAITeamStimulusEvent>, EStructFlags(0x00000201));
			UProperty* NewProp_Enemy = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Enemy"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(Enemy, FAITeamStimulusEvent), 0x0000000000000000, Z_Construct_UClass_AActor_NoRegister());
			UProperty* NewProp_Broadcaster = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Broadcaster"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(Broadcaster, FAITeamStimulusEvent), 0x0000000000000000, Z_Construct_UClass_AActor_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AISense_Team.h"));
			MetaData->SetValue(NewProp_Enemy, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AISense_Team.h"));
			MetaData->SetValue(NewProp_Broadcaster, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AISense_Team.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FAITeamStimulusEvent_CRC() { return 289956574U; }
	UClass* Z_Construct_UClass_UAISense_Team_NoRegister()
	{
		return UAISense_Team::StaticClass();
	}
	UClass* Z_Construct_UClass_UAISense_Team()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UAISense();
			Z_Construct_UPackage_AIModule();
			OuterClass = UAISense_Team::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100084;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_RegisteredEvents = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("RegisteredEvents"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(RegisteredEvents, UAISense_Team), 0x0000000000000000);
				UProperty* NewProp_RegisteredEvents_Inner = new(EC_InternalUseOnlyConstructor, NewProp_RegisteredEvents, TEXT("RegisteredEvents"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FAITeamStimulusEvent());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->ClassConfigName = FName(TEXT("Engine"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("ClassGroupNames"), TEXT("AI"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Perception/AISense_Team.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AISense_Team.h"));
				MetaData->SetValue(NewProp_RegisteredEvents, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AISense_Team.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAISense_Team(Z_Construct_UClass_UAISense_Team, TEXT("UAISense_Team"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAISense_Team);
	UScriptStruct* Z_Construct_UScriptStruct_FAITouchEvent()
	{
		UPackage* Outer=Z_Construct_UPackage_AIModule();
		extern uint32 Get_Z_Construct_UScriptStruct_FAITouchEvent_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("AITouchEvent"), sizeof(FAITouchEvent), Get_Z_Construct_UScriptStruct_FAITouchEvent_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("AITouchEvent"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FAITouchEvent>, EStructFlags(0x00000201));
			UProperty* NewProp_OtherActor = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("OtherActor"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(OtherActor, FAITouchEvent), 0x0000000000000000, Z_Construct_UClass_AActor_NoRegister());
			UProperty* NewProp_TouchReceiver = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("TouchReceiver"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(TouchReceiver, FAITouchEvent), 0x0000000000000000, Z_Construct_UClass_AActor_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AISense_Touch.h"));
			MetaData->SetValue(NewProp_OtherActor, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AISense_Touch.h"));
			MetaData->SetValue(NewProp_TouchReceiver, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AISense_Touch.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FAITouchEvent_CRC() { return 3944028435U; }
	UClass* Z_Construct_UClass_UAISense_Touch_NoRegister()
	{
		return UAISense_Touch::StaticClass();
	}
	UClass* Z_Construct_UClass_UAISense_Touch()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UAISense();
			Z_Construct_UPackage_AIModule();
			OuterClass = UAISense_Touch::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100084;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_RegisteredEvents = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("RegisteredEvents"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(RegisteredEvents, UAISense_Touch), 0x0000000000000000);
				UProperty* NewProp_RegisteredEvents_Inner = new(EC_InternalUseOnlyConstructor, NewProp_RegisteredEvents, TEXT("RegisteredEvents"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FAITouchEvent());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->ClassConfigName = FName(TEXT("Engine"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("ClassGroupNames"), TEXT("AI"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Perception/AISense_Touch.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AISense_Touch.h"));
				MetaData->SetValue(NewProp_RegisteredEvents, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AISense_Touch.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAISense_Touch(Z_Construct_UClass_UAISense_Touch, TEXT("UAISense_Touch"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAISense_Touch);
	UClass* Z_Construct_UClass_UAISenseBlueprintListener_NoRegister()
	{
		return UAISenseBlueprintListener::StaticClass();
	}
	UClass* Z_Construct_UClass_UAISenseBlueprintListener()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UUserDefinedStruct();
			Z_Construct_UPackage_AIModule();
			OuterClass = UAISenseBlueprintListener::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("ClassGroupNames"), TEXT("AI"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Perception/AISenseBlueprintListener.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AISenseBlueprintListener.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAISenseBlueprintListener(Z_Construct_UClass_UAISenseBlueprintListener, TEXT("UAISenseBlueprintListener"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAISenseBlueprintListener);
	UClass* Z_Construct_UClass_UAISenseConfig_NoRegister()
	{
		return UAISenseConfig::StaticClass();
	}
	UClass* Z_Construct_UClass_UAISenseConfig()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage_AIModule();
			OuterClass = UAISenseConfig::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20101081;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bStartsEnabled, UAISenseConfig, uint8);
				UProperty* NewProp_bStartsEnabled = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bStartsEnabled"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bStartsEnabled, UAISenseConfig), 0x0000080000010015, CPP_BOOL_PROPERTY_BITMASK(bStartsEnabled, UAISenseConfig), sizeof(uint8), false);
				UProperty* NewProp_MaxAge = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MaxAge"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(MaxAge, UAISenseConfig), 0x0000080000010015);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->ClassConfigName = FName(TEXT("Game"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("ClassGroupNames"), TEXT("AI"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Perception/AISenseConfig.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AISenseConfig.h"));
				MetaData->SetValue(NewProp_bStartsEnabled, TEXT("Category"), TEXT("Sense"));
				MetaData->SetValue(NewProp_bStartsEnabled, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AISenseConfig.h"));
				MetaData->SetValue(NewProp_bStartsEnabled, TEXT("ToolTip"), TEXT("determines whether given sense starts in an enabled state"));
				MetaData->SetValue(NewProp_MaxAge, TEXT("Category"), TEXT("Sense"));
				MetaData->SetValue(NewProp_MaxAge, TEXT("ClampMin"), TEXT("0.0"));
				MetaData->SetValue(NewProp_MaxAge, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AISenseConfig.h"));
				MetaData->SetValue(NewProp_MaxAge, TEXT("ToolTip"), TEXT("specifies age limit after stimuli generated by this sense become forgotten. 0 means \"never\""));
				MetaData->SetValue(NewProp_MaxAge, TEXT("UIMin"), TEXT("0.0"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAISenseConfig(Z_Construct_UClass_UAISenseConfig, TEXT("UAISenseConfig"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAISenseConfig);
	UClass* Z_Construct_UClass_UAISenseConfig_Blueprint_NoRegister()
	{
		return UAISenseConfig_Blueprint::StaticClass();
	}
	UClass* Z_Construct_UClass_UAISenseConfig_Blueprint()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UAISenseConfig();
			Z_Construct_UPackage_AIModule();
			OuterClass = UAISenseConfig_Blueprint::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20101085;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_Implementation = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Implementation"), RF_Public|RF_Transient|RF_Native) UClassProperty(CPP_PROPERTY_BASE(Implementation, UAISenseConfig_Blueprint), 0x0004000002014015, Z_Construct_UClass_UAISense_Blueprint_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->ClassConfigName = FName(TEXT("Game"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Perception/AISenseConfig_Blueprint.h"));
				MetaData->SetValue(OuterClass, TEXT("IsBlueprintBase"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AISenseConfig_Blueprint.h"));
				MetaData->SetValue(NewProp_Implementation, TEXT("Category"), TEXT("Sense"));
				MetaData->SetValue(NewProp_Implementation, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AISenseConfig_Blueprint.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAISenseConfig_Blueprint(Z_Construct_UClass_UAISenseConfig_Blueprint, TEXT("UAISenseConfig_Blueprint"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAISenseConfig_Blueprint);
	UClass* Z_Construct_UClass_UAISenseConfig_Damage_NoRegister()
	{
		return UAISenseConfig_Damage::StaticClass();
	}
	UClass* Z_Construct_UClass_UAISenseConfig_Damage()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UAISenseConfig();
			Z_Construct_UPackage_AIModule();
			OuterClass = UAISenseConfig_Damage::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20101084;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_Implementation = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Implementation"), RF_Public|RF_Transient|RF_Native) UClassProperty(CPP_PROPERTY_BASE(Implementation, UAISenseConfig_Damage), 0x0004000002014015, Z_Construct_UClass_UAISense_Damage_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->ClassConfigName = FName(TEXT("Game"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("DisplayName"), TEXT("AI Damage sense config"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Perception/AISenseConfig_Damage.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AISenseConfig_Damage.h"));
				MetaData->SetValue(NewProp_Implementation, TEXT("Category"), TEXT("Sense"));
				MetaData->SetValue(NewProp_Implementation, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AISenseConfig_Damage.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAISenseConfig_Damage(Z_Construct_UClass_UAISenseConfig_Damage, TEXT("UAISenseConfig_Damage"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAISenseConfig_Damage);
	UClass* Z_Construct_UClass_UAISenseConfig_Hearing_NoRegister()
	{
		return UAISenseConfig_Hearing::StaticClass();
	}
	UClass* Z_Construct_UClass_UAISenseConfig_Hearing()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UAISenseConfig();
			Z_Construct_UPackage_AIModule();
			OuterClass = UAISenseConfig_Hearing::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20101084;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_DetectionByAffiliation = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("DetectionByAffiliation"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(DetectionByAffiliation, UAISenseConfig_Hearing), 0x0000000000014015, Z_Construct_UScriptStruct_FAISenseAffiliationFilter());
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bUseLoSHearing, UAISenseConfig_Hearing, uint8);
				UProperty* NewProp_bUseLoSHearing = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bUseLoSHearing"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bUseLoSHearing, UAISenseConfig_Hearing), 0x0000000000000000, CPP_BOOL_PROPERTY_BITMASK(bUseLoSHearing, UAISenseConfig_Hearing), sizeof(uint8), false);
				UProperty* NewProp_LoSHearingRange = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("LoSHearingRange"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(LoSHearingRange, UAISenseConfig_Hearing), 0x0000000000010015);
				UProperty* NewProp_HearingRange = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("HearingRange"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(HearingRange, UAISenseConfig_Hearing), 0x0000000000010015);
				UProperty* NewProp_Implementation = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Implementation"), RF_Public|RF_Transient|RF_Native) UClassProperty(CPP_PROPERTY_BASE(Implementation, UAISenseConfig_Hearing), 0x0004000002014015, Z_Construct_UClass_UAISense_Hearing_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->ClassConfigName = FName(TEXT("Game"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("DisplayName"), TEXT("AI Hearing config"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Perception/AISenseConfig_Hearing.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AISenseConfig_Hearing.h"));
				MetaData->SetValue(NewProp_DetectionByAffiliation, TEXT("Category"), TEXT("Sense"));
				MetaData->SetValue(NewProp_DetectionByAffiliation, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AISenseConfig_Hearing.h"));
				MetaData->SetValue(NewProp_bUseLoSHearing, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AISenseConfig_Hearing.h"));
				MetaData->SetValue(NewProp_bUseLoSHearing, TEXT("ToolTip"), TEXT("Warning: has significant runtime cost"));
				MetaData->SetValue(NewProp_LoSHearingRange, TEXT("Category"), TEXT("Sense"));
				MetaData->SetValue(NewProp_LoSHearingRange, TEXT("EditCondition"), TEXT("bUseLoSHearing"));
				MetaData->SetValue(NewProp_LoSHearingRange, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AISenseConfig_Hearing.h"));
				MetaData->SetValue(NewProp_HearingRange, TEXT("Category"), TEXT("Sense"));
				MetaData->SetValue(NewProp_HearingRange, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AISenseConfig_Hearing.h"));
				MetaData->SetValue(NewProp_Implementation, TEXT("Category"), TEXT("Sense"));
				MetaData->SetValue(NewProp_Implementation, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AISenseConfig_Hearing.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAISenseConfig_Hearing(Z_Construct_UClass_UAISenseConfig_Hearing, TEXT("UAISenseConfig_Hearing"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAISenseConfig_Hearing);
	UClass* Z_Construct_UClass_UAISenseConfig_Prediction_NoRegister()
	{
		return UAISenseConfig_Prediction::StaticClass();
	}
	UClass* Z_Construct_UClass_UAISenseConfig_Prediction()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UAISenseConfig();
			Z_Construct_UPackage_AIModule();
			OuterClass = UAISenseConfig_Prediction::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20101080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("DisplayName"), TEXT("AI Prediction sense config"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Perception/AISenseConfig_Prediction.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AISenseConfig_Prediction.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAISenseConfig_Prediction(Z_Construct_UClass_UAISenseConfig_Prediction, TEXT("UAISenseConfig_Prediction"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAISenseConfig_Prediction);
	UClass* Z_Construct_UClass_UAISenseConfig_Sight_NoRegister()
	{
		return UAISenseConfig_Sight::StaticClass();
	}
	UClass* Z_Construct_UClass_UAISenseConfig_Sight()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UAISenseConfig();
			Z_Construct_UPackage_AIModule();
			OuterClass = UAISenseConfig_Sight::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20101084;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_AutoSuccessRangeFromLastSeenLocation = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AutoSuccessRangeFromLastSeenLocation"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(AutoSuccessRangeFromLastSeenLocation, UAISenseConfig_Sight), 0x0000000000014015);
				UProperty* NewProp_DetectionByAffiliation = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("DetectionByAffiliation"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(DetectionByAffiliation, UAISenseConfig_Sight), 0x0000000000014015, Z_Construct_UScriptStruct_FAISenseAffiliationFilter());
				UProperty* NewProp_PeripheralVisionAngleDegrees = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("PeripheralVisionAngleDegrees"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(PeripheralVisionAngleDegrees, UAISenseConfig_Sight), 0x0000000000014015);
				UProperty* NewProp_LoseSightRadius = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("LoseSightRadius"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(LoseSightRadius, UAISenseConfig_Sight), 0x0000000000014015);
				UProperty* NewProp_SightRadius = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SightRadius"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(SightRadius, UAISenseConfig_Sight), 0x0000000000014015);
				UProperty* NewProp_Implementation = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Implementation"), RF_Public|RF_Transient|RF_Native) UClassProperty(CPP_PROPERTY_BASE(Implementation, UAISenseConfig_Sight), 0x0004000002014015, Z_Construct_UClass_UAISense_Sight_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->ClassConfigName = FName(TEXT("Game"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("DisplayName"), TEXT("AI Sight config"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Perception/AISenseConfig_Sight.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AISenseConfig_Sight.h"));
				MetaData->SetValue(NewProp_AutoSuccessRangeFromLastSeenLocation, TEXT("Category"), TEXT("Sense"));
				MetaData->SetValue(NewProp_AutoSuccessRangeFromLastSeenLocation, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AISenseConfig_Sight.h"));
				MetaData->SetValue(NewProp_AutoSuccessRangeFromLastSeenLocation, TEXT("ToolTip"), TEXT("If not an InvalidRange (which is the default), we will always be able to see the target that has already been seen if they are within this range of their last seen location."));
				MetaData->SetValue(NewProp_DetectionByAffiliation, TEXT("Category"), TEXT("Sense"));
				MetaData->SetValue(NewProp_DetectionByAffiliation, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AISenseConfig_Sight.h"));
				MetaData->SetValue(NewProp_PeripheralVisionAngleDegrees, TEXT("Category"), TEXT("Sense"));
				MetaData->SetValue(NewProp_PeripheralVisionAngleDegrees, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AISenseConfig_Sight.h"));
				MetaData->SetValue(NewProp_PeripheralVisionAngleDegrees, TEXT("ToolTip"), TEXT("How far to the side AI can see, in degrees. Use SetPeripheralVisionAngle to change the value at runtime."));
				MetaData->SetValue(NewProp_LoseSightRadius, TEXT("Category"), TEXT("Sense"));
				MetaData->SetValue(NewProp_LoseSightRadius, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AISenseConfig_Sight.h"));
				MetaData->SetValue(NewProp_LoseSightRadius, TEXT("ToolTip"), TEXT("Maximum sight distance to see target that has been already seen."));
				MetaData->SetValue(NewProp_SightRadius, TEXT("Category"), TEXT("Sense"));
				MetaData->SetValue(NewProp_SightRadius, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AISenseConfig_Sight.h"));
				MetaData->SetValue(NewProp_SightRadius, TEXT("ToolTip"), TEXT("Maximum sight distance to notice a target."));
				MetaData->SetValue(NewProp_Implementation, TEXT("Category"), TEXT("Sense"));
				MetaData->SetValue(NewProp_Implementation, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AISenseConfig_Sight.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAISenseConfig_Sight(Z_Construct_UClass_UAISenseConfig_Sight, TEXT("UAISenseConfig_Sight"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAISenseConfig_Sight);
	UClass* Z_Construct_UClass_UAISenseConfig_Team_NoRegister()
	{
		return UAISenseConfig_Team::StaticClass();
	}
	UClass* Z_Construct_UClass_UAISenseConfig_Team()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UAISenseConfig();
			Z_Construct_UPackage_AIModule();
			OuterClass = UAISenseConfig_Team::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20101080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("DisplayName"), TEXT("AI Team sense config"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Perception/AISenseConfig_Team.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AISenseConfig_Team.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAISenseConfig_Team(Z_Construct_UClass_UAISenseConfig_Team, TEXT("UAISenseConfig_Team"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAISenseConfig_Team);
	UClass* Z_Construct_UClass_UAISenseConfig_Touch_NoRegister()
	{
		return UAISenseConfig_Touch::StaticClass();
	}
	UClass* Z_Construct_UClass_UAISenseConfig_Touch()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UAISenseConfig();
			Z_Construct_UPackage_AIModule();
			OuterClass = UAISenseConfig_Touch::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20101080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("DisplayName"), TEXT("AI Touch config"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Perception/AISenseConfig_Touch.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AISenseConfig_Touch.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAISenseConfig_Touch(Z_Construct_UClass_UAISenseConfig_Touch, TEXT("UAISenseConfig_Touch"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAISenseConfig_Touch);
	UClass* Z_Construct_UClass_UAISenseEvent_NoRegister()
	{
		return UAISenseEvent::StaticClass();
	}
	UClass* Z_Construct_UClass_UAISenseEvent()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage_AIModule();
			OuterClass = UAISenseEvent::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20101081;


				OuterClass->ClassConfigName = FName(TEXT("Game"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("ClassGroupNames"), TEXT("AI"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Perception/AISenseEvent.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AISenseEvent.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAISenseEvent(Z_Construct_UClass_UAISenseEvent, TEXT("UAISenseEvent"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAISenseEvent);
	UClass* Z_Construct_UClass_UAISenseEvent_Damage_NoRegister()
	{
		return UAISenseEvent_Damage::StaticClass();
	}
	UClass* Z_Construct_UClass_UAISenseEvent_Damage()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UAISenseEvent();
			Z_Construct_UPackage_AIModule();
			OuterClass = UAISenseEvent_Damage::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20101080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_Event = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Event"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Event, UAISenseEvent_Damage), 0x0000000000000005, Z_Construct_UScriptStruct_FAIDamageEvent());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Perception/AISenseEvent_Damage.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AISenseEvent_Damage.h"));
				MetaData->SetValue(NewProp_Event, TEXT("Category"), TEXT("Sense"));
				MetaData->SetValue(NewProp_Event, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AISenseEvent_Damage.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAISenseEvent_Damage(Z_Construct_UClass_UAISenseEvent_Damage, TEXT("UAISenseEvent_Damage"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAISenseEvent_Damage);
	UClass* Z_Construct_UClass_UAISenseEvent_Hearing_NoRegister()
	{
		return UAISenseEvent_Hearing::StaticClass();
	}
	UClass* Z_Construct_UClass_UAISenseEvent_Hearing()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UAISenseEvent();
			Z_Construct_UPackage_AIModule();
			OuterClass = UAISenseEvent_Hearing::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20101080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_Event = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Event"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Event, UAISenseEvent_Hearing), 0x0000080000000005, Z_Construct_UScriptStruct_FAINoiseEvent());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Perception/AISenseEvent_Hearing.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AISenseEvent_Hearing.h"));
				MetaData->SetValue(NewProp_Event, TEXT("Category"), TEXT("Sense"));
				MetaData->SetValue(NewProp_Event, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/AISenseEvent_Hearing.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAISenseEvent_Hearing(Z_Construct_UClass_UAISenseEvent_Hearing, TEXT("UAISenseEvent_Hearing"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAISenseEvent_Hearing);
	UClass* Z_Construct_UClass_UAISightTargetInterface_NoRegister()
	{
		return UAISightTargetInterface::StaticClass();
	}
	UClass* Z_Construct_UClass_UAISightTargetInterface()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			UInterface::StaticClass();
			Z_Construct_UPackage_AIModule();
			OuterClass = UAISightTargetInterface::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20104081;


				OuterClass->StaticLink();
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAISightTargetInterface(Z_Construct_UClass_UAISightTargetInterface, TEXT("UAISightTargetInterface"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAISightTargetInterface);
	UEnum* Z_Construct_UEnum_AIModule_EAITaskPriority()
	{
		UPackage* Outer=Z_Construct_UPackage_AIModule();
		extern uint32 Get_Z_Construct_UEnum_AIModule_EAITaskPriority_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("EAITaskPriority"), 0, Get_Z_Construct_UEnum_AIModule_EAITaskPriority_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EAITaskPriority"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EAITaskPriority::Lowest")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EAITaskPriority::Low")), 64));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EAITaskPriority::AutonomousAI")), 127));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EAITaskPriority::High")), 192));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EAITaskPriority::Ultimate")), 254));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EAITaskPriority::EAITaskPriority_MAX")), 255));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::EnumClass);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("AutonomousAI.ToolTip"), TEXT("FGameplayTasks::DefaultPriority / 2,"));
			MetaData->SetValue(ReturnEnum, TEXT("High.ToolTip"), TEXT("FGameplayTasks::DefaultPriority,"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/Tasks/AITask.h"));
			MetaData->SetValue(ReturnEnum, TEXT("Ultimate.ToolTip"), TEXT("(1.5 * FGameplayTasks::DefaultPriority),"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_AIModule_EAITaskPriority_CRC() { return 2489661157U; }
	UClass* Z_Construct_UClass_UAITask_NoRegister()
	{
		return UAITask::StaticClass();
	}
	UClass* Z_Construct_UClass_UAITask()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UGameplayTask();
			Z_Construct_UPackage_AIModule();
			OuterClass = UAITask::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100081;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_OwnerController = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OwnerController"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(OwnerController, UAITask), 0x0000080000000000, Z_Construct_UClass_AAIController_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Tasks/AITask.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Tasks/AITask.h"));
				MetaData->SetValue(NewProp_OwnerController, TEXT("ModuleRelativePath"), TEXT("Classes/Tasks/AITask.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAITask(Z_Construct_UClass_UAITask, TEXT("UAITask"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAITask);
	UFunction* Z_Construct_UDelegateFunction_AIModule_MoveTaskCompletedSignature__DelegateSignature()
	{
		struct _Script_AIModule_eventMoveTaskCompletedSignature_Parms
		{
			TEnumAsByte<EPathFollowingResult::Type> Result;
		};
		UObject* Outer=Z_Construct_UPackage_AIModule();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("MoveTaskCompletedSignature__DelegateSignature"), RF_Public|RF_Transient|RF_Native) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_AIModule_eventMoveTaskCompletedSignature_Parms));
			UProperty* NewProp_Result = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Result"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(Result, _Script_AIModule_eventMoveTaskCompletedSignature_Parms), 0x0000000000000080, Z_Construct_UEnum_AIModule_EPathFollowingResult());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/Tasks/AITask_MoveTo.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAITask_MoveTo_AIMoveTo()
	{
		struct AITask_MoveTo_eventAIMoveTo_Parms
		{
			AAIController* Controller;
			FVector GoalLocation;
			AActor* GoalActor;
			float AcceptanceRadius;
			TEnumAsByte<EAIOptionFlag::Type> StopOnOverlap;
			TEnumAsByte<EAIOptionFlag::Type> AcceptPartialPath;
			bool bUsePathfinding;
			bool bLockAILogic;
			UAITask_MoveTo* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UAITask_MoveTo();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("AIMoveTo"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04822401, 65535, sizeof(AITask_MoveTo_eventAIMoveTo_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, AITask_MoveTo_eventAIMoveTo_Parms), 0x0000000000000580, Z_Construct_UClass_UAITask_MoveTo_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bLockAILogic, AITask_MoveTo_eventAIMoveTo_Parms, bool);
			UProperty* NewProp_bLockAILogic = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("bLockAILogic"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bLockAILogic, AITask_MoveTo_eventAIMoveTo_Parms), 0x0000000000000080, CPP_BOOL_PROPERTY_BITMASK(bLockAILogic, AITask_MoveTo_eventAIMoveTo_Parms), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bUsePathfinding, AITask_MoveTo_eventAIMoveTo_Parms, bool);
			UProperty* NewProp_bUsePathfinding = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("bUsePathfinding"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bUsePathfinding, AITask_MoveTo_eventAIMoveTo_Parms), 0x0000040000000080, CPP_BOOL_PROPERTY_BITMASK(bUsePathfinding, AITask_MoveTo_eventAIMoveTo_Parms), sizeof(bool), true);
			UProperty* NewProp_AcceptPartialPath = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("AcceptPartialPath"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(AcceptPartialPath, AITask_MoveTo_eventAIMoveTo_Parms), 0x0000040000000080, Z_Construct_UEnum_AIModule_EAIOptionFlag());
			UProperty* NewProp_StopOnOverlap = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("StopOnOverlap"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(StopOnOverlap, AITask_MoveTo_eventAIMoveTo_Parms), 0x0000040000000080, Z_Construct_UEnum_AIModule_EAIOptionFlag());
			UProperty* NewProp_AcceptanceRadius = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("AcceptanceRadius"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(AcceptanceRadius, AITask_MoveTo_eventAIMoveTo_Parms), 0x0000040000000080);
			UProperty* NewProp_GoalActor = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("GoalActor"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(GoalActor, AITask_MoveTo_eventAIMoveTo_Parms), 0x0000000000000080, Z_Construct_UClass_AActor_NoRegister());
			UProperty* NewProp_GoalLocation = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("GoalLocation"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(GoalLocation, AITask_MoveTo_eventAIMoveTo_Parms), 0x0000000000000080, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_Controller = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Controller"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(Controller, AITask_MoveTo_eventAIMoveTo_Parms), 0x0000000000000080, Z_Construct_UClass_AAIController_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("AdvancedDisplay"), TEXT("TaskOwner,AcceptanceRadius,StopOnOverlap,AcceptPartialPath,bUsePathfinding"));
			MetaData->SetValue(ReturnFunction, TEXT("BlueprintInternalUseOnly"), TEXT("TRUE"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|Tasks"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_AcceptanceRadius"), TEXT("-1.000000"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_AcceptPartialPath"), TEXT("Default"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_bLockAILogic"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_bUsePathfinding"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_StopOnOverlap"), TEXT("Default"));
			MetaData->SetValue(ReturnFunction, TEXT("DefaultToSelf"), TEXT("TaskOwner"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Move To Location or Actor"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/Tasks/AITask_MoveTo.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("@param"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UAITask_MoveTo_NoRegister()
	{
		return UAITask_MoveTo::StaticClass();
	}
	UClass* Z_Construct_UClass_UAITask_MoveTo()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UAITask();
			Z_Construct_UPackage_AIModule();
			OuterClass = UAITask_MoveTo::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;

				OuterClass->LinkChild(Z_Construct_UFunction_UAITask_MoveTo_AIMoveTo());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bShouldUsePathfinding, UAITask_MoveTo, bool);
				UProperty* NewProp_bShouldUsePathfinding = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bShouldUsePathfinding"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bShouldUsePathfinding, UAITask_MoveTo), 0x00010c0000000014, CPP_BOOL_PROPERTY_BITMASK(bShouldUsePathfinding, UAITask_MoveTo), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bShouldAcceptPartialPath, UAITask_MoveTo, bool);
				UProperty* NewProp_bShouldAcceptPartialPath = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bShouldAcceptPartialPath"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bShouldAcceptPartialPath, UAITask_MoveTo), 0x00010c0000000014, CPP_BOOL_PROPERTY_BITMASK(bShouldAcceptPartialPath, UAITask_MoveTo), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bShouldStopOnOverlap, UAITask_MoveTo, bool);
				UProperty* NewProp_bShouldStopOnOverlap = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bShouldStopOnOverlap"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bShouldStopOnOverlap, UAITask_MoveTo), 0x00010c0000000014, CPP_BOOL_PROPERTY_BITMASK(bShouldStopOnOverlap, UAITask_MoveTo), sizeof(bool), true);
				UProperty* NewProp_MoveAcceptanceRadius = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MoveAcceptanceRadius"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(MoveAcceptanceRadius, UAITask_MoveTo), 0x00010c0000000014);
				UProperty* NewProp_MoveGoalActor = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MoveGoalActor"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(MoveGoalActor, UAITask_MoveTo), 0x0001080000000014, Z_Construct_UClass_AActor_NoRegister());
				UProperty* NewProp_MoveGoalLocation = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MoveGoalLocation"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(MoveGoalLocation, UAITask_MoveTo), 0x0001080000000014, Z_Construct_UScriptStruct_FVector());
				UProperty* NewProp_OnMoveFinished = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnMoveFinished"), RF_Public|RF_Transient|RF_Native) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnMoveFinished, UAITask_MoveTo), 0x0000080010080000, Z_Construct_UDelegateFunction_AIModule_MoveTaskCompletedSignature__DelegateSignature());
				UProperty* NewProp_OnRequestFailed = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnRequestFailed"), RF_Public|RF_Transient|RF_Native) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnRequestFailed, UAITask_MoveTo), 0x0000080010080000, Z_Construct_UDelegateFunction_UGameplayTask_GenericGameplayTaskDelegate__DelegateSignature());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UAITask_MoveTo_AIMoveTo()); // 4176766835
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Tasks/AITask_MoveTo.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Tasks/AITask_MoveTo.h"));
				MetaData->SetValue(NewProp_bShouldUsePathfinding, TEXT("Category"), TEXT("AITask"));
				MetaData->SetValue(NewProp_bShouldUsePathfinding, TEXT("ExposeOnSpawn"), TEXT("TRUE"));
				MetaData->SetValue(NewProp_bShouldUsePathfinding, TEXT("ModuleRelativePath"), TEXT("Classes/Tasks/AITask_MoveTo.h"));
				MetaData->SetValue(NewProp_bShouldAcceptPartialPath, TEXT("Category"), TEXT("AITask"));
				MetaData->SetValue(NewProp_bShouldAcceptPartialPath, TEXT("ExposeOnSpawn"), TEXT("TRUE"));
				MetaData->SetValue(NewProp_bShouldAcceptPartialPath, TEXT("ModuleRelativePath"), TEXT("Classes/Tasks/AITask_MoveTo.h"));
				MetaData->SetValue(NewProp_bShouldStopOnOverlap, TEXT("Category"), TEXT("AITask"));
				MetaData->SetValue(NewProp_bShouldStopOnOverlap, TEXT("ExposeOnSpawn"), TEXT("TRUE"));
				MetaData->SetValue(NewProp_bShouldStopOnOverlap, TEXT("ModuleRelativePath"), TEXT("Classes/Tasks/AITask_MoveTo.h"));
				MetaData->SetValue(NewProp_MoveAcceptanceRadius, TEXT("Category"), TEXT("AITask"));
				MetaData->SetValue(NewProp_MoveAcceptanceRadius, TEXT("DisplayName"), TEXT("Acceptance Radius"));
				MetaData->SetValue(NewProp_MoveAcceptanceRadius, TEXT("ExposeOnSpawn"), TEXT("TRUE"));
				MetaData->SetValue(NewProp_MoveAcceptanceRadius, TEXT("ModuleRelativePath"), TEXT("Classes/Tasks/AITask_MoveTo.h"));
				MetaData->SetValue(NewProp_MoveGoalActor, TEXT("Category"), TEXT("AITask"));
				MetaData->SetValue(NewProp_MoveGoalActor, TEXT("DisplayName"), TEXT("Goal Actor"));
				MetaData->SetValue(NewProp_MoveGoalActor, TEXT("ExposeOnSpawn"), TEXT("TRUE"));
				MetaData->SetValue(NewProp_MoveGoalActor, TEXT("ModuleRelativePath"), TEXT("Classes/Tasks/AITask_MoveTo.h"));
				MetaData->SetValue(NewProp_MoveGoalLocation, TEXT("Category"), TEXT("AITask"));
				MetaData->SetValue(NewProp_MoveGoalLocation, TEXT("DisplayName"), TEXT("Goal Location"));
				MetaData->SetValue(NewProp_MoveGoalLocation, TEXT("ExposeOnSpawn"), TEXT("TRUE"));
				MetaData->SetValue(NewProp_MoveGoalLocation, TEXT("ModuleRelativePath"), TEXT("Classes/Tasks/AITask_MoveTo.h"));
				MetaData->SetValue(NewProp_OnMoveFinished, TEXT("ModuleRelativePath"), TEXT("Classes/Tasks/AITask_MoveTo.h"));
				MetaData->SetValue(NewProp_OnRequestFailed, TEXT("ModuleRelativePath"), TEXT("Classes/Tasks/AITask_MoveTo.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAITask_MoveTo(Z_Construct_UClass_UAITask_MoveTo, TEXT("UAITask_MoveTo"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAITask_MoveTo);
	UFunction* Z_Construct_UFunction_UBrainComponent_RestartLogic()
	{
		UObject* Outer=Z_Construct_UClass_UBrainComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("RestartLogic"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020400, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|Logic"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/BrainComponent.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UBrainComponent_StopLogic()
	{
		struct BrainComponent_eventStopLogic_Parms
		{
			FString Reason;
		};
		UObject* Outer=Z_Construct_UClass_UBrainComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("StopLogic"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020400, 65535, sizeof(BrainComponent_eventStopLogic_Parms));
			UProperty* NewProp_Reason = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Reason"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(Reason, BrainComponent_eventStopLogic_Parms), 0x0000000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|Logic"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/BrainComponent.h"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UBrainComponent_NoRegister()
	{
		return UBrainComponent::StaticClass();
	}
	UClass* Z_Construct_UClass_UBrainComponent()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UActorComponent();
			Z_Construct_UPackage_AIModule();
			OuterClass = UBrainComponent::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20B00081;

				OuterClass->LinkChild(Z_Construct_UFunction_UBrainComponent_RestartLogic());
				OuterClass->LinkChild(Z_Construct_UFunction_UBrainComponent_StopLogic());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_AIOwner = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AIOwner"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(AIOwner, UBrainComponent), 0x0000080000002000, Z_Construct_UClass_AAIController_NoRegister());
				UProperty* NewProp_BlackboardComp = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("BlackboardComp"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(BlackboardComp, UBrainComponent), 0x0000080000082008, Z_Construct_UClass_UBlackboardComponent_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UBrainComponent_RestartLogic()); // 3993349106
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UBrainComponent_StopLogic()); // 2306450430
				OuterClass->Interfaces.Add(FImplementedInterface(Z_Construct_UClass_UAIResourceInterface_NoRegister(), VTABLE_OFFSET(UBrainComponent, IAIResourceInterface), false ));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("ComponentReplication"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("BrainComponent.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/BrainComponent.h"));
				MetaData->SetValue(NewProp_AIOwner, TEXT("ModuleRelativePath"), TEXT("Classes/BrainComponent.h"));
				MetaData->SetValue(NewProp_BlackboardComp, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_BlackboardComp, TEXT("ModuleRelativePath"), TEXT("Classes/BrainComponent.h"));
				MetaData->SetValue(NewProp_BlackboardComp, TEXT("ToolTip"), TEXT("blackboard component"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UBrainComponent(Z_Construct_UClass_UBrainComponent, TEXT("UBrainComponent"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UBrainComponent);
	UFunction* Z_Construct_UFunction_UBehaviorTreeComponent_AddCooldownTagDuration()
	{
		struct BehaviorTreeComponent_eventAddCooldownTagDuration_Parms
		{
			FGameplayTag CooldownTag;
			float CooldownDuration;
			bool bAddToExistingDuration;
		};
		UObject* Outer=Z_Construct_UClass_UBehaviorTreeComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("AddCooldownTagDuration"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(BehaviorTreeComponent_eventAddCooldownTagDuration_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bAddToExistingDuration, BehaviorTreeComponent_eventAddCooldownTagDuration_Parms, bool);
			UProperty* NewProp_bAddToExistingDuration = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("bAddToExistingDuration"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bAddToExistingDuration, BehaviorTreeComponent_eventAddCooldownTagDuration_Parms), 0x0000000000000080, CPP_BOOL_PROPERTY_BITMASK(bAddToExistingDuration, BehaviorTreeComponent_eventAddCooldownTagDuration_Parms), sizeof(bool), true);
			UProperty* NewProp_CooldownDuration = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("CooldownDuration"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(CooldownDuration, BehaviorTreeComponent_eventAddCooldownTagDuration_Parms), 0x0000000000000080);
			UProperty* NewProp_CooldownTag = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("CooldownTag"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(CooldownTag, BehaviorTreeComponent_eventAddCooldownTagDuration_Parms), 0x0000000000000080, Z_Construct_UScriptStruct_FGameplayTag());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|Logic"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BehaviorTreeComponent.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("add to the cooldown tag's duration"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UBehaviorTreeComponent_GetTagCooldownEndTime()
	{
		struct BehaviorTreeComponent_eventGetTagCooldownEndTime_Parms
		{
			FGameplayTag CooldownTag;
			float ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UBehaviorTreeComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetTagCooldownEndTime"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x54020401, 65535, sizeof(BehaviorTreeComponent_eventGetTagCooldownEndTime_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(ReturnValue, BehaviorTreeComponent_eventGetTagCooldownEndTime_Parms), 0x0000000000000580);
			UProperty* NewProp_CooldownTag = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("CooldownTag"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(CooldownTag, BehaviorTreeComponent_eventGetTagCooldownEndTime_Parms), 0x0000000000000080, Z_Construct_UScriptStruct_FGameplayTag());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|Logic"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BehaviorTreeComponent.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("@return the cooldown tag end time, 0.0f if CooldownTag is not found"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UBehaviorTreeComponent_SetDynamicSubtree()
	{
		struct BehaviorTreeComponent_eventSetDynamicSubtree_Parms
		{
			FGameplayTag InjectTag;
			UBehaviorTree* BehaviorAsset;
		};
		UObject* Outer=Z_Construct_UClass_UBehaviorTreeComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetDynamicSubtree"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020400, 65535, sizeof(BehaviorTreeComponent_eventSetDynamicSubtree_Parms));
			UProperty* NewProp_BehaviorAsset = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("BehaviorAsset"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(BehaviorAsset, BehaviorTreeComponent_eventSetDynamicSubtree_Parms), 0x0000000000000080, Z_Construct_UClass_UBehaviorTree_NoRegister());
			UProperty* NewProp_InjectTag = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("InjectTag"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(InjectTag, BehaviorTreeComponent_eventSetDynamicSubtree_Parms), 0x0000000000000080, Z_Construct_UScriptStruct_FGameplayTag());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|Logic"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BehaviorTreeComponent.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("assign subtree to RunBehaviorDynamic task specified by tag"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UBehaviorTreeComponent_NoRegister()
	{
		return UBehaviorTreeComponent::StaticClass();
	}
	UClass* Z_Construct_UClass_UBehaviorTreeComponent()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UBrainComponent();
			Z_Construct_UPackage_AIModule();
			OuterClass = UBehaviorTreeComponent::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20B00080;

				OuterClass->LinkChild(Z_Construct_UFunction_UBehaviorTreeComponent_AddCooldownTagDuration());
				OuterClass->LinkChild(Z_Construct_UFunction_UBehaviorTreeComponent_GetTagCooldownEndTime());
				OuterClass->LinkChild(Z_Construct_UFunction_UBehaviorTreeComponent_SetDynamicSubtree());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_NodeInstances = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("NodeInstances"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(NodeInstances, UBehaviorTreeComponent), 0x0000080000002000);
				UProperty* NewProp_NodeInstances_Inner = new(EC_InternalUseOnlyConstructor, NewProp_NodeInstances, TEXT("NodeInstances"), RF_Public|RF_Transient|RF_Native) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UClass_UBTNode_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UBehaviorTreeComponent_AddCooldownTagDuration()); // 403691274
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UBehaviorTreeComponent_GetTagCooldownEndTime()); // 16120620
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UBehaviorTreeComponent_SetDynamicSubtree()); // 194098471
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("ComponentReplication"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("BehaviorTree/BehaviorTreeComponent.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BehaviorTreeComponent.h"));
				MetaData->SetValue(NewProp_NodeInstances, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BehaviorTreeComponent.h"));
				MetaData->SetValue(NewProp_NodeInstances, TEXT("ToolTip"), TEXT("instanced nodes"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UBehaviorTreeComponent(Z_Construct_UClass_UBehaviorTreeComponent, TEXT("UBehaviorTreeComponent"));
	UClass* Z_Construct_UClass_UBTNode_NoRegister()
	{
		return UBTNode::StaticClass();
	}
	UClass* Z_Construct_UClass_UBTNode()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage_AIModule();
			OuterClass = UBTNode::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100081;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_ParentNode = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ParentNode"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(ParentNode, UBTNode), 0x0000000000000000, Z_Construct_UClass_UBTCompositeNode_NoRegister());
				UProperty* NewProp_TreeAsset = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("TreeAsset"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(TreeAsset, UBTNode), 0x0000000000000000, Z_Construct_UClass_UBehaviorTree_NoRegister());
				UProperty* NewProp_NodeName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("NodeName"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(NodeName, UBTNode), 0x0000000000000001);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->ClassConfigName = FName(TEXT("Game"));
				OuterClass->Interfaces.Add(FImplementedInterface(Z_Construct_UClass_UGameplayTaskOwnerInterface_NoRegister(), VTABLE_OFFSET(UBTNode, IGameplayTaskOwnerInterface), false ));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("BehaviorTree/BTNode.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BTNode.h"));
				MetaData->SetValue(NewProp_ParentNode, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BTNode.h"));
				MetaData->SetValue(NewProp_ParentNode, TEXT("ToolTip"), TEXT("parent node"));
				MetaData->SetValue(NewProp_TreeAsset, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BTNode.h"));
				MetaData->SetValue(NewProp_TreeAsset, TEXT("ToolTip"), TEXT("source asset"));
				MetaData->SetValue(NewProp_NodeName, TEXT("Category"), TEXT("Description"));
				MetaData->SetValue(NewProp_NodeName, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BTNode.h"));
				MetaData->SetValue(NewProp_NodeName, TEXT("ToolTip"), TEXT("node name"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UBTNode(Z_Construct_UClass_UBTNode, TEXT("UBTNode"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UBTNode);
	UEnum* Z_Construct_UEnum_AIModule_EBTDecoratorLogic()
	{
		UPackage* Outer=Z_Construct_UPackage_AIModule();
		extern uint32 Get_Z_Construct_UEnum_AIModule_EBTDecoratorLogic_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("EBTDecoratorLogic"), 0, Get_Z_Construct_UEnum_AIModule_EBTDecoratorLogic_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EBTDecoratorLogic"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EBTDecoratorLogic::Invalid")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EBTDecoratorLogic::Test")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EBTDecoratorLogic::And")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EBTDecoratorLogic::Or")), 3));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EBTDecoratorLogic::Not")), 4));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EBTDecoratorLogic::EBTDecoratorLogic_MAX")), 5));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("And.ToolTip"), TEXT("logic op: AND"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BTCompositeNode.h"));
			MetaData->SetValue(ReturnEnum, TEXT("Not.ToolTip"), TEXT("logic op: NOT"));
			MetaData->SetValue(ReturnEnum, TEXT("Or.ToolTip"), TEXT("logic op: OR"));
			MetaData->SetValue(ReturnEnum, TEXT("Test.ToolTip"), TEXT("Test decorator conditions."));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("keep in sync with DescribeLogicOp() in BTCompositeNode.cpp"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_AIModule_EBTDecoratorLogic_CRC() { return 2158862608U; }
	UEnum* Z_Construct_UEnum_AIModule_EBTChildIndex()
	{
		UPackage* Outer=Z_Construct_UPackage_AIModule();
		extern uint32 Get_Z_Construct_UEnum_AIModule_EBTChildIndex_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("EBTChildIndex"), 0, Get_Z_Construct_UEnum_AIModule_EBTChildIndex_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EBTChildIndex"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EBTChildIndex::FirstNode")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EBTChildIndex::TaskNode")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EBTChildIndex::EBTChildIndex_MAX")), 2));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::EnumClass);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BTCompositeNode.h"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_AIModule_EBTChildIndex_CRC() { return 2886756773U; }
	UScriptStruct* Z_Construct_UScriptStruct_FBTCompositeChild()
	{
		UPackage* Outer=Z_Construct_UPackage_AIModule();
		extern uint32 Get_Z_Construct_UScriptStruct_FBTCompositeChild_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("BTCompositeChild"), sizeof(FBTCompositeChild), Get_Z_Construct_UScriptStruct_FBTCompositeChild_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("BTCompositeChild"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FBTCompositeChild>, EStructFlags(0x00000001));
			UProperty* NewProp_DecoratorOps = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("DecoratorOps"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(DecoratorOps, FBTCompositeChild), 0x0000000000000000);
			UProperty* NewProp_DecoratorOps_Inner = new(EC_InternalUseOnlyConstructor, NewProp_DecoratorOps, TEXT("DecoratorOps"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FBTDecoratorLogic());
			UProperty* NewProp_Decorators = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Decorators"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(Decorators, FBTCompositeChild), 0x0000000000000000);
			UProperty* NewProp_Decorators_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Decorators, TEXT("Decorators"), RF_Public|RF_Transient|RF_Native) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UClass_UBTDecorator_NoRegister());
			UProperty* NewProp_ChildTask = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ChildTask"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(ChildTask, FBTCompositeChild), 0x0000000000000000, Z_Construct_UClass_UBTTaskNode_NoRegister());
			UProperty* NewProp_ChildComposite = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ChildComposite"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(ChildComposite, FBTCompositeChild), 0x0000000000000000, Z_Construct_UClass_UBTCompositeNode_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BTCompositeNode.h"));
			MetaData->SetValue(NewProp_DecoratorOps, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BTCompositeNode.h"));
			MetaData->SetValue(NewProp_DecoratorOps, TEXT("ToolTip"), TEXT("logic operations for decorators"));
			MetaData->SetValue(NewProp_Decorators, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BTCompositeNode.h"));
			MetaData->SetValue(NewProp_Decorators, TEXT("ToolTip"), TEXT("execution decorators"));
			MetaData->SetValue(NewProp_ChildTask, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BTCompositeNode.h"));
			MetaData->SetValue(NewProp_ChildComposite, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BTCompositeNode.h"));
			MetaData->SetValue(NewProp_ChildComposite, TEXT("ToolTip"), TEXT("child node"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FBTCompositeChild_CRC() { return 1603997764U; }
	UScriptStruct* Z_Construct_UScriptStruct_FBTDecoratorLogic()
	{
		UPackage* Outer=Z_Construct_UPackage_AIModule();
		extern uint32 Get_Z_Construct_UScriptStruct_FBTDecoratorLogic_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("BTDecoratorLogic"), sizeof(FBTDecoratorLogic), Get_Z_Construct_UScriptStruct_FBTDecoratorLogic_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("BTDecoratorLogic"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FBTDecoratorLogic>, EStructFlags(0x00000001));
			UProperty* NewProp_Number = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Number"), RF_Public|RF_Transient|RF_Native) UUInt16Property(CPP_PROPERTY_BASE(Number, FBTDecoratorLogic), 0x0000000000000000);
			UProperty* NewProp_Operation = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Operation"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(Operation, FBTDecoratorLogic), 0x0000000000000000, Z_Construct_UEnum_AIModule_EBTDecoratorLogic());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BTCompositeNode.h"));
			MetaData->SetValue(NewProp_Number, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BTCompositeNode.h"));
			MetaData->SetValue(NewProp_Operation, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BTCompositeNode.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FBTDecoratorLogic_CRC() { return 1914801620U; }
	UClass* Z_Construct_UClass_UBTCompositeNode_NoRegister()
	{
		return UBTCompositeNode::StaticClass();
	}
	UClass* Z_Construct_UClass_UBTCompositeNode()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UBTNode();
			Z_Construct_UPackage_AIModule();
			OuterClass = UBTCompositeNode::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100081;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_Services = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Services"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(Services, UBTCompositeNode), 0x0000000000000000);
				UProperty* NewProp_Services_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Services, TEXT("Services"), RF_Public|RF_Transient|RF_Native) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UClass_UBTService_NoRegister());
				UProperty* NewProp_Children = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Children"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(Children, UBTCompositeNode), 0x0000000000000000);
				UProperty* NewProp_Children_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Children, TEXT("Children"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FBTCompositeChild());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("BehaviorTree/BTCompositeNode.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BTCompositeNode.h"));
				MetaData->SetValue(NewProp_Services, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BTCompositeNode.h"));
				MetaData->SetValue(NewProp_Services, TEXT("ToolTip"), TEXT("service nodes"));
				MetaData->SetValue(NewProp_Children, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BTCompositeNode.h"));
				MetaData->SetValue(NewProp_Children, TEXT("ToolTip"), TEXT("child nodes"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UBTCompositeNode(Z_Construct_UClass_UBTCompositeNode, TEXT("UBTCompositeNode"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UBTCompositeNode);
	UClass* Z_Construct_UClass_UBTTaskNode_NoRegister()
	{
		return UBTTaskNode::StaticClass();
	}
	UClass* Z_Construct_UClass_UBTTaskNode()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UBTNode();
			Z_Construct_UPackage_AIModule();
			OuterClass = UBTTaskNode::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100081;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("BehaviorTree/BTTaskNode.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BTTaskNode.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Task are leaf nodes of behavior tree, which perform actual actions\n\nBecause some of them can be instanced for specific AI, following virtual functions are not marked as const:\n - ExecuteTask\n - AbortTask\n - TickTask\n - OnMessage\n\nIf your node is not being instanced (default behavior), DO NOT change any properties of object within those functions!\nTemplate nodes are shared across all behavior tree components using the same tree asset and must store\ntheir runtime properties in provided NodeMemory block (allocation size determined by GetInstanceMemorySize() )"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UBTTaskNode(Z_Construct_UClass_UBTTaskNode, TEXT("UBTTaskNode"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UBTTaskNode);
	UClass* Z_Construct_UClass_UBehaviorTree_NoRegister()
	{
		return UBehaviorTree::StaticClass();
	}
	UClass* Z_Construct_UClass_UBehaviorTree()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage_AIModule();
			OuterClass = UBehaviorTree::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_RootDecoratorOps = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("RootDecoratorOps"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(RootDecoratorOps, UBehaviorTree), 0x0000000000000000);
				UProperty* NewProp_RootDecoratorOps_Inner = new(EC_InternalUseOnlyConstructor, NewProp_RootDecoratorOps, TEXT("RootDecoratorOps"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FBTDecoratorLogic());
				UProperty* NewProp_RootDecorators = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("RootDecorators"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(RootDecorators, UBehaviorTree), 0x0000000000000000);
				UProperty* NewProp_RootDecorators_Inner = new(EC_InternalUseOnlyConstructor, NewProp_RootDecorators, TEXT("RootDecorators"), RF_Public|RF_Transient|RF_Native) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UClass_UBTDecorator_NoRegister());
				UProperty* NewProp_BlackboardAsset = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("BlackboardAsset"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(BlackboardAsset, UBehaviorTree), 0x0000000000000000, Z_Construct_UClass_UBlackboardData_NoRegister());
#if WITH_EDITORONLY_DATA
				UProperty* NewProp_LastEditedDocuments = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("LastEditedDocuments"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(LastEditedDocuments, UBehaviorTree), 0x0000000800000000);
				UProperty* NewProp_LastEditedDocuments_Inner = new(EC_InternalUseOnlyConstructor, NewProp_LastEditedDocuments, TEXT("LastEditedDocuments"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000800000000, Z_Construct_UScriptStruct_FEditedDocumentInfo());
				UProperty* NewProp_BTGraph = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("BTGraph"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(BTGraph, UBehaviorTree), 0x0000000800000000, Z_Construct_UClass_UEdGraph_NoRegister());
#endif // WITH_EDITORONLY_DATA
				UProperty* NewProp_RootNode = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("RootNode"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(RootNode, UBehaviorTree), 0x0000000000000000, Z_Construct_UClass_UBTCompositeNode_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("BehaviorTree/BehaviorTree.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BehaviorTree.h"));
				MetaData->SetValue(NewProp_RootDecoratorOps, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BehaviorTree.h"));
				MetaData->SetValue(NewProp_RootDecoratorOps, TEXT("ToolTip"), TEXT("logic operators for root level decorators, used by subtrees"));
				MetaData->SetValue(NewProp_RootDecorators, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BehaviorTree.h"));
				MetaData->SetValue(NewProp_RootDecorators, TEXT("ToolTip"), TEXT("root level decorators, used by subtrees"));
				MetaData->SetValue(NewProp_BlackboardAsset, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BehaviorTree.h"));
				MetaData->SetValue(NewProp_BlackboardAsset, TEXT("ToolTip"), TEXT("blackboard asset for this tree"));
				MetaData->SetValue(NewProp_LastEditedDocuments, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BehaviorTree.h"));
				MetaData->SetValue(NewProp_LastEditedDocuments, TEXT("ToolTip"), TEXT("Info about the graphs we last edited"));
				MetaData->SetValue(NewProp_BTGraph, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BehaviorTree.h"));
				MetaData->SetValue(NewProp_BTGraph, TEXT("ToolTip"), TEXT("Graph for Behavior Tree"));
				MetaData->SetValue(NewProp_RootNode, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BehaviorTree.h"));
				MetaData->SetValue(NewProp_RootNode, TEXT("ToolTip"), TEXT("root node of loaded tree"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UBehaviorTree(Z_Construct_UClass_UBehaviorTree, TEXT("UBehaviorTree"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UBehaviorTree);
	UScriptStruct* Z_Construct_UScriptStruct_FBehaviorTreeTemplateInfo()
	{
		UPackage* Outer=Z_Construct_UPackage_AIModule();
		extern uint32 Get_Z_Construct_UScriptStruct_FBehaviorTreeTemplateInfo_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("BehaviorTreeTemplateInfo"), sizeof(FBehaviorTreeTemplateInfo), Get_Z_Construct_UScriptStruct_FBehaviorTreeTemplateInfo_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("BehaviorTreeTemplateInfo"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FBehaviorTreeTemplateInfo>, EStructFlags(0x00000001));
			UProperty* NewProp_Template = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Template"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(Template, FBehaviorTreeTemplateInfo), 0x0000000000002000, Z_Construct_UClass_UBTCompositeNode_NoRegister());
			UProperty* NewProp_Asset = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Asset"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(Asset, FBehaviorTreeTemplateInfo), 0x0000000000000000, Z_Construct_UClass_UBehaviorTree_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BehaviorTreeManager.h"));
			MetaData->SetValue(NewProp_Template, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BehaviorTreeManager.h"));
			MetaData->SetValue(NewProp_Template, TEXT("ToolTip"), TEXT("initialized template"));
			MetaData->SetValue(NewProp_Asset, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BehaviorTreeManager.h"));
			MetaData->SetValue(NewProp_Asset, TEXT("ToolTip"), TEXT("behavior tree asset"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FBehaviorTreeTemplateInfo_CRC() { return 3958951068U; }
	UClass* Z_Construct_UClass_UBehaviorTreeManager_NoRegister()
	{
		return UBehaviorTreeManager::StaticClass();
	}
	UClass* Z_Construct_UClass_UBehaviorTreeManager()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage_AIModule();
			OuterClass = UBehaviorTreeManager::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900084;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_ActiveComponents = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ActiveComponents"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(ActiveComponents, UBehaviorTreeManager), 0x0000088000000008);
				UProperty* NewProp_ActiveComponents_Inner = new(EC_InternalUseOnlyConstructor, NewProp_ActiveComponents, TEXT("ActiveComponents"), RF_Public|RF_Transient|RF_Native) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000080008, Z_Construct_UClass_UBehaviorTreeComponent_NoRegister());
				UProperty* NewProp_LoadedTemplates = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("LoadedTemplates"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(LoadedTemplates, UBehaviorTreeManager), 0x0000080000000000);
				UProperty* NewProp_LoadedTemplates_Inner = new(EC_InternalUseOnlyConstructor, NewProp_LoadedTemplates, TEXT("LoadedTemplates"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FBehaviorTreeTemplateInfo());
				UProperty* NewProp_MaxDebuggerSteps = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MaxDebuggerSteps"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(MaxDebuggerSteps, UBehaviorTreeManager), 0x0000000000004000);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->ClassConfigName = FName(TEXT("Engine"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("BehaviorTree/BehaviorTreeManager.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BehaviorTreeManager.h"));
				MetaData->SetValue(NewProp_ActiveComponents, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_ActiveComponents, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BehaviorTreeManager.h"));
				MetaData->SetValue(NewProp_LoadedTemplates, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BehaviorTreeManager.h"));
				MetaData->SetValue(NewProp_LoadedTemplates, TEXT("ToolTip"), TEXT("initialized tree templates"));
				MetaData->SetValue(NewProp_MaxDebuggerSteps, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BehaviorTreeManager.h"));
				MetaData->SetValue(NewProp_MaxDebuggerSteps, TEXT("ToolTip"), TEXT("limit for recording execution steps for debugger"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UBehaviorTreeManager(Z_Construct_UClass_UBehaviorTreeManager, TEXT("UBehaviorTreeManager"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UBehaviorTreeManager);
	UEnum* Z_Construct_UEnum_AIModule_ETextKeyOperation()
	{
		UPackage* Outer=Z_Construct_UPackage_AIModule();
		extern uint32 Get_Z_Construct_UEnum_AIModule_ETextKeyOperation_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("ETextKeyOperation"), 0, Get_Z_Construct_UEnum_AIModule_ETextKeyOperation_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ETextKeyOperation"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ETextKeyOperation::Equal")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ETextKeyOperation::NotEqual")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ETextKeyOperation::Contain")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ETextKeyOperation::NotContain")), 3));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ETextKeyOperation::ETextKeyOperation_MAX")), 4));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("Contain.DisplayName"), TEXT("Contains"));
			MetaData->SetValue(ReturnEnum, TEXT("Equal.DisplayName"), TEXT("Is Equal To"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Blackboard/BlackboardKeyType.h"));
			MetaData->SetValue(ReturnEnum, TEXT("NotContain.DisplayName"), TEXT("Not Contains"));
			MetaData->SetValue(ReturnEnum, TEXT("NotEqual.DisplayName"), TEXT("Is Not Equal To"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_AIModule_ETextKeyOperation_CRC() { return 3032138150U; }
	UEnum* Z_Construct_UEnum_AIModule_EArithmeticKeyOperation()
	{
		UPackage* Outer=Z_Construct_UPackage_AIModule();
		extern uint32 Get_Z_Construct_UEnum_AIModule_EArithmeticKeyOperation_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("EArithmeticKeyOperation"), 0, Get_Z_Construct_UEnum_AIModule_EArithmeticKeyOperation_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EArithmeticKeyOperation"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EArithmeticKeyOperation::Equal")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EArithmeticKeyOperation::NotEqual")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EArithmeticKeyOperation::Less")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EArithmeticKeyOperation::LessOrEqual")), 3));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EArithmeticKeyOperation::Greater")), 4));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EArithmeticKeyOperation::GreaterOrEqual")), 5));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EArithmeticKeyOperation::EArithmeticKeyOperation_MAX")), 6));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("Equal.DisplayName"), TEXT("Is Equal To"));
			MetaData->SetValue(ReturnEnum, TEXT("Greater.DisplayName"), TEXT("Is Greater Than"));
			MetaData->SetValue(ReturnEnum, TEXT("GreaterOrEqual.DisplayName"), TEXT("Is Greater Than Or Equal To"));
			MetaData->SetValue(ReturnEnum, TEXT("Less.DisplayName"), TEXT("Is Less Than"));
			MetaData->SetValue(ReturnEnum, TEXT("LessOrEqual.DisplayName"), TEXT("Is Less Than Or Equal To"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Blackboard/BlackboardKeyType.h"));
			MetaData->SetValue(ReturnEnum, TEXT("NotEqual.DisplayName"), TEXT("Is Not Equal To"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_AIModule_EArithmeticKeyOperation_CRC() { return 2346687151U; }
	UEnum* Z_Construct_UEnum_AIModule_EBasicKeyOperation()
	{
		UPackage* Outer=Z_Construct_UPackage_AIModule();
		extern uint32 Get_Z_Construct_UEnum_AIModule_EBasicKeyOperation_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("EBasicKeyOperation"), 0, Get_Z_Construct_UEnum_AIModule_EBasicKeyOperation_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EBasicKeyOperation"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EBasicKeyOperation::Set")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EBasicKeyOperation::NotSet")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EBasicKeyOperation::EBasicKeyOperation_MAX")), 2));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Blackboard/BlackboardKeyType.h"));
			MetaData->SetValue(ReturnEnum, TEXT("NotSet.DisplayName"), TEXT("Is Not Set"));
			MetaData->SetValue(ReturnEnum, TEXT("Set.DisplayName"), TEXT("Is Set"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_AIModule_EBasicKeyOperation_CRC() { return 86539524U; }
	UClass* Z_Construct_UClass_UBlackboardKeyType_NoRegister()
	{
		return UBlackboardKeyType::StaticClass();
	}
	UClass* Z_Construct_UClass_UBlackboardKeyType()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage_AIModule();
			OuterClass = UBlackboardKeyType::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20103081;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("AutoExpandCategories"), TEXT("Blackboard"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("BehaviorTree/Blackboard/BlackboardKeyType.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Blackboard/BlackboardKeyType.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UBlackboardKeyType(Z_Construct_UClass_UBlackboardKeyType, TEXT("UBlackboardKeyType"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UBlackboardKeyType);
	UClass* Z_Construct_UClass_UBlackboardKeyType_Enum_NoRegister()
	{
		return UBlackboardKeyType_Enum::StaticClass();
	}
	UClass* Z_Construct_UClass_UBlackboardKeyType_Enum()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UBlackboardKeyType();
			Z_Construct_UPackage_AIModule();
			OuterClass = UBlackboardKeyType_Enum::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20103080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bIsEnumNameValid, UBlackboardKeyType_Enum, uint8);
				UProperty* NewProp_bIsEnumNameValid = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bIsEnumNameValid"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bIsEnumNameValid, UBlackboardKeyType_Enum), 0x0000000000030001, CPP_BOOL_PROPERTY_BITMASK(bIsEnumNameValid, UBlackboardKeyType_Enum), sizeof(uint8), false);
				UProperty* NewProp_EnumName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("EnumName"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(EnumName, UBlackboardKeyType_Enum), 0x0000000000010001);
				UProperty* NewProp_EnumType = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("EnumType"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(EnumType, UBlackboardKeyType_Enum), 0x0000000000010001, UEnum::StaticClass());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("AutoExpandCategories"), TEXT("Blackboard"));
				MetaData->SetValue(OuterClass, TEXT("DisplayName"), TEXT("Enum"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("BehaviorTree/Blackboard/BlackboardKeyType_Enum.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Blackboard/BlackboardKeyType_Enum.h"));
				MetaData->SetValue(NewProp_bIsEnumNameValid, TEXT("Category"), TEXT("Blackboard"));
				MetaData->SetValue(NewProp_bIsEnumNameValid, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Blackboard/BlackboardKeyType_Enum.h"));
				MetaData->SetValue(NewProp_bIsEnumNameValid, TEXT("ToolTip"), TEXT("set when EnumName override is valid and active"));
				MetaData->SetValue(NewProp_EnumName, TEXT("Category"), TEXT("Blackboard"));
				MetaData->SetValue(NewProp_EnumName, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Blackboard/BlackboardKeyType_Enum.h"));
				MetaData->SetValue(NewProp_EnumName, TEXT("ToolTip"), TEXT("name of enum defined in c++ code, will take priority over asset from EnumType property"));
				MetaData->SetValue(NewProp_EnumType, TEXT("Category"), TEXT("Blackboard"));
				MetaData->SetValue(NewProp_EnumType, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Blackboard/BlackboardKeyType_Enum.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UBlackboardKeyType_Enum(Z_Construct_UClass_UBlackboardKeyType_Enum, TEXT("UBlackboardKeyType_Enum"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UBlackboardKeyType_Enum);
	UClass* Z_Construct_UClass_UBlackboardKeyType_NativeEnum_NoRegister()
	{
		return UBlackboardKeyType_NativeEnum::StaticClass();
	}
	UClass* Z_Construct_UClass_UBlackboardKeyType_NativeEnum()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UBlackboardKeyType();
			Z_Construct_UPackage_AIModule();
			OuterClass = UBlackboardKeyType_NativeEnum::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x24103080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_EnumType = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("EnumType"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(EnumType, UBlackboardKeyType_NativeEnum), 0x0000000000000000, UEnum::StaticClass());
				UProperty* NewProp_EnumName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("EnumName"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(EnumName, UBlackboardKeyType_NativeEnum), 0x0000000000010001);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("AutoExpandCategories"), TEXT("Blackboard"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("BehaviorTree/Blackboard/BlackboardKeyType_NativeEnum.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Blackboard/BlackboardKeyType_NativeEnum.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("DEPRECATED, please use UBlackboardKeyType_Enum instead"));
				MetaData->SetValue(NewProp_EnumType, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Blackboard/BlackboardKeyType_NativeEnum.h"));
				MetaData->SetValue(NewProp_EnumName, TEXT("Category"), TEXT("Blackboard"));
				MetaData->SetValue(NewProp_EnumName, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Blackboard/BlackboardKeyType_NativeEnum.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UBlackboardKeyType_NativeEnum(Z_Construct_UClass_UBlackboardKeyType_NativeEnum, TEXT("UBlackboardKeyType_NativeEnum"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UBlackboardKeyType_NativeEnum);
	UScriptStruct* Z_Construct_UScriptStruct_FBlackboardEntry()
	{
		UPackage* Outer=Z_Construct_UPackage_AIModule();
		extern uint32 Get_Z_Construct_UScriptStruct_FBlackboardEntry_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("BlackboardEntry"), sizeof(FBlackboardEntry), Get_Z_Construct_UScriptStruct_FBlackboardEntry_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("BlackboardEntry"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FBlackboardEntry>, EStructFlags(0x00000005));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bInstanceSynced, FBlackboardEntry, uint8);
			UProperty* NewProp_bInstanceSynced = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bInstanceSynced"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bInstanceSynced, FBlackboardEntry), 0x0000000000000001, CPP_BOOL_PROPERTY_BITMASK(bInstanceSynced, FBlackboardEntry), sizeof(uint8), false);
			UProperty* NewProp_KeyType = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("KeyType"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(KeyType, FBlackboardEntry), 0x0002000000080009, Z_Construct_UClass_UBlackboardKeyType_NoRegister());
#if WITH_EDITORONLY_DATA
			UProperty* NewProp_EntryDescription = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("EntryDescription"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(EntryDescription, FBlackboardEntry), 0x0000000800000001);
#endif // WITH_EDITORONLY_DATA
			UProperty* NewProp_EntryName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("EntryName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(EntryName, FBlackboardEntry), 0x0000000000000001);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BlackboardData.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("blackboard entry definition"));
			MetaData->SetValue(NewProp_bInstanceSynced, TEXT("Category"), TEXT("Blackboard"));
			MetaData->SetValue(NewProp_bInstanceSynced, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BlackboardData.h"));
			MetaData->SetValue(NewProp_bInstanceSynced, TEXT("ToolTip"), TEXT("if set to true then this field will be synchronized across all instances of this blackboard"));
			MetaData->SetValue(NewProp_KeyType, TEXT("Category"), TEXT("Blackboard"));
			MetaData->SetValue(NewProp_KeyType, TEXT("EditInline"), TEXT("true"));
			MetaData->SetValue(NewProp_KeyType, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BlackboardData.h"));
			MetaData->SetValue(NewProp_KeyType, TEXT("ToolTip"), TEXT("key type and additional properties"));
			MetaData->SetValue(NewProp_EntryDescription, TEXT("Category"), TEXT("Blackboard"));
			MetaData->SetValue(NewProp_EntryDescription, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BlackboardData.h"));
			MetaData->SetValue(NewProp_EntryDescription, TEXT("ToolTip"), TEXT("Optional description to explain what this blackboard entry does."));
			MetaData->SetValue(NewProp_EntryName, TEXT("Category"), TEXT("Blackboard"));
			MetaData->SetValue(NewProp_EntryName, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BlackboardData.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FBlackboardEntry_CRC() { return 3582624304U; }
	UClass* Z_Construct_UClass_UBlackboardData_NoRegister()
	{
		return UBlackboardData::StaticClass();
	}
	UClass* Z_Construct_UClass_UBlackboardData()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UDataAsset();
			Z_Construct_UPackage_AIModule();
			OuterClass = UBlackboardData::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bHasSynchronizedKeys, UBlackboardData, uint8);
				UProperty* NewProp_bHasSynchronizedKeys = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bHasSynchronizedKeys"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bHasSynchronizedKeys, UBlackboardData), 0x0000000000000000, CPP_BOOL_PROPERTY_BITMASK(bHasSynchronizedKeys, UBlackboardData), sizeof(uint8), false);
				UProperty* NewProp_Keys = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Keys"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(Keys, UBlackboardData), 0x0000008000000001);
				UProperty* NewProp_Keys_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Keys, TEXT("Keys"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000008000000000, Z_Construct_UScriptStruct_FBlackboardEntry());
#if WITH_EDITORONLY_DATA
				UProperty* NewProp_ParentKeys = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ParentKeys"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(ParentKeys, UBlackboardData), 0x0000008800032001);
				UProperty* NewProp_ParentKeys_Inner = new(EC_InternalUseOnlyConstructor, NewProp_ParentKeys, TEXT("ParentKeys"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000008800020000, Z_Construct_UScriptStruct_FBlackboardEntry());
#endif // WITH_EDITORONLY_DATA
				UProperty* NewProp_Parent = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Parent"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(Parent, UBlackboardData), 0x0000000000000001, Z_Construct_UClass_UBlackboardData_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("AutoExpandCategories"), TEXT("Blackboard"));
				MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("BehaviorTree/BlackboardData.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BlackboardData.h"));
				MetaData->SetValue(NewProp_bHasSynchronizedKeys, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BlackboardData.h"));
				MetaData->SetValue(NewProp_Keys, TEXT("Category"), TEXT("Blackboard"));
				MetaData->SetValue(NewProp_Keys, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BlackboardData.h"));
				MetaData->SetValue(NewProp_Keys, TEXT("ToolTip"), TEXT("blackboard keys"));
				MetaData->SetValue(NewProp_ParentKeys, TEXT("Category"), TEXT("Parent"));
				MetaData->SetValue(NewProp_ParentKeys, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BlackboardData.h"));
				MetaData->SetValue(NewProp_ParentKeys, TEXT("ToolTip"), TEXT("all keys inherited from parent chain"));
				MetaData->SetValue(NewProp_Parent, TEXT("Category"), TEXT("Parent"));
				MetaData->SetValue(NewProp_Parent, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BlackboardData.h"));
				MetaData->SetValue(NewProp_Parent, TEXT("ToolTip"), TEXT("parent blackboard (keys can be overridden)"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UBlackboardData(Z_Construct_UClass_UBlackboardData, TEXT("UBlackboardData"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UBlackboardData);
	UFunction* Z_Construct_UFunction_UBlackboardComponent_ClearValue()
	{
		struct BlackboardComponent_eventClearValue_Parms
		{
			FName KeyName;
		};
		UObject* Outer=Z_Construct_UClass_UBlackboardComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ClearValue"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04420401, 65535, sizeof(BlackboardComponent_eventClearValue_Parms));
			UProperty* NewProp_KeyName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("KeyName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(KeyName, BlackboardComponent_eventClearValue_Parms), 0x0000000008000182);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|Components|Blackboard"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BlackboardComponent.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UBlackboardComponent_ClearValueAsRotator()
	{
		struct BlackboardComponent_eventClearValueAsRotator_Parms
		{
			FName KeyName;
		};
		UObject* Outer=Z_Construct_UClass_UBlackboardComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ClearValueAsRotator"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04420401, 65535, sizeof(BlackboardComponent_eventClearValueAsRotator_Parms));
			UProperty* NewProp_KeyName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("KeyName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(KeyName, BlackboardComponent_eventClearValueAsRotator_Parms), 0x0000000008000182);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|Components|Blackboard"));
			MetaData->SetValue(ReturnFunction, TEXT("DeprecatedFunction"), TEXT(""));
			MetaData->SetValue(ReturnFunction, TEXT("DeprecationMessage"), TEXT("Please use ClearValue instead"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BlackboardComponent.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UBlackboardComponent_ClearValueAsVector()
	{
		struct BlackboardComponent_eventClearValueAsVector_Parms
		{
			FName KeyName;
		};
		UObject* Outer=Z_Construct_UClass_UBlackboardComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ClearValueAsVector"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04420401, 65535, sizeof(BlackboardComponent_eventClearValueAsVector_Parms));
			UProperty* NewProp_KeyName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("KeyName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(KeyName, BlackboardComponent_eventClearValueAsVector_Parms), 0x0000000008000182);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|Components|Blackboard"));
			MetaData->SetValue(ReturnFunction, TEXT("DeprecatedFunction"), TEXT(""));
			MetaData->SetValue(ReturnFunction, TEXT("DeprecationMessage"), TEXT("Please use ClearValue instead"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BlackboardComponent.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UBlackboardComponent_GetLocationFromEntry()
	{
		struct BlackboardComponent_eventGetLocationFromEntry_Parms
		{
			FName KeyName;
			FVector ResultLocation;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UBlackboardComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetLocationFromEntry"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x54C20401, 65535, sizeof(BlackboardComponent_eventGetLocationFromEntry_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, BlackboardComponent_eventGetLocationFromEntry_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, BlackboardComponent_eventGetLocationFromEntry_Parms), 0x0000000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, BlackboardComponent_eventGetLocationFromEntry_Parms), sizeof(bool), true);
			UProperty* NewProp_ResultLocation = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ResultLocation"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(ResultLocation, BlackboardComponent_eventGetLocationFromEntry_Parms), 0x0000000000000180, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_KeyName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("KeyName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(KeyName, BlackboardComponent_eventGetLocationFromEntry_Parms), 0x0000000008000182);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|Components|Blackboard"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BlackboardComponent.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("return false if call failed (most probably no such entry in BB)"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UBlackboardComponent_GetRotationFromEntry()
	{
		struct BlackboardComponent_eventGetRotationFromEntry_Parms
		{
			FName KeyName;
			FRotator ResultRotation;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UBlackboardComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetRotationFromEntry"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x54C20401, 65535, sizeof(BlackboardComponent_eventGetRotationFromEntry_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, BlackboardComponent_eventGetRotationFromEntry_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, BlackboardComponent_eventGetRotationFromEntry_Parms), 0x0000000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, BlackboardComponent_eventGetRotationFromEntry_Parms), sizeof(bool), true);
			UProperty* NewProp_ResultRotation = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ResultRotation"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(ResultRotation, BlackboardComponent_eventGetRotationFromEntry_Parms), 0x0000000000000180, Z_Construct_UScriptStruct_FRotator());
			UProperty* NewProp_KeyName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("KeyName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(KeyName, BlackboardComponent_eventGetRotationFromEntry_Parms), 0x0000000008000182);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|Components|Blackboard"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BlackboardComponent.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("return false if call failed (most probably no such entry in BB)"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UBlackboardComponent_GetValueAsBool()
	{
		struct BlackboardComponent_eventGetValueAsBool_Parms
		{
			FName KeyName;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UBlackboardComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetValueAsBool"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x54420401, 65535, sizeof(BlackboardComponent_eventGetValueAsBool_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, BlackboardComponent_eventGetValueAsBool_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, BlackboardComponent_eventGetValueAsBool_Parms), 0x0000000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, BlackboardComponent_eventGetValueAsBool_Parms), sizeof(bool), true);
			UProperty* NewProp_KeyName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("KeyName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(KeyName, BlackboardComponent_eventGetValueAsBool_Parms), 0x0000000008000182);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|Components|Blackboard"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BlackboardComponent.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UBlackboardComponent_GetValueAsClass()
	{
		struct BlackboardComponent_eventGetValueAsClass_Parms
		{
			FName KeyName;
			UClass* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UBlackboardComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetValueAsClass"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x54420401, 65535, sizeof(BlackboardComponent_eventGetValueAsClass_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UClassProperty(CPP_PROPERTY_BASE(ReturnValue, BlackboardComponent_eventGetValueAsClass_Parms), 0x0000000000000580, Z_Construct_UClass_UObject_NoRegister());
			UProperty* NewProp_KeyName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("KeyName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(KeyName, BlackboardComponent_eventGetValueAsClass_Parms), 0x0000000008000182);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|Components|Blackboard"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BlackboardComponent.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UBlackboardComponent_GetValueAsEnum()
	{
		struct BlackboardComponent_eventGetValueAsEnum_Parms
		{
			FName KeyName;
			uint8 ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UBlackboardComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetValueAsEnum"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x54420401, 65535, sizeof(BlackboardComponent_eventGetValueAsEnum_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(ReturnValue, BlackboardComponent_eventGetValueAsEnum_Parms), 0x0000000000000580);
			UProperty* NewProp_KeyName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("KeyName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(KeyName, BlackboardComponent_eventGetValueAsEnum_Parms), 0x0000000008000182);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|Components|Blackboard"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BlackboardComponent.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UBlackboardComponent_GetValueAsFloat()
	{
		struct BlackboardComponent_eventGetValueAsFloat_Parms
		{
			FName KeyName;
			float ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UBlackboardComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetValueAsFloat"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x54420401, 65535, sizeof(BlackboardComponent_eventGetValueAsFloat_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(ReturnValue, BlackboardComponent_eventGetValueAsFloat_Parms), 0x0000000000000580);
			UProperty* NewProp_KeyName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("KeyName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(KeyName, BlackboardComponent_eventGetValueAsFloat_Parms), 0x0000000008000182);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|Components|Blackboard"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BlackboardComponent.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UBlackboardComponent_GetValueAsInt()
	{
		struct BlackboardComponent_eventGetValueAsInt_Parms
		{
			FName KeyName;
			int32 ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UBlackboardComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetValueAsInt"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x54420401, 65535, sizeof(BlackboardComponent_eventGetValueAsInt_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(ReturnValue, BlackboardComponent_eventGetValueAsInt_Parms), 0x0000000000000580);
			UProperty* NewProp_KeyName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("KeyName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(KeyName, BlackboardComponent_eventGetValueAsInt_Parms), 0x0000000008000182);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|Components|Blackboard"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BlackboardComponent.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UBlackboardComponent_GetValueAsName()
	{
		struct BlackboardComponent_eventGetValueAsName_Parms
		{
			FName KeyName;
			FName ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UBlackboardComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetValueAsName"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x54420401, 65535, sizeof(BlackboardComponent_eventGetValueAsName_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(ReturnValue, BlackboardComponent_eventGetValueAsName_Parms), 0x0000000000000580);
			UProperty* NewProp_KeyName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("KeyName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(KeyName, BlackboardComponent_eventGetValueAsName_Parms), 0x0000000008000182);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|Components|Blackboard"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BlackboardComponent.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UBlackboardComponent_GetValueAsObject()
	{
		struct BlackboardComponent_eventGetValueAsObject_Parms
		{
			FName KeyName;
			UObject* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UBlackboardComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetValueAsObject"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x54420401, 65535, sizeof(BlackboardComponent_eventGetValueAsObject_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, BlackboardComponent_eventGetValueAsObject_Parms), 0x0000000000000580, Z_Construct_UClass_UObject_NoRegister());
			UProperty* NewProp_KeyName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("KeyName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(KeyName, BlackboardComponent_eventGetValueAsObject_Parms), 0x0000000008000182);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|Components|Blackboard"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BlackboardComponent.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UBlackboardComponent_GetValueAsRotator()
	{
		struct BlackboardComponent_eventGetValueAsRotator_Parms
		{
			FName KeyName;
			FRotator ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UBlackboardComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetValueAsRotator"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x54C20401, 65535, sizeof(BlackboardComponent_eventGetValueAsRotator_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, BlackboardComponent_eventGetValueAsRotator_Parms), 0x0000000000000580, Z_Construct_UScriptStruct_FRotator());
			UProperty* NewProp_KeyName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("KeyName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(KeyName, BlackboardComponent_eventGetValueAsRotator_Parms), 0x0000000008000182);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|Components|Blackboard"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BlackboardComponent.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UBlackboardComponent_GetValueAsString()
	{
		struct BlackboardComponent_eventGetValueAsString_Parms
		{
			FName KeyName;
			FString ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UBlackboardComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetValueAsString"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x54420401, 65535, sizeof(BlackboardComponent_eventGetValueAsString_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(ReturnValue, BlackboardComponent_eventGetValueAsString_Parms), 0x0000000000000580);
			UProperty* NewProp_KeyName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("KeyName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(KeyName, BlackboardComponent_eventGetValueAsString_Parms), 0x0000000008000182);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|Components|Blackboard"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BlackboardComponent.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UBlackboardComponent_GetValueAsVector()
	{
		struct BlackboardComponent_eventGetValueAsVector_Parms
		{
			FName KeyName;
			FVector ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UBlackboardComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetValueAsVector"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x54C20401, 65535, sizeof(BlackboardComponent_eventGetValueAsVector_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, BlackboardComponent_eventGetValueAsVector_Parms), 0x0000000000000580, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_KeyName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("KeyName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(KeyName, BlackboardComponent_eventGetValueAsVector_Parms), 0x0000000008000182);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|Components|Blackboard"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BlackboardComponent.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UBlackboardComponent_IsVectorValueSet()
	{
		struct BlackboardComponent_eventIsVectorValueSet_Parms
		{
			FName KeyName;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UBlackboardComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("IsVectorValueSet"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x54420401, 65535, sizeof(BlackboardComponent_eventIsVectorValueSet_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, BlackboardComponent_eventIsVectorValueSet_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, BlackboardComponent_eventIsVectorValueSet_Parms), 0x0000000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, BlackboardComponent_eventIsVectorValueSet_Parms), sizeof(bool), true);
			UProperty* NewProp_KeyName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("KeyName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(KeyName, BlackboardComponent_eventIsVectorValueSet_Parms), 0x0000000008000182);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|Components|Blackboard"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BlackboardComponent.h"));
			MetaData->SetValue(ReturnFunction, TEXT("Tooltip"), TEXT("If the vector value has been set (and not cleared), this function returns true (indicating that the value should be valid).  If it's not set, the vector value is invalid and this function will return false.  (Also returns false if the key specified does not hold a vector.)"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UBlackboardComponent_SetValueAsBool()
	{
		struct BlackboardComponent_eventSetValueAsBool_Parms
		{
			FName KeyName;
			bool BoolValue;
		};
		UObject* Outer=Z_Construct_UClass_UBlackboardComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetValueAsBool"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04420401, 65535, sizeof(BlackboardComponent_eventSetValueAsBool_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(BoolValue, BlackboardComponent_eventSetValueAsBool_Parms, bool);
			UProperty* NewProp_BoolValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("BoolValue"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(BoolValue, BlackboardComponent_eventSetValueAsBool_Parms), 0x0000000000000080, CPP_BOOL_PROPERTY_BITMASK(BoolValue, BlackboardComponent_eventSetValueAsBool_Parms), sizeof(bool), true);
			UProperty* NewProp_KeyName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("KeyName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(KeyName, BlackboardComponent_eventSetValueAsBool_Parms), 0x0000000008000182);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|Components|Blackboard"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BlackboardComponent.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UBlackboardComponent_SetValueAsClass()
	{
		struct BlackboardComponent_eventSetValueAsClass_Parms
		{
			FName KeyName;
			UClass* ClassValue;
		};
		UObject* Outer=Z_Construct_UClass_UBlackboardComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetValueAsClass"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04420401, 65535, sizeof(BlackboardComponent_eventSetValueAsClass_Parms));
			UProperty* NewProp_ClassValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ClassValue"), RF_Public|RF_Transient|RF_Native) UClassProperty(CPP_PROPERTY_BASE(ClassValue, BlackboardComponent_eventSetValueAsClass_Parms), 0x0000000000000080, Z_Construct_UClass_UObject_NoRegister());
			UProperty* NewProp_KeyName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("KeyName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(KeyName, BlackboardComponent_eventSetValueAsClass_Parms), 0x0000000008000182);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|Components|Blackboard"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BlackboardComponent.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UBlackboardComponent_SetValueAsEnum()
	{
		struct BlackboardComponent_eventSetValueAsEnum_Parms
		{
			FName KeyName;
			uint8 EnumValue;
		};
		UObject* Outer=Z_Construct_UClass_UBlackboardComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetValueAsEnum"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04420401, 65535, sizeof(BlackboardComponent_eventSetValueAsEnum_Parms));
			UProperty* NewProp_EnumValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("EnumValue"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(EnumValue, BlackboardComponent_eventSetValueAsEnum_Parms), 0x0000000000000080);
			UProperty* NewProp_KeyName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("KeyName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(KeyName, BlackboardComponent_eventSetValueAsEnum_Parms), 0x0000000008000182);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|Components|Blackboard"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BlackboardComponent.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UBlackboardComponent_SetValueAsFloat()
	{
		struct BlackboardComponent_eventSetValueAsFloat_Parms
		{
			FName KeyName;
			float FloatValue;
		};
		UObject* Outer=Z_Construct_UClass_UBlackboardComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetValueAsFloat"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04420401, 65535, sizeof(BlackboardComponent_eventSetValueAsFloat_Parms));
			UProperty* NewProp_FloatValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("FloatValue"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(FloatValue, BlackboardComponent_eventSetValueAsFloat_Parms), 0x0000000000000080);
			UProperty* NewProp_KeyName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("KeyName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(KeyName, BlackboardComponent_eventSetValueAsFloat_Parms), 0x0000000008000182);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|Components|Blackboard"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BlackboardComponent.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UBlackboardComponent_SetValueAsInt()
	{
		struct BlackboardComponent_eventSetValueAsInt_Parms
		{
			FName KeyName;
			int32 IntValue;
		};
		UObject* Outer=Z_Construct_UClass_UBlackboardComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetValueAsInt"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04420401, 65535, sizeof(BlackboardComponent_eventSetValueAsInt_Parms));
			UProperty* NewProp_IntValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("IntValue"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(IntValue, BlackboardComponent_eventSetValueAsInt_Parms), 0x0000000000000080);
			UProperty* NewProp_KeyName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("KeyName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(KeyName, BlackboardComponent_eventSetValueAsInt_Parms), 0x0000000008000182);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|Components|Blackboard"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BlackboardComponent.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UBlackboardComponent_SetValueAsName()
	{
		struct BlackboardComponent_eventSetValueAsName_Parms
		{
			FName KeyName;
			FName NameValue;
		};
		UObject* Outer=Z_Construct_UClass_UBlackboardComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetValueAsName"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04420401, 65535, sizeof(BlackboardComponent_eventSetValueAsName_Parms));
			UProperty* NewProp_NameValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NameValue"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(NameValue, BlackboardComponent_eventSetValueAsName_Parms), 0x0000000000000080);
			UProperty* NewProp_KeyName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("KeyName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(KeyName, BlackboardComponent_eventSetValueAsName_Parms), 0x0000000008000182);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|Components|Blackboard"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BlackboardComponent.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UBlackboardComponent_SetValueAsObject()
	{
		struct BlackboardComponent_eventSetValueAsObject_Parms
		{
			FName KeyName;
			UObject* ObjectValue;
		};
		UObject* Outer=Z_Construct_UClass_UBlackboardComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetValueAsObject"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04420401, 65535, sizeof(BlackboardComponent_eventSetValueAsObject_Parms));
			UProperty* NewProp_ObjectValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ObjectValue"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(ObjectValue, BlackboardComponent_eventSetValueAsObject_Parms), 0x0000000000000080, Z_Construct_UClass_UObject_NoRegister());
			UProperty* NewProp_KeyName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("KeyName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(KeyName, BlackboardComponent_eventSetValueAsObject_Parms), 0x0000000008000182);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|Components|Blackboard"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BlackboardComponent.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UBlackboardComponent_SetValueAsRotator()
	{
		struct BlackboardComponent_eventSetValueAsRotator_Parms
		{
			FName KeyName;
			FRotator VectorValue;
		};
		UObject* Outer=Z_Construct_UClass_UBlackboardComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetValueAsRotator"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04C20401, 65535, sizeof(BlackboardComponent_eventSetValueAsRotator_Parms));
			UProperty* NewProp_VectorValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("VectorValue"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(VectorValue, BlackboardComponent_eventSetValueAsRotator_Parms), 0x0000000000000080, Z_Construct_UScriptStruct_FRotator());
			UProperty* NewProp_KeyName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("KeyName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(KeyName, BlackboardComponent_eventSetValueAsRotator_Parms), 0x0000000008000182);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|Components|Blackboard"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BlackboardComponent.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UBlackboardComponent_SetValueAsString()
	{
		struct BlackboardComponent_eventSetValueAsString_Parms
		{
			FName KeyName;
			FString StringValue;
		};
		UObject* Outer=Z_Construct_UClass_UBlackboardComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetValueAsString"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04420401, 65535, sizeof(BlackboardComponent_eventSetValueAsString_Parms));
			UProperty* NewProp_StringValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("StringValue"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(StringValue, BlackboardComponent_eventSetValueAsString_Parms), 0x0000000000000080);
			UProperty* NewProp_KeyName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("KeyName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(KeyName, BlackboardComponent_eventSetValueAsString_Parms), 0x0000000008000182);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|Components|Blackboard"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BlackboardComponent.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UBlackboardComponent_SetValueAsVector()
	{
		struct BlackboardComponent_eventSetValueAsVector_Parms
		{
			FName KeyName;
			FVector VectorValue;
		};
		UObject* Outer=Z_Construct_UClass_UBlackboardComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetValueAsVector"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04C20401, 65535, sizeof(BlackboardComponent_eventSetValueAsVector_Parms));
			UProperty* NewProp_VectorValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("VectorValue"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(VectorValue, BlackboardComponent_eventSetValueAsVector_Parms), 0x0000000000000080, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_KeyName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("KeyName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(KeyName, BlackboardComponent_eventSetValueAsVector_Parms), 0x0000000008000182);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|Components|Blackboard"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BlackboardComponent.h"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UBlackboardComponent_NoRegister()
	{
		return UBlackboardComponent::StaticClass();
	}
	UClass* Z_Construct_UClass_UBlackboardComponent()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UActorComponent();
			Z_Construct_UPackage_AIModule();
			OuterClass = UBlackboardComponent::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20B00080;

				OuterClass->LinkChild(Z_Construct_UFunction_UBlackboardComponent_ClearValue());
				OuterClass->LinkChild(Z_Construct_UFunction_UBlackboardComponent_ClearValueAsRotator());
				OuterClass->LinkChild(Z_Construct_UFunction_UBlackboardComponent_ClearValueAsVector());
				OuterClass->LinkChild(Z_Construct_UFunction_UBlackboardComponent_GetLocationFromEntry());
				OuterClass->LinkChild(Z_Construct_UFunction_UBlackboardComponent_GetRotationFromEntry());
				OuterClass->LinkChild(Z_Construct_UFunction_UBlackboardComponent_GetValueAsBool());
				OuterClass->LinkChild(Z_Construct_UFunction_UBlackboardComponent_GetValueAsClass());
				OuterClass->LinkChild(Z_Construct_UFunction_UBlackboardComponent_GetValueAsEnum());
				OuterClass->LinkChild(Z_Construct_UFunction_UBlackboardComponent_GetValueAsFloat());
				OuterClass->LinkChild(Z_Construct_UFunction_UBlackboardComponent_GetValueAsInt());
				OuterClass->LinkChild(Z_Construct_UFunction_UBlackboardComponent_GetValueAsName());
				OuterClass->LinkChild(Z_Construct_UFunction_UBlackboardComponent_GetValueAsObject());
				OuterClass->LinkChild(Z_Construct_UFunction_UBlackboardComponent_GetValueAsRotator());
				OuterClass->LinkChild(Z_Construct_UFunction_UBlackboardComponent_GetValueAsString());
				OuterClass->LinkChild(Z_Construct_UFunction_UBlackboardComponent_GetValueAsVector());
				OuterClass->LinkChild(Z_Construct_UFunction_UBlackboardComponent_IsVectorValueSet());
				OuterClass->LinkChild(Z_Construct_UFunction_UBlackboardComponent_SetValueAsBool());
				OuterClass->LinkChild(Z_Construct_UFunction_UBlackboardComponent_SetValueAsClass());
				OuterClass->LinkChild(Z_Construct_UFunction_UBlackboardComponent_SetValueAsEnum());
				OuterClass->LinkChild(Z_Construct_UFunction_UBlackboardComponent_SetValueAsFloat());
				OuterClass->LinkChild(Z_Construct_UFunction_UBlackboardComponent_SetValueAsInt());
				OuterClass->LinkChild(Z_Construct_UFunction_UBlackboardComponent_SetValueAsName());
				OuterClass->LinkChild(Z_Construct_UFunction_UBlackboardComponent_SetValueAsObject());
				OuterClass->LinkChild(Z_Construct_UFunction_UBlackboardComponent_SetValueAsRotator());
				OuterClass->LinkChild(Z_Construct_UFunction_UBlackboardComponent_SetValueAsString());
				OuterClass->LinkChild(Z_Construct_UFunction_UBlackboardComponent_SetValueAsVector());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_KeyInstances = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("KeyInstances"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(KeyInstances, UBlackboardComponent), 0x0000080000002000);
				UProperty* NewProp_KeyInstances_Inner = new(EC_InternalUseOnlyConstructor, NewProp_KeyInstances, TEXT("KeyInstances"), RF_Public|RF_Transient|RF_Native) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UClass_UBlackboardKeyType_NoRegister());
				UProperty* NewProp_BlackboardAsset = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("BlackboardAsset"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(BlackboardAsset, UBlackboardComponent), 0x0000080000002000, Z_Construct_UClass_UBlackboardData_NoRegister());
				UProperty* NewProp_BrainComp = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("BrainComp"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(BrainComp, UBlackboardComponent), 0x0000080000082008, Z_Construct_UClass_UBrainComponent_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UBlackboardComponent_ClearValue()); // 3105352675
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UBlackboardComponent_ClearValueAsRotator()); // 1597426486
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UBlackboardComponent_ClearValueAsVector()); // 2197348559
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UBlackboardComponent_GetLocationFromEntry()); // 864134506
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UBlackboardComponent_GetRotationFromEntry()); // 1432809041
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UBlackboardComponent_GetValueAsBool()); // 106936070
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UBlackboardComponent_GetValueAsClass()); // 1520053997
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UBlackboardComponent_GetValueAsEnum()); // 2134221888
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UBlackboardComponent_GetValueAsFloat()); // 1944515596
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UBlackboardComponent_GetValueAsInt()); // 1913220323
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UBlackboardComponent_GetValueAsName()); // 3988330559
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UBlackboardComponent_GetValueAsObject()); // 3557062569
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UBlackboardComponent_GetValueAsRotator()); // 3273024413
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UBlackboardComponent_GetValueAsString()); // 2374852503
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UBlackboardComponent_GetValueAsVector()); // 2283254322
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UBlackboardComponent_IsVectorValueSet()); // 1732762362
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UBlackboardComponent_SetValueAsBool()); // 3379708832
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UBlackboardComponent_SetValueAsClass()); // 2085506155
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UBlackboardComponent_SetValueAsEnum()); // 691193192
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UBlackboardComponent_SetValueAsFloat()); // 572932928
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UBlackboardComponent_SetValueAsInt()); // 3245383711
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UBlackboardComponent_SetValueAsName()); // 1893861472
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UBlackboardComponent_SetValueAsObject()); // 1516947147
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UBlackboardComponent_SetValueAsRotator()); // 833321246
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UBlackboardComponent_SetValueAsString()); // 427620993
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UBlackboardComponent_SetValueAsVector()); // 1401040243
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintSpawnableComponent"), TEXT(""));
				MetaData->SetValue(OuterClass, TEXT("ClassGroupNames"), TEXT("AI"));
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("ComponentReplication"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("BehaviorTree/BlackboardComponent.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BlackboardComponent.h"));
				MetaData->SetValue(NewProp_KeyInstances, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BlackboardComponent.h"));
				MetaData->SetValue(NewProp_KeyInstances, TEXT("ToolTip"), TEXT("instanced keys with custom data allocations"));
				MetaData->SetValue(NewProp_BlackboardAsset, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BlackboardComponent.h"));
				MetaData->SetValue(NewProp_BlackboardAsset, TEXT("ToolTip"), TEXT("data asset defining entries"));
				MetaData->SetValue(NewProp_BrainComp, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_BrainComp, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BlackboardComponent.h"));
				MetaData->SetValue(NewProp_BrainComp, TEXT("ToolTip"), TEXT("cached behavior tree component"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UBlackboardComponent(Z_Construct_UClass_UBlackboardComponent, TEXT("UBlackboardComponent"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UBlackboardComponent);
	UClass* Z_Construct_UClass_UBlackboardKeyType_Bool_NoRegister()
	{
		return UBlackboardKeyType_Bool::StaticClass();
	}
	UClass* Z_Construct_UClass_UBlackboardKeyType_Bool()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UBlackboardKeyType();
			Z_Construct_UPackage_AIModule();
			OuterClass = UBlackboardKeyType_Bool::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20103080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("AutoExpandCategories"), TEXT("Blackboard"));
				MetaData->SetValue(OuterClass, TEXT("DisplayName"), TEXT("Bool"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("BehaviorTree/Blackboard/BlackboardKeyType_Bool.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Blackboard/BlackboardKeyType_Bool.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UBlackboardKeyType_Bool(Z_Construct_UClass_UBlackboardKeyType_Bool, TEXT("UBlackboardKeyType_Bool"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UBlackboardKeyType_Bool);
	UClass* Z_Construct_UClass_UBlackboardKeyType_Class_NoRegister()
	{
		return UBlackboardKeyType_Class::StaticClass();
	}
	UClass* Z_Construct_UClass_UBlackboardKeyType_Class()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UBlackboardKeyType();
			Z_Construct_UPackage_AIModule();
			OuterClass = UBlackboardKeyType_Class::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20103080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_BaseClass = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("BaseClass"), RF_Public|RF_Transient|RF_Native) UClassProperty(CPP_PROPERTY_BASE(BaseClass, UBlackboardKeyType_Class), 0x0000000000010001, Z_Construct_UClass_UObject_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("AutoExpandCategories"), TEXT("Blackboard"));
				MetaData->SetValue(OuterClass, TEXT("DisplayName"), TEXT("Class"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("BehaviorTree/Blackboard/BlackboardKeyType_Class.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Blackboard/BlackboardKeyType_Class.h"));
				MetaData->SetValue(NewProp_BaseClass, TEXT("AllowAbstract"), TEXT("1"));
				MetaData->SetValue(NewProp_BaseClass, TEXT("Category"), TEXT("Blackboard"));
				MetaData->SetValue(NewProp_BaseClass, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Blackboard/BlackboardKeyType_Class.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UBlackboardKeyType_Class(Z_Construct_UClass_UBlackboardKeyType_Class, TEXT("UBlackboardKeyType_Class"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UBlackboardKeyType_Class);
	UClass* Z_Construct_UClass_UBlackboardKeyType_Float_NoRegister()
	{
		return UBlackboardKeyType_Float::StaticClass();
	}
	UClass* Z_Construct_UClass_UBlackboardKeyType_Float()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UBlackboardKeyType();
			Z_Construct_UPackage_AIModule();
			OuterClass = UBlackboardKeyType_Float::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20103080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("AutoExpandCategories"), TEXT("Blackboard"));
				MetaData->SetValue(OuterClass, TEXT("DisplayName"), TEXT("Float"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("BehaviorTree/Blackboard/BlackboardKeyType_Float.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Blackboard/BlackboardKeyType_Float.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UBlackboardKeyType_Float(Z_Construct_UClass_UBlackboardKeyType_Float, TEXT("UBlackboardKeyType_Float"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UBlackboardKeyType_Float);
	UClass* Z_Construct_UClass_UBlackboardKeyType_Int_NoRegister()
	{
		return UBlackboardKeyType_Int::StaticClass();
	}
	UClass* Z_Construct_UClass_UBlackboardKeyType_Int()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UBlackboardKeyType();
			Z_Construct_UPackage_AIModule();
			OuterClass = UBlackboardKeyType_Int::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20103080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("AutoExpandCategories"), TEXT("Blackboard"));
				MetaData->SetValue(OuterClass, TEXT("DisplayName"), TEXT("Int"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("BehaviorTree/Blackboard/BlackboardKeyType_Int.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Blackboard/BlackboardKeyType_Int.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UBlackboardKeyType_Int(Z_Construct_UClass_UBlackboardKeyType_Int, TEXT("UBlackboardKeyType_Int"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UBlackboardKeyType_Int);
	UClass* Z_Construct_UClass_UBlackboardKeyType_Name_NoRegister()
	{
		return UBlackboardKeyType_Name::StaticClass();
	}
	UClass* Z_Construct_UClass_UBlackboardKeyType_Name()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UBlackboardKeyType();
			Z_Construct_UPackage_AIModule();
			OuterClass = UBlackboardKeyType_Name::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20103080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("AutoExpandCategories"), TEXT("Blackboard"));
				MetaData->SetValue(OuterClass, TEXT("DisplayName"), TEXT("Name"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("BehaviorTree/Blackboard/BlackboardKeyType_Name.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Blackboard/BlackboardKeyType_Name.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UBlackboardKeyType_Name(Z_Construct_UClass_UBlackboardKeyType_Name, TEXT("UBlackboardKeyType_Name"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UBlackboardKeyType_Name);
	UClass* Z_Construct_UClass_UBlackboardKeyType_Object_NoRegister()
	{
		return UBlackboardKeyType_Object::StaticClass();
	}
	UClass* Z_Construct_UClass_UBlackboardKeyType_Object()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UBlackboardKeyType();
			Z_Construct_UPackage_AIModule();
			OuterClass = UBlackboardKeyType_Object::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20103080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_BaseClass = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("BaseClass"), RF_Public|RF_Transient|RF_Native) UClassProperty(CPP_PROPERTY_BASE(BaseClass, UBlackboardKeyType_Object), 0x0000000000010001, Z_Construct_UClass_UObject_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("AutoExpandCategories"), TEXT("Blackboard"));
				MetaData->SetValue(OuterClass, TEXT("DisplayName"), TEXT("Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("BehaviorTree/Blackboard/BlackboardKeyType_Object.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Blackboard/BlackboardKeyType_Object.h"));
				MetaData->SetValue(NewProp_BaseClass, TEXT("AllowAbstract"), TEXT("1"));
				MetaData->SetValue(NewProp_BaseClass, TEXT("Category"), TEXT("Blackboard"));
				MetaData->SetValue(NewProp_BaseClass, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Blackboard/BlackboardKeyType_Object.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UBlackboardKeyType_Object(Z_Construct_UClass_UBlackboardKeyType_Object, TEXT("UBlackboardKeyType_Object"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UBlackboardKeyType_Object);
	UClass* Z_Construct_UClass_UBlackboardKeyType_Rotator_NoRegister()
	{
		return UBlackboardKeyType_Rotator::StaticClass();
	}
	UClass* Z_Construct_UClass_UBlackboardKeyType_Rotator()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UBlackboardKeyType();
			Z_Construct_UPackage_AIModule();
			OuterClass = UBlackboardKeyType_Rotator::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20103080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("AutoExpandCategories"), TEXT("Blackboard"));
				MetaData->SetValue(OuterClass, TEXT("DisplayName"), TEXT("Rotator"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("BehaviorTree/Blackboard/BlackboardKeyType_Rotator.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Blackboard/BlackboardKeyType_Rotator.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UBlackboardKeyType_Rotator(Z_Construct_UClass_UBlackboardKeyType_Rotator, TEXT("UBlackboardKeyType_Rotator"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UBlackboardKeyType_Rotator);
	UClass* Z_Construct_UClass_UBlackboardKeyType_String_NoRegister()
	{
		return UBlackboardKeyType_String::StaticClass();
	}
	UClass* Z_Construct_UClass_UBlackboardKeyType_String()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UBlackboardKeyType();
			Z_Construct_UPackage_AIModule();
			OuterClass = UBlackboardKeyType_String::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20103080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_StringValue = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("StringValue"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(StringValue, UBlackboardKeyType_String), 0x0000000000000000);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("AutoExpandCategories"), TEXT("Blackboard"));
				MetaData->SetValue(OuterClass, TEXT("DisplayName"), TEXT("String"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("BehaviorTree/Blackboard/BlackboardKeyType_String.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Blackboard/BlackboardKeyType_String.h"));
				MetaData->SetValue(NewProp_StringValue, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Blackboard/BlackboardKeyType_String.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UBlackboardKeyType_String(Z_Construct_UClass_UBlackboardKeyType_String, TEXT("UBlackboardKeyType_String"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UBlackboardKeyType_String);
	UClass* Z_Construct_UClass_UBlackboardKeyType_Vector_NoRegister()
	{
		return UBlackboardKeyType_Vector::StaticClass();
	}
	UClass* Z_Construct_UClass_UBlackboardKeyType_Vector()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UBlackboardKeyType();
			Z_Construct_UPackage_AIModule();
			OuterClass = UBlackboardKeyType_Vector::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20103080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("AutoExpandCategories"), TEXT("Blackboard"));
				MetaData->SetValue(OuterClass, TEXT("DisplayName"), TEXT("Vector"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("BehaviorTree/Blackboard/BlackboardKeyType_Vector.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Blackboard/BlackboardKeyType_Vector.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UBlackboardKeyType_Vector(Z_Construct_UClass_UBlackboardKeyType_Vector, TEXT("UBlackboardKeyType_Vector"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UBlackboardKeyType_Vector);
	UFunction* Z_Construct_UFunction_UBTFunctionLibrary_ClearBlackboardValue()
	{
		struct BTFunctionLibrary_eventClearBlackboardValue_Parms
		{
			UBTNode* NodeOwner;
			FBlackboardKeySelector Key;
		};
		UObject* Outer=Z_Construct_UClass_UBTFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ClearBlackboardValue"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04422401, 65535, sizeof(BTFunctionLibrary_eventClearBlackboardValue_Parms));
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Key, BTFunctionLibrary_eventClearBlackboardValue_Parms), 0x0000000008000182, Z_Construct_UScriptStruct_FBlackboardKeySelector());
			UProperty* NewProp_NodeOwner = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NodeOwner"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(NodeOwner, BTFunctionLibrary_eventClearBlackboardValue_Parms), 0x0000000000000080, Z_Construct_UClass_UBTNode_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("BehaviorTree"));
			MetaData->SetValue(ReturnFunction, TEXT("DefaultToSelf"), TEXT("NodeOwner"));
			MetaData->SetValue(ReturnFunction, TEXT("HidePin"), TEXT("NodeOwner"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BTFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Resets indicated value to \"not set\" value, based on values type"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UBTFunctionLibrary_ClearBlackboardValueAsVector()
	{
		struct BTFunctionLibrary_eventClearBlackboardValueAsVector_Parms
		{
			UBTNode* NodeOwner;
			FBlackboardKeySelector Key;
		};
		UObject* Outer=Z_Construct_UClass_UBTFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ClearBlackboardValueAsVector"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04422401, 65535, sizeof(BTFunctionLibrary_eventClearBlackboardValueAsVector_Parms));
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Key, BTFunctionLibrary_eventClearBlackboardValueAsVector_Parms), 0x0000000008000182, Z_Construct_UScriptStruct_FBlackboardKeySelector());
			UProperty* NewProp_NodeOwner = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NodeOwner"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(NodeOwner, BTFunctionLibrary_eventClearBlackboardValueAsVector_Parms), 0x0000000000000080, Z_Construct_UClass_UBTNode_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("BehaviorTree"));
			MetaData->SetValue(ReturnFunction, TEXT("DefaultToSelf"), TEXT("NodeOwner"));
			MetaData->SetValue(ReturnFunction, TEXT("DeprecatedFunction"), TEXT(""));
			MetaData->SetValue(ReturnFunction, TEXT("DeprecationMessage"), TEXT("Use ClearBlackboardValue instead."));
			MetaData->SetValue(ReturnFunction, TEXT("HidePin"), TEXT("NodeOwner"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BTFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("(DEPRECATED) Use ClearBlackboardValue instead"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UBTFunctionLibrary_GetBlackboardValueAsActor()
	{
		struct BTFunctionLibrary_eventGetBlackboardValueAsActor_Parms
		{
			UBTNode* NodeOwner;
			FBlackboardKeySelector Key;
			AActor* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UBTFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetBlackboardValueAsActor"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(BTFunctionLibrary_eventGetBlackboardValueAsActor_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, BTFunctionLibrary_eventGetBlackboardValueAsActor_Parms), 0x0000000000000580, Z_Construct_UClass_AActor_NoRegister());
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Key, BTFunctionLibrary_eventGetBlackboardValueAsActor_Parms), 0x0000000008000182, Z_Construct_UScriptStruct_FBlackboardKeySelector());
			UProperty* NewProp_NodeOwner = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NodeOwner"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(NodeOwner, BTFunctionLibrary_eventGetBlackboardValueAsActor_Parms), 0x0000000000000080, Z_Construct_UClass_UBTNode_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|BehaviorTree"));
			MetaData->SetValue(ReturnFunction, TEXT("DefaultToSelf"), TEXT("NodeOwner"));
			MetaData->SetValue(ReturnFunction, TEXT("HidePin"), TEXT("NodeOwner"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BTFunctionLibrary.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UBTFunctionLibrary_GetBlackboardValueAsBool()
	{
		struct BTFunctionLibrary_eventGetBlackboardValueAsBool_Parms
		{
			UBTNode* NodeOwner;
			FBlackboardKeySelector Key;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UBTFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetBlackboardValueAsBool"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(BTFunctionLibrary_eventGetBlackboardValueAsBool_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, BTFunctionLibrary_eventGetBlackboardValueAsBool_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, BTFunctionLibrary_eventGetBlackboardValueAsBool_Parms), 0x0000000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, BTFunctionLibrary_eventGetBlackboardValueAsBool_Parms), sizeof(bool), true);
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Key, BTFunctionLibrary_eventGetBlackboardValueAsBool_Parms), 0x0000000008000182, Z_Construct_UScriptStruct_FBlackboardKeySelector());
			UProperty* NewProp_NodeOwner = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NodeOwner"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(NodeOwner, BTFunctionLibrary_eventGetBlackboardValueAsBool_Parms), 0x0000000000000080, Z_Construct_UClass_UBTNode_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|BehaviorTree"));
			MetaData->SetValue(ReturnFunction, TEXT("DefaultToSelf"), TEXT("NodeOwner"));
			MetaData->SetValue(ReturnFunction, TEXT("HidePin"), TEXT("NodeOwner"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BTFunctionLibrary.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UBTFunctionLibrary_GetBlackboardValueAsClass()
	{
		struct BTFunctionLibrary_eventGetBlackboardValueAsClass_Parms
		{
			UBTNode* NodeOwner;
			FBlackboardKeySelector Key;
			UClass* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UBTFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetBlackboardValueAsClass"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(BTFunctionLibrary_eventGetBlackboardValueAsClass_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UClassProperty(CPP_PROPERTY_BASE(ReturnValue, BTFunctionLibrary_eventGetBlackboardValueAsClass_Parms), 0x0000000000000580, Z_Construct_UClass_UObject_NoRegister());
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Key, BTFunctionLibrary_eventGetBlackboardValueAsClass_Parms), 0x0000000008000182, Z_Construct_UScriptStruct_FBlackboardKeySelector());
			UProperty* NewProp_NodeOwner = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NodeOwner"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(NodeOwner, BTFunctionLibrary_eventGetBlackboardValueAsClass_Parms), 0x0000000000000080, Z_Construct_UClass_UBTNode_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|BehaviorTree"));
			MetaData->SetValue(ReturnFunction, TEXT("DefaultToSelf"), TEXT("NodeOwner"));
			MetaData->SetValue(ReturnFunction, TEXT("HidePin"), TEXT("NodeOwner"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BTFunctionLibrary.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UBTFunctionLibrary_GetBlackboardValueAsEnum()
	{
		struct BTFunctionLibrary_eventGetBlackboardValueAsEnum_Parms
		{
			UBTNode* NodeOwner;
			FBlackboardKeySelector Key;
			uint8 ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UBTFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetBlackboardValueAsEnum"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(BTFunctionLibrary_eventGetBlackboardValueAsEnum_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(ReturnValue, BTFunctionLibrary_eventGetBlackboardValueAsEnum_Parms), 0x0000000000000580);
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Key, BTFunctionLibrary_eventGetBlackboardValueAsEnum_Parms), 0x0000000008000182, Z_Construct_UScriptStruct_FBlackboardKeySelector());
			UProperty* NewProp_NodeOwner = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NodeOwner"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(NodeOwner, BTFunctionLibrary_eventGetBlackboardValueAsEnum_Parms), 0x0000000000000080, Z_Construct_UClass_UBTNode_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|BehaviorTree"));
			MetaData->SetValue(ReturnFunction, TEXT("DefaultToSelf"), TEXT("NodeOwner"));
			MetaData->SetValue(ReturnFunction, TEXT("HidePin"), TEXT("NodeOwner"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BTFunctionLibrary.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UBTFunctionLibrary_GetBlackboardValueAsFloat()
	{
		struct BTFunctionLibrary_eventGetBlackboardValueAsFloat_Parms
		{
			UBTNode* NodeOwner;
			FBlackboardKeySelector Key;
			float ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UBTFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetBlackboardValueAsFloat"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(BTFunctionLibrary_eventGetBlackboardValueAsFloat_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(ReturnValue, BTFunctionLibrary_eventGetBlackboardValueAsFloat_Parms), 0x0000000000000580);
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Key, BTFunctionLibrary_eventGetBlackboardValueAsFloat_Parms), 0x0000000008000182, Z_Construct_UScriptStruct_FBlackboardKeySelector());
			UProperty* NewProp_NodeOwner = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NodeOwner"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(NodeOwner, BTFunctionLibrary_eventGetBlackboardValueAsFloat_Parms), 0x0000000000000080, Z_Construct_UClass_UBTNode_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|BehaviorTree"));
			MetaData->SetValue(ReturnFunction, TEXT("DefaultToSelf"), TEXT("NodeOwner"));
			MetaData->SetValue(ReturnFunction, TEXT("HidePin"), TEXT("NodeOwner"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BTFunctionLibrary.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UBTFunctionLibrary_GetBlackboardValueAsInt()
	{
		struct BTFunctionLibrary_eventGetBlackboardValueAsInt_Parms
		{
			UBTNode* NodeOwner;
			FBlackboardKeySelector Key;
			int32 ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UBTFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetBlackboardValueAsInt"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(BTFunctionLibrary_eventGetBlackboardValueAsInt_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(ReturnValue, BTFunctionLibrary_eventGetBlackboardValueAsInt_Parms), 0x0000000000000580);
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Key, BTFunctionLibrary_eventGetBlackboardValueAsInt_Parms), 0x0000000008000182, Z_Construct_UScriptStruct_FBlackboardKeySelector());
			UProperty* NewProp_NodeOwner = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NodeOwner"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(NodeOwner, BTFunctionLibrary_eventGetBlackboardValueAsInt_Parms), 0x0000000000000080, Z_Construct_UClass_UBTNode_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|BehaviorTree"));
			MetaData->SetValue(ReturnFunction, TEXT("DefaultToSelf"), TEXT("NodeOwner"));
			MetaData->SetValue(ReturnFunction, TEXT("HidePin"), TEXT("NodeOwner"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BTFunctionLibrary.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UBTFunctionLibrary_GetBlackboardValueAsName()
	{
		struct BTFunctionLibrary_eventGetBlackboardValueAsName_Parms
		{
			UBTNode* NodeOwner;
			FBlackboardKeySelector Key;
			FName ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UBTFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetBlackboardValueAsName"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(BTFunctionLibrary_eventGetBlackboardValueAsName_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(ReturnValue, BTFunctionLibrary_eventGetBlackboardValueAsName_Parms), 0x0000000000000580);
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Key, BTFunctionLibrary_eventGetBlackboardValueAsName_Parms), 0x0000000008000182, Z_Construct_UScriptStruct_FBlackboardKeySelector());
			UProperty* NewProp_NodeOwner = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NodeOwner"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(NodeOwner, BTFunctionLibrary_eventGetBlackboardValueAsName_Parms), 0x0000000000000080, Z_Construct_UClass_UBTNode_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|BehaviorTree"));
			MetaData->SetValue(ReturnFunction, TEXT("DefaultToSelf"), TEXT("NodeOwner"));
			MetaData->SetValue(ReturnFunction, TEXT("HidePin"), TEXT("NodeOwner"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BTFunctionLibrary.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UBTFunctionLibrary_GetBlackboardValueAsObject()
	{
		struct BTFunctionLibrary_eventGetBlackboardValueAsObject_Parms
		{
			UBTNode* NodeOwner;
			FBlackboardKeySelector Key;
			UObject* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UBTFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetBlackboardValueAsObject"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(BTFunctionLibrary_eventGetBlackboardValueAsObject_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, BTFunctionLibrary_eventGetBlackboardValueAsObject_Parms), 0x0000000000000580, Z_Construct_UClass_UObject_NoRegister());
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Key, BTFunctionLibrary_eventGetBlackboardValueAsObject_Parms), 0x0000000008000182, Z_Construct_UScriptStruct_FBlackboardKeySelector());
			UProperty* NewProp_NodeOwner = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NodeOwner"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(NodeOwner, BTFunctionLibrary_eventGetBlackboardValueAsObject_Parms), 0x0000000000000080, Z_Construct_UClass_UBTNode_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|BehaviorTree"));
			MetaData->SetValue(ReturnFunction, TEXT("DefaultToSelf"), TEXT("NodeOwner"));
			MetaData->SetValue(ReturnFunction, TEXT("HidePin"), TEXT("NodeOwner"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BTFunctionLibrary.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UBTFunctionLibrary_GetBlackboardValueAsRotator()
	{
		struct BTFunctionLibrary_eventGetBlackboardValueAsRotator_Parms
		{
			UBTNode* NodeOwner;
			FBlackboardKeySelector Key;
			FRotator ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UBTFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetBlackboardValueAsRotator"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x14C22401, 65535, sizeof(BTFunctionLibrary_eventGetBlackboardValueAsRotator_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, BTFunctionLibrary_eventGetBlackboardValueAsRotator_Parms), 0x0000000000000580, Z_Construct_UScriptStruct_FRotator());
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Key, BTFunctionLibrary_eventGetBlackboardValueAsRotator_Parms), 0x0000000008000182, Z_Construct_UScriptStruct_FBlackboardKeySelector());
			UProperty* NewProp_NodeOwner = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NodeOwner"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(NodeOwner, BTFunctionLibrary_eventGetBlackboardValueAsRotator_Parms), 0x0000000000000080, Z_Construct_UClass_UBTNode_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|BehaviorTree"));
			MetaData->SetValue(ReturnFunction, TEXT("DefaultToSelf"), TEXT("NodeOwner"));
			MetaData->SetValue(ReturnFunction, TEXT("HidePin"), TEXT("NodeOwner"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BTFunctionLibrary.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UBTFunctionLibrary_GetBlackboardValueAsString()
	{
		struct BTFunctionLibrary_eventGetBlackboardValueAsString_Parms
		{
			UBTNode* NodeOwner;
			FBlackboardKeySelector Key;
			FString ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UBTFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetBlackboardValueAsString"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(BTFunctionLibrary_eventGetBlackboardValueAsString_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(ReturnValue, BTFunctionLibrary_eventGetBlackboardValueAsString_Parms), 0x0000000000000580);
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Key, BTFunctionLibrary_eventGetBlackboardValueAsString_Parms), 0x0000000008000182, Z_Construct_UScriptStruct_FBlackboardKeySelector());
			UProperty* NewProp_NodeOwner = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NodeOwner"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(NodeOwner, BTFunctionLibrary_eventGetBlackboardValueAsString_Parms), 0x0000000000000080, Z_Construct_UClass_UBTNode_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|BehaviorTree"));
			MetaData->SetValue(ReturnFunction, TEXT("DefaultToSelf"), TEXT("NodeOwner"));
			MetaData->SetValue(ReturnFunction, TEXT("HidePin"), TEXT("NodeOwner"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BTFunctionLibrary.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UBTFunctionLibrary_GetBlackboardValueAsVector()
	{
		struct BTFunctionLibrary_eventGetBlackboardValueAsVector_Parms
		{
			UBTNode* NodeOwner;
			FBlackboardKeySelector Key;
			FVector ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UBTFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetBlackboardValueAsVector"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x14C22401, 65535, sizeof(BTFunctionLibrary_eventGetBlackboardValueAsVector_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, BTFunctionLibrary_eventGetBlackboardValueAsVector_Parms), 0x0000000000000580, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Key, BTFunctionLibrary_eventGetBlackboardValueAsVector_Parms), 0x0000000008000182, Z_Construct_UScriptStruct_FBlackboardKeySelector());
			UProperty* NewProp_NodeOwner = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NodeOwner"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(NodeOwner, BTFunctionLibrary_eventGetBlackboardValueAsVector_Parms), 0x0000000000000080, Z_Construct_UClass_UBTNode_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|BehaviorTree"));
			MetaData->SetValue(ReturnFunction, TEXT("DefaultToSelf"), TEXT("NodeOwner"));
			MetaData->SetValue(ReturnFunction, TEXT("HidePin"), TEXT("NodeOwner"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BTFunctionLibrary.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UBTFunctionLibrary_GetOwnerComponent()
	{
		struct BTFunctionLibrary_eventGetOwnerComponent_Parms
		{
			UBTNode* NodeOwner;
			UBehaviorTreeComponent* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UBTFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetOwnerComponent"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x14022401, 65535, sizeof(BTFunctionLibrary_eventGetOwnerComponent_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, BTFunctionLibrary_eventGetOwnerComponent_Parms), 0x0000000000080588, Z_Construct_UClass_UBehaviorTreeComponent_NoRegister());
			UProperty* NewProp_NodeOwner = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NodeOwner"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(NodeOwner, BTFunctionLibrary_eventGetOwnerComponent_Parms), 0x0000000000000080, Z_Construct_UClass_UBTNode_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|BehaviorTree"));
			MetaData->SetValue(ReturnFunction, TEXT("DefaultToSelf"), TEXT("NodeOwner"));
			MetaData->SetValue(ReturnFunction, TEXT("HidePin"), TEXT("NodeOwner"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BTFunctionLibrary.h"));
			MetaData->SetValue(NewProp_ReturnValue, TEXT("EditInline"), TEXT("true"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UBTFunctionLibrary_GetOwnersBlackboard()
	{
		struct BTFunctionLibrary_eventGetOwnersBlackboard_Parms
		{
			UBTNode* NodeOwner;
			UBlackboardComponent* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UBTFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetOwnersBlackboard"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x14022401, 65535, sizeof(BTFunctionLibrary_eventGetOwnersBlackboard_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, BTFunctionLibrary_eventGetOwnersBlackboard_Parms), 0x0000000000080588, Z_Construct_UClass_UBlackboardComponent_NoRegister());
			UProperty* NewProp_NodeOwner = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NodeOwner"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(NodeOwner, BTFunctionLibrary_eventGetOwnersBlackboard_Parms), 0x0000000000000080, Z_Construct_UClass_UBTNode_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|BehaviorTree"));
			MetaData->SetValue(ReturnFunction, TEXT("DefaultToSelf"), TEXT("NodeOwner"));
			MetaData->SetValue(ReturnFunction, TEXT("HidePin"), TEXT("NodeOwner"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BTFunctionLibrary.h"));
			MetaData->SetValue(NewProp_ReturnValue, TEXT("EditInline"), TEXT("true"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UBTFunctionLibrary_SetBlackboardValueAsBool()
	{
		struct BTFunctionLibrary_eventSetBlackboardValueAsBool_Parms
		{
			UBTNode* NodeOwner;
			FBlackboardKeySelector Key;
			bool Value;
		};
		UObject* Outer=Z_Construct_UClass_UBTFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetBlackboardValueAsBool"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04422401, 65535, sizeof(BTFunctionLibrary_eventSetBlackboardValueAsBool_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Value, BTFunctionLibrary_eventSetBlackboardValueAsBool_Parms, bool);
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Value, BTFunctionLibrary_eventSetBlackboardValueAsBool_Parms), 0x0000000000000080, CPP_BOOL_PROPERTY_BITMASK(Value, BTFunctionLibrary_eventSetBlackboardValueAsBool_Parms), sizeof(bool), true);
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Key, BTFunctionLibrary_eventSetBlackboardValueAsBool_Parms), 0x0000000008000182, Z_Construct_UScriptStruct_FBlackboardKeySelector());
			UProperty* NewProp_NodeOwner = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NodeOwner"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(NodeOwner, BTFunctionLibrary_eventSetBlackboardValueAsBool_Parms), 0x0000000000000080, Z_Construct_UClass_UBTNode_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|BehaviorTree"));
			MetaData->SetValue(ReturnFunction, TEXT("DefaultToSelf"), TEXT("NodeOwner"));
			MetaData->SetValue(ReturnFunction, TEXT("HidePin"), TEXT("NodeOwner"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BTFunctionLibrary.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UBTFunctionLibrary_SetBlackboardValueAsClass()
	{
		struct BTFunctionLibrary_eventSetBlackboardValueAsClass_Parms
		{
			UBTNode* NodeOwner;
			FBlackboardKeySelector Key;
			UClass* Value;
		};
		UObject* Outer=Z_Construct_UClass_UBTFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetBlackboardValueAsClass"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04422401, 65535, sizeof(BTFunctionLibrary_eventSetBlackboardValueAsClass_Parms));
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_Native) UClassProperty(CPP_PROPERTY_BASE(Value, BTFunctionLibrary_eventSetBlackboardValueAsClass_Parms), 0x0000000000000080, Z_Construct_UClass_UObject_NoRegister());
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Key, BTFunctionLibrary_eventSetBlackboardValueAsClass_Parms), 0x0000000008000182, Z_Construct_UScriptStruct_FBlackboardKeySelector());
			UProperty* NewProp_NodeOwner = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NodeOwner"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(NodeOwner, BTFunctionLibrary_eventSetBlackboardValueAsClass_Parms), 0x0000000000000080, Z_Construct_UClass_UBTNode_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|BehaviorTree"));
			MetaData->SetValue(ReturnFunction, TEXT("DefaultToSelf"), TEXT("NodeOwner"));
			MetaData->SetValue(ReturnFunction, TEXT("HidePin"), TEXT("NodeOwner"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BTFunctionLibrary.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UBTFunctionLibrary_SetBlackboardValueAsEnum()
	{
		struct BTFunctionLibrary_eventSetBlackboardValueAsEnum_Parms
		{
			UBTNode* NodeOwner;
			FBlackboardKeySelector Key;
			uint8 Value;
		};
		UObject* Outer=Z_Construct_UClass_UBTFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetBlackboardValueAsEnum"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04422401, 65535, sizeof(BTFunctionLibrary_eventSetBlackboardValueAsEnum_Parms));
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(Value, BTFunctionLibrary_eventSetBlackboardValueAsEnum_Parms), 0x0000000000000080);
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Key, BTFunctionLibrary_eventSetBlackboardValueAsEnum_Parms), 0x0000000008000182, Z_Construct_UScriptStruct_FBlackboardKeySelector());
			UProperty* NewProp_NodeOwner = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NodeOwner"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(NodeOwner, BTFunctionLibrary_eventSetBlackboardValueAsEnum_Parms), 0x0000000000000080, Z_Construct_UClass_UBTNode_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|BehaviorTree"));
			MetaData->SetValue(ReturnFunction, TEXT("DefaultToSelf"), TEXT("NodeOwner"));
			MetaData->SetValue(ReturnFunction, TEXT("HidePin"), TEXT("NodeOwner"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BTFunctionLibrary.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UBTFunctionLibrary_SetBlackboardValueAsFloat()
	{
		struct BTFunctionLibrary_eventSetBlackboardValueAsFloat_Parms
		{
			UBTNode* NodeOwner;
			FBlackboardKeySelector Key;
			float Value;
		};
		UObject* Outer=Z_Construct_UClass_UBTFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetBlackboardValueAsFloat"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04422401, 65535, sizeof(BTFunctionLibrary_eventSetBlackboardValueAsFloat_Parms));
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(Value, BTFunctionLibrary_eventSetBlackboardValueAsFloat_Parms), 0x0000000000000080);
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Key, BTFunctionLibrary_eventSetBlackboardValueAsFloat_Parms), 0x0000000008000182, Z_Construct_UScriptStruct_FBlackboardKeySelector());
			UProperty* NewProp_NodeOwner = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NodeOwner"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(NodeOwner, BTFunctionLibrary_eventSetBlackboardValueAsFloat_Parms), 0x0000000000000080, Z_Construct_UClass_UBTNode_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|BehaviorTree"));
			MetaData->SetValue(ReturnFunction, TEXT("DefaultToSelf"), TEXT("NodeOwner"));
			MetaData->SetValue(ReturnFunction, TEXT("HidePin"), TEXT("NodeOwner"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BTFunctionLibrary.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UBTFunctionLibrary_SetBlackboardValueAsInt()
	{
		struct BTFunctionLibrary_eventSetBlackboardValueAsInt_Parms
		{
			UBTNode* NodeOwner;
			FBlackboardKeySelector Key;
			int32 Value;
		};
		UObject* Outer=Z_Construct_UClass_UBTFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetBlackboardValueAsInt"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04422401, 65535, sizeof(BTFunctionLibrary_eventSetBlackboardValueAsInt_Parms));
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(Value, BTFunctionLibrary_eventSetBlackboardValueAsInt_Parms), 0x0000000000000080);
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Key, BTFunctionLibrary_eventSetBlackboardValueAsInt_Parms), 0x0000000008000182, Z_Construct_UScriptStruct_FBlackboardKeySelector());
			UProperty* NewProp_NodeOwner = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NodeOwner"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(NodeOwner, BTFunctionLibrary_eventSetBlackboardValueAsInt_Parms), 0x0000000000000080, Z_Construct_UClass_UBTNode_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|BehaviorTree"));
			MetaData->SetValue(ReturnFunction, TEXT("DefaultToSelf"), TEXT("NodeOwner"));
			MetaData->SetValue(ReturnFunction, TEXT("HidePin"), TEXT("NodeOwner"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BTFunctionLibrary.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UBTFunctionLibrary_SetBlackboardValueAsName()
	{
		struct BTFunctionLibrary_eventSetBlackboardValueAsName_Parms
		{
			UBTNode* NodeOwner;
			FBlackboardKeySelector Key;
			FName Value;
		};
		UObject* Outer=Z_Construct_UClass_UBTFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetBlackboardValueAsName"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04422401, 65535, sizeof(BTFunctionLibrary_eventSetBlackboardValueAsName_Parms));
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(Value, BTFunctionLibrary_eventSetBlackboardValueAsName_Parms), 0x0000000000000080);
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Key, BTFunctionLibrary_eventSetBlackboardValueAsName_Parms), 0x0000000008000182, Z_Construct_UScriptStruct_FBlackboardKeySelector());
			UProperty* NewProp_NodeOwner = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NodeOwner"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(NodeOwner, BTFunctionLibrary_eventSetBlackboardValueAsName_Parms), 0x0000000000000080, Z_Construct_UClass_UBTNode_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|BehaviorTree"));
			MetaData->SetValue(ReturnFunction, TEXT("DefaultToSelf"), TEXT("NodeOwner"));
			MetaData->SetValue(ReturnFunction, TEXT("HidePin"), TEXT("NodeOwner"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BTFunctionLibrary.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UBTFunctionLibrary_SetBlackboardValueAsObject()
	{
		struct BTFunctionLibrary_eventSetBlackboardValueAsObject_Parms
		{
			UBTNode* NodeOwner;
			FBlackboardKeySelector Key;
			UObject* Value;
		};
		UObject* Outer=Z_Construct_UClass_UBTFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetBlackboardValueAsObject"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04422401, 65535, sizeof(BTFunctionLibrary_eventSetBlackboardValueAsObject_Parms));
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(Value, BTFunctionLibrary_eventSetBlackboardValueAsObject_Parms), 0x0000000000000080, Z_Construct_UClass_UObject_NoRegister());
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Key, BTFunctionLibrary_eventSetBlackboardValueAsObject_Parms), 0x0000000008000182, Z_Construct_UScriptStruct_FBlackboardKeySelector());
			UProperty* NewProp_NodeOwner = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NodeOwner"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(NodeOwner, BTFunctionLibrary_eventSetBlackboardValueAsObject_Parms), 0x0000000000000080, Z_Construct_UClass_UBTNode_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|BehaviorTree"));
			MetaData->SetValue(ReturnFunction, TEXT("DefaultToSelf"), TEXT("NodeOwner"));
			MetaData->SetValue(ReturnFunction, TEXT("HidePin"), TEXT("NodeOwner"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BTFunctionLibrary.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UBTFunctionLibrary_SetBlackboardValueAsRotator()
	{
		struct BTFunctionLibrary_eventSetBlackboardValueAsRotator_Parms
		{
			UBTNode* NodeOwner;
			FBlackboardKeySelector Key;
			FRotator Value;
		};
		UObject* Outer=Z_Construct_UClass_UBTFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetBlackboardValueAsRotator"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04C22401, 65535, sizeof(BTFunctionLibrary_eventSetBlackboardValueAsRotator_Parms));
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Value, BTFunctionLibrary_eventSetBlackboardValueAsRotator_Parms), 0x0000000000000080, Z_Construct_UScriptStruct_FRotator());
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Key, BTFunctionLibrary_eventSetBlackboardValueAsRotator_Parms), 0x0000000008000182, Z_Construct_UScriptStruct_FBlackboardKeySelector());
			UProperty* NewProp_NodeOwner = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NodeOwner"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(NodeOwner, BTFunctionLibrary_eventSetBlackboardValueAsRotator_Parms), 0x0000000000000080, Z_Construct_UClass_UBTNode_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|BehaviorTree"));
			MetaData->SetValue(ReturnFunction, TEXT("DefaultToSelf"), TEXT("NodeOwner"));
			MetaData->SetValue(ReturnFunction, TEXT("HidePin"), TEXT("NodeOwner"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BTFunctionLibrary.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UBTFunctionLibrary_SetBlackboardValueAsString()
	{
		struct BTFunctionLibrary_eventSetBlackboardValueAsString_Parms
		{
			UBTNode* NodeOwner;
			FBlackboardKeySelector Key;
			FString Value;
		};
		UObject* Outer=Z_Construct_UClass_UBTFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetBlackboardValueAsString"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04422401, 65535, sizeof(BTFunctionLibrary_eventSetBlackboardValueAsString_Parms));
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(Value, BTFunctionLibrary_eventSetBlackboardValueAsString_Parms), 0x0000000000000080);
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Key, BTFunctionLibrary_eventSetBlackboardValueAsString_Parms), 0x0000000008000182, Z_Construct_UScriptStruct_FBlackboardKeySelector());
			UProperty* NewProp_NodeOwner = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NodeOwner"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(NodeOwner, BTFunctionLibrary_eventSetBlackboardValueAsString_Parms), 0x0000000000000080, Z_Construct_UClass_UBTNode_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|BehaviorTree"));
			MetaData->SetValue(ReturnFunction, TEXT("DefaultToSelf"), TEXT("NodeOwner"));
			MetaData->SetValue(ReturnFunction, TEXT("HidePin"), TEXT("NodeOwner"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BTFunctionLibrary.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UBTFunctionLibrary_SetBlackboardValueAsVector()
	{
		struct BTFunctionLibrary_eventSetBlackboardValueAsVector_Parms
		{
			UBTNode* NodeOwner;
			FBlackboardKeySelector Key;
			FVector Value;
		};
		UObject* Outer=Z_Construct_UClass_UBTFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetBlackboardValueAsVector"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04C22401, 65535, sizeof(BTFunctionLibrary_eventSetBlackboardValueAsVector_Parms));
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Value, BTFunctionLibrary_eventSetBlackboardValueAsVector_Parms), 0x0000000000000080, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Key, BTFunctionLibrary_eventSetBlackboardValueAsVector_Parms), 0x0000000008000182, Z_Construct_UScriptStruct_FBlackboardKeySelector());
			UProperty* NewProp_NodeOwner = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NodeOwner"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(NodeOwner, BTFunctionLibrary_eventSetBlackboardValueAsVector_Parms), 0x0000000000000080, Z_Construct_UClass_UBTNode_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|BehaviorTree"));
			MetaData->SetValue(ReturnFunction, TEXT("DefaultToSelf"), TEXT("NodeOwner"));
			MetaData->SetValue(ReturnFunction, TEXT("HidePin"), TEXT("NodeOwner"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BTFunctionLibrary.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UBTFunctionLibrary_StartUsingExternalEvent()
	{
		struct BTFunctionLibrary_eventStartUsingExternalEvent_Parms
		{
			UBTNode* NodeOwner;
			AActor* OwningActor;
		};
		UObject* Outer=Z_Construct_UClass_UBTFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("StartUsingExternalEvent"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(BTFunctionLibrary_eventStartUsingExternalEvent_Parms));
			UProperty* NewProp_OwningActor = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OwningActor"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(OwningActor, BTFunctionLibrary_eventStartUsingExternalEvent_Parms), 0x0000000000000080, Z_Construct_UClass_AActor_NoRegister());
			UProperty* NewProp_NodeOwner = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NodeOwner"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(NodeOwner, BTFunctionLibrary_eventStartUsingExternalEvent_Parms), 0x0000000000000080, Z_Construct_UClass_UBTNode_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|BehaviorTree"));
			MetaData->SetValue(ReturnFunction, TEXT("DefaultToSelf"), TEXT("NodeOwner"));
			MetaData->SetValue(ReturnFunction, TEXT("DeprecatedFunction"), TEXT(""));
			MetaData->SetValue(ReturnFunction, TEXT("DeprecationMessage"), TEXT("No longer needed"));
			MetaData->SetValue(ReturnFunction, TEXT("HidePin"), TEXT("NodeOwner"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BTFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Initialize variables marked as \"instance memory\" and set owning actor for blackboard operations"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UBTFunctionLibrary_StopUsingExternalEvent()
	{
		struct BTFunctionLibrary_eventStopUsingExternalEvent_Parms
		{
			UBTNode* NodeOwner;
		};
		UObject* Outer=Z_Construct_UClass_UBTFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("StopUsingExternalEvent"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(BTFunctionLibrary_eventStopUsingExternalEvent_Parms));
			UProperty* NewProp_NodeOwner = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NodeOwner"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(NodeOwner, BTFunctionLibrary_eventStopUsingExternalEvent_Parms), 0x0000000000000080, Z_Construct_UClass_UBTNode_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|BehaviorTree"));
			MetaData->SetValue(ReturnFunction, TEXT("DefaultToSelf"), TEXT("NodeOwner"));
			MetaData->SetValue(ReturnFunction, TEXT("DeprecatedFunction"), TEXT(""));
			MetaData->SetValue(ReturnFunction, TEXT("DeprecationMessage"), TEXT("No longer needed"));
			MetaData->SetValue(ReturnFunction, TEXT("HidePin"), TEXT("NodeOwner"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BTFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Save variables marked as \"instance memory\" and clear owning actor"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UBTFunctionLibrary_NoRegister()
	{
		return UBTFunctionLibrary::StaticClass();
	}
	UClass* Z_Construct_UClass_UBTFunctionLibrary()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UBlueprintFunctionLibrary();
			Z_Construct_UPackage_AIModule();
			OuterClass = UBTFunctionLibrary::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;

				OuterClass->LinkChild(Z_Construct_UFunction_UBTFunctionLibrary_ClearBlackboardValue());
				OuterClass->LinkChild(Z_Construct_UFunction_UBTFunctionLibrary_ClearBlackboardValueAsVector());
				OuterClass->LinkChild(Z_Construct_UFunction_UBTFunctionLibrary_GetBlackboardValueAsActor());
				OuterClass->LinkChild(Z_Construct_UFunction_UBTFunctionLibrary_GetBlackboardValueAsBool());
				OuterClass->LinkChild(Z_Construct_UFunction_UBTFunctionLibrary_GetBlackboardValueAsClass());
				OuterClass->LinkChild(Z_Construct_UFunction_UBTFunctionLibrary_GetBlackboardValueAsEnum());
				OuterClass->LinkChild(Z_Construct_UFunction_UBTFunctionLibrary_GetBlackboardValueAsFloat());
				OuterClass->LinkChild(Z_Construct_UFunction_UBTFunctionLibrary_GetBlackboardValueAsInt());
				OuterClass->LinkChild(Z_Construct_UFunction_UBTFunctionLibrary_GetBlackboardValueAsName());
				OuterClass->LinkChild(Z_Construct_UFunction_UBTFunctionLibrary_GetBlackboardValueAsObject());
				OuterClass->LinkChild(Z_Construct_UFunction_UBTFunctionLibrary_GetBlackboardValueAsRotator());
				OuterClass->LinkChild(Z_Construct_UFunction_UBTFunctionLibrary_GetBlackboardValueAsString());
				OuterClass->LinkChild(Z_Construct_UFunction_UBTFunctionLibrary_GetBlackboardValueAsVector());
				OuterClass->LinkChild(Z_Construct_UFunction_UBTFunctionLibrary_GetOwnerComponent());
				OuterClass->LinkChild(Z_Construct_UFunction_UBTFunctionLibrary_GetOwnersBlackboard());
				OuterClass->LinkChild(Z_Construct_UFunction_UBTFunctionLibrary_SetBlackboardValueAsBool());
				OuterClass->LinkChild(Z_Construct_UFunction_UBTFunctionLibrary_SetBlackboardValueAsClass());
				OuterClass->LinkChild(Z_Construct_UFunction_UBTFunctionLibrary_SetBlackboardValueAsEnum());
				OuterClass->LinkChild(Z_Construct_UFunction_UBTFunctionLibrary_SetBlackboardValueAsFloat());
				OuterClass->LinkChild(Z_Construct_UFunction_UBTFunctionLibrary_SetBlackboardValueAsInt());
				OuterClass->LinkChild(Z_Construct_UFunction_UBTFunctionLibrary_SetBlackboardValueAsName());
				OuterClass->LinkChild(Z_Construct_UFunction_UBTFunctionLibrary_SetBlackboardValueAsObject());
				OuterClass->LinkChild(Z_Construct_UFunction_UBTFunctionLibrary_SetBlackboardValueAsRotator());
				OuterClass->LinkChild(Z_Construct_UFunction_UBTFunctionLibrary_SetBlackboardValueAsString());
				OuterClass->LinkChild(Z_Construct_UFunction_UBTFunctionLibrary_SetBlackboardValueAsVector());
				OuterClass->LinkChild(Z_Construct_UFunction_UBTFunctionLibrary_StartUsingExternalEvent());
				OuterClass->LinkChild(Z_Construct_UFunction_UBTFunctionLibrary_StopUsingExternalEvent());

				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UBTFunctionLibrary_ClearBlackboardValue()); // 2076500673
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UBTFunctionLibrary_ClearBlackboardValueAsVector()); // 2295356257
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UBTFunctionLibrary_GetBlackboardValueAsActor()); // 131863723
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UBTFunctionLibrary_GetBlackboardValueAsBool()); // 1187680370
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UBTFunctionLibrary_GetBlackboardValueAsClass()); // 2370773837
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UBTFunctionLibrary_GetBlackboardValueAsEnum()); // 2284059486
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UBTFunctionLibrary_GetBlackboardValueAsFloat()); // 2902541069
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UBTFunctionLibrary_GetBlackboardValueAsInt()); // 1350872802
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UBTFunctionLibrary_GetBlackboardValueAsName()); // 3971695479
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UBTFunctionLibrary_GetBlackboardValueAsObject()); // 1773564089
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UBTFunctionLibrary_GetBlackboardValueAsRotator()); // 3891609537
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UBTFunctionLibrary_GetBlackboardValueAsString()); // 3276637690
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UBTFunctionLibrary_GetBlackboardValueAsVector()); // 1877405109
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UBTFunctionLibrary_GetOwnerComponent()); // 2026003140
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UBTFunctionLibrary_GetOwnersBlackboard()); // 1819954251
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UBTFunctionLibrary_SetBlackboardValueAsBool()); // 4218089267
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UBTFunctionLibrary_SetBlackboardValueAsClass()); // 4025170089
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UBTFunctionLibrary_SetBlackboardValueAsEnum()); // 1481597159
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UBTFunctionLibrary_SetBlackboardValueAsFloat()); // 3336918442
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UBTFunctionLibrary_SetBlackboardValueAsInt()); // 3346110971
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UBTFunctionLibrary_SetBlackboardValueAsName()); // 1673494435
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UBTFunctionLibrary_SetBlackboardValueAsObject()); // 1445566022
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UBTFunctionLibrary_SetBlackboardValueAsRotator()); // 2026099216
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UBTFunctionLibrary_SetBlackboardValueAsString()); // 1790815015
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UBTFunctionLibrary_SetBlackboardValueAsVector()); // 1416618175
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UBTFunctionLibrary_StartUsingExternalEvent()); // 2517854190
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UBTFunctionLibrary_StopUsingExternalEvent()); // 4219609977
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("BehaviorTree/BTFunctionLibrary.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BTFunctionLibrary.h"));
				MetaData->SetValue(OuterClass, TEXT("RestrictedToClasses"), TEXT("BTNode"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UBTFunctionLibrary(Z_Construct_UClass_UBTFunctionLibrary, TEXT("UBTFunctionLibrary"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UBTFunctionLibrary);
	UClass* Z_Construct_UClass_UBTAuxiliaryNode_NoRegister()
	{
		return UBTAuxiliaryNode::StaticClass();
	}
	UClass* Z_Construct_UClass_UBTAuxiliaryNode()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UBTNode();
			Z_Construct_UPackage_AIModule();
			OuterClass = UBTAuxiliaryNode::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100081;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("BehaviorTree/BTAuxiliaryNode.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BTAuxiliaryNode.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Auxiliary nodes are supporting nodes, that receive notification about execution flow and can be ticked\n\nBecause some of them can be instanced for specific AI, following virtual functions are not marked as const:\n - OnBecomeRelevant\n - OnCeaseRelevant\n - TickNode\n\nIf your node is not being instanced (default behavior), DO NOT change any properties of object within those functions!\nTemplate nodes are shared across all behavior tree components using the same tree asset and must store\ntheir runtime properties in provided NodeMemory block (allocation size determined by GetInstanceMemorySize() )"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UBTAuxiliaryNode(Z_Construct_UClass_UBTAuxiliaryNode, TEXT("UBTAuxiliaryNode"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UBTAuxiliaryNode);
	UClass* Z_Construct_UClass_UBTDecorator_NoRegister()
	{
		return UBTDecorator::StaticClass();
	}
	UClass* Z_Construct_UClass_UBTDecorator()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UBTAuxiliaryNode();
			Z_Construct_UPackage_AIModule();
			OuterClass = UBTDecorator::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100081;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_FlowAbortMode = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("FlowAbortMode"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(FlowAbortMode, UBTDecorator), 0x0000080000000001, Z_Construct_UEnum_AIModule_EBTFlowAbortMode());
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bInverseCondition, UBTDecorator, uint8);
				UProperty* NewProp_bInverseCondition = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bInverseCondition"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bInverseCondition, UBTDecorator), 0x0000000000000001, CPP_BOOL_PROPERTY_BITMASK(bInverseCondition, UBTDecorator), sizeof(uint8), false);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("BehaviorTree/BTDecorator.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BTDecorator.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Decorators are supporting nodes placed on parent-child connection, that receive notification about execution flow and can be ticked\n\nBecause some of them can be instanced for specific AI, following virtual functions are not marked as const:\n - OnNodeActivation\n - OnNodeDeactivation\n - OnNodeProcessed\n - OnBecomeRelevant (from UBTAuxiliaryNode)\n - OnCeaseRelevant (from UBTAuxiliaryNode)\n - TickNode (from UBTAuxiliaryNode)\n\nIf your node is not being instanced (default behavior), DO NOT change any properties of object within those functions!\nTemplate nodes are shared across all behavior tree components using the same tree asset and must store\ntheir runtime properties in provided NodeMemory block (allocation size determined by GetInstanceMemorySize() )"));
				MetaData->SetValue(NewProp_FlowAbortMode, TEXT("Category"), TEXT("FlowControl"));
				MetaData->SetValue(NewProp_FlowAbortMode, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BTDecorator.h"));
				MetaData->SetValue(NewProp_FlowAbortMode, TEXT("ToolTip"), TEXT("flow controller settings"));
				MetaData->SetValue(NewProp_bInverseCondition, TEXT("Category"), TEXT("Condition"));
				MetaData->SetValue(NewProp_bInverseCondition, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BTDecorator.h"));
				MetaData->SetValue(NewProp_bInverseCondition, TEXT("ToolTip"), TEXT("if set, condition check result will be inversed"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UBTDecorator(Z_Construct_UClass_UBTDecorator, TEXT("UBTDecorator"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UBTDecorator);
	UClass* Z_Construct_UClass_UBTDecorator_BlackboardBase_NoRegister()
	{
		return UBTDecorator_BlackboardBase::StaticClass();
	}
	UClass* Z_Construct_UClass_UBTDecorator_BlackboardBase()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UBTDecorator();
			Z_Construct_UPackage_AIModule();
			OuterClass = UBTDecorator_BlackboardBase::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100081;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_BlackboardKey = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("BlackboardKey"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(BlackboardKey, UBTDecorator_BlackboardBase), 0x0000080000000001, Z_Construct_UScriptStruct_FBlackboardKeySelector());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("BehaviorTree/Decorators/BTDecorator_BlackboardBase.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Decorators/BTDecorator_BlackboardBase.h"));
				MetaData->SetValue(NewProp_BlackboardKey, TEXT("Category"), TEXT("Blackboard"));
				MetaData->SetValue(NewProp_BlackboardKey, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Decorators/BTDecorator_BlackboardBase.h"));
				MetaData->SetValue(NewProp_BlackboardKey, TEXT("ToolTip"), TEXT("blackboard key selector"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UBTDecorator_BlackboardBase(Z_Construct_UClass_UBTDecorator_BlackboardBase, TEXT("UBTDecorator_BlackboardBase"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UBTDecorator_BlackboardBase);
	UEnum* Z_Construct_UEnum_AIModule_EBTBlackboardRestart()
	{
		UPackage* Outer=Z_Construct_UPackage_AIModule();
		extern uint32 Get_Z_Construct_UEnum_AIModule_EBTBlackboardRestart_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("EBTBlackboardRestart"), 0, Get_Z_Construct_UEnum_AIModule_EBTBlackboardRestart_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EBTBlackboardRestart"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EBTBlackboardRestart::ValueChange")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EBTBlackboardRestart::ResultChange")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EBTBlackboardRestart::EBTBlackboardRestart_MAX")), 2));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Decorators/BTDecorator_Blackboard.h"));
			MetaData->SetValue(ReturnEnum, TEXT("ResultChange.DisplayName"), TEXT("On Result Change"));
			MetaData->SetValue(ReturnEnum, TEXT("ResultChange.ToolTip"), TEXT("Restart only when result of evaluated condition is changed"));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("Decorator for accessing blackboard values"));
			MetaData->SetValue(ReturnEnum, TEXT("ValueChange.DisplayName"), TEXT("On Value Change"));
			MetaData->SetValue(ReturnEnum, TEXT("ValueChange.ToolTip"), TEXT("Restart on every change of observed blackboard value"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_AIModule_EBTBlackboardRestart_CRC() { return 2855602929U; }
	UClass* Z_Construct_UClass_UBTDecorator_Blackboard_NoRegister()
	{
		return UBTDecorator_Blackboard::StaticClass();
	}
	UClass* Z_Construct_UClass_UBTDecorator_Blackboard()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UBTDecorator_BlackboardBase();
			Z_Construct_UPackage_AIModule();
			OuterClass = UBTDecorator_Blackboard::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
#if WITH_EDITORONLY_DATA
				UProperty* NewProp_TextOperation = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("TextOperation"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(TextOperation, UBTDecorator_Blackboard), 0x0000080800000001, Z_Construct_UEnum_AIModule_ETextKeyOperation());
				UProperty* NewProp_ArithmeticOperation = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ArithmeticOperation"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(ArithmeticOperation, UBTDecorator_Blackboard), 0x0000080800000001, Z_Construct_UEnum_AIModule_EArithmeticKeyOperation());
				UProperty* NewProp_BasicOperation = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("BasicOperation"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(BasicOperation, UBTDecorator_Blackboard), 0x0000080800000001, Z_Construct_UEnum_AIModule_EBasicKeyOperation());
#endif // WITH_EDITORONLY_DATA
				UProperty* NewProp_NotifyObserver = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("NotifyObserver"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(NotifyObserver, UBTDecorator_Blackboard), 0x0000080000000001, Z_Construct_UEnum_AIModule_EBTBlackboardRestart());
				UProperty* NewProp_OperationType = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OperationType"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(OperationType, UBTDecorator_Blackboard), 0x0000080000000000);
				UProperty* NewProp_CachedDescription = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CachedDescription"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(CachedDescription, UBTDecorator_Blackboard), 0x0000080000000000);
				UProperty* NewProp_StringValue = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("StringValue"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(StringValue, UBTDecorator_Blackboard), 0x0000080000000001);
				UProperty* NewProp_FloatValue = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("FloatValue"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(FloatValue, UBTDecorator_Blackboard), 0x0000080000000001);
				UProperty* NewProp_IntValue = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("IntValue"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(IntValue, UBTDecorator_Blackboard), 0x0000080000000001);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Condition"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("BehaviorTree/Decorators/BTDecorator_Blackboard.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Decorators/BTDecorator_Blackboard.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Blackboard decorator node.\nA decorator node that bases its condition on a Blackboard key."));
				MetaData->SetValue(NewProp_TextOperation, TEXT("Category"), TEXT("Blackboard"));
				MetaData->SetValue(NewProp_TextOperation, TEXT("DisplayName"), TEXT("Key Query"));
				MetaData->SetValue(NewProp_TextOperation, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Decorators/BTDecorator_Blackboard.h"));
				MetaData->SetValue(NewProp_ArithmeticOperation, TEXT("Category"), TEXT("Blackboard"));
				MetaData->SetValue(NewProp_ArithmeticOperation, TEXT("DisplayName"), TEXT("Key Query"));
				MetaData->SetValue(NewProp_ArithmeticOperation, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Decorators/BTDecorator_Blackboard.h"));
				MetaData->SetValue(NewProp_BasicOperation, TEXT("Category"), TEXT("Blackboard"));
				MetaData->SetValue(NewProp_BasicOperation, TEXT("DisplayName"), TEXT("Key Query"));
				MetaData->SetValue(NewProp_BasicOperation, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Decorators/BTDecorator_Blackboard.h"));
				MetaData->SetValue(NewProp_NotifyObserver, TEXT("Category"), TEXT("FlowControl"));
				MetaData->SetValue(NewProp_NotifyObserver, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Decorators/BTDecorator_Blackboard.h"));
				MetaData->SetValue(NewProp_NotifyObserver, TEXT("ToolTip"), TEXT("when observer can try to request abort?"));
				MetaData->SetValue(NewProp_OperationType, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Decorators/BTDecorator_Blackboard.h"));
				MetaData->SetValue(NewProp_OperationType, TEXT("ToolTip"), TEXT("operation type"));
				MetaData->SetValue(NewProp_CachedDescription, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Decorators/BTDecorator_Blackboard.h"));
				MetaData->SetValue(NewProp_CachedDescription, TEXT("ToolTip"), TEXT("cached description"));
				MetaData->SetValue(NewProp_StringValue, TEXT("Category"), TEXT("Blackboard"));
				MetaData->SetValue(NewProp_StringValue, TEXT("DisplayName"), TEXT("Key Value"));
				MetaData->SetValue(NewProp_StringValue, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Decorators/BTDecorator_Blackboard.h"));
				MetaData->SetValue(NewProp_StringValue, TEXT("ToolTip"), TEXT("value for string operations"));
				MetaData->SetValue(NewProp_FloatValue, TEXT("Category"), TEXT("Blackboard"));
				MetaData->SetValue(NewProp_FloatValue, TEXT("DisplayName"), TEXT("Key Value"));
				MetaData->SetValue(NewProp_FloatValue, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Decorators/BTDecorator_Blackboard.h"));
				MetaData->SetValue(NewProp_FloatValue, TEXT("ToolTip"), TEXT("value for arithmetic operations"));
				MetaData->SetValue(NewProp_IntValue, TEXT("Category"), TEXT("Blackboard"));
				MetaData->SetValue(NewProp_IntValue, TEXT("DisplayName"), TEXT("Key Value"));
				MetaData->SetValue(NewProp_IntValue, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Decorators/BTDecorator_Blackboard.h"));
				MetaData->SetValue(NewProp_IntValue, TEXT("ToolTip"), TEXT("value for arithmetic operations"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UBTDecorator_Blackboard(Z_Construct_UClass_UBTDecorator_Blackboard, TEXT("UBTDecorator_Blackboard"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UBTDecorator_Blackboard);
	UClass* Z_Construct_UClass_UBTDecorator_ConditionalLoop_NoRegister()
	{
		return UBTDecorator_ConditionalLoop::StaticClass();
	}
	UClass* Z_Construct_UClass_UBTDecorator_ConditionalLoop()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UBTDecorator_Blackboard();
			Z_Construct_UPackage_AIModule();
			OuterClass = UBTDecorator_ConditionalLoop::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("FlowControl Condition"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("BehaviorTree/Decorators/BTDecorator_ConditionalLoop.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Decorators/BTDecorator_ConditionalLoop.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Conditional loop decorator node.\nA decorator node that loops execution as long as condition is satisfied."));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UBTDecorator_ConditionalLoop(Z_Construct_UClass_UBTDecorator_ConditionalLoop, TEXT("UBTDecorator_ConditionalLoop"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UBTDecorator_ConditionalLoop);
	UClass* Z_Construct_UClass_UBTDecorator_IsAtLocation_NoRegister()
	{
		return UBTDecorator_IsAtLocation::StaticClass();
	}
	UClass* Z_Construct_UClass_UBTDecorator_IsAtLocation()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UBTDecorator_BlackboardBase();
			Z_Construct_UPackage_AIModule();
			OuterClass = UBTDecorator_IsAtLocation::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bUseNavAgentGoalLocation, UBTDecorator_IsAtLocation, bool);
				UProperty* NewProp_bUseNavAgentGoalLocation = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bUseNavAgentGoalLocation"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bUseNavAgentGoalLocation, UBTDecorator_IsAtLocation), 0x0000000000000001, CPP_BOOL_PROPERTY_BITMASK(bUseNavAgentGoalLocation, UBTDecorator_IsAtLocation), sizeof(bool), true);
				UProperty* NewProp_AcceptableRadius = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AcceptableRadius"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(AcceptableRadius, UBTDecorator_IsAtLocation), 0x0000000000000001);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("BehaviorTree/Decorators/BTDecorator_IsAtLocation.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Decorators/BTDecorator_IsAtLocation.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Is At Location decorator node.\nA decorator node that checks if AI controlled pawn is at given location."));
				MetaData->SetValue(NewProp_bUseNavAgentGoalLocation, TEXT("Category"), TEXT("Condition"));
				MetaData->SetValue(NewProp_bUseNavAgentGoalLocation, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Decorators/BTDecorator_IsAtLocation.h"));
				MetaData->SetValue(NewProp_bUseNavAgentGoalLocation, TEXT("ToolTip"), TEXT("if moving to an actor and this actor is a nav agent, then we will move to their nav agent location"));
				MetaData->SetValue(NewProp_AcceptableRadius, TEXT("Category"), TEXT("Condition"));
				MetaData->SetValue(NewProp_AcceptableRadius, TEXT("ClampMin"), TEXT("0.0"));
				MetaData->SetValue(NewProp_AcceptableRadius, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Decorators/BTDecorator_IsAtLocation.h"));
				MetaData->SetValue(NewProp_AcceptableRadius, TEXT("ToolTip"), TEXT("distance threshold to accept as being at location"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UBTDecorator_IsAtLocation(Z_Construct_UClass_UBTDecorator_IsAtLocation, TEXT("UBTDecorator_IsAtLocation"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UBTDecorator_IsAtLocation);
	UClass* Z_Construct_UClass_UBTDecorator_IsBBEntryOfClass_NoRegister()
	{
		return UBTDecorator_IsBBEntryOfClass::StaticClass();
	}
	UClass* Z_Construct_UClass_UBTDecorator_IsBBEntryOfClass()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UBTDecorator_BlackboardBase();
			Z_Construct_UPackage_AIModule();
			OuterClass = UBTDecorator_IsBBEntryOfClass::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_TestClass = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("TestClass"), RF_Public|RF_Transient|RF_Native) UClassProperty(CPP_PROPERTY_BASE(TestClass, UBTDecorator_IsBBEntryOfClass), 0x0004080000000001, Z_Construct_UClass_UObject_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Condition"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("BehaviorTree/Decorators/BTDecorator_IsBBEntryOfClass.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Decorators/BTDecorator_IsBBEntryOfClass.h"));
				MetaData->SetValue(NewProp_TestClass, TEXT("Category"), TEXT("Blackboard"));
				MetaData->SetValue(NewProp_TestClass, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Decorators/BTDecorator_IsBBEntryOfClass.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UBTDecorator_IsBBEntryOfClass(Z_Construct_UClass_UBTDecorator_IsBBEntryOfClass, TEXT("UBTDecorator_IsBBEntryOfClass"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UBTDecorator_IsBBEntryOfClass);
	UFunction* Z_Construct_UFunction_UBTDecorator_BlueprintBase_FinishConditionCheck()
	{
		struct BTDecorator_BlueprintBase_eventFinishConditionCheck_Parms
		{
			bool bAllowExecution;
		};
		UObject* Outer=Z_Construct_UClass_UBTDecorator_BlueprintBase();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("FinishConditionCheck"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04080401, 65535, sizeof(BTDecorator_BlueprintBase_eventFinishConditionCheck_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bAllowExecution, BTDecorator_BlueprintBase_eventFinishConditionCheck_Parms, bool);
			UProperty* NewProp_bAllowExecution = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("bAllowExecution"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bAllowExecution, BTDecorator_BlueprintBase_eventFinishConditionCheck_Parms), 0x0000000000000080, CPP_BOOL_PROPERTY_BITMASK(bAllowExecution, BTDecorator_BlueprintBase_eventFinishConditionCheck_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|BehaviorTree"));
			MetaData->SetValue(ReturnFunction, TEXT("DeprecatedFunction"), TEXT(""));
			MetaData->SetValue(ReturnFunction, TEXT("DeprecationMessage"), TEXT("To implement your condition checking implement PerformConditionCheck or PerformConditionCheckAI function in your Blueprint."));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Decorators/BTDecorator_BlueprintBase.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UBTDecorator_BlueprintBase_IsDecoratorExecutionActive()
	{
		struct BTDecorator_BlueprintBase_eventIsDecoratorExecutionActive_Parms
		{
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UBTDecorator_BlueprintBase();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("IsDecoratorExecutionActive"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x54080401, 65535, sizeof(BTDecorator_BlueprintBase_eventIsDecoratorExecutionActive_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, BTDecorator_BlueprintBase_eventIsDecoratorExecutionActive_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, BTDecorator_BlueprintBase_eventIsDecoratorExecutionActive_Parms), 0x0000000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, BTDecorator_BlueprintBase_eventIsDecoratorExecutionActive_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|BehaviorTree"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Decorators/BTDecorator_BlueprintBase.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("check if decorator is part of currently active branch"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UBTDecorator_BlueprintBase_IsDecoratorObserverActive()
	{
		struct BTDecorator_BlueprintBase_eventIsDecoratorObserverActive_Parms
		{
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UBTDecorator_BlueprintBase();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("IsDecoratorObserverActive"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x54080401, 65535, sizeof(BTDecorator_BlueprintBase_eventIsDecoratorObserverActive_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, BTDecorator_BlueprintBase_eventIsDecoratorObserverActive_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, BTDecorator_BlueprintBase_eventIsDecoratorObserverActive_Parms), 0x0000000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, BTDecorator_BlueprintBase_eventIsDecoratorObserverActive_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|BehaviorTree"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Decorators/BTDecorator_BlueprintBase.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("check if decorator's observer is currently active"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UBTDecorator_BlueprintBase_PerformConditionCheck()
	{
		UObject* Outer=Z_Construct_UClass_UBTDecorator_BlueprintBase();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("PerformConditionCheck"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x08080800, 65535, sizeof(BTDecorator_BlueprintBase_eventPerformConditionCheck_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, BTDecorator_BlueprintBase_eventPerformConditionCheck_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, BTDecorator_BlueprintBase_eventPerformConditionCheck_Parms), 0x0000000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, BTDecorator_BlueprintBase_eventPerformConditionCheck_Parms), sizeof(bool), true);
			UProperty* NewProp_OwnerActor = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OwnerActor"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(OwnerActor, BTDecorator_BlueprintBase_eventPerformConditionCheck_Parms), 0x0000000000000080, Z_Construct_UClass_AActor_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Decorators/BTDecorator_BlueprintBase.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("called when testing if underlying node can be executed, must call FinishConditionCheck\n    @Note that if both generic and AI event versions are implemented only the more\n    suitable one will be called, meaning the AI version if called for AI, generic one otherwise"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UBTDecorator_BlueprintBase_PerformConditionCheckAI()
	{
		UObject* Outer=Z_Construct_UClass_UBTDecorator_BlueprintBase();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("PerformConditionCheckAI"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x08080800, 65535, sizeof(BTDecorator_BlueprintBase_eventPerformConditionCheckAI_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, BTDecorator_BlueprintBase_eventPerformConditionCheckAI_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, BTDecorator_BlueprintBase_eventPerformConditionCheckAI_Parms), 0x0000000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, BTDecorator_BlueprintBase_eventPerformConditionCheckAI_Parms), sizeof(bool), true);
			UProperty* NewProp_ControlledPawn = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ControlledPawn"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(ControlledPawn, BTDecorator_BlueprintBase_eventPerformConditionCheckAI_Parms), 0x0000000000000080, Z_Construct_UClass_APawn_NoRegister());
			UProperty* NewProp_OwnerController = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OwnerController"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(OwnerController, BTDecorator_BlueprintBase_eventPerformConditionCheckAI_Parms), 0x0000000000000080, Z_Construct_UClass_AAIController_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Decorators/BTDecorator_BlueprintBase.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Alternative AI version of ReceiveConditionCheck\n    @see ReceiveConditionCheck for more details\n    @Note that if both generic and AI event versions are implemented only the more\n    suitable one will be called, meaning the AI version if called for AI, generic one otherwise"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UBTDecorator_BlueprintBase_ReceiveConditionCheck()
	{
		UObject* Outer=Z_Construct_UClass_UBTDecorator_BlueprintBase();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ReceiveConditionCheck"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x08080800, 65535, sizeof(BTDecorator_BlueprintBase_eventReceiveConditionCheck_Parms));
			UProperty* NewProp_OwnerActor = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OwnerActor"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(OwnerActor, BTDecorator_BlueprintBase_eventReceiveConditionCheck_Parms), 0x0000000000000080, Z_Construct_UClass_AActor_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("DeprecatedFunction"), TEXT(""));
			MetaData->SetValue(ReturnFunction, TEXT("DeprecationMessage"), TEXT("To implement your condition checking implement PerformConditionCheck or PerformConditionCheckAI function in your Blueprint."));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Decorators/BTDecorator_BlueprintBase.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UBTDecorator_BlueprintBase_ReceiveExecutionFinish()
	{
		UObject* Outer=Z_Construct_UClass_UBTDecorator_BlueprintBase();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ReceiveExecutionFinish"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x08080800, 65535, sizeof(BTDecorator_BlueprintBase_eventReceiveExecutionFinish_Parms));
			UProperty* NewProp_NodeResult = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NodeResult"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(NodeResult, BTDecorator_BlueprintBase_eventReceiveExecutionFinish_Parms), 0x0000000000000080, Z_Construct_UEnum_AIModule_EBTNodeResult());
			UProperty* NewProp_OwnerActor = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OwnerActor"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(OwnerActor, BTDecorator_BlueprintBase_eventReceiveExecutionFinish_Parms), 0x0000000000000080, Z_Construct_UClass_AActor_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Decorators/BTDecorator_BlueprintBase.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("called when execution of underlying node is finished\n    @Note that if both generic and AI event versions are implemented only the more\n    suitable one will be called, meaning the AI version if called for AI, generic one otherwise"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UBTDecorator_BlueprintBase_ReceiveExecutionFinishAI()
	{
		UObject* Outer=Z_Construct_UClass_UBTDecorator_BlueprintBase();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ReceiveExecutionFinishAI"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x08080800, 65535, sizeof(BTDecorator_BlueprintBase_eventReceiveExecutionFinishAI_Parms));
			UProperty* NewProp_NodeResult = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NodeResult"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(NodeResult, BTDecorator_BlueprintBase_eventReceiveExecutionFinishAI_Parms), 0x0000000000000080, Z_Construct_UEnum_AIModule_EBTNodeResult());
			UProperty* NewProp_ControlledPawn = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ControlledPawn"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(ControlledPawn, BTDecorator_BlueprintBase_eventReceiveExecutionFinishAI_Parms), 0x0000000000000080, Z_Construct_UClass_APawn_NoRegister());
			UProperty* NewProp_OwnerController = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OwnerController"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(OwnerController, BTDecorator_BlueprintBase_eventReceiveExecutionFinishAI_Parms), 0x0000000000000080, Z_Construct_UClass_AAIController_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Decorators/BTDecorator_BlueprintBase.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Alternative AI version of ReceiveExecutionFinish\n    @see ReceiveExecutionFinish for more details\n    @Note that if both generic and AI event versions are implemented only the more\n    suitable one will be called, meaning the AI version if called for AI, generic one otherwise"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UBTDecorator_BlueprintBase_ReceiveExecutionStart()
	{
		UObject* Outer=Z_Construct_UClass_UBTDecorator_BlueprintBase();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ReceiveExecutionStart"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x08080800, 65535, sizeof(BTDecorator_BlueprintBase_eventReceiveExecutionStart_Parms));
			UProperty* NewProp_OwnerActor = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OwnerActor"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(OwnerActor, BTDecorator_BlueprintBase_eventReceiveExecutionStart_Parms), 0x0000000000000080, Z_Construct_UClass_AActor_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Decorators/BTDecorator_BlueprintBase.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("called on execution of underlying node\n    @Note that if both generic and AI event versions are implemented only the more\n    suitable one will be called, meaning the AI version if called for AI, generic one otherwise"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UBTDecorator_BlueprintBase_ReceiveExecutionStartAI()
	{
		UObject* Outer=Z_Construct_UClass_UBTDecorator_BlueprintBase();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ReceiveExecutionStartAI"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x08080800, 65535, sizeof(BTDecorator_BlueprintBase_eventReceiveExecutionStartAI_Parms));
			UProperty* NewProp_ControlledPawn = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ControlledPawn"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(ControlledPawn, BTDecorator_BlueprintBase_eventReceiveExecutionStartAI_Parms), 0x0000000000000080, Z_Construct_UClass_APawn_NoRegister());
			UProperty* NewProp_OwnerController = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OwnerController"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(OwnerController, BTDecorator_BlueprintBase_eventReceiveExecutionStartAI_Parms), 0x0000000000000080, Z_Construct_UClass_AAIController_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Decorators/BTDecorator_BlueprintBase.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Alternative AI version of ReceiveExecutionStart\n    @see ReceiveExecutionStart for more details\n    @Note that if both generic and AI event versions are implemented only the more\n    suitable one will be called, meaning the AI version if called for AI, generic one otherwise"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UBTDecorator_BlueprintBase_ReceiveObserverActivated()
	{
		UObject* Outer=Z_Construct_UClass_UBTDecorator_BlueprintBase();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ReceiveObserverActivated"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x08080800, 65535, sizeof(BTDecorator_BlueprintBase_eventReceiveObserverActivated_Parms));
			UProperty* NewProp_OwnerActor = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OwnerActor"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(OwnerActor, BTDecorator_BlueprintBase_eventReceiveObserverActivated_Parms), 0x0000000000000080, Z_Construct_UClass_AActor_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Decorators/BTDecorator_BlueprintBase.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("called when observer is activated (flow controller)\n    @Note that if both generic and AI event versions are implemented only the more\n    suitable one will be called, meaning the AI version if called for AI, generic one otherwise"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UBTDecorator_BlueprintBase_ReceiveObserverActivatedAI()
	{
		UObject* Outer=Z_Construct_UClass_UBTDecorator_BlueprintBase();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ReceiveObserverActivatedAI"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x08080800, 65535, sizeof(BTDecorator_BlueprintBase_eventReceiveObserverActivatedAI_Parms));
			UProperty* NewProp_ControlledPawn = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ControlledPawn"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(ControlledPawn, BTDecorator_BlueprintBase_eventReceiveObserverActivatedAI_Parms), 0x0000000000000080, Z_Construct_UClass_APawn_NoRegister());
			UProperty* NewProp_OwnerController = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OwnerController"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(OwnerController, BTDecorator_BlueprintBase_eventReceiveObserverActivatedAI_Parms), 0x0000000000000080, Z_Construct_UClass_AAIController_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Decorators/BTDecorator_BlueprintBase.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Alternative AI version of ReceiveObserverActivated\n    @see ReceiveObserverActivated for more details\n    @Note that if both generic and AI event versions are implemented only the more\n    suitable one will be called, meaning the AI version if called for AI, generic one otherwise"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UBTDecorator_BlueprintBase_ReceiveObserverDeactivated()
	{
		UObject* Outer=Z_Construct_UClass_UBTDecorator_BlueprintBase();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ReceiveObserverDeactivated"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x08080800, 65535, sizeof(BTDecorator_BlueprintBase_eventReceiveObserverDeactivated_Parms));
			UProperty* NewProp_OwnerActor = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OwnerActor"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(OwnerActor, BTDecorator_BlueprintBase_eventReceiveObserverDeactivated_Parms), 0x0000000000000080, Z_Construct_UClass_AActor_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Decorators/BTDecorator_BlueprintBase.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("called when observer is deactivated (flow controller)\n    @Note that if both generic and AI event versions are implemented only the more\n    suitable one will be called, meaning the AI version if called for AI, generic one otherwise"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UBTDecorator_BlueprintBase_ReceiveObserverDeactivatedAI()
	{
		UObject* Outer=Z_Construct_UClass_UBTDecorator_BlueprintBase();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ReceiveObserverDeactivatedAI"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x08080800, 65535, sizeof(BTDecorator_BlueprintBase_eventReceiveObserverDeactivatedAI_Parms));
			UProperty* NewProp_ControlledPawn = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ControlledPawn"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(ControlledPawn, BTDecorator_BlueprintBase_eventReceiveObserverDeactivatedAI_Parms), 0x0000000000000080, Z_Construct_UClass_APawn_NoRegister());
			UProperty* NewProp_OwnerController = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OwnerController"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(OwnerController, BTDecorator_BlueprintBase_eventReceiveObserverDeactivatedAI_Parms), 0x0000000000000080, Z_Construct_UClass_AAIController_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Decorators/BTDecorator_BlueprintBase.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Alternative AI version of ReceiveObserverDeactivated\n    @see ReceiveObserverDeactivated for more details\n    @Note that if both generic and AI event versions are implemented only the more\n    suitable one will be called, meaning the AI version if called for AI, generic one otherwise"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UBTDecorator_BlueprintBase_ReceiveTick()
	{
		UObject* Outer=Z_Construct_UClass_UBTDecorator_BlueprintBase();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ReceiveTick"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x08080800, 65535, sizeof(BTDecorator_BlueprintBase_eventReceiveTick_Parms));
			UProperty* NewProp_DeltaSeconds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("DeltaSeconds"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(DeltaSeconds, BTDecorator_BlueprintBase_eventReceiveTick_Parms), 0x0000000000000080);
			UProperty* NewProp_OwnerActor = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OwnerActor"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(OwnerActor, BTDecorator_BlueprintBase_eventReceiveTick_Parms), 0x0000000000000080, Z_Construct_UClass_AActor_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Decorators/BTDecorator_BlueprintBase.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("tick function\n    @Note that if both generic and AI event versions are implemented only the more\n    suitable one will be called, meaning the AI version if called for AI, generic one otherwise"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UBTDecorator_BlueprintBase_ReceiveTickAI()
	{
		UObject* Outer=Z_Construct_UClass_UBTDecorator_BlueprintBase();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ReceiveTickAI"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x08080800, 65535, sizeof(BTDecorator_BlueprintBase_eventReceiveTickAI_Parms));
			UProperty* NewProp_DeltaSeconds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("DeltaSeconds"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(DeltaSeconds, BTDecorator_BlueprintBase_eventReceiveTickAI_Parms), 0x0000000000000080);
			UProperty* NewProp_ControlledPawn = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ControlledPawn"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(ControlledPawn, BTDecorator_BlueprintBase_eventReceiveTickAI_Parms), 0x0000000000000080, Z_Construct_UClass_APawn_NoRegister());
			UProperty* NewProp_OwnerController = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OwnerController"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(OwnerController, BTDecorator_BlueprintBase_eventReceiveTickAI_Parms), 0x0000000000000080, Z_Construct_UClass_AAIController_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Decorators/BTDecorator_BlueprintBase.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Alternative AI version of ReceiveTick\n    @see ReceiveTick for more details\n    @Note that if both generic and AI event versions are implemented only the more\n    suitable one will be called, meaning the AI version if called for AI, generic one otherwise"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UBTDecorator_BlueprintBase_NoRegister()
	{
		return UBTDecorator_BlueprintBase::StaticClass();
	}
	UClass* Z_Construct_UClass_UBTDecorator_BlueprintBase()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UBTDecorator();
			Z_Construct_UPackage_AIModule();
			OuterClass = UBTDecorator_BlueprintBase::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100081;

				OuterClass->LinkChild(Z_Construct_UFunction_UBTDecorator_BlueprintBase_FinishConditionCheck());
				OuterClass->LinkChild(Z_Construct_UFunction_UBTDecorator_BlueprintBase_IsDecoratorExecutionActive());
				OuterClass->LinkChild(Z_Construct_UFunction_UBTDecorator_BlueprintBase_IsDecoratorObserverActive());
				OuterClass->LinkChild(Z_Construct_UFunction_UBTDecorator_BlueprintBase_PerformConditionCheck());
				OuterClass->LinkChild(Z_Construct_UFunction_UBTDecorator_BlueprintBase_PerformConditionCheckAI());
				OuterClass->LinkChild(Z_Construct_UFunction_UBTDecorator_BlueprintBase_ReceiveConditionCheck());
				OuterClass->LinkChild(Z_Construct_UFunction_UBTDecorator_BlueprintBase_ReceiveExecutionFinish());
				OuterClass->LinkChild(Z_Construct_UFunction_UBTDecorator_BlueprintBase_ReceiveExecutionFinishAI());
				OuterClass->LinkChild(Z_Construct_UFunction_UBTDecorator_BlueprintBase_ReceiveExecutionStart());
				OuterClass->LinkChild(Z_Construct_UFunction_UBTDecorator_BlueprintBase_ReceiveExecutionStartAI());
				OuterClass->LinkChild(Z_Construct_UFunction_UBTDecorator_BlueprintBase_ReceiveObserverActivated());
				OuterClass->LinkChild(Z_Construct_UFunction_UBTDecorator_BlueprintBase_ReceiveObserverActivatedAI());
				OuterClass->LinkChild(Z_Construct_UFunction_UBTDecorator_BlueprintBase_ReceiveObserverDeactivated());
				OuterClass->LinkChild(Z_Construct_UFunction_UBTDecorator_BlueprintBase_ReceiveObserverDeactivatedAI());
				OuterClass->LinkChild(Z_Construct_UFunction_UBTDecorator_BlueprintBase_ReceiveTick());
				OuterClass->LinkChild(Z_Construct_UFunction_UBTDecorator_BlueprintBase_ReceiveTickAI());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bIsObservingBB, UBTDecorator_BlueprintBase, uint8);
				UProperty* NewProp_bIsObservingBB = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bIsObservingBB"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bIsObservingBB, UBTDecorator_BlueprintBase), 0x0000080000000000, CPP_BOOL_PROPERTY_BITMASK(bIsObservingBB, UBTDecorator_BlueprintBase), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bCheckConditionOnlyBlackBoardChanges, UBTDecorator_BlueprintBase, uint8);
				UProperty* NewProp_bCheckConditionOnlyBlackBoardChanges = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bCheckConditionOnlyBlackBoardChanges"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bCheckConditionOnlyBlackBoardChanges, UBTDecorator_BlueprintBase), 0x00000c0000010001, CPP_BOOL_PROPERTY_BITMASK(bCheckConditionOnlyBlackBoardChanges, UBTDecorator_BlueprintBase), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bShowPropertyDetails, UBTDecorator_BlueprintBase, uint8);
				UProperty* NewProp_bShowPropertyDetails = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bShowPropertyDetails"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bShowPropertyDetails, UBTDecorator_BlueprintBase), 0x0000080000000801, CPP_BOOL_PROPERTY_BITMASK(bShowPropertyDetails, UBTDecorator_BlueprintBase), sizeof(uint8), false);
				UProperty* NewProp_ObservedKeyNames = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ObservedKeyNames"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(ObservedKeyNames, UBTDecorator_BlueprintBase), 0x0000080000000000);
				UProperty* NewProp_ObservedKeyNames_Inner = new(EC_InternalUseOnlyConstructor, NewProp_ObservedKeyNames, TEXT("ObservedKeyNames"), RF_Public|RF_Transient|RF_Native) UNameProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000);
				UProperty* NewProp_ActorOwner = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ActorOwner"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(ActorOwner, UBTDecorator_BlueprintBase), 0x0000080000002000, Z_Construct_UClass_AActor_NoRegister());
				UProperty* NewProp_AIOwner = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AIOwner"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(AIOwner, UBTDecorator_BlueprintBase), 0x0000080000002000, Z_Construct_UClass_AAIController_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UBTDecorator_BlueprintBase_FinishConditionCheck()); // 1709367950
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UBTDecorator_BlueprintBase_IsDecoratorExecutionActive()); // 1358580521
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UBTDecorator_BlueprintBase_IsDecoratorObserverActive()); // 602991746
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UBTDecorator_BlueprintBase_PerformConditionCheck()); // 996446838
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UBTDecorator_BlueprintBase_PerformConditionCheckAI()); // 379997164
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UBTDecorator_BlueprintBase_ReceiveConditionCheck()); // 4221219483
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UBTDecorator_BlueprintBase_ReceiveExecutionFinish()); // 1640814860
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UBTDecorator_BlueprintBase_ReceiveExecutionFinishAI()); // 4152058916
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UBTDecorator_BlueprintBase_ReceiveExecutionStart()); // 1945324767
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UBTDecorator_BlueprintBase_ReceiveExecutionStartAI()); // 1419356446
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UBTDecorator_BlueprintBase_ReceiveObserverActivated()); // 3204111877
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UBTDecorator_BlueprintBase_ReceiveObserverActivatedAI()); // 999898995
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UBTDecorator_BlueprintBase_ReceiveObserverDeactivated()); // 997978681
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UBTDecorator_BlueprintBase_ReceiveObserverDeactivatedAI()); // 2488437790
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UBTDecorator_BlueprintBase_ReceiveTick()); // 3690965336
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UBTDecorator_BlueprintBase_ReceiveTickAI()); // 302192135
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("BehaviorTree/Decorators/BTDecorator_BlueprintBase.h"));
				MetaData->SetValue(OuterClass, TEXT("IsBlueprintBase"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Decorators/BTDecorator_BlueprintBase.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Base class for blueprint based decorator nodes. Do NOT use it for creating native c++ classes!\n\nUnlike task and services, decorator have two execution chains:\n ExecutionStart-ExecutionFinish and ObserverActivated-ObserverDeactivated\nwhich makes automatic latent action cleanup impossible. Keep in mind, that\nyou HAVE TO verify is given chain is still active after resuming from any\nlatent action (like Delay, Timelines, etc).\n\nHelper functions:\n- IsDecoratorExecutionActive (true after ExecutionStart, until ExecutionFinish)\n- IsDecoratorObserverActive (true after ObserverActivated, until ObserverDeactivated)"));
				MetaData->SetValue(NewProp_bIsObservingBB, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Decorators/BTDecorator_BlueprintBase.h"));
				MetaData->SetValue(NewProp_bIsObservingBB, TEXT("ToolTip"), TEXT("gets set to true if decorator declared BB keys it can potentially observe"));
				MetaData->SetValue(NewProp_bCheckConditionOnlyBlackBoardChanges, TEXT("Category"), TEXT("FlowControl"));
				MetaData->SetValue(NewProp_bCheckConditionOnlyBlackBoardChanges, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Decorators/BTDecorator_BlueprintBase.h"));
				MetaData->SetValue(NewProp_bCheckConditionOnlyBlackBoardChanges, TEXT("ToolTip"), TEXT("Applies only if Decorator has any FBlackboardKeySelector property and if decorator is\n    set to abort BT flow. Is set to true ReceiveConditionCheck will be called only on changes\n   to observed BB keys. If false or no BB keys observed ReceiveConditionCheck will be called every tick"));
				MetaData->SetValue(NewProp_bShowPropertyDetails, TEXT("Category"), TEXT("Description"));
				MetaData->SetValue(NewProp_bShowPropertyDetails, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Decorators/BTDecorator_BlueprintBase.h"));
				MetaData->SetValue(NewProp_bShowPropertyDetails, TEXT("ToolTip"), TEXT("show detailed information about properties"));
				MetaData->SetValue(NewProp_ObservedKeyNames, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Decorators/BTDecorator_BlueprintBase.h"));
				MetaData->SetValue(NewProp_ObservedKeyNames, TEXT("ToolTip"), TEXT("blackboard key names that should be observed"));
				MetaData->SetValue(NewProp_ActorOwner, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Decorators/BTDecorator_BlueprintBase.h"));
				MetaData->SetValue(NewProp_ActorOwner, TEXT("ToolTip"), TEXT("Cached AIController owner of BehaviorTreeComponent."));
				MetaData->SetValue(NewProp_AIOwner, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Decorators/BTDecorator_BlueprintBase.h"));
				MetaData->SetValue(NewProp_AIOwner, TEXT("ToolTip"), TEXT("Cached AIController owner of BehaviorTreeComponent."));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UBTDecorator_BlueprintBase(Z_Construct_UClass_UBTDecorator_BlueprintBase, TEXT("UBTDecorator_BlueprintBase"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UBTDecorator_BlueprintBase);
	UClass* Z_Construct_UClass_UBTDecorator_CheckGameplayTagsOnActor_NoRegister()
	{
		return UBTDecorator_CheckGameplayTagsOnActor::StaticClass();
	}
	UClass* Z_Construct_UClass_UBTDecorator_CheckGameplayTagsOnActor()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UBTDecorator();
			Z_Construct_UPackage_AIModule();
			OuterClass = UBTDecorator_CheckGameplayTagsOnActor::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_CachedDescription = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CachedDescription"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(CachedDescription, UBTDecorator_CheckGameplayTagsOnActor), 0x0000080000000000);
				UProperty* NewProp_GameplayTags = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("GameplayTags"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(GameplayTags, UBTDecorator_CheckGameplayTagsOnActor), 0x0000080000000001, Z_Construct_UScriptStruct_FGameplayTagContainer());
				UProperty* NewProp_TagsToMatch = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("TagsToMatch"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(TagsToMatch, UBTDecorator_CheckGameplayTagsOnActor), 0x0000080000000001, Z_Construct_UEnum_GameplayTags_EGameplayContainerMatchType());
				UProperty* NewProp_ActorToCheck = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ActorToCheck"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(ActorToCheck, UBTDecorator_CheckGameplayTagsOnActor), 0x0000080000000001, Z_Construct_UScriptStruct_FBlackboardKeySelector());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("BehaviorTree/Decorators/BTDecorator_CheckGameplayTagsOnActor.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Decorators/BTDecorator_CheckGameplayTagsOnActor.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("GameplayTag decorator node.\nA decorator node that bases its condition on whether the specified Actor (in the blackboard) has a Gameplay Tag or\nTags specified."));
				MetaData->SetValue(NewProp_CachedDescription, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Decorators/BTDecorator_CheckGameplayTagsOnActor.h"));
				MetaData->SetValue(NewProp_CachedDescription, TEXT("ToolTip"), TEXT("cached description"));
				MetaData->SetValue(NewProp_GameplayTags, TEXT("Category"), TEXT("GameplayTagCheck"));
				MetaData->SetValue(NewProp_GameplayTags, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Decorators/BTDecorator_CheckGameplayTagsOnActor.h"));
				MetaData->SetValue(NewProp_TagsToMatch, TEXT("Category"), TEXT("GameplayTagCheck"));
				MetaData->SetValue(NewProp_TagsToMatch, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Decorators/BTDecorator_CheckGameplayTagsOnActor.h"));
				MetaData->SetValue(NewProp_ActorToCheck, TEXT("Category"), TEXT("GameplayTagCheck"));
				MetaData->SetValue(NewProp_ActorToCheck, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Decorators/BTDecorator_CheckGameplayTagsOnActor.h"));
				MetaData->SetValue(NewProp_ActorToCheck, TEXT("ToolTips"), TEXT("Which Actor (from the blackboard) should be checked for these gameplay tags?"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UBTDecorator_CheckGameplayTagsOnActor(Z_Construct_UClass_UBTDecorator_CheckGameplayTagsOnActor, TEXT("UBTDecorator_CheckGameplayTagsOnActor"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UBTDecorator_CheckGameplayTagsOnActor);
	UEnum* Z_Construct_UEnum_AIModule_EBlackBoardEntryComparison()
	{
		UPackage* Outer=Z_Construct_UPackage_AIModule();
		extern uint32 Get_Z_Construct_UEnum_AIModule_EBlackBoardEntryComparison_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("EBlackBoardEntryComparison"), 0, Get_Z_Construct_UEnum_AIModule_EBlackBoardEntryComparison_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EBlackBoardEntryComparison"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EBlackBoardEntryComparison::Equal")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EBlackBoardEntryComparison::NotEqual")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EBlackBoardEntryComparison::EBlackBoardEntryComparison_MAX")), 2));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("Equal.DisplayName"), TEXT("Is Equal To"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Decorators/BTDecorator_CompareBBEntries.h"));
			MetaData->SetValue(ReturnEnum, TEXT("NotEqual.DisplayName"), TEXT("Is Not Equal To"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_AIModule_EBlackBoardEntryComparison_CRC() { return 4140137788U; }
	UClass* Z_Construct_UClass_UBTDecorator_CompareBBEntries_NoRegister()
	{
		return UBTDecorator_CompareBBEntries::StaticClass();
	}
	UClass* Z_Construct_UClass_UBTDecorator_CompareBBEntries()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UBTDecorator();
			Z_Construct_UPackage_AIModule();
			OuterClass = UBTDecorator_CompareBBEntries::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_BlackboardKeyB = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("BlackboardKeyB"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(BlackboardKeyB, UBTDecorator_CompareBBEntries), 0x0000080000000001, Z_Construct_UScriptStruct_FBlackboardKeySelector());
				UProperty* NewProp_BlackboardKeyA = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("BlackboardKeyA"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(BlackboardKeyA, UBTDecorator_CompareBBEntries), 0x0000080000000001, Z_Construct_UScriptStruct_FBlackboardKeySelector());
				UProperty* NewProp_Operator = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Operator"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(Operator, UBTDecorator_CompareBBEntries), 0x0000080000000001, Z_Construct_UEnum_AIModule_EBlackBoardEntryComparison());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Condition"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("BehaviorTree/Decorators/BTDecorator_CompareBBEntries.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Decorators/BTDecorator_CompareBBEntries.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Blackboard comparison decorator node.\nA decorator node that bases its condition on a comparison between two Blackboard keys."));
				MetaData->SetValue(NewProp_BlackboardKeyB, TEXT("Category"), TEXT("Blackboard"));
				MetaData->SetValue(NewProp_BlackboardKeyB, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Decorators/BTDecorator_CompareBBEntries.h"));
				MetaData->SetValue(NewProp_BlackboardKeyB, TEXT("ToolTip"), TEXT("blackboard key selector"));
				MetaData->SetValue(NewProp_BlackboardKeyA, TEXT("Category"), TEXT("Blackboard"));
				MetaData->SetValue(NewProp_BlackboardKeyA, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Decorators/BTDecorator_CompareBBEntries.h"));
				MetaData->SetValue(NewProp_BlackboardKeyA, TEXT("ToolTip"), TEXT("blackboard key selector"));
				MetaData->SetValue(NewProp_Operator, TEXT("Category"), TEXT("Blackboard"));
				MetaData->SetValue(NewProp_Operator, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Decorators/BTDecorator_CompareBBEntries.h"));
				MetaData->SetValue(NewProp_Operator, TEXT("ToolTip"), TEXT("operation type"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UBTDecorator_CompareBBEntries(Z_Construct_UClass_UBTDecorator_CompareBBEntries, TEXT("UBTDecorator_CompareBBEntries"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UBTDecorator_CompareBBEntries);
	UClass* Z_Construct_UClass_UBTDecorator_ConeCheck_NoRegister()
	{
		return UBTDecorator_ConeCheck::StaticClass();
	}
	UClass* Z_Construct_UClass_UBTDecorator_ConeCheck()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UBTDecorator();
			Z_Construct_UPackage_AIModule();
			OuterClass = UBTDecorator_ConeCheck::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_Observed = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Observed"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Observed, UBTDecorator_ConeCheck), 0x0000000000000001, Z_Construct_UScriptStruct_FBlackboardKeySelector());
				UProperty* NewProp_ConeDirection = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ConeDirection"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(ConeDirection, UBTDecorator_ConeCheck), 0x0000000000000001, Z_Construct_UScriptStruct_FBlackboardKeySelector());
				UProperty* NewProp_ConeOrigin = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ConeOrigin"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(ConeOrigin, UBTDecorator_ConeCheck), 0x0000000000000001, Z_Construct_UScriptStruct_FBlackboardKeySelector());
				UProperty* NewProp_ConeHalfAngle = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ConeHalfAngle"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(ConeHalfAngle, UBTDecorator_ConeCheck), 0x0000000000000001);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("BehaviorTree/Decorators/BTDecorator_ConeCheck.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Decorators/BTDecorator_ConeCheck.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Cone check decorator node.\nA decorator node that bases its condition on a cone check, using Blackboard entries to form the parameters of the check."));
				MetaData->SetValue(NewProp_Observed, TEXT("Category"), TEXT("Blackboard"));
				MetaData->SetValue(NewProp_Observed, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Decorators/BTDecorator_ConeCheck.h"));
				MetaData->SetValue(NewProp_Observed, TEXT("ToolTip"), TEXT("blackboard key selector"));
				MetaData->SetValue(NewProp_ConeDirection, TEXT("Category"), TEXT("Blackboard"));
				MetaData->SetValue(NewProp_ConeDirection, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Decorators/BTDecorator_ConeCheck.h"));
				MetaData->SetValue(NewProp_ConeDirection, TEXT("ToolTip"), TEXT("\"None\" means \"use ConeOrigin's direction\""));
				MetaData->SetValue(NewProp_ConeOrigin, TEXT("Category"), TEXT("Blackboard"));
				MetaData->SetValue(NewProp_ConeOrigin, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Decorators/BTDecorator_ConeCheck.h"));
				MetaData->SetValue(NewProp_ConeOrigin, TEXT("ToolTip"), TEXT("blackboard key selector"));
				MetaData->SetValue(NewProp_ConeHalfAngle, TEXT("Category"), TEXT("Decorator"));
				MetaData->SetValue(NewProp_ConeHalfAngle, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Decorators/BTDecorator_ConeCheck.h"));
				MetaData->SetValue(NewProp_ConeHalfAngle, TEXT("ToolTip"), TEXT("Angle between cone direction and code cone edge, or a half of the total cone angle"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UBTDecorator_ConeCheck(Z_Construct_UClass_UBTDecorator_ConeCheck, TEXT("UBTDecorator_ConeCheck"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UBTDecorator_ConeCheck);
	UClass* Z_Construct_UClass_UBTDecorator_Cooldown_NoRegister()
	{
		return UBTDecorator_Cooldown::StaticClass();
	}
	UClass* Z_Construct_UClass_UBTDecorator_Cooldown()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UBTDecorator();
			Z_Construct_UPackage_AIModule();
			OuterClass = UBTDecorator_Cooldown::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_CoolDownTime = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CoolDownTime"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(CoolDownTime, UBTDecorator_Cooldown), 0x0000000000000001);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Condition"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("BehaviorTree/Decorators/BTDecorator_Cooldown.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Decorators/BTDecorator_Cooldown.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Cooldown decorator node.\nA decorator node that bases its condition on whether a cooldown timer has expired."));
				MetaData->SetValue(NewProp_CoolDownTime, TEXT("Category"), TEXT("Decorator"));
				MetaData->SetValue(NewProp_CoolDownTime, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Decorators/BTDecorator_Cooldown.h"));
				MetaData->SetValue(NewProp_CoolDownTime, TEXT("ToolTip"), TEXT("max allowed time for execution of underlying node"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UBTDecorator_Cooldown(Z_Construct_UClass_UBTDecorator_Cooldown, TEXT("UBTDecorator_Cooldown"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UBTDecorator_Cooldown);
	UEnum* Z_Construct_UEnum_AIModule_EPathExistanceQueryType()
	{
		UPackage* Outer=Z_Construct_UPackage_AIModule();
		extern uint32 Get_Z_Construct_UEnum_AIModule_EPathExistanceQueryType_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("EPathExistanceQueryType"), 0, Get_Z_Construct_UEnum_AIModule_EPathExistanceQueryType_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EPathExistanceQueryType"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EPathExistanceQueryType::NavmeshRaycast2D")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EPathExistanceQueryType::HierarchicalQuery")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EPathExistanceQueryType::RegularPathFinding")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EPathExistanceQueryType::EPathExistanceQueryType_MAX")), 3));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("HierarchicalQuery.ToolTip"), TEXT("Fast"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Decorators/BTDecorator_DoesPathExist.h"));
			MetaData->SetValue(ReturnEnum, TEXT("NavmeshRaycast2D.ToolTip"), TEXT("Really Fast"));
			MetaData->SetValue(ReturnEnum, TEXT("RegularPathFinding.ToolTip"), TEXT("Slow"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_AIModule_EPathExistanceQueryType_CRC() { return 109871475U; }
	UClass* Z_Construct_UClass_UBTDecorator_DoesPathExist_NoRegister()
	{
		return UBTDecorator_DoesPathExist::StaticClass();
	}
	UClass* Z_Construct_UClass_UBTDecorator_DoesPathExist()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UBTDecorator();
			Z_Construct_UPackage_AIModule();
			OuterClass = UBTDecorator_DoesPathExist::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_FilterClass = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("FilterClass"), RF_Public|RF_Transient|RF_Native) UClassProperty(CPP_PROPERTY_BASE(FilterClass, UBTDecorator_DoesPathExist), 0x0004000000000001, Z_Construct_UClass_UNavigationQueryFilter_NoRegister());
				UProperty* NewProp_PathQueryType = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("PathQueryType"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(PathQueryType, UBTDecorator_DoesPathExist), 0x0000000000000001, Z_Construct_UEnum_AIModule_EPathExistanceQueryType());
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bUseSelf, UBTDecorator_DoesPathExist, uint8);
				UProperty* NewProp_bUseSelf = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bUseSelf"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bUseSelf, UBTDecorator_DoesPathExist), 0x0000000000000000, CPP_BOOL_PROPERTY_BITMASK(bUseSelf, UBTDecorator_DoesPathExist), sizeof(uint8), false);
				UProperty* NewProp_BlackboardKeyB = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("BlackboardKeyB"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(BlackboardKeyB, UBTDecorator_DoesPathExist), 0x0000080000000001, Z_Construct_UScriptStruct_FBlackboardKeySelector());
				UProperty* NewProp_BlackboardKeyA = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("BlackboardKeyA"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(BlackboardKeyA, UBTDecorator_DoesPathExist), 0x0000080000000001, Z_Construct_UScriptStruct_FBlackboardKeySelector());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("BehaviorTree/Decorators/BTDecorator_DoesPathExist.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Decorators/BTDecorator_DoesPathExist.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Cooldown decorator node.\nA decorator node that bases its condition on whether a path exists between two points from the Blackboard."));
				MetaData->SetValue(NewProp_FilterClass, TEXT("Category"), TEXT("Node"));
				MetaData->SetValue(NewProp_FilterClass, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Decorators/BTDecorator_DoesPathExist.h"));
				MetaData->SetValue(NewProp_FilterClass, TEXT("ToolTip"), TEXT("\"None\" will result in default filter being used"));
				MetaData->SetValue(NewProp_PathQueryType, TEXT("Category"), TEXT("Condition"));
				MetaData->SetValue(NewProp_PathQueryType, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Decorators/BTDecorator_DoesPathExist.h"));
				MetaData->SetValue(NewProp_bUseSelf, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Decorators/BTDecorator_DoesPathExist.h"));
				MetaData->SetValue(NewProp_bUseSelf, TEXT("ToolTip"), TEXT("deprecated, set value of blackboard key A on initialization"));
				MetaData->SetValue(NewProp_BlackboardKeyB, TEXT("Category"), TEXT("Condition"));
				MetaData->SetValue(NewProp_BlackboardKeyB, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Decorators/BTDecorator_DoesPathExist.h"));
				MetaData->SetValue(NewProp_BlackboardKeyB, TEXT("ToolTip"), TEXT("blackboard key selector"));
				MetaData->SetValue(NewProp_BlackboardKeyA, TEXT("Category"), TEXT("Condition"));
				MetaData->SetValue(NewProp_BlackboardKeyA, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Decorators/BTDecorator_DoesPathExist.h"));
				MetaData->SetValue(NewProp_BlackboardKeyA, TEXT("ToolTip"), TEXT("blackboard key selector"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UBTDecorator_DoesPathExist(Z_Construct_UClass_UBTDecorator_DoesPathExist, TEXT("UBTDecorator_DoesPathExist"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UBTDecorator_DoesPathExist);
	UClass* Z_Construct_UClass_UBTDecorator_ForceSuccess_NoRegister()
	{
		return UBTDecorator_ForceSuccess::StaticClass();
	}
	UClass* Z_Construct_UClass_UBTDecorator_ForceSuccess()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UBTDecorator();
			Z_Construct_UPackage_AIModule();
			OuterClass = UBTDecorator_ForceSuccess::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Condition"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("BehaviorTree/Decorators/BTDecorator_ForceSuccess.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Decorators/BTDecorator_ForceSuccess.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Change node result to Success\nuseful for creating optional branches in sequence\n\nForcing failed result was not implemented, because it doesn't make sense in both basic composites:\n- sequence = child nodes behind it will be never run\n- selector = would allow executing multiple nodes, turning it into a sequence..."));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UBTDecorator_ForceSuccess(Z_Construct_UClass_UBTDecorator_ForceSuccess, TEXT("UBTDecorator_ForceSuccess"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UBTDecorator_ForceSuccess);
	UClass* Z_Construct_UClass_UBTDecorator_KeepInCone_NoRegister()
	{
		return UBTDecorator_KeepInCone::StaticClass();
	}
	UClass* Z_Construct_UClass_UBTDecorator_KeepInCone()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UBTDecorator();
			Z_Construct_UPackage_AIModule();
			OuterClass = UBTDecorator_KeepInCone::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bUseSelfAsObserved, UBTDecorator_KeepInCone, uint8);
				UProperty* NewProp_bUseSelfAsObserved = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bUseSelfAsObserved"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bUseSelfAsObserved, UBTDecorator_KeepInCone), 0x0000000000000000, CPP_BOOL_PROPERTY_BITMASK(bUseSelfAsObserved, UBTDecorator_KeepInCone), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bUseSelfAsOrigin, UBTDecorator_KeepInCone, uint8);
				UProperty* NewProp_bUseSelfAsOrigin = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bUseSelfAsOrigin"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bUseSelfAsOrigin, UBTDecorator_KeepInCone), 0x0000000000000000, CPP_BOOL_PROPERTY_BITMASK(bUseSelfAsOrigin, UBTDecorator_KeepInCone), sizeof(uint8), false);
				UProperty* NewProp_Observed = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Observed"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Observed, UBTDecorator_KeepInCone), 0x0000000000000001, Z_Construct_UScriptStruct_FBlackboardKeySelector());
				UProperty* NewProp_ConeOrigin = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ConeOrigin"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(ConeOrigin, UBTDecorator_KeepInCone), 0x0000000000000001, Z_Construct_UScriptStruct_FBlackboardKeySelector());
				UProperty* NewProp_ConeHalfAngle = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ConeHalfAngle"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(ConeHalfAngle, UBTDecorator_KeepInCone), 0x0000000000000001);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Condition"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("BehaviorTree/Decorators/BTDecorator_KeepInCone.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Decorators/BTDecorator_KeepInCone.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Cooldown decorator node.\nA decorator node that bases its condition on whether the observed position is still inside a cone. The cone's direction is calculated when the node first becomes relevant."));
				MetaData->SetValue(NewProp_bUseSelfAsObserved, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Decorators/BTDecorator_KeepInCone.h"));
				MetaData->SetValue(NewProp_bUseSelfAsObserved, TEXT("ToolTip"), TEXT("deprecated, set value of Observed on initialization"));
				MetaData->SetValue(NewProp_bUseSelfAsOrigin, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Decorators/BTDecorator_KeepInCone.h"));
				MetaData->SetValue(NewProp_bUseSelfAsOrigin, TEXT("ToolTip"), TEXT("deprecated, set value of ConeOrigin on initialization"));
				MetaData->SetValue(NewProp_Observed, TEXT("Category"), TEXT("Blackboard"));
				MetaData->SetValue(NewProp_Observed, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Decorators/BTDecorator_KeepInCone.h"));
				MetaData->SetValue(NewProp_Observed, TEXT("ToolTip"), TEXT("blackboard key selector"));
				MetaData->SetValue(NewProp_ConeOrigin, TEXT("Category"), TEXT("Blackboard"));
				MetaData->SetValue(NewProp_ConeOrigin, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Decorators/BTDecorator_KeepInCone.h"));
				MetaData->SetValue(NewProp_ConeOrigin, TEXT("ToolTip"), TEXT("blackboard key selector"));
				MetaData->SetValue(NewProp_ConeHalfAngle, TEXT("Category"), TEXT("Decorator"));
				MetaData->SetValue(NewProp_ConeHalfAngle, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Decorators/BTDecorator_KeepInCone.h"));
				MetaData->SetValue(NewProp_ConeHalfAngle, TEXT("ToolTip"), TEXT("max allowed time for execution of underlying node"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UBTDecorator_KeepInCone(Z_Construct_UClass_UBTDecorator_KeepInCone, TEXT("UBTDecorator_KeepInCone"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UBTDecorator_KeepInCone);
	UClass* Z_Construct_UClass_UBTDecorator_Loop_NoRegister()
	{
		return UBTDecorator_Loop::StaticClass();
	}
	UClass* Z_Construct_UClass_UBTDecorator_Loop()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UBTDecorator();
			Z_Construct_UPackage_AIModule();
			OuterClass = UBTDecorator_Loop::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bInfiniteLoop, UBTDecorator_Loop, bool);
				UProperty* NewProp_bInfiniteLoop = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bInfiniteLoop"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bInfiniteLoop, UBTDecorator_Loop), 0x0000000000000001, CPP_BOOL_PROPERTY_BITMASK(bInfiniteLoop, UBTDecorator_Loop), sizeof(bool), true);
				UProperty* NewProp_NumLoops = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("NumLoops"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(NumLoops, UBTDecorator_Loop), 0x0000000000000001);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Condition"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("BehaviorTree/Decorators/BTDecorator_Loop.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Decorators/BTDecorator_Loop.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Loop decorator node.\nA decorator node that bases its condition on whether its loop counter has been exceeded."));
				MetaData->SetValue(NewProp_bInfiniteLoop, TEXT("Category"), TEXT("Decorator"));
				MetaData->SetValue(NewProp_bInfiniteLoop, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Decorators/BTDecorator_Loop.h"));
				MetaData->SetValue(NewProp_bInfiniteLoop, TEXT("ToolTip"), TEXT("infinite loop"));
				MetaData->SetValue(NewProp_NumLoops, TEXT("Category"), TEXT("Decorator"));
				MetaData->SetValue(NewProp_NumLoops, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Decorators/BTDecorator_Loop.h"));
				MetaData->SetValue(NewProp_NumLoops, TEXT("ToolTip"), TEXT("number of executions"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UBTDecorator_Loop(Z_Construct_UClass_UBTDecorator_Loop, TEXT("UBTDecorator_Loop"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UBTDecorator_Loop);
	UClass* Z_Construct_UClass_UBTDecorator_ReachedMoveGoal_NoRegister()
	{
		return UBTDecorator_ReachedMoveGoal::StaticClass();
	}
	UClass* Z_Construct_UClass_UBTDecorator_ReachedMoveGoal()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UBTDecorator();
			Z_Construct_UPackage_AIModule();
			OuterClass = UBTDecorator_ReachedMoveGoal::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("DeprecatedNode"), TEXT(""));
				MetaData->SetValue(OuterClass, TEXT("DeprecationMessage"), TEXT("Please use IsAtLocation decorator instead."));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("BehaviorTree/Decorators/BTDecorator_ReachedMoveGoal.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Decorators/BTDecorator_ReachedMoveGoal.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Reached Move Goal decorator node.\nA decorator node that bases its condition on whether the AI controller's path following component returns that it has reached its goal."));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UBTDecorator_ReachedMoveGoal(Z_Construct_UClass_UBTDecorator_ReachedMoveGoal, TEXT("UBTDecorator_ReachedMoveGoal"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UBTDecorator_ReachedMoveGoal);
	UClass* Z_Construct_UClass_UBTDecorator_SetTagCooldown_NoRegister()
	{
		return UBTDecorator_SetTagCooldown::StaticClass();
	}
	UClass* Z_Construct_UClass_UBTDecorator_SetTagCooldown()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UBTDecorator();
			Z_Construct_UPackage_AIModule();
			OuterClass = UBTDecorator_SetTagCooldown::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bAddToExistingDuration, UBTDecorator_SetTagCooldown, bool);
				UProperty* NewProp_bAddToExistingDuration = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bAddToExistingDuration"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bAddToExistingDuration, UBTDecorator_SetTagCooldown), 0x0000000000000001, CPP_BOOL_PROPERTY_BITMASK(bAddToExistingDuration, UBTDecorator_SetTagCooldown), sizeof(bool), true);
				UProperty* NewProp_CooldownDuration = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CooldownDuration"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(CooldownDuration, UBTDecorator_SetTagCooldown), 0x0000000000000001);
				UProperty* NewProp_CooldownTag = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CooldownTag"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(CooldownTag, UBTDecorator_SetTagCooldown), 0x0000000000000001, Z_Construct_UScriptStruct_FGameplayTag());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Condition"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("BehaviorTree/Decorators/BTDecorator_SetTagCooldown.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Decorators/BTDecorator_SetTagCooldown.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Set tag cooldown decorator node.\nA decorator node that sets a gameplay tag cooldown."));
				MetaData->SetValue(NewProp_bAddToExistingDuration, TEXT("Category"), TEXT("Decorator"));
				MetaData->SetValue(NewProp_bAddToExistingDuration, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Decorators/BTDecorator_SetTagCooldown.h"));
				MetaData->SetValue(NewProp_bAddToExistingDuration, TEXT("ToolTip"), TEXT("True if we are adding to any existing duration, false if we are setting the duration (potentially invalidating an existing end time)."));
				MetaData->SetValue(NewProp_CooldownDuration, TEXT("Category"), TEXT("Decorator"));
				MetaData->SetValue(NewProp_CooldownDuration, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Decorators/BTDecorator_SetTagCooldown.h"));
				MetaData->SetValue(NewProp_CooldownDuration, TEXT("ToolTip"), TEXT("Value we will add or set to the Cooldown tag when this task runs."));
				MetaData->SetValue(NewProp_CooldownTag, TEXT("Category"), TEXT("Decorator"));
				MetaData->SetValue(NewProp_CooldownTag, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Decorators/BTDecorator_SetTagCooldown.h"));
				MetaData->SetValue(NewProp_CooldownTag, TEXT("ToolTip"), TEXT("Gameplay tag that will be used for the cooldown."));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UBTDecorator_SetTagCooldown(Z_Construct_UClass_UBTDecorator_SetTagCooldown, TEXT("UBTDecorator_SetTagCooldown"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UBTDecorator_SetTagCooldown);
	UClass* Z_Construct_UClass_UBTDecorator_TagCooldown_NoRegister()
	{
		return UBTDecorator_TagCooldown::StaticClass();
	}
	UClass* Z_Construct_UClass_UBTDecorator_TagCooldown()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UBTDecorator();
			Z_Construct_UPackage_AIModule();
			OuterClass = UBTDecorator_TagCooldown::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bActivatesCooldown, UBTDecorator_TagCooldown, bool);
				UProperty* NewProp_bActivatesCooldown = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bActivatesCooldown"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bActivatesCooldown, UBTDecorator_TagCooldown), 0x0000000000000001, CPP_BOOL_PROPERTY_BITMASK(bActivatesCooldown, UBTDecorator_TagCooldown), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bAddToExistingDuration, UBTDecorator_TagCooldown, bool);
				UProperty* NewProp_bAddToExistingDuration = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bAddToExistingDuration"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bAddToExistingDuration, UBTDecorator_TagCooldown), 0x0000000000000001, CPP_BOOL_PROPERTY_BITMASK(bAddToExistingDuration, UBTDecorator_TagCooldown), sizeof(bool), true);
				UProperty* NewProp_CooldownDuration = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CooldownDuration"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(CooldownDuration, UBTDecorator_TagCooldown), 0x0000000000000001);
				UProperty* NewProp_CooldownTag = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CooldownTag"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(CooldownTag, UBTDecorator_TagCooldown), 0x0000000000000001, Z_Construct_UScriptStruct_FGameplayTag());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Condition"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("BehaviorTree/Decorators/BTDecorator_TagCooldown.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Decorators/BTDecorator_TagCooldown.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Cooldown decorator node.\nA decorator node that bases its condition on whether a cooldown timer based on a gameplay tag has expired."));
				MetaData->SetValue(NewProp_bActivatesCooldown, TEXT("Category"), TEXT("Decorator"));
				MetaData->SetValue(NewProp_bActivatesCooldown, TEXT("DisplayName"), TEXT("Adds/Sets Cooldown on Deactivation"));
				MetaData->SetValue(NewProp_bActivatesCooldown, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Decorators/BTDecorator_TagCooldown.h"));
				MetaData->SetValue(NewProp_bActivatesCooldown, TEXT("ToolTip"), TEXT("Whether or not we are adding/setting to the cooldown tag's value when the decorator deactivates."));
				MetaData->SetValue(NewProp_bAddToExistingDuration, TEXT("Category"), TEXT("Decorator"));
				MetaData->SetValue(NewProp_bAddToExistingDuration, TEXT("EditCondition"), TEXT("bActivatesCooldown"));
				MetaData->SetValue(NewProp_bAddToExistingDuration, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Decorators/BTDecorator_TagCooldown.h"));
				MetaData->SetValue(NewProp_bAddToExistingDuration, TEXT("ToolTip"), TEXT("True if we are adding to any existing duration, false if we are setting the duration (potentially invalidating an existing end time)."));
				MetaData->SetValue(NewProp_CooldownDuration, TEXT("Category"), TEXT("Decorator"));
				MetaData->SetValue(NewProp_CooldownDuration, TEXT("EditCondition"), TEXT("bActivatesCooldown"));
				MetaData->SetValue(NewProp_CooldownDuration, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Decorators/BTDecorator_TagCooldown.h"));
				MetaData->SetValue(NewProp_CooldownDuration, TEXT("ToolTip"), TEXT("Value we will add or set to the Cooldown tag when this node is deactivated."));
				MetaData->SetValue(NewProp_CooldownTag, TEXT("Category"), TEXT("Decorator"));
				MetaData->SetValue(NewProp_CooldownTag, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Decorators/BTDecorator_TagCooldown.h"));
				MetaData->SetValue(NewProp_CooldownTag, TEXT("ToolTip"), TEXT("Gameplay tag that will be used for the cooldown."));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UBTDecorator_TagCooldown(Z_Construct_UClass_UBTDecorator_TagCooldown, TEXT("UBTDecorator_TagCooldown"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UBTDecorator_TagCooldown);
	UClass* Z_Construct_UClass_UBTDecorator_TimeLimit_NoRegister()
	{
		return UBTDecorator_TimeLimit::StaticClass();
	}
	UClass* Z_Construct_UClass_UBTDecorator_TimeLimit()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UBTDecorator();
			Z_Construct_UPackage_AIModule();
			OuterClass = UBTDecorator_TimeLimit::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_TimeLimit = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("TimeLimit"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(TimeLimit, UBTDecorator_TimeLimit), 0x0000000000000001);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Condition"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("BehaviorTree/Decorators/BTDecorator_TimeLimit.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Decorators/BTDecorator_TimeLimit.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Time Limit decorator node.\nA decorator node that bases its condition on whether a timer has exceeded a specified value. The timer is reset each time the node becomes relevant."));
				MetaData->SetValue(NewProp_TimeLimit, TEXT("Category"), TEXT("Decorator"));
				MetaData->SetValue(NewProp_TimeLimit, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Decorators/BTDecorator_TimeLimit.h"));
				MetaData->SetValue(NewProp_TimeLimit, TEXT("ToolTip"), TEXT("max allowed time for execution of underlying node"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UBTDecorator_TimeLimit(Z_Construct_UClass_UBTDecorator_TimeLimit, TEXT("UBTDecorator_TimeLimit"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UBTDecorator_TimeLimit);
	UClass* Z_Construct_UClass_UBTService_NoRegister()
	{
		return UBTService::StaticClass();
	}
	UClass* Z_Construct_UClass_UBTService()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UBTAuxiliaryNode();
			Z_Construct_UPackage_AIModule();
			OuterClass = UBTService::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100081;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bRestartTimerOnEachActivation, UBTService, uint8);
				UProperty* NewProp_bRestartTimerOnEachActivation = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bRestartTimerOnEachActivation"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bRestartTimerOnEachActivation, UBTService), 0x00000c0000000001, CPP_BOOL_PROPERTY_BITMASK(bRestartTimerOnEachActivation, UBTService), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bCallTickOnSearchStart, UBTService, uint8);
				UProperty* NewProp_bCallTickOnSearchStart = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bCallTickOnSearchStart"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bCallTickOnSearchStart, UBTService), 0x00000c0000000001, CPP_BOOL_PROPERTY_BITMASK(bCallTickOnSearchStart, UBTService), sizeof(uint8), false);
				UProperty* NewProp_RandomDeviation = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("RandomDeviation"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(RandomDeviation, UBTService), 0x0000080000000001);
				UProperty* NewProp_Interval = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Interval"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(Interval, UBTService), 0x0000080000000001);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("BehaviorTree/BTService.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BTService.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Behavior Tree service nodes is designed to perform \"background\" tasks that update AI's knowledge.\n\nServices are being executed when underlying branch of behavior tree becomes active,\nbut unlike tasks they don't return any results and can't directly affect execution flow.\n\nUsually they perform periodical checks (see TickNode) and often store results in blackboard.\nIf any decorator node below requires results of check beforehand, use OnSearchStart function.\nKeep in mind that any checks performed there have to be instantaneous!\n\nOther typical use case is creating a marker when specific branch is being executed\n(see OnBecomeRelevant, OnCeaseRelevant), by setting a flag in blackboard.\n\nBecause some of them can be instanced for specific AI, following virtual functions are not marked as const:\n- OnBecomeRelevant (from UBTAuxiliaryNode)\n- OnCeaseRelevant (from UBTAuxiliaryNode)\n- TickNode (from UBTAuxiliaryNode)\n- OnSearchStart\n\nIf your node is not being instanced (default behavior), DO NOT change any properties of object within those functions!\nTemplate nodes are shared across all behavior tree components using the same tree asset and must store\ntheir runtime properties in provided NodeMemory block (allocation size determined by GetInstanceMemorySize() )"));
				MetaData->SetValue(NewProp_bRestartTimerOnEachActivation, TEXT("Category"), TEXT("Service"));
				MetaData->SetValue(NewProp_bRestartTimerOnEachActivation, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BTService.h"));
				MetaData->SetValue(NewProp_bRestartTimerOnEachActivation, TEXT("ToolTip"), TEXT("if set, next tick time will be always reset to service's interval when node is activated"));
				MetaData->SetValue(NewProp_bCallTickOnSearchStart, TEXT("Category"), TEXT("Service"));
				MetaData->SetValue(NewProp_bCallTickOnSearchStart, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BTService.h"));
				MetaData->SetValue(NewProp_bCallTickOnSearchStart, TEXT("ToolTip"), TEXT("call Tick event when task search enters this node (SearchStart will be called as well)"));
				MetaData->SetValue(NewProp_RandomDeviation, TEXT("Category"), TEXT("Service"));
				MetaData->SetValue(NewProp_RandomDeviation, TEXT("ClampMin"), TEXT("0.0"));
				MetaData->SetValue(NewProp_RandomDeviation, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BTService.h"));
				MetaData->SetValue(NewProp_RandomDeviation, TEXT("ToolTip"), TEXT("adds random range to service's Interval"));
				MetaData->SetValue(NewProp_Interval, TEXT("Category"), TEXT("Service"));
				MetaData->SetValue(NewProp_Interval, TEXT("ClampMin"), TEXT("0.001"));
				MetaData->SetValue(NewProp_Interval, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/BTService.h"));
				MetaData->SetValue(NewProp_Interval, TEXT("ToolTip"), TEXT("defines time span between subsequent ticks of the service"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UBTService(Z_Construct_UClass_UBTService, TEXT("UBTService"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UBTService);
	UClass* Z_Construct_UClass_UBTService_BlackboardBase_NoRegister()
	{
		return UBTService_BlackboardBase::StaticClass();
	}
	UClass* Z_Construct_UClass_UBTService_BlackboardBase()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UBTService();
			Z_Construct_UPackage_AIModule();
			OuterClass = UBTService_BlackboardBase::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100081;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_BlackboardKey = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("BlackboardKey"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(BlackboardKey, UBTService_BlackboardBase), 0x0000080000000001, Z_Construct_UScriptStruct_FBlackboardKeySelector());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("BehaviorTree/Services/BTService_BlackboardBase.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Services/BTService_BlackboardBase.h"));
				MetaData->SetValue(NewProp_BlackboardKey, TEXT("Category"), TEXT("Blackboard"));
				MetaData->SetValue(NewProp_BlackboardKey, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Services/BTService_BlackboardBase.h"));
				MetaData->SetValue(NewProp_BlackboardKey, TEXT("ToolTip"), TEXT("blackboard key selector"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UBTService_BlackboardBase(Z_Construct_UClass_UBTService_BlackboardBase, TEXT("UBTService_BlackboardBase"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UBTService_BlackboardBase);
	UClass* Z_Construct_UClass_UBTService_DefaultFocus_NoRegister()
	{
		return UBTService_DefaultFocus::StaticClass();
	}
	UClass* Z_Construct_UClass_UBTService_DefaultFocus()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UBTService_BlackboardBase();
			Z_Construct_UPackage_AIModule();
			OuterClass = UBTService_DefaultFocus::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_FocusPriority = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("FocusPriority"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(FocusPriority, UBTService_DefaultFocus), 0x0000080000000000);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Service"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("BehaviorTree/Services/BTService_DefaultFocus.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Services/BTService_DefaultFocus.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Default Focus service node.\nA service node that automatically sets the AI controller's focus when it becomes active."));
				MetaData->SetValue(NewProp_FocusPriority, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Services/BTService_DefaultFocus.h"));
				MetaData->SetValue(NewProp_FocusPriority, TEXT("ToolTip"), TEXT("not exposed to users on purpose. Here to make reusing focus-setting mechanics by derived classes possible"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UBTService_DefaultFocus(Z_Construct_UClass_UBTService_DefaultFocus, TEXT("UBTService_DefaultFocus"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UBTService_DefaultFocus);
	UFunction* Z_Construct_UFunction_UBTService_BlueprintBase_IsServiceActive()
	{
		struct BTService_BlueprintBase_eventIsServiceActive_Parms
		{
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UBTService_BlueprintBase();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("IsServiceActive"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x54080401, 65535, sizeof(BTService_BlueprintBase_eventIsServiceActive_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, BTService_BlueprintBase_eventIsServiceActive_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, BTService_BlueprintBase_eventIsServiceActive_Parms), 0x0000000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, BTService_BlueprintBase_eventIsServiceActive_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|BehaviorTree"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Services/BTService_BlueprintBase.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("check if service is currently being active"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UBTService_BlueprintBase_ReceiveActivation()
	{
		UObject* Outer=Z_Construct_UClass_UBTService_BlueprintBase();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ReceiveActivation"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x08080800, 65535, sizeof(BTService_BlueprintBase_eventReceiveActivation_Parms));
			UProperty* NewProp_OwnerActor = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OwnerActor"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(OwnerActor, BTService_BlueprintBase_eventReceiveActivation_Parms), 0x0000000000000080, Z_Construct_UClass_AActor_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Services/BTService_BlueprintBase.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("service became active\n    @Note that if both generic and AI event versions are implemented only the more\n    suitable one will be called, meaning the AI version if called for AI, generic one otherwise"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UBTService_BlueprintBase_ReceiveActivationAI()
	{
		UObject* Outer=Z_Construct_UClass_UBTService_BlueprintBase();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ReceiveActivationAI"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x08080800, 65535, sizeof(BTService_BlueprintBase_eventReceiveActivationAI_Parms));
			UProperty* NewProp_ControlledPawn = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ControlledPawn"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(ControlledPawn, BTService_BlueprintBase_eventReceiveActivationAI_Parms), 0x0000000000000080, Z_Construct_UClass_APawn_NoRegister());
			UProperty* NewProp_OwnerController = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OwnerController"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(OwnerController, BTService_BlueprintBase_eventReceiveActivationAI_Parms), 0x0000000000000080, Z_Construct_UClass_AAIController_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Services/BTService_BlueprintBase.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Alternative AI version of ReceiveActivation function.\n    @see ReceiveActivation for more details\n    @Note that if both generic and AI event versions are implemented only the more\n    suitable one will be called, meaning the AI version if called for AI, generic one otherwise"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UBTService_BlueprintBase_ReceiveDeactivation()
	{
		UObject* Outer=Z_Construct_UClass_UBTService_BlueprintBase();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ReceiveDeactivation"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x08080800, 65535, sizeof(BTService_BlueprintBase_eventReceiveDeactivation_Parms));
			UProperty* NewProp_OwnerActor = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OwnerActor"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(OwnerActor, BTService_BlueprintBase_eventReceiveDeactivation_Parms), 0x0000000000000080, Z_Construct_UClass_AActor_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Services/BTService_BlueprintBase.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("service became inactive\n    @Note that if both generic and AI event versions are implemented only the more\n    suitable one will be called, meaning the AI version if called for AI, generic one otherwise"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UBTService_BlueprintBase_ReceiveDeactivationAI()
	{
		UObject* Outer=Z_Construct_UClass_UBTService_BlueprintBase();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ReceiveDeactivationAI"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x08080800, 65535, sizeof(BTService_BlueprintBase_eventReceiveDeactivationAI_Parms));
			UProperty* NewProp_ControlledPawn = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ControlledPawn"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(ControlledPawn, BTService_BlueprintBase_eventReceiveDeactivationAI_Parms), 0x0000000000000080, Z_Construct_UClass_APawn_NoRegister());
			UProperty* NewProp_OwnerController = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OwnerController"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(OwnerController, BTService_BlueprintBase_eventReceiveDeactivationAI_Parms), 0x0000000000000080, Z_Construct_UClass_AAIController_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Services/BTService_BlueprintBase.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Alternative AI version of ReceiveDeactivation function.\n    @see ReceiveDeactivation for more details\n    @Note that if both generic and AI event versions are implemented only the more\n    suitable one will be called, meaning the AI version if called for AI, generic one otherwise"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UBTService_BlueprintBase_ReceiveSearchStart()
	{
		UObject* Outer=Z_Construct_UClass_UBTService_BlueprintBase();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ReceiveSearchStart"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x08080800, 65535, sizeof(BTService_BlueprintBase_eventReceiveSearchStart_Parms));
			UProperty* NewProp_OwnerActor = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OwnerActor"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(OwnerActor, BTService_BlueprintBase_eventReceiveSearchStart_Parms), 0x0000000000000080, Z_Construct_UClass_AActor_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Services/BTService_BlueprintBase.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("task search enters branch of tree\n    @Note that if both generic and AI event versions are implemented only the more\n    suitable one will be called, meaning the AI version if called for AI, generic one otherwise"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UBTService_BlueprintBase_ReceiveSearchStartAI()
	{
		UObject* Outer=Z_Construct_UClass_UBTService_BlueprintBase();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ReceiveSearchStartAI"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x08080800, 65535, sizeof(BTService_BlueprintBase_eventReceiveSearchStartAI_Parms));
			UProperty* NewProp_ControlledPawn = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ControlledPawn"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(ControlledPawn, BTService_BlueprintBase_eventReceiveSearchStartAI_Parms), 0x0000000000000080, Z_Construct_UClass_APawn_NoRegister());
			UProperty* NewProp_OwnerController = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OwnerController"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(OwnerController, BTService_BlueprintBase_eventReceiveSearchStartAI_Parms), 0x0000000000000080, Z_Construct_UClass_AAIController_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Services/BTService_BlueprintBase.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Alternative AI version of ReceiveSearchStart function.\n    @see ReceiveSearchStart for more details\n    @Note that if both generic and AI event versions are implemented only the more\n    suitable one will be called, meaning the AI version if called for AI, generic one otherwise"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UBTService_BlueprintBase_ReceiveTick()
	{
		UObject* Outer=Z_Construct_UClass_UBTService_BlueprintBase();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ReceiveTick"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x08080800, 65535, sizeof(BTService_BlueprintBase_eventReceiveTick_Parms));
			UProperty* NewProp_DeltaSeconds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("DeltaSeconds"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(DeltaSeconds, BTService_BlueprintBase_eventReceiveTick_Parms), 0x0000000000000080);
			UProperty* NewProp_OwnerActor = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OwnerActor"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(OwnerActor, BTService_BlueprintBase_eventReceiveTick_Parms), 0x0000000000000080, Z_Construct_UClass_AActor_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Services/BTService_BlueprintBase.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("tick function\n    @Note that if both generic and AI event versions are implemented only the more\n    suitable one will be called, meaning the AI version if called for AI, generic one otherwise"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UBTService_BlueprintBase_ReceiveTickAI()
	{
		UObject* Outer=Z_Construct_UClass_UBTService_BlueprintBase();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ReceiveTickAI"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x08080800, 65535, sizeof(BTService_BlueprintBase_eventReceiveTickAI_Parms));
			UProperty* NewProp_DeltaSeconds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("DeltaSeconds"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(DeltaSeconds, BTService_BlueprintBase_eventReceiveTickAI_Parms), 0x0000000000000080);
			UProperty* NewProp_ControlledPawn = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ControlledPawn"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(ControlledPawn, BTService_BlueprintBase_eventReceiveTickAI_Parms), 0x0000000000000080, Z_Construct_UClass_APawn_NoRegister());
			UProperty* NewProp_OwnerController = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OwnerController"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(OwnerController, BTService_BlueprintBase_eventReceiveTickAI_Parms), 0x0000000000000080, Z_Construct_UClass_AAIController_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Services/BTService_BlueprintBase.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Alternative AI version of ReceiveTick function.\n    @see ReceiveTick for more details\n    @Note that if both generic and AI event versions are implemented only the more\n    suitable one will be called, meaning the AI version if called for AI, generic one otherwise"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UBTService_BlueprintBase_NoRegister()
	{
		return UBTService_BlueprintBase::StaticClass();
	}
	UClass* Z_Construct_UClass_UBTService_BlueprintBase()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UBTService();
			Z_Construct_UPackage_AIModule();
			OuterClass = UBTService_BlueprintBase::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100081;

				OuterClass->LinkChild(Z_Construct_UFunction_UBTService_BlueprintBase_IsServiceActive());
				OuterClass->LinkChild(Z_Construct_UFunction_UBTService_BlueprintBase_ReceiveActivation());
				OuterClass->LinkChild(Z_Construct_UFunction_UBTService_BlueprintBase_ReceiveActivationAI());
				OuterClass->LinkChild(Z_Construct_UFunction_UBTService_BlueprintBase_ReceiveDeactivation());
				OuterClass->LinkChild(Z_Construct_UFunction_UBTService_BlueprintBase_ReceiveDeactivationAI());
				OuterClass->LinkChild(Z_Construct_UFunction_UBTService_BlueprintBase_ReceiveSearchStart());
				OuterClass->LinkChild(Z_Construct_UFunction_UBTService_BlueprintBase_ReceiveSearchStartAI());
				OuterClass->LinkChild(Z_Construct_UFunction_UBTService_BlueprintBase_ReceiveTick());
				OuterClass->LinkChild(Z_Construct_UFunction_UBTService_BlueprintBase_ReceiveTickAI());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bShowEventDetails, UBTService_BlueprintBase, uint8);
				UProperty* NewProp_bShowEventDetails = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bShowEventDetails"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bShowEventDetails, UBTService_BlueprintBase), 0x0000080000000801, CPP_BOOL_PROPERTY_BITMASK(bShowEventDetails, UBTService_BlueprintBase), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bShowPropertyDetails, UBTService_BlueprintBase, uint8);
				UProperty* NewProp_bShowPropertyDetails = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bShowPropertyDetails"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bShowPropertyDetails, UBTService_BlueprintBase), 0x0000080000000801, CPP_BOOL_PROPERTY_BITMASK(bShowPropertyDetails, UBTService_BlueprintBase), sizeof(uint8), false);
				UProperty* NewProp_ActorOwner = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ActorOwner"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(ActorOwner, UBTService_BlueprintBase), 0x0000080000002000, Z_Construct_UClass_AActor_NoRegister());
				UProperty* NewProp_AIOwner = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AIOwner"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(AIOwner, UBTService_BlueprintBase), 0x0000080000002000, Z_Construct_UClass_AAIController_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UBTService_BlueprintBase_IsServiceActive()); // 2365068894
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UBTService_BlueprintBase_ReceiveActivation()); // 3661121707
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UBTService_BlueprintBase_ReceiveActivationAI()); // 307982172
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UBTService_BlueprintBase_ReceiveDeactivation()); // 780123226
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UBTService_BlueprintBase_ReceiveDeactivationAI()); // 1320039524
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UBTService_BlueprintBase_ReceiveSearchStart()); // 2613857660
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UBTService_BlueprintBase_ReceiveSearchStartAI()); // 3428849291
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UBTService_BlueprintBase_ReceiveTick()); // 2730359242
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UBTService_BlueprintBase_ReceiveTickAI()); // 518501450
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("BehaviorTree/Services/BTService_BlueprintBase.h"));
				MetaData->SetValue(OuterClass, TEXT("IsBlueprintBase"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Services/BTService_BlueprintBase.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Base class for blueprint based service nodes. Do NOT use it for creating native c++ classes!\n\nWhen service receives Deactivation event, all latent actions associated this instance are being removed.\nThis prevents from resuming activity started by Activation, but does not handle external events.\nPlease use them safely (unregister at abort) and call IsServiceActive() when in doubt."));
				MetaData->SetValue(NewProp_bShowEventDetails, TEXT("Category"), TEXT("Description"));
				MetaData->SetValue(NewProp_bShowEventDetails, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Services/BTService_BlueprintBase.h"));
				MetaData->SetValue(NewProp_bShowEventDetails, TEXT("ToolTip"), TEXT("show detailed information about implemented events"));
				MetaData->SetValue(NewProp_bShowPropertyDetails, TEXT("Category"), TEXT("Description"));
				MetaData->SetValue(NewProp_bShowPropertyDetails, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Services/BTService_BlueprintBase.h"));
				MetaData->SetValue(NewProp_bShowPropertyDetails, TEXT("ToolTip"), TEXT("show detailed information about properties"));
				MetaData->SetValue(NewProp_ActorOwner, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Services/BTService_BlueprintBase.h"));
				MetaData->SetValue(NewProp_ActorOwner, TEXT("ToolTip"), TEXT("Cached actor owner of BehaviorTreeComponent."));
				MetaData->SetValue(NewProp_AIOwner, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Services/BTService_BlueprintBase.h"));
				MetaData->SetValue(NewProp_AIOwner, TEXT("ToolTip"), TEXT("Cached AIController owner of BehaviorTreeComponent."));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UBTService_BlueprintBase(Z_Construct_UClass_UBTService_BlueprintBase, TEXT("UBTService_BlueprintBase"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UBTService_BlueprintBase);
	UClass* Z_Construct_UClass_UBTComposite_Selector_NoRegister()
	{
		return UBTComposite_Selector::StaticClass();
	}
	UClass* Z_Construct_UClass_UBTComposite_Selector()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UBTCompositeNode();
			Z_Construct_UPackage_AIModule();
			OuterClass = UBTComposite_Selector::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("BehaviorTree/Composites/BTComposite_Selector.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Composites/BTComposite_Selector.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Selector composite node.\nSelector Nodes execute their children from left to right, and will stop executing its children when one of their children succeeds.\nIf a Selector's child succeeds, the Selector succeeds. If all the Selector's children fail, the Selector fails."));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UBTComposite_Selector(Z_Construct_UClass_UBTComposite_Selector, TEXT("UBTComposite_Selector"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UBTComposite_Selector);
	UClass* Z_Construct_UClass_UBTComposite_Sequence_NoRegister()
	{
		return UBTComposite_Sequence::StaticClass();
	}
	UClass* Z_Construct_UClass_UBTComposite_Sequence()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UBTCompositeNode();
			Z_Construct_UPackage_AIModule();
			OuterClass = UBTComposite_Sequence::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("BehaviorTree/Composites/BTComposite_Sequence.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Composites/BTComposite_Sequence.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Sequence composite node.\nSequence Nodes execute their children from left to right, and will stop executing its children when one of their children fails.\nIf a child fails, then the Sequence fails. If all the Sequence's children succeed, then the Sequence succeeds."));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UBTComposite_Sequence(Z_Construct_UClass_UBTComposite_Sequence, TEXT("UBTComposite_Sequence"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UBTComposite_Sequence);
	UEnum* Z_Construct_UEnum_AIModule_EBTParallelMode()
	{
		UPackage* Outer=Z_Construct_UPackage_AIModule();
		extern uint32 Get_Z_Construct_UEnum_AIModule_EBTParallelMode_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("EBTParallelMode"), 0, Get_Z_Construct_UEnum_AIModule_EBTParallelMode_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EBTParallelMode"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EBTParallelMode::AbortBackground")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EBTParallelMode::WaitForBackground")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EBTParallelMode::EBTParallelMode_MAX")), 2));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("AbortBackground.DisplayName"), TEXT("Immediate"));
			MetaData->SetValue(ReturnEnum, TEXT("AbortBackground.ToolTip"), TEXT("When main task finishes, immediately abort background tree."));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Composites/BTComposite_SimpleParallel.h"));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("keep in sync with DescribeFinishMode"));
			MetaData->SetValue(ReturnEnum, TEXT("WaitForBackground.DisplayName"), TEXT("Delayed"));
			MetaData->SetValue(ReturnEnum, TEXT("WaitForBackground.ToolTip"), TEXT("When main task finishes, wait for background tree to finish."));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_AIModule_EBTParallelMode_CRC() { return 1437601116U; }
	UClass* Z_Construct_UClass_UBTComposite_SimpleParallel_NoRegister()
	{
		return UBTComposite_SimpleParallel::StaticClass();
	}
	UClass* Z_Construct_UClass_UBTComposite_SimpleParallel()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UBTCompositeNode();
			Z_Construct_UPackage_AIModule();
			OuterClass = UBTComposite_SimpleParallel::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_FinishMode = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("FinishMode"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(FinishMode, UBTComposite_SimpleParallel), 0x0000000000000801, Z_Construct_UEnum_AIModule_EBTParallelMode());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("BehaviorTree/Composites/BTComposite_SimpleParallel.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Composites/BTComposite_SimpleParallel.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Simple Parallel composite node.\nAllows for running two children: one which must be a single task node (with optional decorators), and the other of which can be a complete subtree."));
				MetaData->SetValue(NewProp_FinishMode, TEXT("Category"), TEXT("Parallel"));
				MetaData->SetValue(NewProp_FinishMode, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Composites/BTComposite_SimpleParallel.h"));
				MetaData->SetValue(NewProp_FinishMode, TEXT("ToolTip"), TEXT("how background tree should be handled when main task finishes execution"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UBTComposite_SimpleParallel(Z_Construct_UClass_UBTComposite_SimpleParallel, TEXT("UBTComposite_SimpleParallel"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UBTComposite_SimpleParallel);
	UClass* Z_Construct_UClass_UBTTask_BlackboardBase_NoRegister()
	{
		return UBTTask_BlackboardBase::StaticClass();
	}
	UClass* Z_Construct_UClass_UBTTask_BlackboardBase()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UBTTaskNode();
			Z_Construct_UPackage_AIModule();
			OuterClass = UBTTask_BlackboardBase::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100081;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_BlackboardKey = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("BlackboardKey"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(BlackboardKey, UBTTask_BlackboardBase), 0x0000080000000001, Z_Construct_UScriptStruct_FBlackboardKeySelector());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("BehaviorTree/Tasks/BTTask_BlackboardBase.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Tasks/BTTask_BlackboardBase.h"));
				MetaData->SetValue(NewProp_BlackboardKey, TEXT("Category"), TEXT("Blackboard"));
				MetaData->SetValue(NewProp_BlackboardKey, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Tasks/BTTask_BlackboardBase.h"));
				MetaData->SetValue(NewProp_BlackboardKey, TEXT("ToolTip"), TEXT("blackboard key selector"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UBTTask_BlackboardBase(Z_Construct_UClass_UBTTask_BlackboardBase, TEXT("UBTTask_BlackboardBase"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UBTTask_BlackboardBase);
	UClass* Z_Construct_UClass_UBTTask_MoveDirectlyToward_NoRegister()
	{
		return UBTTask_MoveDirectlyToward::StaticClass();
	}
	UClass* Z_Construct_UClass_UBTTask_MoveDirectlyToward()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UBTTask_BlackboardBase();
			Z_Construct_UPackage_AIModule();
			OuterClass = UBTTask_MoveDirectlyToward::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100084;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bStopOnOverlap, UBTTask_MoveDirectlyToward, uint8);
				UProperty* NewProp_bStopOnOverlap = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bStopOnOverlap"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bStopOnOverlap, UBTTask_MoveDirectlyToward), 0x0000000000000001, CPP_BOOL_PROPERTY_BITMASK(bStopOnOverlap, UBTTask_MoveDirectlyToward), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bAllowStrafe, UBTTask_MoveDirectlyToward, uint8);
				UProperty* NewProp_bAllowStrafe = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bAllowStrafe"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bAllowStrafe, UBTTask_MoveDirectlyToward), 0x0000000000000001, CPP_BOOL_PROPERTY_BITMASK(bAllowStrafe, UBTTask_MoveDirectlyToward), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bProjectVectorGoalToNavigation, UBTTask_MoveDirectlyToward, uint8);
				UProperty* NewProp_bProjectVectorGoalToNavigation = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bProjectVectorGoalToNavigation"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bProjectVectorGoalToNavigation, UBTTask_MoveDirectlyToward), 0x0000000000000001, CPP_BOOL_PROPERTY_BITMASK(bProjectVectorGoalToNavigation, UBTTask_MoveDirectlyToward), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bDisablePathUpdateOnGoalLocationChange, UBTTask_MoveDirectlyToward, uint8);
				UProperty* NewProp_bDisablePathUpdateOnGoalLocationChange = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bDisablePathUpdateOnGoalLocationChange"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bDisablePathUpdateOnGoalLocationChange, UBTTask_MoveDirectlyToward), 0x0000000000000001, CPP_BOOL_PROPERTY_BITMASK(bDisablePathUpdateOnGoalLocationChange, UBTTask_MoveDirectlyToward), sizeof(uint8), false);
				UProperty* NewProp_AcceptableRadius = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AcceptableRadius"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(AcceptableRadius, UBTTask_MoveDirectlyToward), 0x0000000000004001);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->ClassConfigName = FName(TEXT("Game"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("BehaviorTree/Tasks/BTTask_MoveDirectlyToward.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Tasks/BTTask_MoveDirectlyToward.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Move Directly Toward task node.\nMoves the AI pawn toward the specified Actor or Location (Vector) blackboard entry in a straight line, without regard to any navigation system. If you need the AI to navigate, use the \"Move To\" node instead."));
				MetaData->SetValue(NewProp_bStopOnOverlap, TEXT("Category"), TEXT("Node"));
				MetaData->SetValue(NewProp_bStopOnOverlap, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Tasks/BTTask_MoveDirectlyToward.h"));
				MetaData->SetValue(NewProp_bStopOnOverlap, TEXT("ToolTip"), TEXT("if set to true agent's radius will be added to AcceptableRadius for purposes of checking\n    if path's end point has been reached. Will result in AI stopping on contact with destination location"));
				MetaData->SetValue(NewProp_bAllowStrafe, TEXT("Category"), TEXT("Node"));
				MetaData->SetValue(NewProp_bAllowStrafe, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Tasks/BTTask_MoveDirectlyToward.h"));
				MetaData->SetValue(NewProp_bProjectVectorGoalToNavigation, TEXT("Category"), TEXT("Node"));
				MetaData->SetValue(NewProp_bProjectVectorGoalToNavigation, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Tasks/BTTask_MoveDirectlyToward.h"));
				MetaData->SetValue(NewProp_bDisablePathUpdateOnGoalLocationChange, TEXT("Category"), TEXT("Node"));
				MetaData->SetValue(NewProp_bDisablePathUpdateOnGoalLocationChange, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Tasks/BTTask_MoveDirectlyToward.h"));
				MetaData->SetValue(NewProp_bDisablePathUpdateOnGoalLocationChange, TEXT("ToolTip"), TEXT("set to true will result in not updating move destination in\n    case where goal is an Actor that can change\n    his location while task is being performed"));
				MetaData->SetValue(NewProp_AcceptableRadius, TEXT("Category"), TEXT("Node"));
				MetaData->SetValue(NewProp_AcceptableRadius, TEXT("ClampMin"), TEXT("0.0"));
				MetaData->SetValue(NewProp_AcceptableRadius, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Tasks/BTTask_MoveDirectlyToward.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UBTTask_MoveDirectlyToward(Z_Construct_UClass_UBTTask_MoveDirectlyToward, TEXT("UBTTask_MoveDirectlyToward"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UBTTask_MoveDirectlyToward);
	UClass* Z_Construct_UClass_UBTTask_MoveTo_NoRegister()
	{
		return UBTTask_MoveTo::StaticClass();
	}
	UClass* Z_Construct_UClass_UBTTask_MoveTo()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UBTTask_BlackboardBase();
			Z_Construct_UPackage_AIModule();
			OuterClass = UBTTask_MoveTo::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100084;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bStopOnOverlap, UBTTask_MoveTo, uint8);
				UProperty* NewProp_bStopOnOverlap = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bStopOnOverlap"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bStopOnOverlap, UBTTask_MoveTo), 0x0000000000000001, CPP_BOOL_PROPERTY_BITMASK(bStopOnOverlap, UBTTask_MoveTo), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bAllowPartialPath, UBTTask_MoveTo, uint8);
				UProperty* NewProp_bAllowPartialPath = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bAllowPartialPath"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bAllowPartialPath, UBTTask_MoveTo), 0x0000040000000001, CPP_BOOL_PROPERTY_BITMASK(bAllowPartialPath, UBTTask_MoveTo), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bAllowStrafe, UBTTask_MoveTo, uint8);
				UProperty* NewProp_bAllowStrafe = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bAllowStrafe"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bAllowStrafe, UBTTask_MoveTo), 0x0000000000000001, CPP_BOOL_PROPERTY_BITMASK(bAllowStrafe, UBTTask_MoveTo), sizeof(uint8), false);
				UProperty* NewProp_FilterClass = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("FilterClass"), RF_Public|RF_Transient|RF_Native) UClassProperty(CPP_PROPERTY_BASE(FilterClass, UBTTask_MoveTo), 0x0004000000000001, Z_Construct_UClass_UNavigationQueryFilter_NoRegister());
				UProperty* NewProp_AcceptableRadius = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AcceptableRadius"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(AcceptableRadius, UBTTask_MoveTo), 0x0000000000004001);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->ClassConfigName = FName(TEXT("Game"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("BehaviorTree/Tasks/BTTask_MoveTo.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Tasks/BTTask_MoveTo.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Move To task node.\nMoves the AI pawn toward the specified Actor or Location blackboard entry using the navigation system."));
				MetaData->SetValue(NewProp_bStopOnOverlap, TEXT("Category"), TEXT("Node"));
				MetaData->SetValue(NewProp_bStopOnOverlap, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Tasks/BTTask_MoveTo.h"));
				MetaData->SetValue(NewProp_bStopOnOverlap, TEXT("ToolTip"), TEXT("if set to true agent's radius will be added to AcceptableRadius for purposes of checking\n    if path's end point has been reached. Will result in AI stopping on contact with destination location"));
				MetaData->SetValue(NewProp_bAllowPartialPath, TEXT("Category"), TEXT("Node"));
				MetaData->SetValue(NewProp_bAllowPartialPath, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Tasks/BTTask_MoveTo.h"));
				MetaData->SetValue(NewProp_bAllowPartialPath, TEXT("ToolTip"), TEXT("if set, use incomplete path when goal can't be reached"));
				MetaData->SetValue(NewProp_bAllowStrafe, TEXT("Category"), TEXT("Node"));
				MetaData->SetValue(NewProp_bAllowStrafe, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Tasks/BTTask_MoveTo.h"));
				MetaData->SetValue(NewProp_FilterClass, TEXT("Category"), TEXT("Node"));
				MetaData->SetValue(NewProp_FilterClass, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Tasks/BTTask_MoveTo.h"));
				MetaData->SetValue(NewProp_FilterClass, TEXT("ToolTip"), TEXT("\"None\" will result in default filter being used"));
				MetaData->SetValue(NewProp_AcceptableRadius, TEXT("Category"), TEXT("Node"));
				MetaData->SetValue(NewProp_AcceptableRadius, TEXT("ClampMin"), TEXT("0.0"));
				MetaData->SetValue(NewProp_AcceptableRadius, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Tasks/BTTask_MoveTo.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UBTTask_MoveTo(Z_Construct_UClass_UBTTask_MoveTo, TEXT("UBTTask_MoveTo"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UBTTask_MoveTo);
	UClass* Z_Construct_UClass_UBTTask_RotateToFaceBBEntry_NoRegister()
	{
		return UBTTask_RotateToFaceBBEntry::StaticClass();
	}
	UClass* Z_Construct_UClass_UBTTask_RotateToFaceBBEntry()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UBTTask_BlackboardBase();
			Z_Construct_UPackage_AIModule();
			OuterClass = UBTTask_RotateToFaceBBEntry::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100084;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_Precision = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Precision"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(Precision, UBTTask_RotateToFaceBBEntry), 0x0000080000004001);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->ClassConfigName = FName(TEXT("Game"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("BehaviorTree/Tasks/BTTask_RotateToFaceBBEntry.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Tasks/BTTask_RotateToFaceBBEntry.h"));
				MetaData->SetValue(NewProp_Precision, TEXT("Category"), TEXT("Node"));
				MetaData->SetValue(NewProp_Precision, TEXT("ClampMin"), TEXT("0.0"));
				MetaData->SetValue(NewProp_Precision, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Tasks/BTTask_RotateToFaceBBEntry.h"));
				MetaData->SetValue(NewProp_Precision, TEXT("ToolTip"), TEXT("Success condition precision in decrees"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UBTTask_RotateToFaceBBEntry(Z_Construct_UClass_UBTTask_RotateToFaceBBEntry, TEXT("UBTTask_RotateToFaceBBEntry"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UBTTask_RotateToFaceBBEntry);
	UClass* Z_Construct_UClass_UEnvQueryItemType_NoRegister()
	{
		return UEnvQueryItemType::StaticClass();
	}
	UClass* Z_Construct_UClass_UEnvQueryItemType()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage_AIModule();
			OuterClass = UEnvQueryItemType::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100081;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("EnvironmentQuery/Items/EnvQueryItemType.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/Items/EnvQueryItemType.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UEnvQueryItemType(Z_Construct_UClass_UEnvQueryItemType, TEXT("UEnvQueryItemType"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UEnvQueryItemType);
	UClass* Z_Construct_UClass_UEnvQueryContext_NoRegister()
	{
		return UEnvQueryContext::StaticClass();
	}
	UClass* Z_Construct_UClass_UEnvQueryContext()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage_AIModule();
			OuterClass = UEnvQueryContext::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100081;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("EnvironmentQuery/EnvQueryContext.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EnvQueryContext.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UEnvQueryContext(Z_Construct_UClass_UEnvQueryContext, TEXT("UEnvQueryContext"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UEnvQueryContext);
	UEnum* Z_Construct_UEnum_AIModule_EEnvQueryTestClamping()
	{
		UPackage* Outer=Z_Construct_UPackage_AIModule();
		extern uint32 Get_Z_Construct_UEnum_AIModule_EEnvQueryTestClamping_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("EEnvQueryTestClamping"), 0, Get_Z_Construct_UEnum_AIModule_EEnvQueryTestClamping_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EEnvQueryTestClamping"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EEnvQueryTestClamping::None")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EEnvQueryTestClamping::SpecifiedValue")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EEnvQueryTestClamping::FilterThreshold")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EEnvQueryTestClamping::EEnvQueryTestClamping_MAX")), 3));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("FilterThreshold.ToolTip"), TEXT("Clamp to test's filter threshold."));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EnvQueryTypes.h"));
			MetaData->SetValue(ReturnEnum, TEXT("SpecifiedValue.ToolTip"), TEXT("Clamp to value specified in test."));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_AIModule_EEnvQueryTestClamping_CRC() { return 895388198U; }
	UEnum* Z_Construct_UEnum_AIModule_EEnvDirection()
	{
		UPackage* Outer=Z_Construct_UPackage_AIModule();
		extern uint32 Get_Z_Construct_UEnum_AIModule_EEnvDirection_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("EEnvDirection"), 0, Get_Z_Construct_UEnum_AIModule_EEnvDirection_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EEnvDirection"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EEnvDirection::TwoPoints")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EEnvDirection::Rotation")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EEnvDirection::EEnvDirection_MAX")), 2));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EnvQueryTypes.h"));
			MetaData->SetValue(ReturnEnum, TEXT("Rotation.ToolTip"), TEXT("Context's rotation will be used as a direction."));
			MetaData->SetValue(ReturnEnum, TEXT("TwoPoints.DisplayName"), TEXT("Two Points"));
			MetaData->SetValue(ReturnEnum, TEXT("TwoPoints.ToolTip"), TEXT("Direction from location of one context to another."));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_AIModule_EEnvDirection_CRC() { return 2067780068U; }
	UEnum* Z_Construct_UEnum_AIModule_EEnvTraceShape()
	{
		UPackage* Outer=Z_Construct_UPackage_AIModule();
		extern uint32 Get_Z_Construct_UEnum_AIModule_EEnvTraceShape_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("EEnvTraceShape"), 0, Get_Z_Construct_UEnum_AIModule_EEnvTraceShape_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EEnvTraceShape"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EEnvTraceShape::Line")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EEnvTraceShape::Box")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EEnvTraceShape::Sphere")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EEnvTraceShape::Capsule")), 3));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EEnvTraceShape::EEnvTraceShape_MAX")), 4));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EnvQueryTypes.h"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_AIModule_EEnvTraceShape_CRC() { return 2947387304U; }
	UEnum* Z_Construct_UEnum_AIModule_EEnvQueryTrace()
	{
		UPackage* Outer=Z_Construct_UPackage_AIModule();
		extern uint32 Get_Z_Construct_UEnum_AIModule_EEnvQueryTrace_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("EEnvQueryTrace"), 0, Get_Z_Construct_UEnum_AIModule_EEnvQueryTrace_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EEnvQueryTrace"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EEnvQueryTrace::None")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EEnvQueryTrace::Navigation")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EEnvQueryTrace::Geometry")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EEnvQueryTrace::EEnvQueryTrace_MAX")), 3));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EnvQueryTypes.h"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_AIModule_EEnvQueryTrace_CRC() { return 4270722821U; }
	UEnum* Z_Construct_UEnum_AIModule_EEnvQueryParam()
	{
		UPackage* Outer=Z_Construct_UPackage_AIModule();
		extern uint32 Get_Z_Construct_UEnum_AIModule_EEnvQueryParam_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("EEnvQueryParam"), 0, Get_Z_Construct_UEnum_AIModule_EEnvQueryParam_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EEnvQueryParam"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EEnvQueryParam::Float")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EEnvQueryParam::Int")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EEnvQueryParam::Bool")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EEnvQueryParam::EEnvQueryParam_MAX")), 3));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EnvQueryTypes.h"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_AIModule_EEnvQueryParam_CRC() { return 719556061U; }
	UEnum* Z_Construct_UEnum_AIModule_EEnvQueryRunMode()
	{
		UPackage* Outer=Z_Construct_UPackage_AIModule();
		extern uint32 Get_Z_Construct_UEnum_AIModule_EEnvQueryRunMode_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("EEnvQueryRunMode"), 0, Get_Z_Construct_UEnum_AIModule_EEnvQueryRunMode_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EEnvQueryRunMode"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EEnvQueryRunMode::SingleResult")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EEnvQueryRunMode::RandomBest5Pct")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EEnvQueryRunMode::RandomBest25Pct")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EEnvQueryRunMode::AllMatching")), 3));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EEnvQueryRunMode::EEnvQueryRunMode_MAX")), 4));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("AllMatching.Tooltip"), TEXT("Get all items that match conditions"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EnvQueryTypes.h"));
			MetaData->SetValue(ReturnEnum, TEXT("RandomBest25Pct.DisplayName"), TEXT("Single Random Item from Best 25%"));
			MetaData->SetValue(ReturnEnum, TEXT("RandomBest25Pct.Tooltip"), TEXT("Pick random item with score 75% .. 100% of max"));
			MetaData->SetValue(ReturnEnum, TEXT("RandomBest5Pct.DisplayName"), TEXT("Single Random Item from Best 5%"));
			MetaData->SetValue(ReturnEnum, TEXT("RandomBest5Pct.Tooltip"), TEXT("Pick random item with score 95% .. 100% of max"));
			MetaData->SetValue(ReturnEnum, TEXT("SingleResult.DisplayName"), TEXT("Single Best Item"));
			MetaData->SetValue(ReturnEnum, TEXT("SingleResult.Tooltip"), TEXT("Pick first item with the best score"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_AIModule_EEnvQueryRunMode_CRC() { return 3880374074U; }
	UEnum* Z_Construct_UEnum_AIModule_EEnvQueryStatus()
	{
		UPackage* Outer=Z_Construct_UPackage_AIModule();
		extern uint32 Get_Z_Construct_UEnum_AIModule_EEnvQueryStatus_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("EEnvQueryStatus"), 0, Get_Z_Construct_UEnum_AIModule_EEnvQueryStatus_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EEnvQueryStatus"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EEnvQueryStatus::Processing")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EEnvQueryStatus::Success")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EEnvQueryStatus::Failed")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EEnvQueryStatus::Aborted")), 3));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EEnvQueryStatus::OwnerLost")), 4));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EEnvQueryStatus::MissingParam")), 5));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EEnvQueryStatus::EEnvQueryStatus_MAX")), 6));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EnvQueryTypes.h"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_AIModule_EEnvQueryStatus_CRC() { return 1975331008U; }
	UEnum* Z_Construct_UEnum_AIModule_EEnvTestScoreOperator()
	{
		UPackage* Outer=Z_Construct_UPackage_AIModule();
		extern uint32 Get_Z_Construct_UEnum_AIModule_EEnvTestScoreOperator_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("EEnvTestScoreOperator"), 0, Get_Z_Construct_UEnum_AIModule_EEnvTestScoreOperator_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EEnvTestScoreOperator"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EEnvTestScoreOperator::AverageScore")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EEnvTestScoreOperator::MinScore")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EEnvTestScoreOperator::MaxScore")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EEnvTestScoreOperator::EEnvTestScoreOperator_MAX")), 3));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("AverageScore.Tooltip"), TEXT("Use average score from all contexts"));
			MetaData->SetValue(ReturnEnum, TEXT("MaxScore.Tooltip"), TEXT("Use maximum score from all contexts"));
			MetaData->SetValue(ReturnEnum, TEXT("MinScore.Tooltip"), TEXT("Use minimum score from all contexts"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EnvQueryTypes.h"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_AIModule_EEnvTestScoreOperator_CRC() { return 1151792773U; }
	UEnum* Z_Construct_UEnum_AIModule_EEnvTestFilterOperator()
	{
		UPackage* Outer=Z_Construct_UPackage_AIModule();
		extern uint32 Get_Z_Construct_UEnum_AIModule_EEnvTestFilterOperator_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("EEnvTestFilterOperator"), 0, Get_Z_Construct_UEnum_AIModule_EEnvTestFilterOperator_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EEnvTestFilterOperator"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EEnvTestFilterOperator::AllPass")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EEnvTestFilterOperator::AnyPass")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EEnvTestFilterOperator::EEnvTestFilterOperator_MAX")), 2));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("AllPass.Tooltip"), TEXT("All contexts must pass condition"));
			MetaData->SetValue(ReturnEnum, TEXT("AnyPass.Tooltip"), TEXT("At least one context must pass condition"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EnvQueryTypes.h"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_AIModule_EEnvTestFilterOperator_CRC() { return 2708508573U; }
	UEnum* Z_Construct_UEnum_AIModule_EEnvTestCost()
	{
		UPackage* Outer=Z_Construct_UPackage_AIModule();
		extern uint32 Get_Z_Construct_UEnum_AIModule_EEnvTestCost_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("EEnvTestCost"), 0, Get_Z_Construct_UEnum_AIModule_EEnvTestCost_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EEnvTestCost"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EEnvTestCost::Low")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EEnvTestCost::Medium")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EEnvTestCost::High")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EEnvTestCost::EEnvTestCost_MAX")), 3));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("High.ToolTip"), TEXT("Really expensive calls (e.g. visibility traces, pathfinding)."));
			MetaData->SetValue(ReturnEnum, TEXT("Low.ToolTip"), TEXT("Reading data, math operations (e.g. distance)."));
			MetaData->SetValue(ReturnEnum, TEXT("Medium.ToolTip"), TEXT("Processing data from multiple sources (e.g. fire tickets)."));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EnvQueryTypes.h"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_AIModule_EEnvTestCost_CRC() { return 2089283433U; }
	UEnum* Z_Construct_UEnum_AIModule_EEnvTestWeight()
	{
		UPackage* Outer=Z_Construct_UPackage_AIModule();
		extern uint32 Get_Z_Construct_UEnum_AIModule_EEnvTestWeight_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("EEnvTestWeight"), 0, Get_Z_Construct_UEnum_AIModule_EEnvTestWeight_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EEnvTestWeight"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EEnvTestWeight::None")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EEnvTestWeight::Square")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EEnvTestWeight::Inverse")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EEnvTestWeight::Unused")), 3));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EEnvTestWeight::Constant")), 4));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EEnvTestWeight::Skip")), 5));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EEnvTestWeight::EEnvTestWeight_MAX")), 6));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EnvQueryTypes.h"));
			MetaData->SetValue(ReturnEnum, TEXT("Skip.DisplayName"), TEXT("Do not weight"));
			MetaData->SetValue(ReturnEnum, TEXT("Unused.Hidden"), TEXT(""));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_AIModule_EEnvTestWeight_CRC() { return 3410650059U; }
	UEnum* Z_Construct_UEnum_AIModule_EEnvTestScoreEquation()
	{
		UPackage* Outer=Z_Construct_UPackage_AIModule();
		extern uint32 Get_Z_Construct_UEnum_AIModule_EEnvTestScoreEquation_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("EEnvTestScoreEquation"), 0, Get_Z_Construct_UEnum_AIModule_EEnvTestScoreEquation_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EEnvTestScoreEquation"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EEnvTestScoreEquation::Linear")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EEnvTestScoreEquation::Square")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EEnvTestScoreEquation::InverseLinear")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EEnvTestScoreEquation::Constant")), 3));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EEnvTestScoreEquation::EEnvTestScoreEquation_MAX")), 4));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("Constant.ToolTip"), TEXT("For now..."));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EnvQueryTypes.h"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_AIModule_EEnvTestScoreEquation_CRC() { return 747796865U; }
	UEnum* Z_Construct_UEnum_AIModule_EEnvTestFilterType()
	{
		UPackage* Outer=Z_Construct_UPackage_AIModule();
		extern uint32 Get_Z_Construct_UEnum_AIModule_EEnvTestFilterType_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("EEnvTestFilterType"), 0, Get_Z_Construct_UEnum_AIModule_EEnvTestFilterType_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EEnvTestFilterType"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EEnvTestFilterType::Minimum")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EEnvTestFilterType::Maximum")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EEnvTestFilterType::Range")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EEnvTestFilterType::Match")), 3));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EEnvTestFilterType::EEnvTestFilterType_MAX")), 4));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("Match.ToolTip"), TEXT("For Boolean tests."));
			MetaData->SetValue(ReturnEnum, TEXT("Maximum.ToolTip"), TEXT("For numeric tests."));
			MetaData->SetValue(ReturnEnum, TEXT("Minimum.ToolTip"), TEXT("For numeric tests."));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EnvQueryTypes.h"));
			MetaData->SetValue(ReturnEnum, TEXT("Range.ToolTip"), TEXT("For numeric tests."));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_AIModule_EEnvTestFilterType_CRC() { return 4078352558U; }
	UEnum* Z_Construct_UEnum_AIModule_EEnvTestPurpose()
	{
		UPackage* Outer=Z_Construct_UPackage_AIModule();
		extern uint32 Get_Z_Construct_UEnum_AIModule_EEnvTestPurpose_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("EEnvTestPurpose"), 0, Get_Z_Construct_UEnum_AIModule_EEnvTestPurpose_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EEnvTestPurpose"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EEnvTestPurpose::Filter")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EEnvTestPurpose::Score")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EEnvTestPurpose::FilterAndScore")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EEnvTestPurpose::EEnvTestPurpose_MAX")), 3));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("Filter.DisplayName"), TEXT("Filter Only"));
			MetaData->SetValue(ReturnEnum, TEXT("FilterAndScore.DisplayName"), TEXT("Filter and Score"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EnvQueryTypes.h"));
			MetaData->SetValue(ReturnEnum, TEXT("Score.DisplayName"), TEXT("Score Only"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_AIModule_EEnvTestPurpose_CRC() { return 2706722139U; }
	UScriptStruct* Z_Construct_UScriptStruct_FEnvBoolParam()
	{
		UPackage* Outer=Z_Construct_UPackage_AIModule();
		extern uint32 Get_Z_Construct_UScriptStruct_FEnvBoolParam_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("EnvBoolParam"), sizeof(FEnvBoolParam), Get_Z_Construct_UScriptStruct_FEnvBoolParam_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EnvBoolParam"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), Z_Construct_UScriptStruct_FEnvBoolParam_DEPRECATED(), new UScriptStruct::TCppStructOps<FEnvBoolParam>, EStructFlags(0x00000201));
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EnvQueryTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FEnvBoolParam_CRC() { return 2172397410U; }
	UScriptStruct* Z_Construct_UScriptStruct_FEnvIntParam()
	{
		UPackage* Outer=Z_Construct_UPackage_AIModule();
		extern uint32 Get_Z_Construct_UScriptStruct_FEnvIntParam_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("EnvIntParam"), sizeof(FEnvIntParam), Get_Z_Construct_UScriptStruct_FEnvIntParam_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EnvIntParam"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), Z_Construct_UScriptStruct_FEnvIntParam_DEPRECATED(), new UScriptStruct::TCppStructOps<FEnvIntParam>, EStructFlags(0x00000201));
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EnvQueryTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FEnvIntParam_CRC() { return 2387682057U; }
	UScriptStruct* Z_Construct_UScriptStruct_FEnvFloatParam()
	{
		UPackage* Outer=Z_Construct_UPackage_AIModule();
		extern uint32 Get_Z_Construct_UScriptStruct_FEnvFloatParam_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("EnvFloatParam"), sizeof(FEnvFloatParam), Get_Z_Construct_UScriptStruct_FEnvFloatParam_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EnvFloatParam"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), Z_Construct_UScriptStruct_FEnvFloatParam_DEPRECATED(), new UScriptStruct::TCppStructOps<FEnvFloatParam>, EStructFlags(0x00000201));
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EnvQueryTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FEnvFloatParam_CRC() { return 165632468U; }
	UScriptStruct* Z_Construct_UScriptStruct_FEnvBoolParam_DEPRECATED()
	{
		UPackage* Outer=Z_Construct_UPackage_AIModule();
		extern uint32 Get_Z_Construct_UScriptStruct_FEnvBoolParam_DEPRECATED_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("EnvBoolParam_DEPRECATED"), sizeof(FEnvBoolParam_DEPRECATED), Get_Z_Construct_UScriptStruct_FEnvBoolParam_DEPRECATED_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EnvBoolParam_DEPRECATED"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FEnvBoolParam_DEPRECATED>, EStructFlags(0x00000201));
			UProperty* NewProp_ParamName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ParamName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(ParamName, FEnvBoolParam_DEPRECATED), 0x0000000000010001);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Value, FEnvBoolParam_DEPRECATED, bool);
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Value"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Value, FEnvBoolParam_DEPRECATED), 0x0000000000010001, CPP_BOOL_PROPERTY_BITMASK(Value, FEnvBoolParam_DEPRECATED), sizeof(bool), true);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EnvQueryTypes.h"));
			MetaData->SetValue(NewProp_ParamName, TEXT("Category"), TEXT("Param"));
			MetaData->SetValue(NewProp_ParamName, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EnvQueryTypes.h"));
			MetaData->SetValue(NewProp_ParamName, TEXT("ToolTip"), TEXT("name of parameter"));
			MetaData->SetValue(NewProp_Value, TEXT("Category"), TEXT("Param"));
			MetaData->SetValue(NewProp_Value, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EnvQueryTypes.h"));
			MetaData->SetValue(NewProp_Value, TEXT("ToolTip"), TEXT("default value"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FEnvBoolParam_DEPRECATED_CRC() { return 295086514U; }
	UScriptStruct* Z_Construct_UScriptStruct_FEnvIntParam_DEPRECATED()
	{
		UPackage* Outer=Z_Construct_UPackage_AIModule();
		extern uint32 Get_Z_Construct_UScriptStruct_FEnvIntParam_DEPRECATED_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("EnvIntParam_DEPRECATED"), sizeof(FEnvIntParam_DEPRECATED), Get_Z_Construct_UScriptStruct_FEnvIntParam_DEPRECATED_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EnvIntParam_DEPRECATED"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FEnvIntParam_DEPRECATED>, EStructFlags(0x00000201));
			UProperty* NewProp_ParamName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ParamName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(ParamName, FEnvIntParam_DEPRECATED), 0x0000000000010001);
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Value"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(Value, FEnvIntParam_DEPRECATED), 0x0000000000010001);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EnvQueryTypes.h"));
			MetaData->SetValue(NewProp_ParamName, TEXT("Category"), TEXT("Param"));
			MetaData->SetValue(NewProp_ParamName, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EnvQueryTypes.h"));
			MetaData->SetValue(NewProp_ParamName, TEXT("ToolTip"), TEXT("name of parameter"));
			MetaData->SetValue(NewProp_Value, TEXT("Category"), TEXT("Param"));
			MetaData->SetValue(NewProp_Value, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EnvQueryTypes.h"));
			MetaData->SetValue(NewProp_Value, TEXT("ToolTip"), TEXT("default value"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FEnvIntParam_DEPRECATED_CRC() { return 2282197067U; }
	UScriptStruct* Z_Construct_UScriptStruct_FEnvFloatParam_DEPRECATED()
	{
		UPackage* Outer=Z_Construct_UPackage_AIModule();
		extern uint32 Get_Z_Construct_UScriptStruct_FEnvFloatParam_DEPRECATED_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("EnvFloatParam_DEPRECATED"), sizeof(FEnvFloatParam_DEPRECATED), Get_Z_Construct_UScriptStruct_FEnvFloatParam_DEPRECATED_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EnvFloatParam_DEPRECATED"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FEnvFloatParam_DEPRECATED>, EStructFlags(0x00000201));
			UProperty* NewProp_ParamName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ParamName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(ParamName, FEnvFloatParam_DEPRECATED), 0x0000000000010001);
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Value"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(Value, FEnvFloatParam_DEPRECATED), 0x0000000000010001);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EnvQueryTypes.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("BEGIN DEPRECATED SUPPORT"));
			MetaData->SetValue(NewProp_ParamName, TEXT("Category"), TEXT("Param"));
			MetaData->SetValue(NewProp_ParamName, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EnvQueryTypes.h"));
			MetaData->SetValue(NewProp_ParamName, TEXT("ToolTip"), TEXT("name of parameter"));
			MetaData->SetValue(NewProp_Value, TEXT("Category"), TEXT("Param"));
			MetaData->SetValue(NewProp_Value, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EnvQueryTypes.h"));
			MetaData->SetValue(NewProp_Value, TEXT("ToolTip"), TEXT("default value"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FEnvFloatParam_DEPRECATED_CRC() { return 3801472317U; }
	UScriptStruct* Z_Construct_UScriptStruct_FEnvQueryResult()
	{
		UPackage* Outer=Z_Construct_UPackage_AIModule();
		extern uint32 Get_Z_Construct_UScriptStruct_FEnvQueryResult_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("EnvQueryResult"), sizeof(FEnvQueryResult), Get_Z_Construct_UScriptStruct_FEnvQueryResult_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EnvQueryResult"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FEnvQueryResult>, EStructFlags(0x00000201));
			UProperty* NewProp_QueryID = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("QueryID"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(QueryID, FEnvQueryResult), 0x0000000000000014);
			UProperty* NewProp_OptionIndex = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("OptionIndex"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(OptionIndex, FEnvQueryResult), 0x0000000000000014);
			UProperty* NewProp_ItemType = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ItemType"), RF_Public|RF_Transient|RF_Native) UClassProperty(CPP_PROPERTY_BASE(ItemType, FEnvQueryResult), 0x0004000000000014, Z_Construct_UClass_UEnvQueryItemType_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EnvQueryTypes.h"));
			MetaData->SetValue(NewProp_QueryID, TEXT("Category"), TEXT("EQS"));
			MetaData->SetValue(NewProp_QueryID, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EnvQueryTypes.h"));
			MetaData->SetValue(NewProp_QueryID, TEXT("ToolTip"), TEXT("instance ID"));
			MetaData->SetValue(NewProp_OptionIndex, TEXT("Category"), TEXT("EQS"));
			MetaData->SetValue(NewProp_OptionIndex, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EnvQueryTypes.h"));
			MetaData->SetValue(NewProp_OptionIndex, TEXT("ToolTip"), TEXT("index of query option, that generated items"));
			MetaData->SetValue(NewProp_ItemType, TEXT("Category"), TEXT("EQS"));
			MetaData->SetValue(NewProp_ItemType, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EnvQueryTypes.h"));
			MetaData->SetValue(NewProp_ItemType, TEXT("ToolTip"), TEXT("type of generated items"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FEnvQueryResult_CRC() { return 4171546028U; }
	UScriptStruct* Z_Construct_UScriptStruct_FEnvTraceData()
	{
		UPackage* Outer=Z_Construct_UPackage_AIModule();
		extern uint32 Get_Z_Construct_UScriptStruct_FEnvTraceData_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("EnvTraceData"), sizeof(FEnvTraceData), Get_Z_Construct_UScriptStruct_FEnvTraceData_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EnvTraceData"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FEnvTraceData>, EStructFlags(0x00000201));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bCanProjectDown, FEnvTraceData, uint8);
			UProperty* NewProp_bCanProjectDown = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bCanProjectDown"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bCanProjectDown, FEnvTraceData), 0x0000000000010001, CPP_BOOL_PROPERTY_BITMASK(bCanProjectDown, FEnvTraceData), sizeof(uint8), false);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bCanDisableTrace, FEnvTraceData, uint8);
			UProperty* NewProp_bCanDisableTrace = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bCanDisableTrace"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bCanDisableTrace, FEnvTraceData), 0x0000000000010001, CPP_BOOL_PROPERTY_BITMASK(bCanDisableTrace, FEnvTraceData), sizeof(uint8), false);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bCanTraceOnGeometry, FEnvTraceData, uint8);
			UProperty* NewProp_bCanTraceOnGeometry = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bCanTraceOnGeometry"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bCanTraceOnGeometry, FEnvTraceData), 0x0000000000010001, CPP_BOOL_PROPERTY_BITMASK(bCanTraceOnGeometry, FEnvTraceData), sizeof(uint8), false);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bCanTraceOnNavMesh, FEnvTraceData, uint8);
			UProperty* NewProp_bCanTraceOnNavMesh = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bCanTraceOnNavMesh"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bCanTraceOnNavMesh, FEnvTraceData), 0x0000000000010001, CPP_BOOL_PROPERTY_BITMASK(bCanTraceOnNavMesh, FEnvTraceData), sizeof(uint8), false);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bOnlyBlockingHits, FEnvTraceData, uint8);
			UProperty* NewProp_bOnlyBlockingHits = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bOnlyBlockingHits"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bOnlyBlockingHits, FEnvTraceData), 0x0000040000010001, CPP_BOOL_PROPERTY_BITMASK(bOnlyBlockingHits, FEnvTraceData), sizeof(uint8), false);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bTraceComplex, FEnvTraceData, uint8);
			UProperty* NewProp_bTraceComplex = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bTraceComplex"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bTraceComplex, FEnvTraceData), 0x0000040000010001, CPP_BOOL_PROPERTY_BITMASK(bTraceComplex, FEnvTraceData), sizeof(uint8), false);
			UProperty* NewProp_TraceMode = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("TraceMode"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(TraceMode, FEnvTraceData), 0x0000000000010001, Z_Construct_UEnum_AIModule_EEnvQueryTrace());
			UProperty* NewProp_TraceShape = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("TraceShape"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(TraceShape, FEnvTraceData), 0x0000000000010001, Z_Construct_UEnum_AIModule_EEnvTraceShape());
			UProperty* NewProp_SerializedChannel = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("SerializedChannel"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(SerializedChannel, FEnvTraceData), 0x0000000000010001, Z_Construct_UEnum_Engine_ECollisionChannel());
			UProperty* NewProp_TraceChannel = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("TraceChannel"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(TraceChannel, FEnvTraceData), 0x0000000000010001, Z_Construct_UEnum_Engine_ETraceTypeQuery());
			UProperty* NewProp_PostProjectionVerticalOffset = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("PostProjectionVerticalOffset"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(PostProjectionVerticalOffset, FEnvTraceData), 0x0000000000010001);
			UProperty* NewProp_ExtentZ = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ExtentZ"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(ExtentZ, FEnvTraceData), 0x0000000000010001);
			UProperty* NewProp_ExtentY = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ExtentY"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(ExtentY, FEnvTraceData), 0x0000000000010001);
			UProperty* NewProp_ExtentX = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ExtentX"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(ExtentX, FEnvTraceData), 0x0000000000010001);
			UProperty* NewProp_ProjectUp = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ProjectUp"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(ProjectUp, FEnvTraceData), 0x0000000000010001);
			UProperty* NewProp_ProjectDown = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ProjectDown"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(ProjectDown, FEnvTraceData), 0x0000000000010001);
			UProperty* NewProp_NavigationFilter = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("NavigationFilter"), RF_Public|RF_Transient|RF_Native) UClassProperty(CPP_PROPERTY_BASE(NavigationFilter, FEnvTraceData), 0x0004000000010001, Z_Construct_UClass_UNavigationQueryFilter_NoRegister());
			UProperty* NewProp_VersionNum = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("VersionNum"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(VersionNum, FEnvTraceData), 0x0000000000000000);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EnvQueryTypes.h"));
			MetaData->SetValue(NewProp_bCanProjectDown, TEXT("Category"), TEXT("Trace"));
			MetaData->SetValue(NewProp_bCanProjectDown, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EnvQueryTypes.h"));
			MetaData->SetValue(NewProp_bCanProjectDown, TEXT("ToolTip"), TEXT("if set, editor show height up/down properties for projection"));
			MetaData->SetValue(NewProp_bCanDisableTrace, TEXT("Category"), TEXT("Trace"));
			MetaData->SetValue(NewProp_bCanDisableTrace, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EnvQueryTypes.h"));
			MetaData->SetValue(NewProp_bCanDisableTrace, TEXT("ToolTip"), TEXT("if set, editor will allow"));
			MetaData->SetValue(NewProp_bCanTraceOnGeometry, TEXT("Category"), TEXT("Trace"));
			MetaData->SetValue(NewProp_bCanTraceOnGeometry, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EnvQueryTypes.h"));
			MetaData->SetValue(NewProp_bCanTraceOnGeometry, TEXT("ToolTip"), TEXT("if set, editor will allow picking geometry trace"));
			MetaData->SetValue(NewProp_bCanTraceOnNavMesh, TEXT("Category"), TEXT("Trace"));
			MetaData->SetValue(NewProp_bCanTraceOnNavMesh, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EnvQueryTypes.h"));
			MetaData->SetValue(NewProp_bCanTraceOnNavMesh, TEXT("ToolTip"), TEXT("if set, editor will allow picking navmesh trace"));
			MetaData->SetValue(NewProp_bOnlyBlockingHits, TEXT("Category"), TEXT("Trace"));
			MetaData->SetValue(NewProp_bOnlyBlockingHits, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EnvQueryTypes.h"));
			MetaData->SetValue(NewProp_bOnlyBlockingHits, TEXT("ToolTip"), TEXT("if set, trace will look only for blocking hits"));
			MetaData->SetValue(NewProp_bTraceComplex, TEXT("Category"), TEXT("Trace"));
			MetaData->SetValue(NewProp_bTraceComplex, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EnvQueryTypes.h"));
			MetaData->SetValue(NewProp_bTraceComplex, TEXT("ToolTip"), TEXT("if set, trace will run on complex collisions"));
			MetaData->SetValue(NewProp_TraceMode, TEXT("Category"), TEXT("Trace"));
			MetaData->SetValue(NewProp_TraceMode, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EnvQueryTypes.h"));
			MetaData->SetValue(NewProp_TraceMode, TEXT("ToolTip"), TEXT("shape used for geometry tracing"));
			MetaData->SetValue(NewProp_TraceShape, TEXT("Category"), TEXT("Trace"));
			MetaData->SetValue(NewProp_TraceShape, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EnvQueryTypes.h"));
			MetaData->SetValue(NewProp_TraceShape, TEXT("ToolTip"), TEXT("shape used for geometry tracing"));
			MetaData->SetValue(NewProp_SerializedChannel, TEXT("Category"), TEXT("Trace"));
			MetaData->SetValue(NewProp_SerializedChannel, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EnvQueryTypes.h"));
			MetaData->SetValue(NewProp_SerializedChannel, TEXT("ToolTip"), TEXT("geometry trace channel for serialization purposes"));
			MetaData->SetValue(NewProp_TraceChannel, TEXT("Category"), TEXT("Trace"));
			MetaData->SetValue(NewProp_TraceChannel, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EnvQueryTypes.h"));
			MetaData->SetValue(NewProp_TraceChannel, TEXT("ToolTip"), TEXT("geometry trace channel"));
			MetaData->SetValue(NewProp_PostProjectionVerticalOffset, TEXT("Category"), TEXT("Trace"));
			MetaData->SetValue(NewProp_PostProjectionVerticalOffset, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EnvQueryTypes.h"));
			MetaData->SetValue(NewProp_PostProjectionVerticalOffset, TEXT("ToolTip"), TEXT("this value will be added to resulting location's Z axis. Can be useful when\n    projecting points to navigation since navmesh is just an approximation of level\n    geometry and items may end up being under collide-able geometry which would\n    for example falsify visibility tests."));
			MetaData->SetValue(NewProp_ExtentZ, TEXT("Category"), TEXT("Trace"));
			MetaData->SetValue(NewProp_ExtentZ, TEXT("ClampMin"), TEXT("0"));
			MetaData->SetValue(NewProp_ExtentZ, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EnvQueryTypes.h"));
			MetaData->SetValue(NewProp_ExtentZ, TEXT("ToolTip"), TEXT("shape parameter for trace"));
			MetaData->SetValue(NewProp_ExtentZ, TEXT("UIMin"), TEXT("0"));
			MetaData->SetValue(NewProp_ExtentY, TEXT("Category"), TEXT("Trace"));
			MetaData->SetValue(NewProp_ExtentY, TEXT("ClampMin"), TEXT("0"));
			MetaData->SetValue(NewProp_ExtentY, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EnvQueryTypes.h"));
			MetaData->SetValue(NewProp_ExtentY, TEXT("ToolTip"), TEXT("shape parameter for trace"));
			MetaData->SetValue(NewProp_ExtentY, TEXT("UIMin"), TEXT("0"));
			MetaData->SetValue(NewProp_ExtentX, TEXT("Category"), TEXT("Trace"));
			MetaData->SetValue(NewProp_ExtentX, TEXT("ClampMin"), TEXT("0"));
			MetaData->SetValue(NewProp_ExtentX, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EnvQueryTypes.h"));
			MetaData->SetValue(NewProp_ExtentX, TEXT("ToolTip"), TEXT("shape parameter for trace"));
			MetaData->SetValue(NewProp_ExtentX, TEXT("UIMin"), TEXT("0"));
			MetaData->SetValue(NewProp_ProjectUp, TEXT("Category"), TEXT("Trace"));
			MetaData->SetValue(NewProp_ProjectUp, TEXT("ClampMin"), TEXT("0"));
			MetaData->SetValue(NewProp_ProjectUp, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EnvQueryTypes.h"));
			MetaData->SetValue(NewProp_ProjectUp, TEXT("ToolTip"), TEXT("search height: above point"));
			MetaData->SetValue(NewProp_ProjectUp, TEXT("UIMin"), TEXT("0"));
			MetaData->SetValue(NewProp_ProjectDown, TEXT("Category"), TEXT("Trace"));
			MetaData->SetValue(NewProp_ProjectDown, TEXT("ClampMin"), TEXT("0"));
			MetaData->SetValue(NewProp_ProjectDown, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EnvQueryTypes.h"));
			MetaData->SetValue(NewProp_ProjectDown, TEXT("ToolTip"), TEXT("search height: below point"));
			MetaData->SetValue(NewProp_ProjectDown, TEXT("UIMin"), TEXT("0"));
			MetaData->SetValue(NewProp_NavigationFilter, TEXT("Category"), TEXT("Trace"));
			MetaData->SetValue(NewProp_NavigationFilter, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EnvQueryTypes.h"));
			MetaData->SetValue(NewProp_NavigationFilter, TEXT("ToolTip"), TEXT("navigation filter for tracing"));
			MetaData->SetValue(NewProp_VersionNum, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EnvQueryTypes.h"));
			MetaData->SetValue(NewProp_VersionNum, TEXT("ToolTip"), TEXT("version number for updates"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FEnvTraceData_CRC() { return 1867275490U; }
	UScriptStruct* Z_Construct_UScriptStruct_FEnvDirection()
	{
		UPackage* Outer=Z_Construct_UPackage_AIModule();
		extern uint32 Get_Z_Construct_UScriptStruct_FEnvDirection_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("EnvDirection"), sizeof(FEnvDirection), Get_Z_Construct_UScriptStruct_FEnvDirection_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EnvDirection"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FEnvDirection>, EStructFlags(0x00000201));
			UProperty* NewProp_DirMode = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("DirMode"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(DirMode, FEnvDirection), 0x0000000000010001, Z_Construct_UEnum_AIModule_EEnvDirection());
			UProperty* NewProp_Rotation = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Rotation"), RF_Public|RF_Transient|RF_Native) UClassProperty(CPP_PROPERTY_BASE(Rotation, FEnvDirection), 0x0004000000010001, Z_Construct_UClass_UEnvQueryContext_NoRegister());
			UProperty* NewProp_LineTo = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("LineTo"), RF_Public|RF_Transient|RF_Native) UClassProperty(CPP_PROPERTY_BASE(LineTo, FEnvDirection), 0x0004000000010001, Z_Construct_UClass_UEnvQueryContext_NoRegister());
			UProperty* NewProp_LineFrom = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("LineFrom"), RF_Public|RF_Transient|RF_Native) UClassProperty(CPP_PROPERTY_BASE(LineFrom, FEnvDirection), 0x0004000000010001, Z_Construct_UClass_UEnvQueryContext_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EnvQueryTypes.h"));
			MetaData->SetValue(NewProp_DirMode, TEXT("Category"), TEXT("Direction"));
			MetaData->SetValue(NewProp_DirMode, TEXT("DisplayName"), TEXT("Mode"));
			MetaData->SetValue(NewProp_DirMode, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EnvQueryTypes.h"));
			MetaData->SetValue(NewProp_DirMode, TEXT("ToolTip"), TEXT("defines direction of second line used by test"));
			MetaData->SetValue(NewProp_Rotation, TEXT("Category"), TEXT("Direction"));
			MetaData->SetValue(NewProp_Rotation, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EnvQueryTypes.h"));
			MetaData->SetValue(NewProp_Rotation, TEXT("ToolTip"), TEXT("line A: direction context"));
			MetaData->SetValue(NewProp_LineTo, TEXT("Category"), TEXT("Direction"));
			MetaData->SetValue(NewProp_LineTo, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EnvQueryTypes.h"));
			MetaData->SetValue(NewProp_LineTo, TEXT("ToolTip"), TEXT("line A: finish context"));
			MetaData->SetValue(NewProp_LineFrom, TEXT("Category"), TEXT("Direction"));
			MetaData->SetValue(NewProp_LineFrom, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EnvQueryTypes.h"));
			MetaData->SetValue(NewProp_LineFrom, TEXT("ToolTip"), TEXT("line A: start context"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FEnvDirection_CRC() { return 3086023167U; }
	UScriptStruct* Z_Construct_UScriptStruct_FEnvNamedValue()
	{
		UPackage* Outer=Z_Construct_UPackage_AIModule();
		extern uint32 Get_Z_Construct_UScriptStruct_FEnvNamedValue_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("EnvNamedValue"), sizeof(FEnvNamedValue), Get_Z_Construct_UScriptStruct_FEnvNamedValue_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EnvNamedValue"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FEnvNamedValue>, EStructFlags(0x00000201));
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Value"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(Value, FEnvNamedValue), 0x0000000000000005);
			UProperty* NewProp_ParamType = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ParamType"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(ParamType, FEnvNamedValue), 0x0000000000000005, Z_Construct_UEnum_AIModule_EEnvQueryParam());
			UProperty* NewProp_ParamName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ParamName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(ParamName, FEnvNamedValue), 0x0000000000000005);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EnvQueryTypes.h"));
			MetaData->SetValue(NewProp_Value, TEXT("Category"), TEXT("Param"));
			MetaData->SetValue(NewProp_Value, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EnvQueryTypes.h"));
			MetaData->SetValue(NewProp_ParamType, TEXT("Category"), TEXT("Param"));
			MetaData->SetValue(NewProp_ParamType, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EnvQueryTypes.h"));
			MetaData->SetValue(NewProp_ParamName, TEXT("Category"), TEXT("Param"));
			MetaData->SetValue(NewProp_ParamName, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EnvQueryTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FEnvNamedValue_CRC() { return 2283754781U; }
	UClass* Z_Construct_UClass_UEnvQueryTypes_NoRegister()
	{
		return UEnvQueryTypes::StaticClass();
	}
	UClass* Z_Construct_UClass_UEnvQueryTypes()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage_AIModule();
			OuterClass = UEnvQueryTypes::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100081;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("EnvironmentQuery/EnvQueryTypes.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EnvQueryTypes.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("END DEPRECATED SUPPORT"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UEnvQueryTypes(Z_Construct_UClass_UEnvQueryTypes, TEXT("UEnvQueryTypes"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UEnvQueryTypes);
	UClass* Z_Construct_UClass_UBTTask_RunEQSQuery_NoRegister()
	{
		return UBTTask_RunEQSQuery::StaticClass();
	}
	UClass* Z_Construct_UClass_UBTTask_RunEQSQuery()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UBTTask_BlackboardBase();
			Z_Construct_UPackage_AIModule();
			OuterClass = UBTTask_RunEQSQuery::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_RunMode = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("RunMode"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(RunMode, UBTTask_RunEQSQuery), 0x0000000000000001, Z_Construct_UEnum_AIModule_EEnvQueryRunMode());
				UProperty* NewProp_QueryParams = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("QueryParams"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(QueryParams, UBTTask_RunEQSQuery), 0x0000000000000001);
				UProperty* NewProp_QueryParams_Inner = new(EC_InternalUseOnlyConstructor, NewProp_QueryParams, TEXT("QueryParams"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FEnvNamedValue());
				UProperty* NewProp_QueryTemplate = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("QueryTemplate"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(QueryTemplate, UBTTask_RunEQSQuery), 0x0000000000000001, Z_Construct_UClass_UEnvQuery_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("BehaviorTree/Tasks/BTTask_RunEQSQuery.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Tasks/BTTask_RunEQSQuery.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Run Environment Query System Query task node.\nRuns the specified environment query when executed."));
				MetaData->SetValue(NewProp_RunMode, TEXT("Category"), TEXT("Node"));
				MetaData->SetValue(NewProp_RunMode, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Tasks/BTTask_RunEQSQuery.h"));
				MetaData->SetValue(NewProp_RunMode, TEXT("ToolTip"), TEXT("determines which item will be stored (All = only first matching)"));
				MetaData->SetValue(NewProp_QueryParams, TEXT("Category"), TEXT("Node"));
				MetaData->SetValue(NewProp_QueryParams, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Tasks/BTTask_RunEQSQuery.h"));
				MetaData->SetValue(NewProp_QueryParams, TEXT("ToolTip"), TEXT("optional parameters for query"));
				MetaData->SetValue(NewProp_QueryTemplate, TEXT("Category"), TEXT("Node"));
				MetaData->SetValue(NewProp_QueryTemplate, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Tasks/BTTask_RunEQSQuery.h"));
				MetaData->SetValue(NewProp_QueryTemplate, TEXT("ToolTip"), TEXT("query to run"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UBTTask_RunEQSQuery(Z_Construct_UClass_UBTTask_RunEQSQuery, TEXT("UBTTask_RunEQSQuery"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UBTTask_RunEQSQuery);
	UFunction* Z_Construct_UFunction_UBTTask_BlueprintBase_FinishAbort()
	{
		UObject* Outer=Z_Construct_UClass_UBTTask_BlueprintBase();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("FinishAbort"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04080401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|BehaviorTree"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Tasks/BTTask_BlueprintBase.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("aborts task execution"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UBTTask_BlueprintBase_FinishExecute()
	{
		struct BTTask_BlueprintBase_eventFinishExecute_Parms
		{
			bool bSuccess;
		};
		UObject* Outer=Z_Construct_UClass_UBTTask_BlueprintBase();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("FinishExecute"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04080401, 65535, sizeof(BTTask_BlueprintBase_eventFinishExecute_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bSuccess, BTTask_BlueprintBase_eventFinishExecute_Parms, bool);
			UProperty* NewProp_bSuccess = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("bSuccess"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bSuccess, BTTask_BlueprintBase_eventFinishExecute_Parms), 0x0000000000000080, CPP_BOOL_PROPERTY_BITMASK(bSuccess, BTTask_BlueprintBase_eventFinishExecute_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|BehaviorTree"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Tasks/BTTask_BlueprintBase.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("finishes task execution with Success or Fail result"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UBTTask_BlueprintBase_IsTaskAborting()
	{
		struct BTTask_BlueprintBase_eventIsTaskAborting_Parms
		{
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UBTTask_BlueprintBase();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("IsTaskAborting"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x54080401, 65535, sizeof(BTTask_BlueprintBase_eventIsTaskAborting_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, BTTask_BlueprintBase_eventIsTaskAborting_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, BTTask_BlueprintBase_eventIsTaskAborting_Parms), 0x0000000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, BTTask_BlueprintBase_eventIsTaskAborting_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|BehaviorTree"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Tasks/BTTask_BlueprintBase.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("check if task is currently being aborted"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UBTTask_BlueprintBase_IsTaskExecuting()
	{
		struct BTTask_BlueprintBase_eventIsTaskExecuting_Parms
		{
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UBTTask_BlueprintBase();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("IsTaskExecuting"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x54080401, 65535, sizeof(BTTask_BlueprintBase_eventIsTaskExecuting_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, BTTask_BlueprintBase_eventIsTaskExecuting_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, BTTask_BlueprintBase_eventIsTaskExecuting_Parms), 0x0000000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, BTTask_BlueprintBase_eventIsTaskExecuting_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|BehaviorTree"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Tasks/BTTask_BlueprintBase.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("check if task is currently being executed"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UBTTask_BlueprintBase_ReceiveAbort()
	{
		UObject* Outer=Z_Construct_UClass_UBTTask_BlueprintBase();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ReceiveAbort"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x08080800, 65535, sizeof(BTTask_BlueprintBase_eventReceiveAbort_Parms));
			UProperty* NewProp_OwnerActor = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OwnerActor"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(OwnerActor, BTTask_BlueprintBase_eventReceiveAbort_Parms), 0x0000000000000080, Z_Construct_UClass_AActor_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Tasks/BTTask_BlueprintBase.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("if blueprint graph contains this event, task will stay active until FinishAbort is called\n    @Note that if both generic and AI event versions are implemented only the more\n    suitable one will be called, meaning the AI version if called for AI, generic one otherwise"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UBTTask_BlueprintBase_ReceiveAbortAI()
	{
		UObject* Outer=Z_Construct_UClass_UBTTask_BlueprintBase();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ReceiveAbortAI"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x08080800, 65535, sizeof(BTTask_BlueprintBase_eventReceiveAbortAI_Parms));
			UProperty* NewProp_ControlledPawn = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ControlledPawn"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(ControlledPawn, BTTask_BlueprintBase_eventReceiveAbortAI_Parms), 0x0000000000000080, Z_Construct_UClass_APawn_NoRegister());
			UProperty* NewProp_OwnerController = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OwnerController"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(OwnerController, BTTask_BlueprintBase_eventReceiveAbortAI_Parms), 0x0000000000000080, Z_Construct_UClass_AAIController_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Tasks/BTTask_BlueprintBase.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Alternative AI version of ReceiveAbort\n    @see ReceiveAbort for more details\n    @Note that if both generic and AI event versions are implemented only the more\n    suitable one will be called, meaning the AI version if called for AI, generic one otherwise"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UBTTask_BlueprintBase_ReceiveExecute()
	{
		UObject* Outer=Z_Construct_UClass_UBTTask_BlueprintBase();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ReceiveExecute"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x08080800, 65535, sizeof(BTTask_BlueprintBase_eventReceiveExecute_Parms));
			UProperty* NewProp_OwnerActor = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OwnerActor"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(OwnerActor, BTTask_BlueprintBase_eventReceiveExecute_Parms), 0x0000000000000080, Z_Construct_UClass_AActor_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Tasks/BTTask_BlueprintBase.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("entry point, task will stay active until FinishExecute is called.\n    @Note that if both generic and AI event versions are implemented only the more\n    suitable one will be called, meaning the AI version if called for AI, generic one otherwise"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UBTTask_BlueprintBase_ReceiveExecuteAI()
	{
		UObject* Outer=Z_Construct_UClass_UBTTask_BlueprintBase();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ReceiveExecuteAI"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x08080800, 65535, sizeof(BTTask_BlueprintBase_eventReceiveExecuteAI_Parms));
			UProperty* NewProp_ControlledPawn = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ControlledPawn"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(ControlledPawn, BTTask_BlueprintBase_eventReceiveExecuteAI_Parms), 0x0000000000000080, Z_Construct_UClass_APawn_NoRegister());
			UProperty* NewProp_OwnerController = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OwnerController"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(OwnerController, BTTask_BlueprintBase_eventReceiveExecuteAI_Parms), 0x0000000000000080, Z_Construct_UClass_AAIController_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Tasks/BTTask_BlueprintBase.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Alternative AI version of ReceiveExecute\n     @see ReceiveExecute for more details\n    @Note that if both generic and AI event versions are implemented only the more\n    suitable one will be called, meaning the AI version if called for AI, generic one otherwise"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UBTTask_BlueprintBase_ReceiveTick()
	{
		UObject* Outer=Z_Construct_UClass_UBTTask_BlueprintBase();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ReceiveTick"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x08080800, 65535, sizeof(BTTask_BlueprintBase_eventReceiveTick_Parms));
			UProperty* NewProp_DeltaSeconds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("DeltaSeconds"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(DeltaSeconds, BTTask_BlueprintBase_eventReceiveTick_Parms), 0x0000000000000080);
			UProperty* NewProp_OwnerActor = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OwnerActor"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(OwnerActor, BTTask_BlueprintBase_eventReceiveTick_Parms), 0x0000000000000080, Z_Construct_UClass_AActor_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Tasks/BTTask_BlueprintBase.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("tick function\n    @Note that if both generic and AI event versions are implemented only the more\n    suitable one will be called, meaning the AI version if called for AI, generic one otherwise"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UBTTask_BlueprintBase_ReceiveTickAI()
	{
		UObject* Outer=Z_Construct_UClass_UBTTask_BlueprintBase();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ReceiveTickAI"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x08080800, 65535, sizeof(BTTask_BlueprintBase_eventReceiveTickAI_Parms));
			UProperty* NewProp_DeltaSeconds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("DeltaSeconds"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(DeltaSeconds, BTTask_BlueprintBase_eventReceiveTickAI_Parms), 0x0000000000000080);
			UProperty* NewProp_ControlledPawn = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ControlledPawn"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(ControlledPawn, BTTask_BlueprintBase_eventReceiveTickAI_Parms), 0x0000000000000080, Z_Construct_UClass_APawn_NoRegister());
			UProperty* NewProp_OwnerController = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OwnerController"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(OwnerController, BTTask_BlueprintBase_eventReceiveTickAI_Parms), 0x0000000000000080, Z_Construct_UClass_AAIController_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Tasks/BTTask_BlueprintBase.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Alternative AI version of tick function.\n    @see ReceiveTick for more details\n    @Note that if both generic and AI event versions are implemented only the more\n    suitable one will be called, meaning the AI version if called for AI, generic one otherwise"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UBTTask_BlueprintBase_SetFinishOnMessage()
	{
		struct BTTask_BlueprintBase_eventSetFinishOnMessage_Parms
		{
			FName MessageName;
		};
		UObject* Outer=Z_Construct_UClass_UBTTask_BlueprintBase();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetFinishOnMessage"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04080401, 65535, sizeof(BTTask_BlueprintBase_eventSetFinishOnMessage_Parms));
			UProperty* NewProp_MessageName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("MessageName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(MessageName, BTTask_BlueprintBase_eventSetFinishOnMessage_Parms), 0x0000000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|BehaviorTree"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Tasks/BTTask_BlueprintBase.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("task execution will be finished (with result 'Success') after receiving specified message"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UBTTask_BlueprintBase_SetFinishOnMessageWithId()
	{
		struct BTTask_BlueprintBase_eventSetFinishOnMessageWithId_Parms
		{
			FName MessageName;
			int32 RequestID;
		};
		UObject* Outer=Z_Construct_UClass_UBTTask_BlueprintBase();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetFinishOnMessageWithId"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04080401, 65535, sizeof(BTTask_BlueprintBase_eventSetFinishOnMessageWithId_Parms));
			UProperty* NewProp_RequestID = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RequestID"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(RequestID, BTTask_BlueprintBase_eventSetFinishOnMessageWithId_Parms), 0x0000000000000080);
			UProperty* NewProp_MessageName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("MessageName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(MessageName, BTTask_BlueprintBase_eventSetFinishOnMessageWithId_Parms), 0x0000000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|BehaviorTree"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_RequestID"), TEXT("-1"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Tasks/BTTask_BlueprintBase.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("task execution will be finished (with result 'Success') after receiving specified message with indicated ID"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UBTTask_BlueprintBase_NoRegister()
	{
		return UBTTask_BlueprintBase::StaticClass();
	}
	UClass* Z_Construct_UClass_UBTTask_BlueprintBase()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UBTTaskNode();
			Z_Construct_UPackage_AIModule();
			OuterClass = UBTTask_BlueprintBase::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100081;

				OuterClass->LinkChild(Z_Construct_UFunction_UBTTask_BlueprintBase_FinishAbort());
				OuterClass->LinkChild(Z_Construct_UFunction_UBTTask_BlueprintBase_FinishExecute());
				OuterClass->LinkChild(Z_Construct_UFunction_UBTTask_BlueprintBase_IsTaskAborting());
				OuterClass->LinkChild(Z_Construct_UFunction_UBTTask_BlueprintBase_IsTaskExecuting());
				OuterClass->LinkChild(Z_Construct_UFunction_UBTTask_BlueprintBase_ReceiveAbort());
				OuterClass->LinkChild(Z_Construct_UFunction_UBTTask_BlueprintBase_ReceiveAbortAI());
				OuterClass->LinkChild(Z_Construct_UFunction_UBTTask_BlueprintBase_ReceiveExecute());
				OuterClass->LinkChild(Z_Construct_UFunction_UBTTask_BlueprintBase_ReceiveExecuteAI());
				OuterClass->LinkChild(Z_Construct_UFunction_UBTTask_BlueprintBase_ReceiveTick());
				OuterClass->LinkChild(Z_Construct_UFunction_UBTTask_BlueprintBase_ReceiveTickAI());
				OuterClass->LinkChild(Z_Construct_UFunction_UBTTask_BlueprintBase_SetFinishOnMessage());
				OuterClass->LinkChild(Z_Construct_UFunction_UBTTask_BlueprintBase_SetFinishOnMessageWithId());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bShowPropertyDetails, UBTTask_BlueprintBase, uint8);
				UProperty* NewProp_bShowPropertyDetails = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bShowPropertyDetails"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bShowPropertyDetails, UBTTask_BlueprintBase), 0x0000080000000801, CPP_BOOL_PROPERTY_BITMASK(bShowPropertyDetails, UBTTask_BlueprintBase), sizeof(uint8), false);
				UProperty* NewProp_ActorOwner = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ActorOwner"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(ActorOwner, UBTTask_BlueprintBase), 0x0000080000002000, Z_Construct_UClass_AActor_NoRegister());
				UProperty* NewProp_AIOwner = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AIOwner"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(AIOwner, UBTTask_BlueprintBase), 0x0000080000002000, Z_Construct_UClass_AAIController_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UBTTask_BlueprintBase_FinishAbort()); // 3462167575
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UBTTask_BlueprintBase_FinishExecute()); // 1803820559
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UBTTask_BlueprintBase_IsTaskAborting()); // 178507832
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UBTTask_BlueprintBase_IsTaskExecuting()); // 3635566489
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UBTTask_BlueprintBase_ReceiveAbort()); // 2600694741
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UBTTask_BlueprintBase_ReceiveAbortAI()); // 934193396
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UBTTask_BlueprintBase_ReceiveExecute()); // 1040342363
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UBTTask_BlueprintBase_ReceiveExecuteAI()); // 3715219232
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UBTTask_BlueprintBase_ReceiveTick()); // 2477366574
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UBTTask_BlueprintBase_ReceiveTickAI()); // 702515506
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UBTTask_BlueprintBase_SetFinishOnMessage()); // 332748467
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UBTTask_BlueprintBase_SetFinishOnMessageWithId()); // 4228326917
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("BehaviorTree/Tasks/BTTask_BlueprintBase.h"));
				MetaData->SetValue(OuterClass, TEXT("IsBlueprintBase"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Tasks/BTTask_BlueprintBase.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Base class for blueprint based task nodes. Do NOT use it for creating native c++ classes!\n\nWhen task receives Abort event, all latent actions associated this instance are being removed.\nThis prevents from resuming activity started by Execute, but does not handle external events.\nPlease use them safely (unregister at abort) and call IsTaskExecuting() when in doubt."));
				MetaData->SetValue(NewProp_bShowPropertyDetails, TEXT("Category"), TEXT("Description"));
				MetaData->SetValue(NewProp_bShowPropertyDetails, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Tasks/BTTask_BlueprintBase.h"));
				MetaData->SetValue(NewProp_bShowPropertyDetails, TEXT("ToolTip"), TEXT("show detailed information about properties"));
				MetaData->SetValue(NewProp_ActorOwner, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Tasks/BTTask_BlueprintBase.h"));
				MetaData->SetValue(NewProp_ActorOwner, TEXT("ToolTip"), TEXT("Cached actor owner of BehaviorTreeComponent."));
				MetaData->SetValue(NewProp_AIOwner, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Tasks/BTTask_BlueprintBase.h"));
				MetaData->SetValue(NewProp_AIOwner, TEXT("ToolTip"), TEXT("Cached AIController owner of BehaviorTreeComponent."));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UBTTask_BlueprintBase(Z_Construct_UClass_UBTTask_BlueprintBase, TEXT("UBTTask_BlueprintBase"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UBTTask_BlueprintBase);
	UClass* Z_Construct_UClass_UBTTask_MakeNoise_NoRegister()
	{
		return UBTTask_MakeNoise::StaticClass();
	}
	UClass* Z_Construct_UClass_UBTTask_MakeNoise()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UBTTaskNode();
			Z_Construct_UPackage_AIModule();
			OuterClass = UBTTask_MakeNoise::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_Loudnes = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Loudnes"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(Loudnes, UBTTask_MakeNoise), 0x0000000000000001);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("BehaviorTree/Tasks/BTTask_MakeNoise.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Tasks/BTTask_MakeNoise.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Make Noise task node.\nA task node that calls MakeNoise() on this Pawn when executed."));
				MetaData->SetValue(NewProp_Loudnes, TEXT("Category"), TEXT("Node"));
				MetaData->SetValue(NewProp_Loudnes, TEXT("ClampMax"), TEXT("1"));
				MetaData->SetValue(NewProp_Loudnes, TEXT("ClampMin"), TEXT("0"));
				MetaData->SetValue(NewProp_Loudnes, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Tasks/BTTask_MakeNoise.h"));
				MetaData->SetValue(NewProp_Loudnes, TEXT("ToolTip"), TEXT("Loudnes of generated noise"));
				MetaData->SetValue(NewProp_Loudnes, TEXT("UIMax"), TEXT("1"));
				MetaData->SetValue(NewProp_Loudnes, TEXT("UIMin"), TEXT("0"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UBTTask_MakeNoise(Z_Construct_UClass_UBTTask_MakeNoise, TEXT("UBTTask_MakeNoise"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UBTTask_MakeNoise);
	UEnum* Z_Construct_UEnum_AIModule_EPawnActionFailHandling()
	{
		UPackage* Outer=Z_Construct_UPackage_AIModule();
		extern uint32 Get_Z_Construct_UEnum_AIModule_EPawnActionFailHandling_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("EPawnActionFailHandling"), 0, Get_Z_Construct_UEnum_AIModule_EPawnActionFailHandling_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EPawnActionFailHandling"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EPawnActionFailHandling::RequireSuccess")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EPawnActionFailHandling::IgnoreFailure")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EPawnActionFailHandling::EPawnActionFailHandling_MAX")), 2));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/Actions/PawnAction.h"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_AIModule_EPawnActionFailHandling_CRC() { return 3144720351U; }
	UEnum* Z_Construct_UEnum_AIModule_EPawnSubActionTriggeringPolicy()
	{
		UPackage* Outer=Z_Construct_UPackage_AIModule();
		extern uint32 Get_Z_Construct_UEnum_AIModule_EPawnSubActionTriggeringPolicy_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("EPawnSubActionTriggeringPolicy"), 0, Get_Z_Construct_UEnum_AIModule_EPawnSubActionTriggeringPolicy_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EPawnSubActionTriggeringPolicy"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EPawnSubActionTriggeringPolicy::CopyBeforeTriggering")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EPawnSubActionTriggeringPolicy::ReuseInstances")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EPawnSubActionTriggeringPolicy::EPawnSubActionTriggeringPolicy_MAX")), 2));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/Actions/PawnAction.h"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_AIModule_EPawnSubActionTriggeringPolicy_CRC() { return 4087227579U; }
	UFunction* Z_Construct_UFunction_UPawnAction_CreateActionInstance()
	{
		struct PawnAction_eventCreateActionInstance_Parms
		{
			UObject* WorldContextObject;
			TSubclassOf<UPawnAction>  ActionClass;
			UPawnAction* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UPawnAction();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("CreateActionInstance"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(PawnAction_eventCreateActionInstance_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, PawnAction_eventCreateActionInstance_Parms), 0x0000000000000580, Z_Construct_UClass_UPawnAction_NoRegister());
			UProperty* NewProp_ActionClass = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ActionClass"), RF_Public|RF_Transient|RF_Native) UClassProperty(CPP_PROPERTY_BASE(ActionClass, PawnAction_eventCreateActionInstance_Parms), 0x0004000000000080, Z_Construct_UClass_UPawnAction_NoRegister());
			UProperty* NewProp_WorldContextObject = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("WorldContextObject"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(WorldContextObject, PawnAction_eventCreateActionInstance_Parms), 0x0000000000000080, Z_Construct_UClass_UObject_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|PawnActions"));
			MetaData->SetValue(ReturnFunction, TEXT("DefaultToSelf"), TEXT("WorldContextObject"));
			MetaData->SetValue(ReturnFunction, TEXT("HidePin"), TEXT("WorldContextObject"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/Actions/PawnAction.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UPawnAction_Finish()
	{
		struct PawnAction_eventFinish_Parms
		{
			TEnumAsByte<EPawnActionResult::Type> WithResult;
		};
		UObject* Outer=Z_Construct_UClass_UPawnAction();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Finish"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04080400, 65535, sizeof(PawnAction_eventFinish_Parms));
			UProperty* NewProp_WithResult = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("WithResult"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(WithResult, PawnAction_eventFinish_Parms), 0x0000000000000080, Z_Construct_UEnum_AIModule_EPawnActionResult());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|PawnActions"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/Actions/PawnAction.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UPawnAction_GetActionPriority()
	{
		struct PawnAction_eventGetActionPriority_Parms
		{
			TEnumAsByte<EAIRequestPriority::Type> ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UPawnAction();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetActionPriority"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x14020401, 65535, sizeof(PawnAction_eventGetActionPriority_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(ReturnValue, PawnAction_eventGetActionPriority_Parms), 0x0000000000000580, Z_Construct_UEnum_AIModule_EAIRequestPriority());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|PawnActions"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/Actions/PawnAction.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Blueprint interface"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UPawnAction_NoRegister()
	{
		return UPawnAction::StaticClass();
	}
	UClass* Z_Construct_UClass_UPawnAction()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage_AIModule();
			OuterClass = UPawnAction::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20901081;

				OuterClass->LinkChild(Z_Construct_UFunction_UPawnAction_CreateActionInstance());
				OuterClass->LinkChild(Z_Construct_UFunction_UPawnAction_Finish());
				OuterClass->LinkChild(Z_Construct_UFunction_UPawnAction_GetActionPriority());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bShouldPauseMovement, UPawnAction, uint8);
				UProperty* NewProp_bShouldPauseMovement = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bShouldPauseMovement"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bShouldPauseMovement, UPawnAction), 0x0000080000010005, CPP_BOOL_PROPERTY_BITMASK(bShouldPauseMovement, UPawnAction), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bReplaceActiveSameClassInstance, UPawnAction, uint8);
				UProperty* NewProp_bReplaceActiveSameClassInstance = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bReplaceActiveSameClassInstance"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bReplaceActiveSameClassInstance, UPawnAction), 0x0000080000010005, CPP_BOOL_PROPERTY_BITMASK(bReplaceActiveSameClassInstance, UPawnAction), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bAllowNewSameClassInstance, UPawnAction, uint8);
				UProperty* NewProp_bAllowNewSameClassInstance = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bAllowNewSameClassInstance"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bAllowNewSameClassInstance, UPawnAction), 0x0000080000010015, CPP_BOOL_PROPERTY_BITMASK(bAllowNewSameClassInstance, UPawnAction), sizeof(uint8), false);
				UProperty* NewProp_BrainComp = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("BrainComp"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(BrainComp, UPawnAction), 0x0000080000082008, Z_Construct_UClass_UBrainComponent_NoRegister());
				UProperty* NewProp_Instigator = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Instigator"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(Instigator, UPawnAction), 0x0000000000002000, Z_Construct_UClass_UObject_NoRegister());
				UProperty* NewProp_OwnerComponent = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OwnerComponent"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(OwnerComponent, UPawnAction), 0x0000000000082008, Z_Construct_UClass_UPawnActionsComponent_NoRegister());
				UProperty* NewProp_ParentAction = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ParentAction"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(ParentAction, UPawnAction), 0x0000000000002000, Z_Construct_UClass_UPawnAction_NoRegister());
				UProperty* NewProp_ChildAction = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ChildAction"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(ChildAction, UPawnAction), 0x0000000000002000, Z_Construct_UClass_UPawnAction_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UPawnAction_CreateActionInstance()); // 2498120281
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UPawnAction_Finish()); // 1597170395
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UPawnAction_GetActionPriority()); // 1355055629
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Actions/PawnAction.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Actions/PawnAction.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Things to remember:\n* Actions are created paused"));
				MetaData->SetValue(NewProp_bShouldPauseMovement, TEXT("Category"), TEXT("PawnAction"));
				MetaData->SetValue(NewProp_bShouldPauseMovement, TEXT("ModuleRelativePath"), TEXT("Classes/Actions/PawnAction.h"));
				MetaData->SetValue(NewProp_bShouldPauseMovement, TEXT("ToolTip"), TEXT("this is a temporary solution to allow having movement action running in background while there's\n    another action on top doing its thing\n    @note should go away once AI resource locking comes on-line"));
				MetaData->SetValue(NewProp_bReplaceActiveSameClassInstance, TEXT("Category"), TEXT("PawnAction"));
				MetaData->SetValue(NewProp_bReplaceActiveSameClassInstance, TEXT("ModuleRelativePath"), TEXT("Classes/Actions/PawnAction.h"));
				MetaData->SetValue(NewProp_bReplaceActiveSameClassInstance, TEXT("ToolTip"), TEXT("if this is TRUE, when we try to push a new instance of an action who has the\n    same class as the action on the top of the stack, pop the one on the stack, and push the new one\n    NOTE: This trumps bAllowNewClassInstance (e.g. if this is true and bAllowNewClassInstance\n    is false the active instance will still be replaced)"));
				MetaData->SetValue(NewProp_bAllowNewSameClassInstance, TEXT("Category"), TEXT("PawnAction"));
				MetaData->SetValue(NewProp_bAllowNewSameClassInstance, TEXT("ModuleRelativePath"), TEXT("Classes/Actions/PawnAction.h"));
				MetaData->SetValue(NewProp_bAllowNewSameClassInstance, TEXT("ToolTip"), TEXT("if this is FALSE and we're trying to push a new instance of a given class,\n    but the top of the stack is already an instance of that class ignore the attempted push"));
				MetaData->SetValue(NewProp_BrainComp, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_BrainComp, TEXT("ModuleRelativePath"), TEXT("Classes/Actions/PawnAction.h"));
				MetaData->SetValue(NewProp_BrainComp, TEXT("ToolTip"), TEXT("@Note: THIS IS HERE _ONLY_ BECAUSE OF THE WAY AI MESSAGING IS CURRENTLY IMPLEMENTED. WILL GO AWAY!"));
				MetaData->SetValue(NewProp_Instigator, TEXT("ModuleRelativePath"), TEXT("Classes/Actions/PawnAction.h"));
				MetaData->SetValue(NewProp_Instigator, TEXT("ToolTip"), TEXT("indicates an object that caused this action. Used for mass removal of actions\n    by specific object"));
				MetaData->SetValue(NewProp_OwnerComponent, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_OwnerComponent, TEXT("ModuleRelativePath"), TEXT("Classes/Actions/PawnAction.h"));
				MetaData->SetValue(NewProp_OwnerComponent, TEXT("ToolTip"), TEXT("Extra reference to the component this action is being governed by"));
				MetaData->SetValue(NewProp_ParentAction, TEXT("ModuleRelativePath"), TEXT("Classes/Actions/PawnAction.h"));
				MetaData->SetValue(NewProp_ChildAction, TEXT("ModuleRelativePath"), TEXT("Classes/Actions/PawnAction.h"));
				MetaData->SetValue(NewProp_ChildAction, TEXT("ToolTip"), TEXT("Current child node executing on top of this Action"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UPawnAction(Z_Construct_UClass_UPawnAction, TEXT("UPawnAction"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UPawnAction);
	UClass* Z_Construct_UClass_UBTTask_PawnActionBase_NoRegister()
	{
		return UBTTask_PawnActionBase::StaticClass();
	}
	UClass* Z_Construct_UClass_UBTTask_PawnActionBase()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UBTTaskNode();
			Z_Construct_UPackage_AIModule();
			OuterClass = UBTTask_PawnActionBase::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100081;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("BehaviorTree/Tasks/BTTask_PawnActionBase.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Tasks/BTTask_PawnActionBase.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Base class for managing pawn actions\n\nTask will set itself as action observer before pushing it to AI Controller,\noverride OnActionEvent if you need any special event handling.\n\nPlease use result returned by PushAction for ExecuteTask function."));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UBTTask_PawnActionBase(Z_Construct_UClass_UBTTask_PawnActionBase, TEXT("UBTTask_PawnActionBase"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UBTTask_PawnActionBase);
	UClass* Z_Construct_UClass_UBTTask_PushPawnAction_NoRegister()
	{
		return UBTTask_PushPawnAction::StaticClass();
	}
	UClass* Z_Construct_UClass_UBTTask_PushPawnAction()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UBTTask_PawnActionBase();
			Z_Construct_UPackage_AIModule();
			OuterClass = UBTTask_PushPawnAction::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_Action = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Action"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(Action, UBTTask_PushPawnAction), 0x0002080000080009, Z_Construct_UClass_UPawnAction_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("BehaviorTree/Tasks/BTTask_PushPawnAction.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Tasks/BTTask_PushPawnAction.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Action task node.\nPush pawn action to controller."));
				MetaData->SetValue(NewProp_Action, TEXT("Category"), TEXT("Action"));
				MetaData->SetValue(NewProp_Action, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_Action, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Tasks/BTTask_PushPawnAction.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UBTTask_PushPawnAction(Z_Construct_UClass_UBTTask_PushPawnAction, TEXT("UBTTask_PushPawnAction"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UBTTask_PushPawnAction);
	UClass* Z_Construct_UClass_UBTTask_PlayAnimation_NoRegister()
	{
		return UBTTask_PlayAnimation::StaticClass();
	}
	UClass* Z_Construct_UClass_UBTTask_PlayAnimation()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UBTTaskNode();
			Z_Construct_UPackage_AIModule();
			OuterClass = UBTTask_PlayAnimation::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_CachedSkelMesh = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CachedSkelMesh"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(CachedSkelMesh, UBTTask_PlayAnimation), 0x0000000000080008, Z_Construct_UClass_USkeletalMeshComponent_NoRegister());
				UProperty* NewProp_MyOwnerComp = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MyOwnerComp"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(MyOwnerComp, UBTTask_PlayAnimation), 0x0000000000080008, Z_Construct_UClass_UBehaviorTreeComponent_NoRegister());
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bNonBlocking, UBTTask_PlayAnimation, uint8);
				UProperty* NewProp_bNonBlocking = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bNonBlocking"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bNonBlocking, UBTTask_PlayAnimation), 0x0000000000000001, CPP_BOOL_PROPERTY_BITMASK(bNonBlocking, UBTTask_PlayAnimation), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bLooping, UBTTask_PlayAnimation, uint8);
				UProperty* NewProp_bLooping = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bLooping"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bLooping, UBTTask_PlayAnimation), 0x0000000000000001, CPP_BOOL_PROPERTY_BITMASK(bLooping, UBTTask_PlayAnimation), sizeof(uint8), false);
				UProperty* NewProp_AnimationToPlay = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AnimationToPlay"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(AnimationToPlay, UBTTask_PlayAnimation), 0x0000000000000001, Z_Construct_UClass_UAnimationAsset_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("BehaviorTree/Tasks/BTTask_PlayAnimation.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Tasks/BTTask_PlayAnimation.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Play indicated AnimationAsset on Pawn controlled by BT\nNote that this node is generic and is handing multiple special cases,\nIf you want a more efficient solution you'll need to implement it yourself (or wait for our BTTask_PlayCharacterAnimation)"));
				MetaData->SetValue(NewProp_CachedSkelMesh, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_CachedSkelMesh, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Tasks/BTTask_PlayAnimation.h"));
				MetaData->SetValue(NewProp_MyOwnerComp, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_MyOwnerComp, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Tasks/BTTask_PlayAnimation.h"));
				MetaData->SetValue(NewProp_bNonBlocking, TEXT("Category"), TEXT("Node"));
				MetaData->SetValue(NewProp_bNonBlocking, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Tasks/BTTask_PlayAnimation.h"));
				MetaData->SetValue(NewProp_bNonBlocking, TEXT("ToolTip"), TEXT("if true the task will just trigger the animation and instantly finish. Fire and Forget."));
				MetaData->SetValue(NewProp_bLooping, TEXT("Category"), TEXT("Node"));
				MetaData->SetValue(NewProp_bLooping, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Tasks/BTTask_PlayAnimation.h"));
				MetaData->SetValue(NewProp_AnimationToPlay, TEXT("Category"), TEXT("Node"));
				MetaData->SetValue(NewProp_AnimationToPlay, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Tasks/BTTask_PlayAnimation.h"));
				MetaData->SetValue(NewProp_AnimationToPlay, TEXT("ToolTip"), TEXT("Animation asset to play. Note that it needs to match the skeleton of pawn this BT is controlling"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UBTTask_PlayAnimation(Z_Construct_UClass_UBTTask_PlayAnimation, TEXT("UBTTask_PlayAnimation"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UBTTask_PlayAnimation);
	UClass* Z_Construct_UClass_UBTTask_PlaySound_NoRegister()
	{
		return UBTTask_PlaySound::StaticClass();
	}
	UClass* Z_Construct_UClass_UBTTask_PlaySound()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UBTTaskNode();
			Z_Construct_UPackage_AIModule();
			OuterClass = UBTTask_PlaySound::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_SoundToPlay = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SoundToPlay"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(SoundToPlay, UBTTask_PlaySound), 0x0000000000000001, Z_Construct_UClass_USoundCue_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("BehaviorTree/Tasks/BTTask_PlaySound.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Tasks/BTTask_PlaySound.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Play Sound task node.\nPlays the specified sound when executed."));
				MetaData->SetValue(NewProp_SoundToPlay, TEXT("Category"), TEXT("Node"));
				MetaData->SetValue(NewProp_SoundToPlay, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Tasks/BTTask_PlaySound.h"));
				MetaData->SetValue(NewProp_SoundToPlay, TEXT("ToolTip"), TEXT("CUE to play"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UBTTask_PlaySound(Z_Construct_UClass_UBTTask_PlaySound, TEXT("UBTTask_PlaySound"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UBTTask_PlaySound);
	UClass* Z_Construct_UClass_UBTTask_RunBehavior_NoRegister()
	{
		return UBTTask_RunBehavior::StaticClass();
	}
	UClass* Z_Construct_UClass_UBTTask_RunBehavior()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UBTTaskNode();
			Z_Construct_UPackage_AIModule();
			OuterClass = UBTTask_RunBehavior::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_BehaviorAsset = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("BehaviorAsset"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(BehaviorAsset, UBTTask_RunBehavior), 0x0000080000000001, Z_Construct_UClass_UBehaviorTree_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("BehaviorTree/Tasks/BTTask_RunBehavior.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Tasks/BTTask_RunBehavior.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("RunBehavior task allows pushing subtrees on execution stack.\nSubtree asset can't be changed in runtime!\n\nThis limitation is caused by support for subtree's root level decorators,\nwhich are injected into parent tree, and structure of running tree\ncannot be modified in runtime (see: BTNode: ExecutionIndex, MemoryOffset)\n\nUse RunBehaviorDynamic task for subtrees that need to be changed in runtime."));
				MetaData->SetValue(NewProp_BehaviorAsset, TEXT("Category"), TEXT("Node"));
				MetaData->SetValue(NewProp_BehaviorAsset, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Tasks/BTTask_RunBehavior.h"));
				MetaData->SetValue(NewProp_BehaviorAsset, TEXT("ToolTip"), TEXT("behavior to run"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UBTTask_RunBehavior(Z_Construct_UClass_UBTTask_RunBehavior, TEXT("UBTTask_RunBehavior"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UBTTask_RunBehavior);
	UClass* Z_Construct_UClass_UBTTask_RunBehaviorDynamic_NoRegister()
	{
		return UBTTask_RunBehaviorDynamic::StaticClass();
	}
	UClass* Z_Construct_UClass_UBTTask_RunBehaviorDynamic()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UBTTaskNode();
			Z_Construct_UPackage_AIModule();
			OuterClass = UBTTask_RunBehaviorDynamic::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_BehaviorAsset = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("BehaviorAsset"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(BehaviorAsset, UBTTask_RunBehaviorDynamic), 0x0000080000000000, Z_Construct_UClass_UBehaviorTree_NoRegister());
				UProperty* NewProp_DefaultBehaviorAsset = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("DefaultBehaviorAsset"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(DefaultBehaviorAsset, UBTTask_RunBehaviorDynamic), 0x0000080000000001, Z_Construct_UClass_UBehaviorTree_NoRegister());
				UProperty* NewProp_InjectionTag = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("InjectionTag"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(InjectionTag, UBTTask_RunBehaviorDynamic), 0x0000080000000001, Z_Construct_UScriptStruct_FGameplayTag());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("BehaviorTree/Tasks/BTTask_RunBehaviorDynamic.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Tasks/BTTask_RunBehaviorDynamic.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("RunBehaviorDynamic task allows pushing subtrees on execution stack.\nSubtree asset can be assigned at runtime with SetDynamicSubtree function of BehaviorTreeComponent.\n\nDoes NOT support subtree's root level decorators!"));
				MetaData->SetValue(NewProp_BehaviorAsset, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Tasks/BTTask_RunBehaviorDynamic.h"));
				MetaData->SetValue(NewProp_BehaviorAsset, TEXT("ToolTip"), TEXT("current subtree"));
				MetaData->SetValue(NewProp_DefaultBehaviorAsset, TEXT("Category"), TEXT("Node"));
				MetaData->SetValue(NewProp_DefaultBehaviorAsset, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Tasks/BTTask_RunBehaviorDynamic.h"));
				MetaData->SetValue(NewProp_DefaultBehaviorAsset, TEXT("ToolTip"), TEXT("default behavior to run"));
				MetaData->SetValue(NewProp_InjectionTag, TEXT("Category"), TEXT("Node"));
				MetaData->SetValue(NewProp_InjectionTag, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Tasks/BTTask_RunBehaviorDynamic.h"));
				MetaData->SetValue(NewProp_InjectionTag, TEXT("ToolTip"), TEXT("Gameplay tag that will identify this task for subtree injection"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UBTTask_RunBehaviorDynamic(Z_Construct_UClass_UBTTask_RunBehaviorDynamic, TEXT("UBTTask_RunBehaviorDynamic"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UBTTask_RunBehaviorDynamic);
	UClass* Z_Construct_UClass_UBTTask_SetTagCooldown_NoRegister()
	{
		return UBTTask_SetTagCooldown::StaticClass();
	}
	UClass* Z_Construct_UClass_UBTTask_SetTagCooldown()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UBTTaskNode();
			Z_Construct_UPackage_AIModule();
			OuterClass = UBTTask_SetTagCooldown::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_CooldownDuration = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CooldownDuration"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(CooldownDuration, UBTTask_SetTagCooldown), 0x0000000000000001);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bAddToExistingDuration, UBTTask_SetTagCooldown, bool);
				UProperty* NewProp_bAddToExistingDuration = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bAddToExistingDuration"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bAddToExistingDuration, UBTTask_SetTagCooldown), 0x0000000000000001, CPP_BOOL_PROPERTY_BITMASK(bAddToExistingDuration, UBTTask_SetTagCooldown), sizeof(bool), true);
				UProperty* NewProp_CooldownTag = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CooldownTag"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(CooldownTag, UBTTask_SetTagCooldown), 0x0000000000000001, Z_Construct_UScriptStruct_FGameplayTag());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("BehaviorTree/Tasks/BTTask_SetTagCooldown.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Tasks/BTTask_SetTagCooldown.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Cooldown task node.\nSets a cooldown tag value.  Use with cooldown tag decorators to prevent behavior tree execution."));
				MetaData->SetValue(NewProp_CooldownDuration, TEXT("Category"), TEXT("Cooldown"));
				MetaData->SetValue(NewProp_CooldownDuration, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Tasks/BTTask_SetTagCooldown.h"));
				MetaData->SetValue(NewProp_CooldownDuration, TEXT("ToolTip"), TEXT("Value we will add or set to the Cooldown tag when this task runs."));
				MetaData->SetValue(NewProp_bAddToExistingDuration, TEXT("Category"), TEXT("Decorator"));
				MetaData->SetValue(NewProp_bAddToExistingDuration, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Tasks/BTTask_SetTagCooldown.h"));
				MetaData->SetValue(NewProp_bAddToExistingDuration, TEXT("ToolTip"), TEXT("True if we are adding to any existing duration, false if we are setting the duration (potentially invalidating an existing end time)."));
				MetaData->SetValue(NewProp_CooldownTag, TEXT("Category"), TEXT("Cooldown"));
				MetaData->SetValue(NewProp_CooldownTag, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Tasks/BTTask_SetTagCooldown.h"));
				MetaData->SetValue(NewProp_CooldownTag, TEXT("ToolTip"), TEXT("Gameplay tag that will be used for the cooldown."));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UBTTask_SetTagCooldown(Z_Construct_UClass_UBTTask_SetTagCooldown, TEXT("UBTTask_SetTagCooldown"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UBTTask_SetTagCooldown);
	UClass* Z_Construct_UClass_UBTTask_Wait_NoRegister()
	{
		return UBTTask_Wait::StaticClass();
	}
	UClass* Z_Construct_UClass_UBTTask_Wait()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UBTTaskNode();
			Z_Construct_UPackage_AIModule();
			OuterClass = UBTTask_Wait::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_RandomDeviation = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("RandomDeviation"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(RandomDeviation, UBTTask_Wait), 0x0000000000000001);
				UProperty* NewProp_WaitTime = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("WaitTime"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(WaitTime, UBTTask_Wait), 0x0000000000000001);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("BehaviorTree/Tasks/BTTask_Wait.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Tasks/BTTask_Wait.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Wait task node.\nWait for the specified time when executed."));
				MetaData->SetValue(NewProp_RandomDeviation, TEXT("Category"), TEXT("Wait"));
				MetaData->SetValue(NewProp_RandomDeviation, TEXT("ClampMin"), TEXT("0"));
				MetaData->SetValue(NewProp_RandomDeviation, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Tasks/BTTask_Wait.h"));
				MetaData->SetValue(NewProp_RandomDeviation, TEXT("ToolTip"), TEXT("allows adding random time to wait time"));
				MetaData->SetValue(NewProp_RandomDeviation, TEXT("UIMin"), TEXT("0"));
				MetaData->SetValue(NewProp_WaitTime, TEXT("Category"), TEXT("Wait"));
				MetaData->SetValue(NewProp_WaitTime, TEXT("ClampMin"), TEXT("0.0"));
				MetaData->SetValue(NewProp_WaitTime, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Tasks/BTTask_Wait.h"));
				MetaData->SetValue(NewProp_WaitTime, TEXT("ToolTip"), TEXT("wait time in seconds"));
				MetaData->SetValue(NewProp_WaitTime, TEXT("UIMin"), TEXT("0.0"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UBTTask_Wait(Z_Construct_UClass_UBTTask_Wait, TEXT("UBTTask_Wait"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UBTTask_Wait);
	UClass* Z_Construct_UClass_UBTTask_WaitBlackboardTime_NoRegister()
	{
		return UBTTask_WaitBlackboardTime::StaticClass();
	}
	UClass* Z_Construct_UClass_UBTTask_WaitBlackboardTime()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UBTTask_Wait();
			Z_Construct_UPackage_AIModule();
			OuterClass = UBTTask_WaitBlackboardTime::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_BlackboardKey = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("BlackboardKey"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(BlackboardKey, UBTTask_WaitBlackboardTime), 0x0000080000000001, Z_Construct_UScriptStruct_FBlackboardKeySelector());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Wait"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("BehaviorTree/Tasks/BTTask_WaitBlackboardTime.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Tasks/BTTask_WaitBlackboardTime.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Wait task node.\nWait for the time specified by a Blackboard key when executed."));
				MetaData->SetValue(NewProp_BlackboardKey, TEXT("Category"), TEXT("Blackboard"));
				MetaData->SetValue(NewProp_BlackboardKey, TEXT("ModuleRelativePath"), TEXT("Classes/BehaviorTree/Tasks/BTTask_WaitBlackboardTime.h"));
				MetaData->SetValue(NewProp_BlackboardKey, TEXT("ToolTip"), TEXT("blackboard key selector"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UBTTask_WaitBlackboardTime(Z_Construct_UClass_UBTTask_WaitBlackboardTime, TEXT("UBTTask_WaitBlackboardTime"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UBTTask_WaitBlackboardTime);
	UClass* Z_Construct_UClass_UCrowdAgentInterface_NoRegister()
	{
		return UCrowdAgentInterface::StaticClass();
	}
	UClass* Z_Construct_UClass_UCrowdAgentInterface()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			UInterface::StaticClass();
			Z_Construct_UPackage_AIModule();
			OuterClass = UCrowdAgentInterface::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20084081;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("CannotImplementInterfaceInBlueprint"), TEXT(""));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UCrowdAgentInterface(Z_Construct_UClass_UCrowdAgentInterface, TEXT("UCrowdAgentInterface"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UCrowdAgentInterface);
	UScriptStruct* Z_Construct_UScriptStruct_FCrowdAvoidanceSamplingPattern()
	{
		UPackage* Outer=Z_Construct_UPackage_AIModule();
		extern uint32 Get_Z_Construct_UScriptStruct_FCrowdAvoidanceSamplingPattern_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("CrowdAvoidanceSamplingPattern"), sizeof(FCrowdAvoidanceSamplingPattern), Get_Z_Construct_UScriptStruct_FCrowdAvoidanceSamplingPattern_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("CrowdAvoidanceSamplingPattern"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FCrowdAvoidanceSamplingPattern>, EStructFlags(0x00000201));
			UProperty* NewProp_Radii = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Radii"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(Radii, FCrowdAvoidanceSamplingPattern), 0x0000000000000001);
			UProperty* NewProp_Radii_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Radii, TEXT("Radii"), RF_Public|RF_Transient|RF_Native) UFloatProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000);
			UProperty* NewProp_Angles = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Angles"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(Angles, FCrowdAvoidanceSamplingPattern), 0x0000000000000001);
			UProperty* NewProp_Angles_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Angles, TEXT("Angles"), RF_Public|RF_Transient|RF_Native) UFloatProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/Navigation/CrowdManager.h"));
			MetaData->SetValue(NewProp_Radii, TEXT("Category"), TEXT("Crowd"));
			MetaData->SetValue(NewProp_Radii, TEXT("ModuleRelativePath"), TEXT("Classes/Navigation/CrowdManager.h"));
			MetaData->SetValue(NewProp_Angles, TEXT("Category"), TEXT("Crowd"));
			MetaData->SetValue(NewProp_Angles, TEXT("ModuleRelativePath"), TEXT("Classes/Navigation/CrowdManager.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FCrowdAvoidanceSamplingPattern_CRC() { return 1202925035U; }
	UScriptStruct* Z_Construct_UScriptStruct_FCrowdAvoidanceConfig()
	{
		UPackage* Outer=Z_Construct_UPackage_AIModule();
		extern uint32 Get_Z_Construct_UScriptStruct_FCrowdAvoidanceConfig_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("CrowdAvoidanceConfig"), sizeof(FCrowdAvoidanceConfig), Get_Z_Construct_UScriptStruct_FCrowdAvoidanceConfig_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("CrowdAvoidanceConfig"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FCrowdAvoidanceConfig>, EStructFlags(0x00000201));
			UProperty* NewProp_AdaptiveDepth = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("AdaptiveDepth"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(AdaptiveDepth, FCrowdAvoidanceConfig), 0x0000000000000001);
			UProperty* NewProp_AdaptiveRings = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("AdaptiveRings"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(AdaptiveRings, FCrowdAvoidanceConfig), 0x0000000000000001);
			UProperty* NewProp_AdaptiveDivisions = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("AdaptiveDivisions"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(AdaptiveDivisions, FCrowdAvoidanceConfig), 0x0000000000000001);
			UProperty* NewProp_CustomPatternIdx = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("CustomPatternIdx"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(CustomPatternIdx, FCrowdAvoidanceConfig), 0x0000000000000001);
			UProperty* NewProp_ImpactTimeRange = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ImpactTimeRange"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(ImpactTimeRange, FCrowdAvoidanceConfig), 0x0000000000000001);
			UProperty* NewProp_ImpactTimeWeight = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ImpactTimeWeight"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(ImpactTimeWeight, FCrowdAvoidanceConfig), 0x0000000000000001);
			UProperty* NewProp_SideBiasWeight = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("SideBiasWeight"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(SideBiasWeight, FCrowdAvoidanceConfig), 0x0000000000000001);
			UProperty* NewProp_CurrentVelocityWeight = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("CurrentVelocityWeight"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(CurrentVelocityWeight, FCrowdAvoidanceConfig), 0x0000000000000001);
			UProperty* NewProp_DesiredVelocityWeight = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("DesiredVelocityWeight"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(DesiredVelocityWeight, FCrowdAvoidanceConfig), 0x0000000000000001);
			UProperty* NewProp_VelocityBias = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("VelocityBias"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(VelocityBias, FCrowdAvoidanceConfig), 0x0000000000000001);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/Navigation/CrowdManager.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Crowd manager is responsible for handling crowds using Detour (Recast library)\n\nAgents will respect navmesh for all steering and avoidance updates,\nbut it's slower than AvoidanceManager solution (RVO, cares only about agents)\n\nAll agents will operate on the same navmesh data, which will be picked from\nnavigation system defaults (UNavigationSystem::SupportedAgents[0])\n\nTo use it, you have to add CrowdFollowingComponent to your agent\n(usually: replace class of PathFollowingComponent in AIController by adding\n those lines in controller's constructor\n\n ACrowdAIController::ACrowdAIController(const FObjectInitializer& ObjectInitializer)\n     : Super(ObjectInitializer.SetDefaultSubobjectClass<UCrowdFollowingComponent>(TEXT(\"PathFollowingComponent\")))\n\n or simply add both components and switch move requests between them)\n\nActors that should be avoided, but are not being simulated by crowd (like players)\nshould implement CrowdAgentInterface AND register/unregister themselves with crowd manager:\n\n UCrowdManager* CrowdManager = UCrowdManager::GetCurrent(this);\n if (CrowdManager)\n {\n    CrowdManager->RegisterAgent(this);\n }\n\n Check flags in CrowdDebugDrawing namespace (CrowdManager.cpp) for debugging options."));
			MetaData->SetValue(NewProp_AdaptiveDepth, TEXT("Category"), TEXT("Crowd"));
			MetaData->SetValue(NewProp_AdaptiveDepth, TEXT("ModuleRelativePath"), TEXT("Classes/Navigation/CrowdManager.h"));
			MetaData->SetValue(NewProp_AdaptiveDepth, TEXT("ToolTip"), TEXT("adaptive sampling: number of iterations at best velocity"));
			MetaData->SetValue(NewProp_AdaptiveRings, TEXT("Category"), TEXT("Crowd"));
			MetaData->SetValue(NewProp_AdaptiveRings, TEXT("ModuleRelativePath"), TEXT("Classes/Navigation/CrowdManager.h"));
			MetaData->SetValue(NewProp_AdaptiveRings, TEXT("ToolTip"), TEXT("adaptive sampling: number of rings"));
			MetaData->SetValue(NewProp_AdaptiveDivisions, TEXT("Category"), TEXT("Crowd"));
			MetaData->SetValue(NewProp_AdaptiveDivisions, TEXT("ModuleRelativePath"), TEXT("Classes/Navigation/CrowdManager.h"));
			MetaData->SetValue(NewProp_AdaptiveDivisions, TEXT("ToolTip"), TEXT("adaptive sampling: number of divisions per ring"));
			MetaData->SetValue(NewProp_CustomPatternIdx, TEXT("Category"), TEXT("Crowd"));
			MetaData->SetValue(NewProp_CustomPatternIdx, TEXT("ModuleRelativePath"), TEXT("Classes/Navigation/CrowdManager.h"));
			MetaData->SetValue(NewProp_CustomPatternIdx, TEXT("ToolTip"), TEXT("index in SamplingPatterns array or 0xff for adaptive sampling"));
			MetaData->SetValue(NewProp_ImpactTimeRange, TEXT("Category"), TEXT("Crowd"));
			MetaData->SetValue(NewProp_ImpactTimeRange, TEXT("ModuleRelativePath"), TEXT("Classes/Navigation/CrowdManager.h"));
			MetaData->SetValue(NewProp_ImpactTimeWeight, TEXT("Category"), TEXT("Crowd"));
			MetaData->SetValue(NewProp_ImpactTimeWeight, TEXT("ModuleRelativePath"), TEXT("Classes/Navigation/CrowdManager.h"));
			MetaData->SetValue(NewProp_SideBiasWeight, TEXT("Category"), TEXT("Crowd"));
			MetaData->SetValue(NewProp_SideBiasWeight, TEXT("ModuleRelativePath"), TEXT("Classes/Navigation/CrowdManager.h"));
			MetaData->SetValue(NewProp_CurrentVelocityWeight, TEXT("Category"), TEXT("Crowd"));
			MetaData->SetValue(NewProp_CurrentVelocityWeight, TEXT("ModuleRelativePath"), TEXT("Classes/Navigation/CrowdManager.h"));
			MetaData->SetValue(NewProp_DesiredVelocityWeight, TEXT("Category"), TEXT("Crowd"));
			MetaData->SetValue(NewProp_DesiredVelocityWeight, TEXT("ModuleRelativePath"), TEXT("Classes/Navigation/CrowdManager.h"));
			MetaData->SetValue(NewProp_VelocityBias, TEXT("Category"), TEXT("Crowd"));
			MetaData->SetValue(NewProp_VelocityBias, TEXT("ModuleRelativePath"), TEXT("Classes/Navigation/CrowdManager.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FCrowdAvoidanceConfig_CRC() { return 42430375U; }
	UClass* Z_Construct_UClass_UCrowdManager_NoRegister()
	{
		return UCrowdManager::StaticClass();
	}
	UClass* Z_Construct_UClass_UCrowdManager()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage_AIModule();
			OuterClass = UCrowdManager::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100086;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bResolveCollisions, UCrowdManager, uint8);
				UProperty* NewProp_bResolveCollisions = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bResolveCollisions"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bResolveCollisions, UCrowdManager), 0x0000080000004001, CPP_BOOL_PROPERTY_BITMASK(bResolveCollisions, UCrowdManager), sizeof(uint8), false);
				UProperty* NewProp_PathOptimizationInterval = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("PathOptimizationInterval"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(PathOptimizationInterval, UCrowdManager), 0x0000080000004001);
				UProperty* NewProp_NavmeshCheckInterval = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("NavmeshCheckInterval"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(NavmeshCheckInterval, UCrowdManager), 0x0000080000004001);
				UProperty* NewProp_MaxAvoidedWalls = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MaxAvoidedWalls"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(MaxAvoidedWalls, UCrowdManager), 0x0000080000004001);
				UProperty* NewProp_MaxAvoidedAgents = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MaxAvoidedAgents"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(MaxAvoidedAgents, UCrowdManager), 0x0000080000004001);
				UProperty* NewProp_MaxAgentRadius = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MaxAgentRadius"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(MaxAgentRadius, UCrowdManager), 0x0000080000004001);
				UProperty* NewProp_MaxAgents = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MaxAgents"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(MaxAgents, UCrowdManager), 0x0000080000004001);
				UProperty* NewProp_SamplingPatterns = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SamplingPatterns"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(SamplingPatterns, UCrowdManager), 0x0000080000004001);
				UProperty* NewProp_SamplingPatterns_Inner = new(EC_InternalUseOnlyConstructor, NewProp_SamplingPatterns, TEXT("SamplingPatterns"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000004000, Z_Construct_UScriptStruct_FCrowdAvoidanceSamplingPattern());
				UProperty* NewProp_AvoidanceConfig = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AvoidanceConfig"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(AvoidanceConfig, UCrowdManager), 0x0000080000004001);
				UProperty* NewProp_AvoidanceConfig_Inner = new(EC_InternalUseOnlyConstructor, NewProp_AvoidanceConfig, TEXT("AvoidanceConfig"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000004000, Z_Construct_UScriptStruct_FCrowdAvoidanceConfig());
				UProperty* NewProp_MyNavData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MyNavData"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(MyNavData, UCrowdManager), 0x0000080000002000, Z_Construct_UClass_ANavigationData_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->ClassConfigName = FName(TEXT("Engine"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Navigation/CrowdManager.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Navigation/CrowdManager.h"));
				MetaData->SetValue(NewProp_bResolveCollisions, TEXT("Category"), TEXT("Config"));
				MetaData->SetValue(NewProp_bResolveCollisions, TEXT("ModuleRelativePath"), TEXT("Classes/Navigation/CrowdManager.h"));
				MetaData->SetValue(NewProp_bResolveCollisions, TEXT("ToolTip"), TEXT("should crowd simulation resolve collisions between agents? if not, this will be handled by their movement components"));
				MetaData->SetValue(NewProp_PathOptimizationInterval, TEXT("Category"), TEXT("Config"));
				MetaData->SetValue(NewProp_PathOptimizationInterval, TEXT("ModuleRelativePath"), TEXT("Classes/Navigation/CrowdManager.h"));
				MetaData->SetValue(NewProp_PathOptimizationInterval, TEXT("ToolTip"), TEXT("how often should agents try to optimize their paths?"));
				MetaData->SetValue(NewProp_NavmeshCheckInterval, TEXT("Category"), TEXT("Config"));
				MetaData->SetValue(NewProp_NavmeshCheckInterval, TEXT("ModuleRelativePath"), TEXT("Classes/Navigation/CrowdManager.h"));
				MetaData->SetValue(NewProp_NavmeshCheckInterval, TEXT("ToolTip"), TEXT("how often should agents check their position after moving off navmesh?"));
				MetaData->SetValue(NewProp_MaxAvoidedWalls, TEXT("Category"), TEXT("Config"));
				MetaData->SetValue(NewProp_MaxAvoidedWalls, TEXT("ModuleRelativePath"), TEXT("Classes/Navigation/CrowdManager.h"));
				MetaData->SetValue(NewProp_MaxAvoidedWalls, TEXT("ToolTip"), TEXT("max number of wall segments for velocity avoidance"));
				MetaData->SetValue(NewProp_MaxAvoidedAgents, TEXT("Category"), TEXT("Config"));
				MetaData->SetValue(NewProp_MaxAvoidedAgents, TEXT("ModuleRelativePath"), TEXT("Classes/Navigation/CrowdManager.h"));
				MetaData->SetValue(NewProp_MaxAvoidedAgents, TEXT("ToolTip"), TEXT("max number of neighbor agents for velocity avoidance"));
				MetaData->SetValue(NewProp_MaxAgentRadius, TEXT("Category"), TEXT("Config"));
				MetaData->SetValue(NewProp_MaxAgentRadius, TEXT("ModuleRelativePath"), TEXT("Classes/Navigation/CrowdManager.h"));
				MetaData->SetValue(NewProp_MaxAgentRadius, TEXT("ToolTip"), TEXT("max radius of agent that can be added to crowd"));
				MetaData->SetValue(NewProp_MaxAgents, TEXT("Category"), TEXT("Config"));
				MetaData->SetValue(NewProp_MaxAgents, TEXT("ModuleRelativePath"), TEXT("Classes/Navigation/CrowdManager.h"));
				MetaData->SetValue(NewProp_MaxAgents, TEXT("ToolTip"), TEXT("max number of agents supported by crowd"));
				MetaData->SetValue(NewProp_SamplingPatterns, TEXT("Category"), TEXT("Config"));
				MetaData->SetValue(NewProp_SamplingPatterns, TEXT("ModuleRelativePath"), TEXT("Classes/Navigation/CrowdManager.h"));
				MetaData->SetValue(NewProp_SamplingPatterns, TEXT("ToolTip"), TEXT("obstacle avoidance params"));
				MetaData->SetValue(NewProp_AvoidanceConfig, TEXT("Category"), TEXT("Config"));
				MetaData->SetValue(NewProp_AvoidanceConfig, TEXT("ModuleRelativePath"), TEXT("Classes/Navigation/CrowdManager.h"));
				MetaData->SetValue(NewProp_AvoidanceConfig, TEXT("ToolTip"), TEXT("obstacle avoidance params"));
				MetaData->SetValue(NewProp_MyNavData, TEXT("ModuleRelativePath"), TEXT("Classes/Navigation/CrowdManager.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UCrowdManager(Z_Construct_UClass_UCrowdManager, TEXT("UCrowdManager"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UCrowdManager);
	UClass* Z_Construct_UClass_UEnvQuery_NoRegister()
	{
		return UEnvQuery::StaticClass();
	}
	UClass* Z_Construct_UClass_UEnvQuery()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage_AIModule();
			OuterClass = UEnvQuery::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_Options = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Options"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(Options, UEnvQuery), 0x0000000000000000);
				UProperty* NewProp_Options_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Options, TEXT("Options"), RF_Public|RF_Transient|RF_Native) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UClass_UEnvQueryOption_NoRegister());
#if WITH_EDITORONLY_DATA
				UProperty* NewProp_EdGraph = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("EdGraph"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(EdGraph, UEnvQuery), 0x0000000800000000, Z_Construct_UClass_UEdGraph_NoRegister());
#endif // WITH_EDITORONLY_DATA
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("EnvironmentQuery/EnvQuery.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EnvQuery.h"));
				MetaData->SetValue(NewProp_Options, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EnvQuery.h"));
				MetaData->SetValue(NewProp_EdGraph, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EnvQuery.h"));
				MetaData->SetValue(NewProp_EdGraph, TEXT("ToolTip"), TEXT("Graph for query"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UEnvQuery(Z_Construct_UClass_UEnvQuery, TEXT("UEnvQuery"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UEnvQuery);
	UFunction* Z_Construct_UFunction_UEnvQueryContext_BlueprintBase_ProvideActorsSet()
	{
		UObject* Outer=Z_Construct_UClass_UEnvQueryContext_BlueprintBase();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ProvideActorsSet"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x48420800, 65535, sizeof(EnvQueryContext_BlueprintBase_eventProvideActorsSet_Parms));
			UProperty* NewProp_ResultingActorsSet = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ResultingActorsSet"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(ResultingActorsSet, EnvQueryContext_BlueprintBase_eventProvideActorsSet_Parms), 0x0000000000000180);
			UProperty* NewProp_ResultingActorsSet_Inner = new(EC_InternalUseOnlyConstructor, NewProp_ResultingActorsSet, TEXT("ResultingActorsSet"), RF_Public|RF_Transient|RF_Native) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UClass_AActor_NoRegister());
			UProperty* NewProp_QuerierActor = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("QuerierActor"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(QuerierActor, EnvQueryContext_BlueprintBase_eventProvideActorsSet_Parms), 0x0000000000000080, Z_Construct_UClass_AActor_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/Contexts/EnvQueryContext_BlueprintBase.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UEnvQueryContext_BlueprintBase_ProvideLocationsSet()
	{
		UObject* Outer=Z_Construct_UClass_UEnvQueryContext_BlueprintBase();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ProvideLocationsSet"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x48420800, 65535, sizeof(EnvQueryContext_BlueprintBase_eventProvideLocationsSet_Parms));
			UProperty* NewProp_ResultingLocationSet = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ResultingLocationSet"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(ResultingLocationSet, EnvQueryContext_BlueprintBase_eventProvideLocationsSet_Parms), 0x0000000000000180);
			UProperty* NewProp_ResultingLocationSet_Inner = new(EC_InternalUseOnlyConstructor, NewProp_ResultingLocationSet, TEXT("ResultingLocationSet"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_QuerierActor = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("QuerierActor"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(QuerierActor, EnvQueryContext_BlueprintBase_eventProvideLocationsSet_Parms), 0x0000000000000080, Z_Construct_UClass_AActor_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/Contexts/EnvQueryContext_BlueprintBase.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UEnvQueryContext_BlueprintBase_ProvideSingleActor()
	{
		UObject* Outer=Z_Construct_UClass_UEnvQueryContext_BlueprintBase();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ProvideSingleActor"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x48420800, 65535, sizeof(EnvQueryContext_BlueprintBase_eventProvideSingleActor_Parms));
			UProperty* NewProp_ResultingActor = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ResultingActor"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(ResultingActor, EnvQueryContext_BlueprintBase_eventProvideSingleActor_Parms), 0x0000000000000180, Z_Construct_UClass_AActor_NoRegister());
			UProperty* NewProp_QuerierActor = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("QuerierActor"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(QuerierActor, EnvQueryContext_BlueprintBase_eventProvideSingleActor_Parms), 0x0000000000000080, Z_Construct_UClass_AActor_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/Contexts/EnvQueryContext_BlueprintBase.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UEnvQueryContext_BlueprintBase_ProvideSingleLocation()
	{
		UObject* Outer=Z_Construct_UClass_UEnvQueryContext_BlueprintBase();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ProvideSingleLocation"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x48C20800, 65535, sizeof(EnvQueryContext_BlueprintBase_eventProvideSingleLocation_Parms));
			UProperty* NewProp_ResultingLocation = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ResultingLocation"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(ResultingLocation, EnvQueryContext_BlueprintBase_eventProvideSingleLocation_Parms), 0x0000000000000180, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_QuerierActor = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("QuerierActor"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(QuerierActor, EnvQueryContext_BlueprintBase_eventProvideSingleLocation_Parms), 0x0000000000000080, Z_Construct_UClass_AActor_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/Contexts/EnvQueryContext_BlueprintBase.h"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UEnvQueryContext_BlueprintBase_NoRegister()
	{
		return UEnvQueryContext_BlueprintBase::StaticClass();
	}
	UClass* Z_Construct_UClass_UEnvQueryContext_BlueprintBase()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UEnvQueryContext();
			Z_Construct_UPackage_AIModule();
			OuterClass = UEnvQueryContext_BlueprintBase::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080081;

				OuterClass->LinkChild(Z_Construct_UFunction_UEnvQueryContext_BlueprintBase_ProvideActorsSet());
				OuterClass->LinkChild(Z_Construct_UFunction_UEnvQueryContext_BlueprintBase_ProvideLocationsSet());
				OuterClass->LinkChild(Z_Construct_UFunction_UEnvQueryContext_BlueprintBase_ProvideSingleActor());
				OuterClass->LinkChild(Z_Construct_UFunction_UEnvQueryContext_BlueprintBase_ProvideSingleLocation());

				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UEnvQueryContext_BlueprintBase_ProvideActorsSet()); // 2334530688
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UEnvQueryContext_BlueprintBase_ProvideLocationsSet()); // 1278333874
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UEnvQueryContext_BlueprintBase_ProvideSingleActor()); // 3047810869
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UEnvQueryContext_BlueprintBase_ProvideSingleLocation()); // 1952446782
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("EnvironmentQuery/Contexts/EnvQueryContext_BlueprintBase.h"));
				MetaData->SetValue(OuterClass, TEXT("IsBlueprintBase"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/Contexts/EnvQueryContext_BlueprintBase.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UEnvQueryContext_BlueprintBase(Z_Construct_UClass_UEnvQueryContext_BlueprintBase, TEXT("UEnvQueryContext_BlueprintBase"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UEnvQueryContext_BlueprintBase);
	UClass* Z_Construct_UClass_UEnvQueryContext_Item_NoRegister()
	{
		return UEnvQueryContext_Item::StaticClass();
	}
	UClass* Z_Construct_UClass_UEnvQueryContext_Item()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UEnvQueryContext();
			Z_Construct_UPackage_AIModule();
			OuterClass = UEnvQueryContext_Item::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("EnvironmentQuery/Contexts/EnvQueryContext_Item.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/Contexts/EnvQueryContext_Item.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UEnvQueryContext_Item(Z_Construct_UClass_UEnvQueryContext_Item, TEXT("UEnvQueryContext_Item"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UEnvQueryContext_Item);
	UClass* Z_Construct_UClass_UEnvQueryContext_Querier_NoRegister()
	{
		return UEnvQueryContext_Querier::StaticClass();
	}
	UClass* Z_Construct_UClass_UEnvQueryContext_Querier()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UEnvQueryContext();
			Z_Construct_UPackage_AIModule();
			OuterClass = UEnvQueryContext_Querier::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("EnvironmentQuery/Contexts/EnvQueryContext_Querier.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/Contexts/EnvQueryContext_Querier.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UEnvQueryContext_Querier(Z_Construct_UClass_UEnvQueryContext_Querier, TEXT("UEnvQueryContext_Querier"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UEnvQueryContext_Querier);
	UClass* Z_Construct_UClass_UVisualLoggerExtension_NoRegister()
	{
		return UVisualLoggerExtension::StaticClass();
	}
	UClass* Z_Construct_UClass_UVisualLoggerExtension()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage_AIModule();
			OuterClass = UVisualLoggerExtension::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100081;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("VisualLoggerExtension.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/VisualLoggerExtension.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UVisualLoggerExtension(Z_Construct_UClass_UVisualLoggerExtension, TEXT("UVisualLoggerExtension"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UVisualLoggerExtension);
	UClass* Z_Construct_UClass_UEnvQueryDebugHelpers_NoRegister()
	{
		return UEnvQueryDebugHelpers::StaticClass();
	}
	UClass* Z_Construct_UClass_UEnvQueryDebugHelpers()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage_AIModule();
			OuterClass = UEnvQueryDebugHelpers::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100081;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("EnvironmentQuery/EnvQueryDebugHelpers.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EnvQueryDebugHelpers.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UEnvQueryDebugHelpers(Z_Construct_UClass_UEnvQueryDebugHelpers, TEXT("UEnvQueryDebugHelpers"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UEnvQueryDebugHelpers);
	UClass* Z_Construct_UClass_UEQSQueryResultSourceInterface_NoRegister()
	{
		return UEQSQueryResultSourceInterface::StaticClass();
	}
	UClass* Z_Construct_UClass_UEQSQueryResultSourceInterface()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			UInterface::StaticClass();
			Z_Construct_UPackage_AIModule();
			OuterClass = UEQSQueryResultSourceInterface::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20084081;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("CannotImplementInterfaceInBlueprint"), TEXT(""));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UEQSQueryResultSourceInterface(Z_Construct_UClass_UEQSQueryResultSourceInterface, TEXT("UEQSQueryResultSourceInterface"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UEQSQueryResultSourceInterface);
	UFunction* Z_Construct_UDelegateFunction_UEnvQueryInstanceBlueprintWrapper_EQSQueryDoneSignature__DelegateSignature()
	{
		struct EnvQueryInstanceBlueprintWrapper_eventEQSQueryDoneSignature_Parms
		{
			UEnvQueryInstanceBlueprintWrapper* QueryInstance;
			TEnumAsByte<EEnvQueryStatus::Type> QueryStatus;
		};
		UObject* Outer=Z_Construct_UClass_UEnvQueryInstanceBlueprintWrapper();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EQSQueryDoneSignature__DelegateSignature"), RF_Public|RF_Transient|RF_Native) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(EnvQueryInstanceBlueprintWrapper_eventEQSQueryDoneSignature_Parms));
			UProperty* NewProp_QueryStatus = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("QueryStatus"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(QueryStatus, EnvQueryInstanceBlueprintWrapper_eventEQSQueryDoneSignature_Parms), 0x0000000000000080, Z_Construct_UEnum_AIModule_EEnvQueryStatus());
			UProperty* NewProp_QueryInstance = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("QueryInstance"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(QueryInstance, EnvQueryInstanceBlueprintWrapper_eventEQSQueryDoneSignature_Parms), 0x0000000000000080, Z_Construct_UClass_UEnvQueryInstanceBlueprintWrapper_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EnvQueryInstanceBlueprintWrapper.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UEnvQueryInstanceBlueprintWrapper_GetItemScore()
	{
		struct EnvQueryInstanceBlueprintWrapper_eventGetItemScore_Parms
		{
			int32 ItemIndex;
			float ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UEnvQueryInstanceBlueprintWrapper();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetItemScore"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x14020401, 65535, sizeof(EnvQueryInstanceBlueprintWrapper_eventGetItemScore_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(ReturnValue, EnvQueryInstanceBlueprintWrapper_eventGetItemScore_Parms), 0x0000000000000580);
			UProperty* NewProp_ItemIndex = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ItemIndex"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(ItemIndex, EnvQueryInstanceBlueprintWrapper_eventGetItemScore_Parms), 0x0000000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|EQS"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EnvQueryInstanceBlueprintWrapper.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UEnvQueryInstanceBlueprintWrapper_GetResultsAsActors()
	{
		struct EnvQueryInstanceBlueprintWrapper_eventGetResultsAsActors_Parms
		{
			TArray<AActor*> ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UEnvQueryInstanceBlueprintWrapper();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetResultsAsActors"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x14020401, 65535, sizeof(EnvQueryInstanceBlueprintWrapper_eventGetResultsAsActors_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(ReturnValue, EnvQueryInstanceBlueprintWrapper_eventGetResultsAsActors_Parms), 0x0000000000000580);
			UProperty* NewProp_ReturnValue_Inner = new(EC_InternalUseOnlyConstructor, NewProp_ReturnValue, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UClass_AActor_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|EQS"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EnvQueryInstanceBlueprintWrapper.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("return an array filled with resulting actors. Not that it makes sense only if ItemType is a EnvQueryItemType_ActorBase-derived type"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UEnvQueryInstanceBlueprintWrapper_GetResultsAsLocations()
	{
		struct EnvQueryInstanceBlueprintWrapper_eventGetResultsAsLocations_Parms
		{
			TArray<FVector> ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UEnvQueryInstanceBlueprintWrapper();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetResultsAsLocations"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x14020401, 65535, sizeof(EnvQueryInstanceBlueprintWrapper_eventGetResultsAsLocations_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(ReturnValue, EnvQueryInstanceBlueprintWrapper_eventGetResultsAsLocations_Parms), 0x0000000000000580);
			UProperty* NewProp_ReturnValue_Inner = new(EC_InternalUseOnlyConstructor, NewProp_ReturnValue, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FVector());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|EQS"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EnvQueryInstanceBlueprintWrapper.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("returns an array of locations generated by the query. If the query generated Actors the the array is filled with their locations"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UEnvQueryInstanceBlueprintWrapper_NoRegister()
	{
		return UEnvQueryInstanceBlueprintWrapper::StaticClass();
	}
	UClass* Z_Construct_UClass_UEnvQueryInstanceBlueprintWrapper()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage_AIModule();
			OuterClass = UEnvQueryInstanceBlueprintWrapper::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;

				OuterClass->LinkChild(Z_Construct_UDelegateFunction_UEnvQueryInstanceBlueprintWrapper_EQSQueryDoneSignature__DelegateSignature());
				OuterClass->LinkChild(Z_Construct_UFunction_UEnvQueryInstanceBlueprintWrapper_GetItemScore());
				OuterClass->LinkChild(Z_Construct_UFunction_UEnvQueryInstanceBlueprintWrapper_GetResultsAsActors());
				OuterClass->LinkChild(Z_Construct_UFunction_UEnvQueryInstanceBlueprintWrapper_GetResultsAsLocations());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_OnQueryFinishedEvent = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnQueryFinishedEvent"), RF_Public|RF_Transient|RF_Native) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnQueryFinishedEvent, UEnvQueryInstanceBlueprintWrapper), 0x0000080010080000, Z_Construct_UDelegateFunction_UEnvQueryInstanceBlueprintWrapper_EQSQueryDoneSignature__DelegateSignature());
				UProperty* NewProp_OptionIndex = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OptionIndex"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(OptionIndex, UEnvQueryInstanceBlueprintWrapper), 0x0000080000000014);
				UProperty* NewProp_ItemType = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ItemType"), RF_Public|RF_Transient|RF_Native) UClassProperty(CPP_PROPERTY_BASE(ItemType, UEnvQueryInstanceBlueprintWrapper), 0x0004080000000014, Z_Construct_UClass_UEnvQueryItemType_NoRegister());
				UProperty* NewProp_QueryID = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("QueryID"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(QueryID, UEnvQueryInstanceBlueprintWrapper), 0x0000080000000014);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UDelegateFunction_UEnvQueryInstanceBlueprintWrapper_EQSQueryDoneSignature__DelegateSignature()); // 1698023390
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UEnvQueryInstanceBlueprintWrapper_GetItemScore()); // 4032093204
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UEnvQueryInstanceBlueprintWrapper_GetResultsAsActors()); // 2808799203
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UEnvQueryInstanceBlueprintWrapper_GetResultsAsLocations()); // 2541821025
				OuterClass->Interfaces.Add(FImplementedInterface(Z_Construct_UClass_UEQSQueryResultSourceInterface_NoRegister(), VTABLE_OFFSET(UEnvQueryInstanceBlueprintWrapper, IEQSQueryResultSourceInterface), false ));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("DisplayName"), TEXT("EQS Query Instance"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("EnvironmentQuery/EnvQueryInstanceBlueprintWrapper.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EnvQueryInstanceBlueprintWrapper.h"));
				MetaData->SetValue(NewProp_OnQueryFinishedEvent, TEXT("Category"), TEXT("AI|EQS"));
				MetaData->SetValue(NewProp_OnQueryFinishedEvent, TEXT("DisplayName"), TEXT("OnQueryFinished"));
				MetaData->SetValue(NewProp_OnQueryFinishedEvent, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EnvQueryInstanceBlueprintWrapper.h"));
				MetaData->SetValue(NewProp_OptionIndex, TEXT("Category"), TEXT("EQS"));
				MetaData->SetValue(NewProp_OptionIndex, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EnvQueryInstanceBlueprintWrapper.h"));
				MetaData->SetValue(NewProp_OptionIndex, TEXT("ToolTip"), TEXT("index of query option, that generated items"));
				MetaData->SetValue(NewProp_ItemType, TEXT("Category"), TEXT("EQS"));
				MetaData->SetValue(NewProp_ItemType, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EnvQueryInstanceBlueprintWrapper.h"));
				MetaData->SetValue(NewProp_QueryID, TEXT("Category"), TEXT("EQS"));
				MetaData->SetValue(NewProp_QueryID, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EnvQueryInstanceBlueprintWrapper.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UEnvQueryInstanceBlueprintWrapper(Z_Construct_UClass_UEnvQueryInstanceBlueprintWrapper, TEXT("UEnvQueryInstanceBlueprintWrapper"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UEnvQueryInstanceBlueprintWrapper);
	UClass* Z_Construct_UClass_UEnvQueryItemType_VectorBase_NoRegister()
	{
		return UEnvQueryItemType_VectorBase::StaticClass();
	}
	UClass* Z_Construct_UClass_UEnvQueryItemType_VectorBase()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UEnvQueryItemType();
			Z_Construct_UPackage_AIModule();
			OuterClass = UEnvQueryItemType_VectorBase::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100081;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("EnvironmentQuery/Items/EnvQueryItemType_VectorBase.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/Items/EnvQueryItemType_VectorBase.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UEnvQueryItemType_VectorBase(Z_Construct_UClass_UEnvQueryItemType_VectorBase, TEXT("UEnvQueryItemType_VectorBase"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UEnvQueryItemType_VectorBase);
	UClass* Z_Construct_UClass_UEnvQueryItemType_ActorBase_NoRegister()
	{
		return UEnvQueryItemType_ActorBase::StaticClass();
	}
	UClass* Z_Construct_UClass_UEnvQueryItemType_ActorBase()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UEnvQueryItemType_VectorBase();
			Z_Construct_UPackage_AIModule();
			OuterClass = UEnvQueryItemType_ActorBase::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100081;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("EnvironmentQuery/Items/EnvQueryItemType_ActorBase.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/Items/EnvQueryItemType_ActorBase.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UEnvQueryItemType_ActorBase(Z_Construct_UClass_UEnvQueryItemType_ActorBase, TEXT("UEnvQueryItemType_ActorBase"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UEnvQueryItemType_ActorBase);
	UClass* Z_Construct_UClass_UEnvQueryItemType_Actor_NoRegister()
	{
		return UEnvQueryItemType_Actor::StaticClass();
	}
	UClass* Z_Construct_UClass_UEnvQueryItemType_Actor()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UEnvQueryItemType_ActorBase();
			Z_Construct_UPackage_AIModule();
			OuterClass = UEnvQueryItemType_Actor::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("EnvironmentQuery/Items/EnvQueryItemType_Actor.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/Items/EnvQueryItemType_Actor.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UEnvQueryItemType_Actor(Z_Construct_UClass_UEnvQueryItemType_Actor, TEXT("UEnvQueryItemType_Actor"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UEnvQueryItemType_Actor);
	UClass* Z_Construct_UClass_UEnvQueryItemType_Direction_NoRegister()
	{
		return UEnvQueryItemType_Direction::StaticClass();
	}
	UClass* Z_Construct_UClass_UEnvQueryItemType_Direction()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UEnvQueryItemType_VectorBase();
			Z_Construct_UPackage_AIModule();
			OuterClass = UEnvQueryItemType_Direction::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("EnvironmentQuery/Items/EnvQueryItemType_Direction.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/Items/EnvQueryItemType_Direction.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UEnvQueryItemType_Direction(Z_Construct_UClass_UEnvQueryItemType_Direction, TEXT("UEnvQueryItemType_Direction"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UEnvQueryItemType_Direction);
	UClass* Z_Construct_UClass_UEnvQueryItemType_Point_NoRegister()
	{
		return UEnvQueryItemType_Point::StaticClass();
	}
	UClass* Z_Construct_UClass_UEnvQueryItemType_Point()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UEnvQueryItemType_VectorBase();
			Z_Construct_UPackage_AIModule();
			OuterClass = UEnvQueryItemType_Point::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("EnvironmentQuery/Items/EnvQueryItemType_Point.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/Items/EnvQueryItemType_Point.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UEnvQueryItemType_Point(Z_Construct_UClass_UEnvQueryItemType_Point, TEXT("UEnvQueryItemType_Point"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UEnvQueryItemType_Point);
	UScriptStruct* Z_Construct_UScriptStruct_FEnvQueryInstanceCache()
	{
		UPackage* Outer=Z_Construct_UPackage_AIModule();
		extern uint32 Get_Z_Construct_UScriptStruct_FEnvQueryInstanceCache_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("EnvQueryInstanceCache"), sizeof(FEnvQueryInstanceCache), Get_Z_Construct_UScriptStruct_FEnvQueryInstanceCache_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EnvQueryInstanceCache"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FEnvQueryInstanceCache>, EStructFlags(0x00000001));
			UProperty* NewProp_Template = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Template"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(Template, FEnvQueryInstanceCache), 0x0000000000000000, Z_Construct_UClass_UEnvQuery_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EnvQueryManager.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("cache of instances with sorted tests"));
			MetaData->SetValue(NewProp_Template, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EnvQueryManager.h"));
			MetaData->SetValue(NewProp_Template, TEXT("ToolTip"), TEXT("query template, duplicated in manager's world"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FEnvQueryInstanceCache_CRC() { return 2473876914U; }
	UScriptStruct* Z_Construct_UScriptStruct_FEnvQueryRequest()
	{
		UPackage* Outer=Z_Construct_UPackage_AIModule();
		extern uint32 Get_Z_Construct_UScriptStruct_FEnvQueryRequest_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("EnvQueryRequest"), sizeof(FEnvQueryRequest), Get_Z_Construct_UScriptStruct_FEnvQueryRequest_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EnvQueryRequest"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FEnvQueryRequest>, EStructFlags(0x00000201));
			UProperty* NewProp_World = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("World"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(World, FEnvQueryRequest), 0x0000080000000000, Z_Construct_UClass_UWorld_NoRegister());
			UProperty* NewProp_Owner = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Owner"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(Owner, FEnvQueryRequest), 0x0000080000000000, Z_Construct_UClass_UObject_NoRegister());
			UProperty* NewProp_QueryTemplate = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("QueryTemplate"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(QueryTemplate, FEnvQueryRequest), 0x0000080000000000, Z_Construct_UClass_UEnvQuery_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EnvQueryManager.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("wrapper for easy query execution"));
			MetaData->SetValue(NewProp_World, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EnvQueryManager.h"));
			MetaData->SetValue(NewProp_World, TEXT("ToolTip"), TEXT("world"));
			MetaData->SetValue(NewProp_Owner, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EnvQueryManager.h"));
			MetaData->SetValue(NewProp_Owner, TEXT("ToolTip"), TEXT("querier"));
			MetaData->SetValue(NewProp_QueryTemplate, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EnvQueryManager.h"));
			MetaData->SetValue(NewProp_QueryTemplate, TEXT("ToolTip"), TEXT("query to run"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FEnvQueryRequest_CRC() { return 1518972742U; }
	UFunction* Z_Construct_UFunction_UEnvQueryManager_RunEQSQuery()
	{
		struct EnvQueryManager_eventRunEQSQuery_Parms
		{
			UObject* WorldContext;
			UEnvQuery* QueryTemplate;
			UObject* Querier;
			TEnumAsByte<EEnvQueryRunMode::Type> RunMode;
			TSubclassOf<UEnvQueryInstanceBlueprintWrapper>  WrapperClass;
			UEnvQueryInstanceBlueprintWrapper* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UEnvQueryManager();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("RunEQSQuery"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(EnvQueryManager_eventRunEQSQuery_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, EnvQueryManager_eventRunEQSQuery_Parms), 0x0000000000000580, Z_Construct_UClass_UEnvQueryInstanceBlueprintWrapper_NoRegister());
			UProperty* NewProp_WrapperClass = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("WrapperClass"), RF_Public|RF_Transient|RF_Native) UClassProperty(CPP_PROPERTY_BASE(WrapperClass, EnvQueryManager_eventRunEQSQuery_Parms), 0x0004040000000080, Z_Construct_UClass_UEnvQueryInstanceBlueprintWrapper_NoRegister());
			UProperty* NewProp_RunMode = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RunMode"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(RunMode, EnvQueryManager_eventRunEQSQuery_Parms), 0x0000000000000080, Z_Construct_UEnum_AIModule_EEnvQueryRunMode());
			UProperty* NewProp_Querier = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Querier"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(Querier, EnvQueryManager_eventRunEQSQuery_Parms), 0x0000000000000080, Z_Construct_UClass_UObject_NoRegister());
			UProperty* NewProp_QueryTemplate = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("QueryTemplate"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(QueryTemplate, EnvQueryManager_eventRunEQSQuery_Parms), 0x0000000000000080, Z_Construct_UClass_UEnvQuery_NoRegister());
			UProperty* NewProp_WorldContext = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("WorldContext"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(WorldContext, EnvQueryManager_eventRunEQSQuery_Parms), 0x0000000000000080, Z_Construct_UClass_UObject_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("AdvancedDisplay"), TEXT("WrapperClass"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|EQS"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EnvQueryManager.h"));
			MetaData->SetValue(ReturnFunction, TEXT("WorldContext"), TEXT("WorldContext"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UEnvQueryManager_NoRegister()
	{
		return UEnvQueryManager::StaticClass();
	}
	UClass* Z_Construct_UClass_UEnvQueryManager()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage_AIModule();
			OuterClass = UEnvQueryManager::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;

				OuterClass->LinkChild(Z_Construct_UFunction_UEnvQueryManager_RunEQSQuery());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_LocalContexts = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("LocalContexts"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(LocalContexts, UEnvQueryManager), 0x0000080000002000);
				UProperty* NewProp_LocalContexts_Inner = new(EC_InternalUseOnlyConstructor, NewProp_LocalContexts, TEXT("LocalContexts"), RF_Public|RF_Transient|RF_Native) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UClass_UEnvQueryContext_NoRegister());
				UProperty* NewProp_InstanceCache = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("InstanceCache"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(InstanceCache, UEnvQueryManager), 0x0000080000002000);
				UProperty* NewProp_InstanceCache_Inner = new(EC_InternalUseOnlyConstructor, NewProp_InstanceCache, TEXT("InstanceCache"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FEnvQueryInstanceCache());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UEnvQueryManager_RunEQSQuery()); // 3508904225
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("EnvironmentQuery/EnvQueryManager.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EnvQueryManager.h"));
				MetaData->SetValue(NewProp_LocalContexts, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EnvQueryManager.h"));
				MetaData->SetValue(NewProp_LocalContexts, TEXT("ToolTip"), TEXT("local cache of context objects for managing BP based objects"));
				MetaData->SetValue(NewProp_InstanceCache, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EnvQueryManager.h"));
				MetaData->SetValue(NewProp_InstanceCache, TEXT("ToolTip"), TEXT("cache of instances"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UEnvQueryManager(Z_Construct_UClass_UEnvQueryManager, TEXT("UEnvQueryManager"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UEnvQueryManager);
	UClass* Z_Construct_UClass_UEnvQueryNode_NoRegister()
	{
		return UEnvQueryNode::StaticClass();
	}
	UClass* Z_Construct_UClass_UEnvQueryNode()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage_AIModule();
			OuterClass = UEnvQueryNode::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100081;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_VerNum = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("VerNum"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(VerNum, UEnvQueryNode), 0x0000000000000000);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("EnvironmentQuery/EnvQueryNode.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EnvQueryNode.h"));
				MetaData->SetValue(NewProp_VerNum, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EnvQueryNode.h"));
				MetaData->SetValue(NewProp_VerNum, TEXT("ToolTip"), TEXT("Versioning for updating deprecated properties"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UEnvQueryNode(Z_Construct_UClass_UEnvQueryNode, TEXT("UEnvQueryNode"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UEnvQueryNode);
	UClass* Z_Construct_UClass_UEnvQueryGenerator_NoRegister()
	{
		return UEnvQueryGenerator::StaticClass();
	}
	UClass* Z_Construct_UClass_UEnvQueryGenerator()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UEnvQueryNode();
			Z_Construct_UPackage_AIModule();
			OuterClass = UEnvQueryGenerator::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20101081;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_ItemType = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ItemType"), RF_Public|RF_Transient|RF_Native) UClassProperty(CPP_PROPERTY_BASE(ItemType, UEnvQueryGenerator), 0x0004000000000000, Z_Construct_UClass_UEnvQueryItemType_NoRegister());
				UProperty* NewProp_OptionName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OptionName"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(OptionName, UEnvQueryGenerator), 0x0000000000010001);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("Category"), TEXT("Generators"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("EnvironmentQuery/EnvQueryGenerator.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EnvQueryGenerator.h"));
				MetaData->SetValue(NewProp_ItemType, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EnvQueryGenerator.h"));
				MetaData->SetValue(NewProp_ItemType, TEXT("ToolTip"), TEXT("type of generated items"));
				MetaData->SetValue(NewProp_OptionName, TEXT("Category"), TEXT("Option"));
				MetaData->SetValue(NewProp_OptionName, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EnvQueryGenerator.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UEnvQueryGenerator(Z_Construct_UClass_UEnvQueryGenerator, TEXT("UEnvQueryGenerator"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UEnvQueryGenerator);
	UClass* Z_Construct_UClass_UEnvQueryGenerator_ActorsOfClass_NoRegister()
	{
		return UEnvQueryGenerator_ActorsOfClass::StaticClass();
	}
	UClass* Z_Construct_UClass_UEnvQueryGenerator_ActorsOfClass()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UEnvQueryGenerator();
			Z_Construct_UPackage_AIModule();
			OuterClass = UEnvQueryGenerator_ActorsOfClass::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20801080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_SearchCenter = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SearchCenter"), RF_Public|RF_Transient|RF_Native) UClassProperty(CPP_PROPERTY_BASE(SearchCenter, UEnvQueryGenerator_ActorsOfClass), 0x0004000000000001, Z_Construct_UClass_UEnvQueryContext_NoRegister());
				UProperty* NewProp_SearchedActorClass = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SearchedActorClass"), RF_Public|RF_Transient|RF_Native) UClassProperty(CPP_PROPERTY_BASE(SearchedActorClass, UEnvQueryGenerator_ActorsOfClass), 0x0004000000010001, Z_Construct_UClass_AActor_NoRegister());
				UProperty* NewProp_SearchRadius = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SearchRadius"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(SearchRadius, UEnvQueryGenerator_ActorsOfClass), 0x0000008000010001, Z_Construct_UScriptStruct_FAIDataProviderFloatValue());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("DisplayName"), TEXT("Actors Of Class"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("EnvironmentQuery/Generators/EnvQueryGenerator_ActorsOfClass.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/Generators/EnvQueryGenerator_ActorsOfClass.h"));
				MetaData->SetValue(NewProp_SearchCenter, TEXT("Category"), TEXT("Generator"));
				MetaData->SetValue(NewProp_SearchCenter, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/Generators/EnvQueryGenerator_ActorsOfClass.h"));
				MetaData->SetValue(NewProp_SearchCenter, TEXT("ToolTip"), TEXT("context"));
				MetaData->SetValue(NewProp_SearchedActorClass, TEXT("Category"), TEXT("Generator"));
				MetaData->SetValue(NewProp_SearchedActorClass, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/Generators/EnvQueryGenerator_ActorsOfClass.h"));
				MetaData->SetValue(NewProp_SearchRadius, TEXT("Category"), TEXT("Generator"));
				MetaData->SetValue(NewProp_SearchRadius, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/Generators/EnvQueryGenerator_ActorsOfClass.h"));
				MetaData->SetValue(NewProp_SearchRadius, TEXT("ToolTip"), TEXT("max distance of path between point and context"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UEnvQueryGenerator_ActorsOfClass(Z_Construct_UClass_UEnvQueryGenerator_ActorsOfClass, TEXT("UEnvQueryGenerator_ActorsOfClass"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UEnvQueryGenerator_ActorsOfClass);
	UFunction* Z_Construct_UFunction_UEnvQueryGenerator_BlueprintBase_AddGeneratedActor()
	{
		struct EnvQueryGenerator_BlueprintBase_eventAddGeneratedActor_Parms
		{
			AActor* GeneratedActor;
		};
		UObject* Outer=Z_Construct_UClass_UEnvQueryGenerator_BlueprintBase();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("AddGeneratedActor"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x44020401, 65535, sizeof(EnvQueryGenerator_BlueprintBase_eventAddGeneratedActor_Parms));
			UProperty* NewProp_GeneratedActor = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("GeneratedActor"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(GeneratedActor, EnvQueryGenerator_BlueprintBase_eventAddGeneratedActor_Parms), 0x0000000000000080, Z_Construct_UClass_AActor_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("EQS"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/Generators/EnvQueryGenerator_BlueprintBase.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UEnvQueryGenerator_BlueprintBase_AddGeneratedVector()
	{
		struct EnvQueryGenerator_BlueprintBase_eventAddGeneratedVector_Parms
		{
			FVector GeneratedVector;
		};
		UObject* Outer=Z_Construct_UClass_UEnvQueryGenerator_BlueprintBase();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("AddGeneratedVector"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x44820401, 65535, sizeof(EnvQueryGenerator_BlueprintBase_eventAddGeneratedVector_Parms));
			UProperty* NewProp_GeneratedVector = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("GeneratedVector"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(GeneratedVector, EnvQueryGenerator_BlueprintBase_eventAddGeneratedVector_Parms), 0x0000000000000080, Z_Construct_UScriptStruct_FVector());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("EQS"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/Generators/EnvQueryGenerator_BlueprintBase.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UEnvQueryGenerator_BlueprintBase_DoItemGeneration()
	{
		UObject* Outer=Z_Construct_UClass_UEnvQueryGenerator_BlueprintBase();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("DoItemGeneration"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x48420800, 65535, sizeof(EnvQueryGenerator_BlueprintBase_eventDoItemGeneration_Parms));
			UProperty* NewProp_ContextLocations = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ContextLocations"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(ContextLocations, EnvQueryGenerator_BlueprintBase_eventDoItemGeneration_Parms), 0x0000000008000182);
			UProperty* NewProp_ContextLocations_Inner = new(EC_InternalUseOnlyConstructor, NewProp_ContextLocations, TEXT("ContextLocations"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FVector());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Generator"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/Generators/EnvQueryGenerator_BlueprintBase.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UEnvQueryGenerator_BlueprintBase_GetQuerier()
	{
		struct EnvQueryGenerator_BlueprintBase_eventGetQuerier_Parms
		{
			UObject* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UEnvQueryGenerator_BlueprintBase();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetQuerier"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x54020401, 65535, sizeof(EnvQueryGenerator_BlueprintBase_eventGetQuerier_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, EnvQueryGenerator_BlueprintBase_eventGetQuerier_Parms), 0x0000000000000580, Z_Construct_UClass_UObject_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("EQS"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/Generators/EnvQueryGenerator_BlueprintBase.h"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UEnvQueryGenerator_BlueprintBase_NoRegister()
	{
		return UEnvQueryGenerator_BlueprintBase::StaticClass();
	}
	UClass* Z_Construct_UClass_UEnvQueryGenerator_BlueprintBase()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UEnvQueryGenerator();
			Z_Construct_UPackage_AIModule();
			OuterClass = UEnvQueryGenerator_BlueprintBase::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20101081;

				OuterClass->LinkChild(Z_Construct_UFunction_UEnvQueryGenerator_BlueprintBase_AddGeneratedActor());
				OuterClass->LinkChild(Z_Construct_UFunction_UEnvQueryGenerator_BlueprintBase_AddGeneratedVector());
				OuterClass->LinkChild(Z_Construct_UFunction_UEnvQueryGenerator_BlueprintBase_DoItemGeneration());
				OuterClass->LinkChild(Z_Construct_UFunction_UEnvQueryGenerator_BlueprintBase_GetQuerier());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_GeneratedItemType = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("GeneratedItemType"), RF_Public|RF_Transient|RF_Native) UClassProperty(CPP_PROPERTY_BASE(GeneratedItemType, UEnvQueryGenerator_BlueprintBase), 0x0004000000010001, Z_Construct_UClass_UEnvQueryItemType_NoRegister());
				UProperty* NewProp_Context = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Context"), RF_Public|RF_Transient|RF_Native) UClassProperty(CPP_PROPERTY_BASE(Context, UEnvQueryGenerator_BlueprintBase), 0x0004000000000001, Z_Construct_UClass_UEnvQueryContext_NoRegister());
				UProperty* NewProp_GeneratorsActionDescription = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("GeneratorsActionDescription"), RF_Public|RF_Transient|RF_Native) UTextProperty(CPP_PROPERTY_BASE(GeneratorsActionDescription, UEnvQueryGenerator_BlueprintBase), 0x0000000000000001);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UEnvQueryGenerator_BlueprintBase_AddGeneratedActor()); // 2698441884
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UEnvQueryGenerator_BlueprintBase_AddGeneratedVector()); // 3499288204
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UEnvQueryGenerator_BlueprintBase_DoItemGeneration()); // 828101567
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UEnvQueryGenerator_BlueprintBase_GetQuerier()); // 2218720681
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("EnvironmentQuery/Generators/EnvQueryGenerator_BlueprintBase.h"));
				MetaData->SetValue(OuterClass, TEXT("IsBlueprintBase"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/Generators/EnvQueryGenerator_BlueprintBase.h"));
				MetaData->SetValue(NewProp_GeneratedItemType, TEXT("Category"), TEXT("Generator"));
				MetaData->SetValue(NewProp_GeneratedItemType, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/Generators/EnvQueryGenerator_BlueprintBase.h"));
				MetaData->SetValue(NewProp_Context, TEXT("Category"), TEXT("Generator"));
				MetaData->SetValue(NewProp_Context, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/Generators/EnvQueryGenerator_BlueprintBase.h"));
				MetaData->SetValue(NewProp_Context, TEXT("ToolTip"), TEXT("context"));
				MetaData->SetValue(NewProp_GeneratorsActionDescription, TEXT("Category"), TEXT("Generator"));
				MetaData->SetValue(NewProp_GeneratorsActionDescription, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/Generators/EnvQueryGenerator_BlueprintBase.h"));
				MetaData->SetValue(NewProp_GeneratorsActionDescription, TEXT("ToolTip"), TEXT("A short description of what test does, like \"Generate pawn named Joe\""));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UEnvQueryGenerator_BlueprintBase(Z_Construct_UClass_UEnvQueryGenerator_BlueprintBase, TEXT("UEnvQueryGenerator_BlueprintBase"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UEnvQueryGenerator_BlueprintBase);
	UClass* Z_Construct_UClass_UEnvQueryGenerator_Composite_NoRegister()
	{
		return UEnvQueryGenerator_Composite::StaticClass();
	}
	UClass* Z_Construct_UClass_UEnvQueryGenerator_Composite()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UEnvQueryGenerator();
			Z_Construct_UPackage_AIModule();
			OuterClass = UEnvQueryGenerator_Composite::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20901080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bHasMatchingItemType, UEnvQueryGenerator_Composite, bool);
				UProperty* NewProp_bHasMatchingItemType = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bHasMatchingItemType"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bHasMatchingItemType, UEnvQueryGenerator_Composite), 0x0000000000000000, CPP_BOOL_PROPERTY_BITMASK(bHasMatchingItemType, UEnvQueryGenerator_Composite), sizeof(bool), true);
				UProperty* NewProp_Generators = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Generators"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(Generators, UEnvQueryGenerator_Composite), 0x0000008000010009);
				UProperty* NewProp_Generators_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Generators, TEXT("Generators"), RF_Public|RF_Transient|RF_Native) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0002000000080008, Z_Construct_UClass_UEnvQueryGenerator_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("DisplayName"), TEXT("Composite"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("EnvironmentQuery/Generators/EnvQueryGenerator_Composite.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/Generators/EnvQueryGenerator_Composite.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Composite generator allows using multiple generators in single query option\nAll child generators must produce exactly the same item type!"));
				MetaData->SetValue(NewProp_bHasMatchingItemType, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/Generators/EnvQueryGenerator_Composite.h"));
				MetaData->SetValue(NewProp_Generators, TEXT("Category"), TEXT("Generator"));
				MetaData->SetValue(NewProp_Generators, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_Generators, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/Generators/EnvQueryGenerator_Composite.h"));
				MetaData->SetValue(NewProp_Generators_Inner, TEXT("Category"), TEXT("Generator"));
				MetaData->SetValue(NewProp_Generators_Inner, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_Generators_Inner, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/Generators/EnvQueryGenerator_Composite.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UEnvQueryGenerator_Composite(Z_Construct_UClass_UEnvQueryGenerator_Composite, TEXT("UEnvQueryGenerator_Composite"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UEnvQueryGenerator_Composite);
	UClass* Z_Construct_UClass_UEnvQueryGenerator_ProjectedPoints_NoRegister()
	{
		return UEnvQueryGenerator_ProjectedPoints::StaticClass();
	}
	UClass* Z_Construct_UClass_UEnvQueryGenerator_ProjectedPoints()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UEnvQueryGenerator();
			Z_Construct_UPackage_AIModule();
			OuterClass = UEnvQueryGenerator_ProjectedPoints::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20101081;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_ProjectionData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ProjectionData"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(ProjectionData, UEnvQueryGenerator_ProjectedPoints), 0x0000000000010001, Z_Construct_UScriptStruct_FEnvTraceData());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("EnvironmentQuery/Generators/EnvQueryGenerator_ProjectedPoints.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/Generators/EnvQueryGenerator_ProjectedPoints.h"));
				MetaData->SetValue(NewProp_ProjectionData, TEXT("Category"), TEXT("Generator"));
				MetaData->SetValue(NewProp_ProjectionData, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/Generators/EnvQueryGenerator_ProjectedPoints.h"));
				MetaData->SetValue(NewProp_ProjectionData, TEXT("ToolTip"), TEXT("trace params"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UEnvQueryGenerator_ProjectedPoints(Z_Construct_UClass_UEnvQueryGenerator_ProjectedPoints, TEXT("UEnvQueryGenerator_ProjectedPoints"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UEnvQueryGenerator_ProjectedPoints);
	UClass* Z_Construct_UClass_UEnvQueryGenerator_Donut_NoRegister()
	{
		return UEnvQueryGenerator_Donut::StaticClass();
	}
	UClass* Z_Construct_UClass_UEnvQueryGenerator_Donut()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UEnvQueryGenerator_ProjectedPoints();
			Z_Construct_UPackage_AIModule();
			OuterClass = UEnvQueryGenerator_Donut::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20901080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bDefineArc, UEnvQueryGenerator_Donut, uint8);
				UProperty* NewProp_bDefineArc = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bDefineArc"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bDefineArc, UEnvQueryGenerator_Donut), 0x0000000000000000, CPP_BOOL_PROPERTY_BITMASK(bDefineArc, UEnvQueryGenerator_Donut), sizeof(uint8), false);
				UProperty* NewProp_Center = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Center"), RF_Public|RF_Transient|RF_Native) UClassProperty(CPP_PROPERTY_BASE(Center, UEnvQueryGenerator_Donut), 0x0004000000000001, Z_Construct_UClass_UEnvQueryContext_NoRegister());
				UProperty* NewProp_ArcAngle = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ArcAngle"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(ArcAngle, UEnvQueryGenerator_Donut), 0x0000008000010001, Z_Construct_UScriptStruct_FAIDataProviderFloatValue());
				UProperty* NewProp_ArcDirection = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ArcDirection"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(ArcDirection, UEnvQueryGenerator_Donut), 0x0000000000010001, Z_Construct_UScriptStruct_FEnvDirection());
				UProperty* NewProp_PointsPerRing = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("PointsPerRing"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(PointsPerRing, UEnvQueryGenerator_Donut), 0x0000008000010001, Z_Construct_UScriptStruct_FAIDataProviderIntValue());
				UProperty* NewProp_NumberOfRings = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("NumberOfRings"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(NumberOfRings, UEnvQueryGenerator_Donut), 0x0000008000010001, Z_Construct_UScriptStruct_FAIDataProviderIntValue());
				UProperty* NewProp_OuterRadius = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OuterRadius"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(OuterRadius, UEnvQueryGenerator_Donut), 0x0000008000010001, Z_Construct_UScriptStruct_FAIDataProviderFloatValue());
				UProperty* NewProp_InnerRadius = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("InnerRadius"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(InnerRadius, UEnvQueryGenerator_Donut), 0x0000008000010001, Z_Construct_UScriptStruct_FAIDataProviderFloatValue());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("DisplayName"), TEXT("Points: Donut"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("EnvironmentQuery/Generators/EnvQueryGenerator_Donut.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/Generators/EnvQueryGenerator_Donut.h"));
				MetaData->SetValue(NewProp_bDefineArc, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/Generators/EnvQueryGenerator_Donut.h"));
				MetaData->SetValue(NewProp_Center, TEXT("Category"), TEXT("Generator"));
				MetaData->SetValue(NewProp_Center, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/Generators/EnvQueryGenerator_Donut.h"));
				MetaData->SetValue(NewProp_Center, TEXT("ToolTip"), TEXT("context"));
				MetaData->SetValue(NewProp_ArcAngle, TEXT("Category"), TEXT("Generator"));
				MetaData->SetValue(NewProp_ArcAngle, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/Generators/EnvQueryGenerator_Donut.h"));
				MetaData->SetValue(NewProp_ArcAngle, TEXT("ToolTip"), TEXT("If you generate items on a piece of circle you define angle of Arc cut here"));
				MetaData->SetValue(NewProp_ArcDirection, TEXT("Category"), TEXT("Generator"));
				MetaData->SetValue(NewProp_ArcDirection, TEXT("EditCondition"), TEXT("bDefineArc"));
				MetaData->SetValue(NewProp_ArcDirection, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/Generators/EnvQueryGenerator_Donut.h"));
				MetaData->SetValue(NewProp_ArcDirection, TEXT("ToolTip"), TEXT("If you generate items on a piece of circle you define direction of Arc cut here"));
				MetaData->SetValue(NewProp_PointsPerRing, TEXT("Category"), TEXT("Generator"));
				MetaData->SetValue(NewProp_PointsPerRing, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/Generators/EnvQueryGenerator_Donut.h"));
				MetaData->SetValue(NewProp_PointsPerRing, TEXT("ToolTip"), TEXT("number of items to generate for each ring"));
				MetaData->SetValue(NewProp_NumberOfRings, TEXT("Category"), TEXT("Generator"));
				MetaData->SetValue(NewProp_NumberOfRings, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/Generators/EnvQueryGenerator_Donut.h"));
				MetaData->SetValue(NewProp_NumberOfRings, TEXT("ToolTip"), TEXT("number of rings to generate"));
				MetaData->SetValue(NewProp_OuterRadius, TEXT("Category"), TEXT("Generator"));
				MetaData->SetValue(NewProp_OuterRadius, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/Generators/EnvQueryGenerator_Donut.h"));
				MetaData->SetValue(NewProp_OuterRadius, TEXT("ToolTip"), TEXT("max distance between point and context"));
				MetaData->SetValue(NewProp_InnerRadius, TEXT("Category"), TEXT("Generator"));
				MetaData->SetValue(NewProp_InnerRadius, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/Generators/EnvQueryGenerator_Donut.h"));
				MetaData->SetValue(NewProp_InnerRadius, TEXT("ToolTip"), TEXT("min distance between point and context"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UEnvQueryGenerator_Donut(Z_Construct_UClass_UEnvQueryGenerator_Donut, TEXT("UEnvQueryGenerator_Donut"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UEnvQueryGenerator_Donut);
	UClass* Z_Construct_UClass_UEnvQueryGenerator_OnCircle_NoRegister()
	{
		return UEnvQueryGenerator_OnCircle::StaticClass();
	}
	UClass* Z_Construct_UClass_UEnvQueryGenerator_OnCircle()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UEnvQueryGenerator_ProjectedPoints();
			Z_Construct_UPackage_AIModule();
			OuterClass = UEnvQueryGenerator_OnCircle::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20901080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bDefineArc, UEnvQueryGenerator_OnCircle, uint8);
				UProperty* NewProp_bDefineArc = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bDefineArc"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bDefineArc, UEnvQueryGenerator_OnCircle), 0x0000000000000000, CPP_BOOL_PROPERTY_BITMASK(bDefineArc, UEnvQueryGenerator_OnCircle), sizeof(uint8), false);
				UProperty* NewProp_TraceData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("TraceData"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(TraceData, UEnvQueryGenerator_OnCircle), 0x0000000000000001, Z_Construct_UScriptStruct_FEnvTraceData());
				UProperty* NewProp_CircleCenter = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CircleCenter"), RF_Public|RF_Transient|RF_Native) UClassProperty(CPP_PROPERTY_BASE(CircleCenter, UEnvQueryGenerator_OnCircle), 0x0004000000000001, Z_Construct_UClass_UEnvQueryContext_NoRegister());
				UProperty* NewProp_AngleRadians = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AngleRadians"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(AngleRadians, UEnvQueryGenerator_OnCircle), 0x0000000000000000);
				UProperty* NewProp_ArcAngle = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ArcAngle"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(ArcAngle, UEnvQueryGenerator_OnCircle), 0x0000008000010001, Z_Construct_UScriptStruct_FAIDataProviderFloatValue());
				UProperty* NewProp_ArcDirection = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ArcDirection"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(ArcDirection, UEnvQueryGenerator_OnCircle), 0x0000000000010001, Z_Construct_UScriptStruct_FEnvDirection());
				UProperty* NewProp_SpaceBetween = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SpaceBetween"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(SpaceBetween, UEnvQueryGenerator_OnCircle), 0x0000008000010001, Z_Construct_UScriptStruct_FAIDataProviderFloatValue());
				UProperty* NewProp_CircleRadius = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CircleRadius"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(CircleRadius, UEnvQueryGenerator_OnCircle), 0x0000008000010001, Z_Construct_UScriptStruct_FAIDataProviderFloatValue());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("DisplayName"), TEXT("Points: Circle"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("EnvironmentQuery/Generators/EnvQueryGenerator_OnCircle.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/Generators/EnvQueryGenerator_OnCircle.h"));
				MetaData->SetValue(NewProp_bDefineArc, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/Generators/EnvQueryGenerator_OnCircle.h"));
				MetaData->SetValue(NewProp_TraceData, TEXT("Category"), TEXT("Generator"));
				MetaData->SetValue(NewProp_TraceData, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/Generators/EnvQueryGenerator_OnCircle.h"));
				MetaData->SetValue(NewProp_TraceData, TEXT("ToolTip"), TEXT("horizontal trace for nearest obstacle"));
				MetaData->SetValue(NewProp_CircleCenter, TEXT("Category"), TEXT("Generator"));
				MetaData->SetValue(NewProp_CircleCenter, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/Generators/EnvQueryGenerator_OnCircle.h"));
				MetaData->SetValue(NewProp_CircleCenter, TEXT("ToolTip"), TEXT("context"));
				MetaData->SetValue(NewProp_AngleRadians, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/Generators/EnvQueryGenerator_OnCircle.h"));
				MetaData->SetValue(NewProp_ArcAngle, TEXT("Category"), TEXT("Generator"));
				MetaData->SetValue(NewProp_ArcAngle, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/Generators/EnvQueryGenerator_OnCircle.h"));
				MetaData->SetValue(NewProp_ArcAngle, TEXT("ToolTip"), TEXT("If you generate items on a piece of circle you define angle of Arc cut here"));
				MetaData->SetValue(NewProp_ArcDirection, TEXT("Category"), TEXT("Generator"));
				MetaData->SetValue(NewProp_ArcDirection, TEXT("EditCondition"), TEXT("bDefineArc"));
				MetaData->SetValue(NewProp_ArcDirection, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/Generators/EnvQueryGenerator_OnCircle.h"));
				MetaData->SetValue(NewProp_ArcDirection, TEXT("ToolTip"), TEXT("If you generate items on a piece of circle you define direction of Arc cut here"));
				MetaData->SetValue(NewProp_SpaceBetween, TEXT("Category"), TEXT("Generator"));
				MetaData->SetValue(NewProp_SpaceBetween, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/Generators/EnvQueryGenerator_OnCircle.h"));
				MetaData->SetValue(NewProp_SpaceBetween, TEXT("ToolTip"), TEXT("items will be generated on a circle this much apart"));
				MetaData->SetValue(NewProp_CircleRadius, TEXT("Category"), TEXT("Generator"));
				MetaData->SetValue(NewProp_CircleRadius, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/Generators/EnvQueryGenerator_OnCircle.h"));
				MetaData->SetValue(NewProp_CircleRadius, TEXT("ToolTip"), TEXT("max distance of path between point and context"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UEnvQueryGenerator_OnCircle(Z_Construct_UClass_UEnvQueryGenerator_OnCircle, TEXT("UEnvQueryGenerator_OnCircle"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UEnvQueryGenerator_OnCircle);
	UClass* Z_Construct_UClass_UEnvQueryGenerator_SimpleGrid_NoRegister()
	{
		return UEnvQueryGenerator_SimpleGrid::StaticClass();
	}
	UClass* Z_Construct_UClass_UEnvQueryGenerator_SimpleGrid()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UEnvQueryGenerator_ProjectedPoints();
			Z_Construct_UPackage_AIModule();
			OuterClass = UEnvQueryGenerator_SimpleGrid::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20801080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_GenerateAround = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("GenerateAround"), RF_Public|RF_Transient|RF_Native) UClassProperty(CPP_PROPERTY_BASE(GenerateAround, UEnvQueryGenerator_SimpleGrid), 0x0004000000010001, Z_Construct_UClass_UEnvQueryContext_NoRegister());
				UProperty* NewProp_SpaceBetween = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SpaceBetween"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(SpaceBetween, UEnvQueryGenerator_SimpleGrid), 0x0000008000010001, Z_Construct_UScriptStruct_FAIDataProviderFloatValue());
				UProperty* NewProp_GridSize = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("GridSize"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(GridSize, UEnvQueryGenerator_SimpleGrid), 0x0000008000010001, Z_Construct_UScriptStruct_FAIDataProviderFloatValue());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("DisplayName"), TEXT("Points: Grid"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("EnvironmentQuery/Generators/EnvQueryGenerator_SimpleGrid.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/Generators/EnvQueryGenerator_SimpleGrid.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Simple grid, generates points in 2D square around context"));
				MetaData->SetValue(NewProp_GenerateAround, TEXT("Category"), TEXT("Generator"));
				MetaData->SetValue(NewProp_GenerateAround, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/Generators/EnvQueryGenerator_SimpleGrid.h"));
				MetaData->SetValue(NewProp_GenerateAround, TEXT("ToolTip"), TEXT("context"));
				MetaData->SetValue(NewProp_SpaceBetween, TEXT("Category"), TEXT("Generator"));
				MetaData->SetValue(NewProp_SpaceBetween, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/Generators/EnvQueryGenerator_SimpleGrid.h"));
				MetaData->SetValue(NewProp_SpaceBetween, TEXT("ToolTip"), TEXT("generation density"));
				MetaData->SetValue(NewProp_GridSize, TEXT("Category"), TEXT("Generator"));
				MetaData->SetValue(NewProp_GridSize, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/Generators/EnvQueryGenerator_SimpleGrid.h"));
				MetaData->SetValue(NewProp_GridSize, TEXT("ToolTip"), TEXT("square's extent"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UEnvQueryGenerator_SimpleGrid(Z_Construct_UClass_UEnvQueryGenerator_SimpleGrid, TEXT("UEnvQueryGenerator_SimpleGrid"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UEnvQueryGenerator_SimpleGrid);
	UClass* Z_Construct_UClass_UEnvQueryGenerator_PathingGrid_NoRegister()
	{
		return UEnvQueryGenerator_PathingGrid::StaticClass();
	}
	UClass* Z_Construct_UClass_UEnvQueryGenerator_PathingGrid()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UEnvQueryGenerator_SimpleGrid();
			Z_Construct_UPackage_AIModule();
			OuterClass = UEnvQueryGenerator_PathingGrid::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20801080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_ScanRangeMultiplier = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ScanRangeMultiplier"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(ScanRangeMultiplier, UEnvQueryGenerator_PathingGrid), 0x0000048000010001, Z_Construct_UScriptStruct_FAIDataProviderFloatValue());
				UProperty* NewProp_NavigationFilter = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("NavigationFilter"), RF_Public|RF_Transient|RF_Native) UClassProperty(CPP_PROPERTY_BASE(NavigationFilter, UEnvQueryGenerator_PathingGrid), 0x0004000000010001, Z_Construct_UClass_UNavigationQueryFilter_NoRegister());
				UProperty* NewProp_PathToItem = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("PathToItem"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(PathToItem, UEnvQueryGenerator_PathingGrid), 0x0000008000010001, Z_Construct_UScriptStruct_FAIDataProviderBoolValue());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("DisplayName"), TEXT("Points: Pathing Grid"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("EnvironmentQuery/Generators/EnvQueryGenerator_PathingGrid.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/Generators/EnvQueryGenerator_PathingGrid.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Navigation grid, generates points on navmesh\nwith paths to/from context no further than given limit"));
				MetaData->SetValue(NewProp_ScanRangeMultiplier, TEXT("Category"), TEXT("Pathfinding"));
				MetaData->SetValue(NewProp_ScanRangeMultiplier, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/Generators/EnvQueryGenerator_PathingGrid.h"));
				MetaData->SetValue(NewProp_ScanRangeMultiplier, TEXT("ToolTip"), TEXT("multiplier for max distance between point and context"));
				MetaData->SetValue(NewProp_NavigationFilter, TEXT("Category"), TEXT("Generator"));
				MetaData->SetValue(NewProp_NavigationFilter, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/Generators/EnvQueryGenerator_PathingGrid.h"));
				MetaData->SetValue(NewProp_NavigationFilter, TEXT("ToolTip"), TEXT("navigation filter to use in pathfinding"));
				MetaData->SetValue(NewProp_PathToItem, TEXT("Category"), TEXT("Generator"));
				MetaData->SetValue(NewProp_PathToItem, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/Generators/EnvQueryGenerator_PathingGrid.h"));
				MetaData->SetValue(NewProp_PathToItem, TEXT("ToolTip"), TEXT("pathfinding direction"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UEnvQueryGenerator_PathingGrid(Z_Construct_UClass_UEnvQueryGenerator_PathingGrid, TEXT("UEnvQueryGenerator_PathingGrid"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UEnvQueryGenerator_PathingGrid);
	UClass* Z_Construct_UClass_UEnvQueryTest_NoRegister()
	{
		return UEnvQueryTest::StaticClass();
	}
	UClass* Z_Construct_UClass_UEnvQueryTest()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UEnvQueryNode();
			Z_Construct_UPackage_AIModule();
			OuterClass = UEnvQueryTest::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900081;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bWorkOnFloatValues, UEnvQueryTest, uint8);
				UProperty* NewProp_bWorkOnFloatValues = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bWorkOnFloatValues"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bWorkOnFloatValues, UEnvQueryTest), 0x0000000000000000, CPP_BOOL_PROPERTY_BITMASK(bWorkOnFloatValues, UEnvQueryTest), sizeof(uint8), false);
				UProperty* NewProp_ScoringFactor = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ScoringFactor"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(ScoringFactor, UEnvQueryTest), 0x0000008000010001, Z_Construct_UScriptStruct_FAIDataProviderFloatValue());
				UProperty* NewProp_ScoreClampMax = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ScoreClampMax"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(ScoreClampMax, UEnvQueryTest), 0x0000008000010001, Z_Construct_UScriptStruct_FAIDataProviderFloatValue());
				UProperty* NewProp_ScoreClampMin = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ScoreClampMin"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(ScoreClampMin, UEnvQueryTest), 0x0000008000010001, Z_Construct_UScriptStruct_FAIDataProviderFloatValue());
				UProperty* NewProp_ClampMaxType = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ClampMaxType"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(ClampMaxType, UEnvQueryTest), 0x0000000000010001, Z_Construct_UEnum_AIModule_EEnvQueryTestClamping());
				UProperty* NewProp_ClampMinType = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ClampMinType"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(ClampMinType, UEnvQueryTest), 0x0000000000010001, Z_Construct_UEnum_AIModule_EEnvQueryTestClamping());
				UProperty* NewProp_ScoringEquation = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ScoringEquation"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(ScoringEquation, UEnvQueryTest), 0x0000000000010001, Z_Construct_UEnum_AIModule_EEnvTestScoreEquation());
				UProperty* NewProp_FloatValueMax = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("FloatValueMax"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(FloatValueMax, UEnvQueryTest), 0x0000008000010001, Z_Construct_UScriptStruct_FAIDataProviderFloatValue());
				UProperty* NewProp_FloatValueMin = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("FloatValueMin"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(FloatValueMin, UEnvQueryTest), 0x0000008000010001, Z_Construct_UScriptStruct_FAIDataProviderFloatValue());
				UProperty* NewProp_BoolValue = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("BoolValue"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(BoolValue, UEnvQueryTest), 0x0000008000010001, Z_Construct_UScriptStruct_FAIDataProviderBoolValue());
				UProperty* NewProp_FilterType = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("FilterType"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(FilterType, UEnvQueryTest), 0x0000000000010001, Z_Construct_UEnum_AIModule_EEnvTestFilterType());
				UProperty* NewProp_MultipleContextScoreOp = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MultipleContextScoreOp"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(MultipleContextScoreOp, UEnvQueryTest), 0x0000040000010001, Z_Construct_UEnum_AIModule_EEnvTestScoreOperator());
				UProperty* NewProp_MultipleContextFilterOp = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MultipleContextFilterOp"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(MultipleContextFilterOp, UEnvQueryTest), 0x0000040000010001, Z_Construct_UEnum_AIModule_EEnvTestFilterOperator());
				UProperty* NewProp_TestPurpose = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("TestPurpose"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(TestPurpose, UEnvQueryTest), 0x0000000000010001, Z_Construct_UEnum_AIModule_EEnvTestPurpose());
				UProperty* NewProp_TestOrder = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("TestOrder"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(TestOrder, UEnvQueryTest), 0x0000000000000000);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("EnvironmentQuery/EnvQueryTest.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EnvQueryTest.h"));
				MetaData->SetValue(NewProp_bWorkOnFloatValues, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EnvQueryTest.h"));
				MetaData->SetValue(NewProp_bWorkOnFloatValues, TEXT("ToolTip"), TEXT("When set, test operates on float values (e.g. distance, with AtLeast, UpTo conditions),\notherwise it will accept bool values (e.g. visibility, with Equals condition)"));
				MetaData->SetValue(NewProp_ScoringFactor, TEXT("Category"), TEXT("Score"));
				MetaData->SetValue(NewProp_ScoringFactor, TEXT("ClampMin"), TEXT("0.001"));
				MetaData->SetValue(NewProp_ScoringFactor, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EnvQueryTest.h"));
				MetaData->SetValue(NewProp_ScoringFactor, TEXT("ToolTip"), TEXT("The weight (factor) by which to multiply the normalized score after the scoring equation is applied."));
				MetaData->SetValue(NewProp_ScoringFactor, TEXT("UIMin"), TEXT("0.001"));
				MetaData->SetValue(NewProp_ScoreClampMax, TEXT("Category"), TEXT("Score"));
				MetaData->SetValue(NewProp_ScoreClampMax, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EnvQueryTest.h"));
				MetaData->SetValue(NewProp_ScoreClampMax, TEXT("ToolTip"), TEXT("Maximum value to use to normalize the raw test value before applying scoring formula."));
				MetaData->SetValue(NewProp_ScoreClampMin, TEXT("Category"), TEXT("Score"));
				MetaData->SetValue(NewProp_ScoreClampMin, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EnvQueryTest.h"));
				MetaData->SetValue(NewProp_ScoreClampMin, TEXT("ToolTip"), TEXT("Minimum value to use to normalize the raw test value before applying scoring formula."));
				MetaData->SetValue(NewProp_ClampMaxType, TEXT("Category"), TEXT("Score"));
				MetaData->SetValue(NewProp_ClampMaxType, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EnvQueryTest.h"));
				MetaData->SetValue(NewProp_ClampMaxType, TEXT("ToolTip"), TEXT("How should the upper bound for normalization of the raw test value before applying the scoring formula be determined?\n          Should it use the highest value found (tested), the upper threshold for filtering, or a separate specified normalization maximum?"));
				MetaData->SetValue(NewProp_ClampMinType, TEXT("Category"), TEXT("Score"));
				MetaData->SetValue(NewProp_ClampMinType, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EnvQueryTest.h"));
				MetaData->SetValue(NewProp_ClampMinType, TEXT("ToolTip"), TEXT("How should the lower bound for normalization of the raw test value before applying the scoring formula be determined?\n          Should it use the lowest value found (tested), the lower threshold for filtering, or a separate specified normalization minimum?"));
				MetaData->SetValue(NewProp_ScoringEquation, TEXT("Category"), TEXT("Score"));
				MetaData->SetValue(NewProp_ScoringEquation, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EnvQueryTest.h"));
				MetaData->SetValue(NewProp_ScoringEquation, TEXT("ToolTip"), TEXT("The shape of the curve equation to apply to the normalized score before multiplying by factor."));
				MetaData->SetValue(NewProp_FloatValueMax, TEXT("Category"), TEXT("Filter"));
				MetaData->SetValue(NewProp_FloatValueMax, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EnvQueryTest.h"));
				MetaData->SetValue(NewProp_FloatValueMax, TEXT("ToolTip"), TEXT("Maximum limit (inclusive) of valid values for the raw test value. Higher values will be discarded as invalid."));
				MetaData->SetValue(NewProp_FloatValueMin, TEXT("Category"), TEXT("Filter"));
				MetaData->SetValue(NewProp_FloatValueMin, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EnvQueryTest.h"));
				MetaData->SetValue(NewProp_FloatValueMin, TEXT("ToolTip"), TEXT("Minimum limit (inclusive) of valid values for the raw test value. Lower values will be discarded as invalid."));
				MetaData->SetValue(NewProp_BoolValue, TEXT("Category"), TEXT("Filter"));
				MetaData->SetValue(NewProp_BoolValue, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EnvQueryTest.h"));
				MetaData->SetValue(NewProp_BoolValue, TEXT("ToolTip"), TEXT("Desired boolean value of the test for scoring to occur or filtering test to pass."));
				MetaData->SetValue(NewProp_FilterType, TEXT("Category"), TEXT("Filter"));
				MetaData->SetValue(NewProp_FilterType, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EnvQueryTest.h"));
				MetaData->SetValue(NewProp_FilterType, TEXT("ToolTip"), TEXT("Does this test filter out results that are below a lower limit, above an upper limit, or both?  Or does it just look for a matching value?"));
				MetaData->SetValue(NewProp_MultipleContextScoreOp, TEXT("Category"), TEXT("Score"));
				MetaData->SetValue(NewProp_MultipleContextScoreOp, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EnvQueryTest.h"));
				MetaData->SetValue(NewProp_MultipleContextScoreOp, TEXT("ToolTip"), TEXT("Determines scoring operator when context returns multiple items"));
				MetaData->SetValue(NewProp_MultipleContextFilterOp, TEXT("Category"), TEXT("Filter"));
				MetaData->SetValue(NewProp_MultipleContextFilterOp, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EnvQueryTest.h"));
				MetaData->SetValue(NewProp_MultipleContextFilterOp, TEXT("ToolTip"), TEXT("Determines filtering operator when context returns multiple items"));
				MetaData->SetValue(NewProp_TestPurpose, TEXT("Category"), TEXT("Test"));
				MetaData->SetValue(NewProp_TestPurpose, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EnvQueryTest.h"));
				MetaData->SetValue(NewProp_TestPurpose, TEXT("ToolTip"), TEXT("The purpose of this test.  Should it be used for filtering possible results, scoring them, or both?"));
				MetaData->SetValue(NewProp_TestOrder, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EnvQueryTest.h"));
				MetaData->SetValue(NewProp_TestOrder, TEXT("ToolTip"), TEXT("Number of test as defined in data asset"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UEnvQueryTest(Z_Construct_UClass_UEnvQueryTest, TEXT("UEnvQueryTest"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UEnvQueryTest);
	UEnum* Z_Construct_UEnum_AIModule_EEnvTestDistance()
	{
		UPackage* Outer=Z_Construct_UPackage_AIModule();
		extern uint32 Get_Z_Construct_UEnum_AIModule_EEnvTestDistance_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("EEnvTestDistance"), 0, Get_Z_Construct_UEnum_AIModule_EEnvTestDistance_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EEnvTestDistance"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EEnvTestDistance::Distance3D")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EEnvTestDistance::Distance2D")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EEnvTestDistance::DistanceZ")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EEnvTestDistance::EEnvTestDistance_MAX")), 3));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/Tests/EnvQueryTest_Distance.h"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_AIModule_EEnvTestDistance_CRC() { return 1780848295U; }
	UClass* Z_Construct_UClass_UEnvQueryTest_Distance_NoRegister()
	{
		return UEnvQueryTest_Distance::StaticClass();
	}
	UClass* Z_Construct_UClass_UEnvQueryTest_Distance()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UEnvQueryTest();
			Z_Construct_UPackage_AIModule();
			OuterClass = UEnvQueryTest_Distance::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_DistanceTo = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("DistanceTo"), RF_Public|RF_Transient|RF_Native) UClassProperty(CPP_PROPERTY_BASE(DistanceTo, UEnvQueryTest_Distance), 0x0004000000010001, Z_Construct_UClass_UEnvQueryContext_NoRegister());
				UProperty* NewProp_TestMode = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("TestMode"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(TestMode, UEnvQueryTest_Distance), 0x0000000000010001, Z_Construct_UEnum_AIModule_EEnvTestDistance());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("EnvironmentQuery/Tests/EnvQueryTest_Distance.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/Tests/EnvQueryTest_Distance.h"));
				MetaData->SetValue(NewProp_DistanceTo, TEXT("Category"), TEXT("Distance"));
				MetaData->SetValue(NewProp_DistanceTo, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/Tests/EnvQueryTest_Distance.h"));
				MetaData->SetValue(NewProp_DistanceTo, TEXT("ToolTip"), TEXT("context"));
				MetaData->SetValue(NewProp_TestMode, TEXT("Category"), TEXT("Distance"));
				MetaData->SetValue(NewProp_TestMode, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/Tests/EnvQueryTest_Distance.h"));
				MetaData->SetValue(NewProp_TestMode, TEXT("ToolTip"), TEXT("testing mode"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UEnvQueryTest_Distance(Z_Construct_UClass_UEnvQueryTest_Distance, TEXT("UEnvQueryTest_Distance"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UEnvQueryTest_Distance);
	UEnum* Z_Construct_UEnum_AIModule_EEnvTestDot()
	{
		UPackage* Outer=Z_Construct_UPackage_AIModule();
		extern uint32 Get_Z_Construct_UEnum_AIModule_EEnvTestDot_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("EEnvTestDot"), 0, Get_Z_Construct_UEnum_AIModule_EEnvTestDot_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EEnvTestDot"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EEnvTestDot::Dot3D")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EEnvTestDot::Dot2D")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EEnvTestDot::EEnvTestDot_MAX")), 2));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::EnumClass);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnEnum, TEXT("Dot2D.DisplayName"), TEXT("Dot 2D (Heading)"));
			MetaData->SetValue(ReturnEnum, TEXT("Dot2D.Tooltip"), TEXT("Dot Product in the XY-plane, which is equivalent to the cosine of the heading or yaw angle."));
			MetaData->SetValue(ReturnEnum, TEXT("Dot3D.DisplayName"), TEXT("Dot (3D)"));
			MetaData->SetValue(ReturnEnum, TEXT("Dot3D.Tooltip"), TEXT("Fully 3D dot-product"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/Tests/EnvQueryTest_Dot.h"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_AIModule_EEnvTestDot_CRC() { return 3548119019U; }
	UClass* Z_Construct_UClass_UEnvQueryTest_Dot_NoRegister()
	{
		return UEnvQueryTest_Dot::StaticClass();
	}
	UClass* Z_Construct_UClass_UEnvQueryTest_Dot()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UEnvQueryTest();
			Z_Construct_UPackage_AIModule();
			OuterClass = UEnvQueryTest_Dot::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20880080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bAbsoluteValue, UEnvQueryTest_Dot, bool);
				UProperty* NewProp_bAbsoluteValue = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bAbsoluteValue"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bAbsoluteValue, UEnvQueryTest_Dot), 0x0000080000010001, CPP_BOOL_PROPERTY_BITMASK(bAbsoluteValue, UEnvQueryTest_Dot), sizeof(bool), true);
				UProperty* NewProp_TestMode = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("TestMode"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(TestMode, UEnvQueryTest_Dot), 0x0000080000010001, Z_Construct_UEnum_AIModule_EEnvTestDot());
				UProperty* NewProp_LineB = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("LineB"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(LineB, UEnvQueryTest_Dot), 0x0000080000010001, Z_Construct_UScriptStruct_FEnvDirection());
				UProperty* NewProp_LineA = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("LineA"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(LineA, UEnvQueryTest_Dot), 0x0000080000010001, Z_Construct_UScriptStruct_FEnvDirection());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("EnvironmentQuery/Tests/EnvQueryTest_Dot.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/Tests/EnvQueryTest_Dot.h"));
				MetaData->SetValue(NewProp_bAbsoluteValue, TEXT("Category"), TEXT("Dot"));
				MetaData->SetValue(NewProp_bAbsoluteValue, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/Tests/EnvQueryTest_Dot.h"));
				MetaData->SetValue(NewProp_bAbsoluteValue, TEXT("ToolTip"), TEXT("If true, this test uses the absolute value of the dot product rather than the dot product itself.  Useful\nwhen you want to compare \"how lateral\" something is.  I.E. values closer to zero are further to the side,\nand values closer to 1 are more in front or behind (without distinguishing forward/backward)."));
				MetaData->SetValue(NewProp_TestMode, TEXT("Category"), TEXT("Dot"));
				MetaData->SetValue(NewProp_TestMode, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/Tests/EnvQueryTest_Dot.h"));
				MetaData->SetValue(NewProp_LineB, TEXT("Category"), TEXT("Dot"));
				MetaData->SetValue(NewProp_LineB, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/Tests/EnvQueryTest_Dot.h"));
				MetaData->SetValue(NewProp_LineB, TEXT("ToolTip"), TEXT("defines direction of second line used by test"));
				MetaData->SetValue(NewProp_LineA, TEXT("Category"), TEXT("Dot"));
				MetaData->SetValue(NewProp_LineA, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/Tests/EnvQueryTest_Dot.h"));
				MetaData->SetValue(NewProp_LineA, TEXT("ToolTip"), TEXT("defines direction of first line used by test"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UEnvQueryTest_Dot(Z_Construct_UClass_UEnvQueryTest_Dot, TEXT("UEnvQueryTest_Dot"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UEnvQueryTest_Dot);
	UClass* Z_Construct_UClass_UEnvQueryTest_GameplayTags_NoRegister()
	{
		return UEnvQueryTest_GameplayTags::StaticClass();
	}
	UClass* Z_Construct_UClass_UEnvQueryTest_GameplayTags()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UEnvQueryTest();
			Z_Construct_UPackage_AIModule();
			OuterClass = UEnvQueryTest_GameplayTags::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20880080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_GameplayTags = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("GameplayTags"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(GameplayTags, UEnvQueryTest_GameplayTags), 0x0000080000000001, Z_Construct_UScriptStruct_FGameplayTagContainer());
				UProperty* NewProp_TagsToMatch = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("TagsToMatch"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(TagsToMatch, UEnvQueryTest_GameplayTags), 0x0000080000000001, Z_Construct_UEnum_GameplayTags_EGameplayContainerMatchType());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("EnvironmentQuery/Tests/EnvQueryTest_GameplayTags.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/Tests/EnvQueryTest_GameplayTags.h"));
				MetaData->SetValue(NewProp_GameplayTags, TEXT("Category"), TEXT("GameplayTagCheck"));
				MetaData->SetValue(NewProp_GameplayTags, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/Tests/EnvQueryTest_GameplayTags.h"));
				MetaData->SetValue(NewProp_TagsToMatch, TEXT("Category"), TEXT("GameplayTagCheck"));
				MetaData->SetValue(NewProp_TagsToMatch, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/Tests/EnvQueryTest_GameplayTags.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UEnvQueryTest_GameplayTags(Z_Construct_UClass_UEnvQueryTest_GameplayTags, TEXT("UEnvQueryTest_GameplayTags"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UEnvQueryTest_GameplayTags);
	UEnum* Z_Construct_UEnum_AIModule_EEnvTestPathfinding()
	{
		UPackage* Outer=Z_Construct_UPackage_AIModule();
		extern uint32 Get_Z_Construct_UEnum_AIModule_EEnvTestPathfinding_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("EEnvTestPathfinding"), 0, Get_Z_Construct_UEnum_AIModule_EEnvTestPathfinding_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EEnvTestPathfinding"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EEnvTestPathfinding::PathExist")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EEnvTestPathfinding::PathCost")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EEnvTestPathfinding::PathLength")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EEnvTestPathfinding::EEnvTestPathfinding_MAX")), 3));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/Tests/EnvQueryTest_Pathfinding.h"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_AIModule_EEnvTestPathfinding_CRC() { return 4162390629U; }
	UClass* Z_Construct_UClass_UEnvQueryTest_Pathfinding_NoRegister()
	{
		return UEnvQueryTest_Pathfinding::StaticClass();
	}
	UClass* Z_Construct_UClass_UEnvQueryTest_Pathfinding()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UEnvQueryTest();
			Z_Construct_UPackage_AIModule();
			OuterClass = UEnvQueryTest_Pathfinding::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_FilterClass = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("FilterClass"), RF_Public|RF_Transient|RF_Native) UClassProperty(CPP_PROPERTY_BASE(FilterClass, UEnvQueryTest_Pathfinding), 0x0004000000010001, Z_Construct_UClass_UNavigationQueryFilter_NoRegister());
				UProperty* NewProp_SkipUnreachable = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SkipUnreachable"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(SkipUnreachable, UEnvQueryTest_Pathfinding), 0x0000048000010001, Z_Construct_UScriptStruct_FAIDataProviderBoolValue());
				UProperty* NewProp_PathFromContext = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("PathFromContext"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(PathFromContext, UEnvQueryTest_Pathfinding), 0x0000008000010001, Z_Construct_UScriptStruct_FAIDataProviderBoolValue());
				UProperty* NewProp_Context = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Context"), RF_Public|RF_Transient|RF_Native) UClassProperty(CPP_PROPERTY_BASE(Context, UEnvQueryTest_Pathfinding), 0x0004000000010001, Z_Construct_UClass_UEnvQueryContext_NoRegister());
				UProperty* NewProp_TestMode = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("TestMode"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(TestMode, UEnvQueryTest_Pathfinding), 0x0000000000010001, Z_Construct_UEnum_AIModule_EEnvTestPathfinding());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("EnvironmentQuery/Tests/EnvQueryTest_Pathfinding.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/Tests/EnvQueryTest_Pathfinding.h"));
				MetaData->SetValue(NewProp_FilterClass, TEXT("Category"), TEXT("Pathfinding"));
				MetaData->SetValue(NewProp_FilterClass, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/Tests/EnvQueryTest_Pathfinding.h"));
				MetaData->SetValue(NewProp_FilterClass, TEXT("ToolTip"), TEXT("navigation filter to use in pathfinding"));
				MetaData->SetValue(NewProp_SkipUnreachable, TEXT("Category"), TEXT("Pathfinding"));
				MetaData->SetValue(NewProp_SkipUnreachable, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/Tests/EnvQueryTest_Pathfinding.h"));
				MetaData->SetValue(NewProp_SkipUnreachable, TEXT("ToolTip"), TEXT("if set, items with failed path will be invalidated (PathCost, PathLength)"));
				MetaData->SetValue(NewProp_PathFromContext, TEXT("Category"), TEXT("Pathfinding"));
				MetaData->SetValue(NewProp_PathFromContext, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/Tests/EnvQueryTest_Pathfinding.h"));
				MetaData->SetValue(NewProp_PathFromContext, TEXT("ToolTip"), TEXT("pathfinding direction"));
				MetaData->SetValue(NewProp_Context, TEXT("Category"), TEXT("Pathfinding"));
				MetaData->SetValue(NewProp_Context, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/Tests/EnvQueryTest_Pathfinding.h"));
				MetaData->SetValue(NewProp_Context, TEXT("ToolTip"), TEXT("context: other end of pathfinding test"));
				MetaData->SetValue(NewProp_TestMode, TEXT("Category"), TEXT("Pathfinding"));
				MetaData->SetValue(NewProp_TestMode, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/Tests/EnvQueryTest_Pathfinding.h"));
				MetaData->SetValue(NewProp_TestMode, TEXT("ToolTip"), TEXT("testing mode"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UEnvQueryTest_Pathfinding(Z_Construct_UClass_UEnvQueryTest_Pathfinding, TEXT("UEnvQueryTest_Pathfinding"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UEnvQueryTest_Pathfinding);
	UClass* Z_Construct_UClass_UEnvQueryTest_PathfindingBatch_NoRegister()
	{
		return UEnvQueryTest_PathfindingBatch::StaticClass();
	}
	UClass* Z_Construct_UClass_UEnvQueryTest_PathfindingBatch()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UEnvQueryTest_Pathfinding();
			Z_Construct_UPackage_AIModule();
			OuterClass = UEnvQueryTest_PathfindingBatch::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_ScanRangeMultiplier = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ScanRangeMultiplier"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(ScanRangeMultiplier, UEnvQueryTest_PathfindingBatch), 0x0000048000010001, Z_Construct_UScriptStruct_FAIDataProviderFloatValue());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("EnvironmentQuery/Tests/EnvQueryTest_PathfindingBatch.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/Tests/EnvQueryTest_PathfindingBatch.h"));
				MetaData->SetValue(NewProp_ScanRangeMultiplier, TEXT("Category"), TEXT("Pathfinding"));
				MetaData->SetValue(NewProp_ScanRangeMultiplier, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/Tests/EnvQueryTest_PathfindingBatch.h"));
				MetaData->SetValue(NewProp_ScanRangeMultiplier, TEXT("ToolTip"), TEXT("multiplier for max distance between point and context"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UEnvQueryTest_PathfindingBatch(Z_Construct_UClass_UEnvQueryTest_PathfindingBatch, TEXT("UEnvQueryTest_PathfindingBatch"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UEnvQueryTest_PathfindingBatch);
	UClass* Z_Construct_UClass_UEnvQueryTest_Random_NoRegister()
	{
		return UEnvQueryTest_Random::StaticClass();
	}
	UClass* Z_Construct_UClass_UEnvQueryTest_Random()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UEnvQueryTest();
			Z_Construct_UPackage_AIModule();
			OuterClass = UEnvQueryTest_Random::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20880080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("DeprecatedNode"), TEXT(""));
				MetaData->SetValue(OuterClass, TEXT("DeprecationMessage"), TEXT("This class is now deprecated, please use RunMode supporting random results instead."));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("EnvironmentQuery/Tests/EnvQueryTest_Random.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/Tests/EnvQueryTest_Random.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UEnvQueryTest_Random(Z_Construct_UClass_UEnvQueryTest_Random, TEXT("UEnvQueryTest_Random"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UEnvQueryTest_Random);
	UClass* Z_Construct_UClass_UEnvQueryTest_Trace_NoRegister()
	{
		return UEnvQueryTest_Trace::StaticClass();
	}
	UClass* Z_Construct_UClass_UEnvQueryTest_Trace()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UEnvQueryTest();
			Z_Construct_UPackage_AIModule();
			OuterClass = UEnvQueryTest_Trace::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20880080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_Context = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Context"), RF_Public|RF_Transient|RF_Native) UClassProperty(CPP_PROPERTY_BASE(Context, UEnvQueryTest_Trace), 0x0004000000010001, Z_Construct_UClass_UEnvQueryContext_NoRegister());
				UProperty* NewProp_ContextHeightOffset = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ContextHeightOffset"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(ContextHeightOffset, UEnvQueryTest_Trace), 0x0000048000010001, Z_Construct_UScriptStruct_FAIDataProviderFloatValue());
				UProperty* NewProp_ItemHeightOffset = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ItemHeightOffset"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(ItemHeightOffset, UEnvQueryTest_Trace), 0x0000048000010001, Z_Construct_UScriptStruct_FAIDataProviderFloatValue());
				UProperty* NewProp_TraceFromContext = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("TraceFromContext"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(TraceFromContext, UEnvQueryTest_Trace), 0x0000008000010001, Z_Construct_UScriptStruct_FAIDataProviderBoolValue());
				UProperty* NewProp_TraceData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("TraceData"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(TraceData, UEnvQueryTest_Trace), 0x0000000000010001, Z_Construct_UScriptStruct_FEnvTraceData());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("EnvironmentQuery/Tests/EnvQueryTest_Trace.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/Tests/EnvQueryTest_Trace.h"));
				MetaData->SetValue(NewProp_Context, TEXT("Category"), TEXT("Trace"));
				MetaData->SetValue(NewProp_Context, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/Tests/EnvQueryTest_Trace.h"));
				MetaData->SetValue(NewProp_Context, TEXT("ToolTip"), TEXT("context: other end of trace test"));
				MetaData->SetValue(NewProp_ContextHeightOffset, TEXT("Category"), TEXT("Trace"));
				MetaData->SetValue(NewProp_ContextHeightOffset, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/Tests/EnvQueryTest_Trace.h"));
				MetaData->SetValue(NewProp_ContextHeightOffset, TEXT("ToolTip"), TEXT("Z offset from querier"));
				MetaData->SetValue(NewProp_ItemHeightOffset, TEXT("Category"), TEXT("Trace"));
				MetaData->SetValue(NewProp_ItemHeightOffset, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/Tests/EnvQueryTest_Trace.h"));
				MetaData->SetValue(NewProp_ItemHeightOffset, TEXT("ToolTip"), TEXT("Z offset from item"));
				MetaData->SetValue(NewProp_TraceFromContext, TEXT("Category"), TEXT("Trace"));
				MetaData->SetValue(NewProp_TraceFromContext, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/Tests/EnvQueryTest_Trace.h"));
				MetaData->SetValue(NewProp_TraceFromContext, TEXT("ToolTip"), TEXT("trace direction"));
				MetaData->SetValue(NewProp_TraceData, TEXT("Category"), TEXT("Trace"));
				MetaData->SetValue(NewProp_TraceData, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/Tests/EnvQueryTest_Trace.h"));
				MetaData->SetValue(NewProp_TraceData, TEXT("ToolTip"), TEXT("trace data"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UEnvQueryTest_Trace(Z_Construct_UClass_UEnvQueryTest_Trace, TEXT("UEnvQueryTest_Trace"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UEnvQueryTest_Trace);
	UClass* Z_Construct_UClass_UEnvQueryOption_NoRegister()
	{
		return UEnvQueryOption::StaticClass();
	}
	UClass* Z_Construct_UClass_UEnvQueryOption()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage_AIModule();
			OuterClass = UEnvQueryOption::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_Tests = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Tests"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(Tests, UEnvQueryOption), 0x0000000000000000);
				UProperty* NewProp_Tests_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Tests, TEXT("Tests"), RF_Public|RF_Transient|RF_Native) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UClass_UEnvQueryTest_NoRegister());
				UProperty* NewProp_Generator = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Generator"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(Generator, UEnvQueryOption), 0x0000000000000000, Z_Construct_UClass_UEnvQueryGenerator_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("EnvironmentQuery/EnvQueryOption.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EnvQueryOption.h"));
				MetaData->SetValue(NewProp_Tests, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EnvQueryOption.h"));
				MetaData->SetValue(NewProp_Generator, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EnvQueryOption.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UEnvQueryOption(Z_Construct_UClass_UEnvQueryOption, TEXT("UEnvQueryOption"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UEnvQueryOption);
	UClass* Z_Construct_UClass_UEQSRenderingComponent_NoRegister()
	{
		return UEQSRenderingComponent::StaticClass();
	}
	UClass* Z_Construct_UClass_UEQSRenderingComponent()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UPrimitiveComponent();
			Z_Construct_UPackage_AIModule();
			OuterClass = UEQSRenderingComponent::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20B00080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object Mobility Trigger ComponentReplication"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("EnvironmentQuery/EQSRenderingComponent.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EQSRenderingComponent.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UEQSRenderingComponent(Z_Construct_UClass_UEQSRenderingComponent, TEXT("UEQSRenderingComponent"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UEQSRenderingComponent);
	UEnum* Z_Construct_UEnum_AIModule_EEnvQueryHightlightMode()
	{
		UPackage* Outer=Z_Construct_UPackage_AIModule();
		extern uint32 Get_Z_Construct_UEnum_AIModule_EEnvQueryHightlightMode_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("EEnvQueryHightlightMode"), 0, Get_Z_Construct_UEnum_AIModule_EEnvQueryHightlightMode_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EEnvQueryHightlightMode"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EEnvQueryHightlightMode::All")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EEnvQueryHightlightMode::Best5Pct")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EEnvQueryHightlightMode::Best25Pct")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EEnvQueryHightlightMode::EEnvQueryHightlightMode_MAX")), 3));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::EnumClass);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("Best25Pct.DisplayName"), TEXT("Best 25%"));
			MetaData->SetValue(ReturnEnum, TEXT("Best5Pct.DisplayName"), TEXT("Best 5%"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EQSTestingPawn.h"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_AIModule_EEnvQueryHightlightMode_CRC() { return 1397919776U; }
	UClass* Z_Construct_UClass_AEQSTestingPawn_NoRegister()
	{
		return AEQSTestingPawn::StaticClass();
	}
	UClass* Z_Construct_UClass_AEQSTestingPawn()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_ACharacter();
			Z_Construct_UPackage_AIModule();
			OuterClass = AEQSTestingPawn::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900081;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
#if WITH_EDITORONLY_DATA
				UProperty* NewProp_EdRenderComp = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("EdRenderComp"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(EdRenderComp, AEQSTestingPawn), 0x0000000800082008, Z_Construct_UClass_UEQSRenderingComponent_NoRegister());
#endif // WITH_EDITORONLY_DATA
				UProperty* NewProp_QueryingMode = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("QueryingMode"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(QueryingMode, AEQSTestingPawn), 0x0000000000000001, Z_Construct_UEnum_AIModule_EEnvQueryRunMode());
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bShouldBeVisibleInGame, AEQSTestingPawn, uint8);
				UProperty* NewProp_bShouldBeVisibleInGame = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bShouldBeVisibleInGame"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bShouldBeVisibleInGame, AEQSTestingPawn), 0x0000000000000001, CPP_BOOL_PROPERTY_BITMASK(bShouldBeVisibleInGame, AEQSTestingPawn), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bReRunQueryOnlyOnFinishedMove, AEQSTestingPawn, uint8);
				UProperty* NewProp_bReRunQueryOnlyOnFinishedMove = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bReRunQueryOnlyOnFinishedMove"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bReRunQueryOnlyOnFinishedMove, AEQSTestingPawn), 0x0000000000000001, CPP_BOOL_PROPERTY_BITMASK(bReRunQueryOnlyOnFinishedMove, AEQSTestingPawn), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bDrawFailedItems, AEQSTestingPawn, uint8);
				UProperty* NewProp_bDrawFailedItems = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bDrawFailedItems"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bDrawFailedItems, AEQSTestingPawn), 0x0000000000000001, CPP_BOOL_PROPERTY_BITMASK(bDrawFailedItems, AEQSTestingPawn), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bDrawLabels, AEQSTestingPawn, uint8);
				UProperty* NewProp_bDrawLabels = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bDrawLabels"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bDrawLabels, AEQSTestingPawn), 0x0000000000000001, CPP_BOOL_PROPERTY_BITMASK(bDrawLabels, AEQSTestingPawn), sizeof(uint8), false);
				UProperty* NewProp_HighlightMode = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("HighlightMode"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(HighlightMode, AEQSTestingPawn), 0x0000000000000001, Z_Construct_UEnum_AIModule_EEnvQueryHightlightMode());
				UProperty* NewProp_StepToDebugDraw = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("StepToDebugDraw"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(StepToDebugDraw, AEQSTestingPawn), 0x0000000000000001);
				UProperty* NewProp_TimeLimitPerStep = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("TimeLimitPerStep"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(TimeLimitPerStep, AEQSTestingPawn), 0x0000000000000001);
				UProperty* NewProp_QueryParams = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("QueryParams"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(QueryParams, AEQSTestingPawn), 0x0000000000000001);
				UProperty* NewProp_QueryParams_Inner = new(EC_InternalUseOnlyConstructor, NewProp_QueryParams, TEXT("QueryParams"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FEnvNamedValue());
				UProperty* NewProp_QueryTemplate = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("QueryTemplate"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(QueryTemplate, AEQSTestingPawn), 0x0000000000000001, Z_Construct_UClass_UEnvQuery_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->Interfaces.Add(FImplementedInterface(Z_Construct_UClass_UEQSQueryResultSourceInterface_NoRegister(), VTABLE_OFFSET(AEQSTestingPawn, IEQSQueryResultSourceInterface), false ));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Advanced Attachment Collision Mesh Animation Clothing Physics Rendering Lighting Activation CharacterMovement AgentPhysics Avoidance MovementComponent Velocity Shape Camera Input Layers SkeletalMesh Optimization Pawn Replication Actor Navigation"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("EnvironmentQuery/EQSTestingPawn.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EQSTestingPawn.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("this class is abstract even though it's perfectly functional on its own.\n   The reason is to stop it from showing as valid player pawn type when configuring\n   project's game mode."));
				MetaData->SetValue(NewProp_EdRenderComp, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_EdRenderComp, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EQSTestingPawn.h"));
				MetaData->SetValue(NewProp_QueryingMode, TEXT("Category"), TEXT("EQS"));
				MetaData->SetValue(NewProp_QueryingMode, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EQSTestingPawn.h"));
				MetaData->SetValue(NewProp_bShouldBeVisibleInGame, TEXT("Category"), TEXT("EQS"));
				MetaData->SetValue(NewProp_bShouldBeVisibleInGame, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EQSTestingPawn.h"));
				MetaData->SetValue(NewProp_bReRunQueryOnlyOnFinishedMove, TEXT("Category"), TEXT("EQS"));
				MetaData->SetValue(NewProp_bReRunQueryOnlyOnFinishedMove, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EQSTestingPawn.h"));
				MetaData->SetValue(NewProp_bDrawFailedItems, TEXT("Category"), TEXT("EQS"));
				MetaData->SetValue(NewProp_bDrawFailedItems, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EQSTestingPawn.h"));
				MetaData->SetValue(NewProp_bDrawLabels, TEXT("Category"), TEXT("EQS"));
				MetaData->SetValue(NewProp_bDrawLabels, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EQSTestingPawn.h"));
				MetaData->SetValue(NewProp_HighlightMode, TEXT("Category"), TEXT("EQS"));
				MetaData->SetValue(NewProp_HighlightMode, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EQSTestingPawn.h"));
				MetaData->SetValue(NewProp_StepToDebugDraw, TEXT("Category"), TEXT("EQS"));
				MetaData->SetValue(NewProp_StepToDebugDraw, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EQSTestingPawn.h"));
				MetaData->SetValue(NewProp_TimeLimitPerStep, TEXT("Category"), TEXT("EQS"));
				MetaData->SetValue(NewProp_TimeLimitPerStep, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EQSTestingPawn.h"));
				MetaData->SetValue(NewProp_QueryParams, TEXT("Category"), TEXT("EQS"));
				MetaData->SetValue(NewProp_QueryParams, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EQSTestingPawn.h"));
				MetaData->SetValue(NewProp_QueryParams, TEXT("ToolTip"), TEXT("optional parameters for query"));
				MetaData->SetValue(NewProp_QueryTemplate, TEXT("Category"), TEXT("EQS"));
				MetaData->SetValue(NewProp_QueryTemplate, TEXT("ModuleRelativePath"), TEXT("Classes/EnvironmentQuery/EQSTestingPawn.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AEQSTestingPawn(Z_Construct_UClass_AEQSTestingPawn, TEXT("AEQSTestingPawn"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(AEQSTestingPawn);
	UFunction* Z_Construct_UFunction_UCrowdFollowingComponent_SuspendCrowdSteering()
	{
		struct CrowdFollowingComponent_eventSuspendCrowdSteering_Parms
		{
			bool bSuspend;
		};
		UObject* Outer=Z_Construct_UClass_UCrowdFollowingComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SuspendCrowdSteering"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020400, 65535, sizeof(CrowdFollowingComponent_eventSuspendCrowdSteering_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bSuspend, CrowdFollowingComponent_eventSuspendCrowdSteering_Parms, bool);
			UProperty* NewProp_bSuspend = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("bSuspend"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bSuspend, CrowdFollowingComponent_eventSuspendCrowdSteering_Parms), 0x0000000000000080, CPP_BOOL_PROPERTY_BITMASK(bSuspend, CrowdFollowingComponent_eventSuspendCrowdSteering_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Crowd"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/Navigation/CrowdFollowingComponent.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("master switch for crowd steering & avoidance"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UCrowdFollowingComponent_NoRegister()
	{
		return UCrowdFollowingComponent::StaticClass();
	}
	UClass* Z_Construct_UClass_UCrowdFollowingComponent()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UPathFollowingComponent();
			Z_Construct_UPackage_AIModule();
			OuterClass = UCrowdFollowingComponent::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20B00084;

				OuterClass->LinkChild(Z_Construct_UFunction_UCrowdFollowingComponent_SuspendCrowdSteering());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_GroupsToIgnore = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("GroupsToIgnore"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(GroupsToIgnore, UCrowdFollowingComponent), 0x00000c0000000015, Z_Construct_UScriptStruct_FNavAvoidanceMask());
				UProperty* NewProp_GroupsToAvoid = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("GroupsToAvoid"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(GroupsToAvoid, UCrowdFollowingComponent), 0x00000c0000000015, Z_Construct_UScriptStruct_FNavAvoidanceMask());
				UProperty* NewProp_AvoidanceGroup = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AvoidanceGroup"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(AvoidanceGroup, UCrowdFollowingComponent), 0x00000c0000000015, Z_Construct_UScriptStruct_FNavAvoidanceMask());
				UProperty* NewProp_CharacterMovement = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CharacterMovement"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(CharacterMovement, UCrowdFollowingComponent), 0x0000080000082008, Z_Construct_UClass_UCharacterMovementComponent_NoRegister());
				UProperty* NewProp_CrowdAgentMoveDirection = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CrowdAgentMoveDirection"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(CrowdAgentMoveDirection, UCrowdFollowingComponent), 0x0000000000000000, Z_Construct_UScriptStruct_FVector());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UCrowdFollowingComponent_SuspendCrowdSteering()); // 747972594
				OuterClass->ClassConfigName = FName(TEXT("Engine"));
				OuterClass->Interfaces.Add(FImplementedInterface(Z_Construct_UClass_UCrowdAgentInterface_NoRegister(), VTABLE_OFFSET(UCrowdFollowingComponent, ICrowdAgentInterface), false ));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("ComponentReplication"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Navigation/CrowdFollowingComponent.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Navigation/CrowdFollowingComponent.h"));
				MetaData->SetValue(NewProp_GroupsToIgnore, TEXT("Category"), TEXT("Avoidance"));
				MetaData->SetValue(NewProp_GroupsToIgnore, TEXT("ModuleRelativePath"), TEXT("Classes/Navigation/CrowdFollowingComponent.h"));
				MetaData->SetValue(NewProp_GroupsToIgnore, TEXT("ToolTip"), TEXT("Will NOT avoid other agents if they are in one of specified groups, higher priority than GroupsToAvoid"));
				MetaData->SetValue(NewProp_GroupsToAvoid, TEXT("Category"), TEXT("Avoidance"));
				MetaData->SetValue(NewProp_GroupsToAvoid, TEXT("ModuleRelativePath"), TEXT("Classes/Navigation/CrowdFollowingComponent.h"));
				MetaData->SetValue(NewProp_GroupsToAvoid, TEXT("ToolTip"), TEXT("Will avoid other agents if they are in one of specified groups"));
				MetaData->SetValue(NewProp_AvoidanceGroup, TEXT("Category"), TEXT("Avoidance"));
				MetaData->SetValue(NewProp_AvoidanceGroup, TEXT("ModuleRelativePath"), TEXT("Classes/Navigation/CrowdFollowingComponent.h"));
				MetaData->SetValue(NewProp_AvoidanceGroup, TEXT("ToolTip"), TEXT("Group mask for this agent"));
				MetaData->SetValue(NewProp_CharacterMovement, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_CharacterMovement, TEXT("ModuleRelativePath"), TEXT("Classes/Navigation/CrowdFollowingComponent.h"));
				MetaData->SetValue(NewProp_CrowdAgentMoveDirection, TEXT("ModuleRelativePath"), TEXT("Classes/Navigation/CrowdFollowingComponent.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UCrowdFollowingComponent(Z_Construct_UClass_UCrowdFollowingComponent, TEXT("UCrowdFollowingComponent"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UCrowdFollowingComponent);
	UFunction* Z_Construct_UFunction_UPawnAction_BlueprintBase_ActionFinished()
	{
		UObject* Outer=Z_Construct_UClass_UPawnAction_BlueprintBase();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ActionFinished"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x08020800, 65535, sizeof(PawnAction_BlueprintBase_eventActionFinished_Parms));
			UProperty* NewProp_WithResult = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("WithResult"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(WithResult, PawnAction_BlueprintBase_eventActionFinished_Parms), 0x0000000000000080, Z_Construct_UEnum_AIModule_EPawnActionResult());
			UProperty* NewProp_ControlledPawn = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ControlledPawn"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(ControlledPawn, PawnAction_BlueprintBase_eventActionFinished_Parms), 0x0000000000000080, Z_Construct_UClass_APawn_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|PawnActions"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/Actions/PawnAction_BlueprintBase.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UPawnAction_BlueprintBase_ActionPause()
	{
		UObject* Outer=Z_Construct_UClass_UPawnAction_BlueprintBase();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ActionPause"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x08020800, 65535, sizeof(PawnAction_BlueprintBase_eventActionPause_Parms));
			UProperty* NewProp_ControlledPawn = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ControlledPawn"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(ControlledPawn, PawnAction_BlueprintBase_eventActionPause_Parms), 0x0000000000000080, Z_Construct_UClass_APawn_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|PawnActions"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/Actions/PawnAction_BlueprintBase.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UPawnAction_BlueprintBase_ActionResume()
	{
		UObject* Outer=Z_Construct_UClass_UPawnAction_BlueprintBase();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ActionResume"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x08020800, 65535, sizeof(PawnAction_BlueprintBase_eventActionResume_Parms));
			UProperty* NewProp_ControlledPawn = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ControlledPawn"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(ControlledPawn, PawnAction_BlueprintBase_eventActionResume_Parms), 0x0000000000000080, Z_Construct_UClass_APawn_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|PawnActions"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/Actions/PawnAction_BlueprintBase.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UPawnAction_BlueprintBase_ActionStart()
	{
		UObject* Outer=Z_Construct_UClass_UPawnAction_BlueprintBase();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ActionStart"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x08020800, 65535, sizeof(PawnAction_BlueprintBase_eventActionStart_Parms));
			UProperty* NewProp_ControlledPawn = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ControlledPawn"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(ControlledPawn, PawnAction_BlueprintBase_eventActionStart_Parms), 0x0000000000000080, Z_Construct_UClass_APawn_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|PawnActions"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/Actions/PawnAction_BlueprintBase.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Blueprint interface"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UPawnAction_BlueprintBase_ActionTick()
	{
		UObject* Outer=Z_Construct_UClass_UPawnAction_BlueprintBase();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ActionTick"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x08020800, 65535, sizeof(PawnAction_BlueprintBase_eventActionTick_Parms));
			UProperty* NewProp_DeltaSeconds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("DeltaSeconds"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(DeltaSeconds, PawnAction_BlueprintBase_eventActionTick_Parms), 0x0000000000000080);
			UProperty* NewProp_ControlledPawn = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ControlledPawn"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(ControlledPawn, PawnAction_BlueprintBase_eventActionTick_Parms), 0x0000000000000080, Z_Construct_UClass_APawn_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|PawnActions"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/Actions/PawnAction_BlueprintBase.h"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UPawnAction_BlueprintBase_NoRegister()
	{
		return UPawnAction_BlueprintBase::StaticClass();
	}
	UClass* Z_Construct_UClass_UPawnAction_BlueprintBase()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UPawnAction();
			Z_Construct_UPackage_AIModule();
			OuterClass = UPawnAction_BlueprintBase::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20901081;

				OuterClass->LinkChild(Z_Construct_UFunction_UPawnAction_BlueprintBase_ActionFinished());
				OuterClass->LinkChild(Z_Construct_UFunction_UPawnAction_BlueprintBase_ActionPause());
				OuterClass->LinkChild(Z_Construct_UFunction_UPawnAction_BlueprintBase_ActionResume());
				OuterClass->LinkChild(Z_Construct_UFunction_UPawnAction_BlueprintBase_ActionStart());
				OuterClass->LinkChild(Z_Construct_UFunction_UPawnAction_BlueprintBase_ActionTick());

				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UPawnAction_BlueprintBase_ActionFinished()); // 3794585212
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UPawnAction_BlueprintBase_ActionPause()); // 233846668
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UPawnAction_BlueprintBase_ActionResume()); // 2821372628
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UPawnAction_BlueprintBase_ActionStart()); // 1823600653
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UPawnAction_BlueprintBase_ActionTick()); // 1172119765
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Actions/PawnAction_BlueprintBase.h"));
				MetaData->SetValue(OuterClass, TEXT("IsBlueprintBase"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Actions/PawnAction_BlueprintBase.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UPawnAction_BlueprintBase(Z_Construct_UClass_UPawnAction_BlueprintBase, TEXT("UPawnAction_BlueprintBase"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UPawnAction_BlueprintBase);
	UEnum* Z_Construct_UEnum_AIModule_EPawnActionMoveMode()
	{
		UPackage* Outer=Z_Construct_UPackage_AIModule();
		extern uint32 Get_Z_Construct_UEnum_AIModule_EPawnActionMoveMode_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("EPawnActionMoveMode"), 0, Get_Z_Construct_UEnum_AIModule_EPawnActionMoveMode_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EPawnActionMoveMode"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EPawnActionMoveMode::UsePathfinding")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EPawnActionMoveMode::StraightLine")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EPawnActionMoveMode::EPawnActionMoveMode_MAX")), 2));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/Actions/PawnAction_Move.h"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_AIModule_EPawnActionMoveMode_CRC() { return 47437639U; }
	UClass* Z_Construct_UClass_UPawnAction_Move_NoRegister()
	{
		return UPawnAction_Move::StaticClass();
	}
	UClass* Z_Construct_UClass_UPawnAction_Move()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UPawnAction();
			Z_Construct_UPackage_AIModule();
			OuterClass = UPawnAction_Move::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20901080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bAbortChildActionOnPathChange, UPawnAction_Move, uint8);
				UProperty* NewProp_bAbortChildActionOnPathChange = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bAbortChildActionOnPathChange"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bAbortChildActionOnPathChange, UPawnAction_Move), 0x0000080000000000, CPP_BOOL_PROPERTY_BITMASK(bAbortChildActionOnPathChange, UPawnAction_Move), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bUpdatePathToGoal, UPawnAction_Move, uint8);
				UProperty* NewProp_bUpdatePathToGoal = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bUpdatePathToGoal"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bUpdatePathToGoal, UPawnAction_Move), 0x0000080000000000, CPP_BOOL_PROPERTY_BITMASK(bUpdatePathToGoal, UPawnAction_Move), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bProjectGoalToNavigation, UPawnAction_Move, uint8);
				UProperty* NewProp_bProjectGoalToNavigation = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bProjectGoalToNavigation"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bProjectGoalToNavigation, UPawnAction_Move), 0x0000080000000000, CPP_BOOL_PROPERTY_BITMASK(bProjectGoalToNavigation, UPawnAction_Move), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bAllowPartialPath, UPawnAction_Move, uint8);
				UProperty* NewProp_bAllowPartialPath = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bAllowPartialPath"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bAllowPartialPath, UPawnAction_Move), 0x0000080000000000, CPP_BOOL_PROPERTY_BITMASK(bAllowPartialPath, UPawnAction_Move), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bUsePathfinding, UPawnAction_Move, uint8);
				UProperty* NewProp_bUsePathfinding = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bUsePathfinding"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bUsePathfinding, UPawnAction_Move), 0x0000080000000000, CPP_BOOL_PROPERTY_BITMASK(bUsePathfinding, UPawnAction_Move), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bFinishOnOverlap, UPawnAction_Move, uint8);
				UProperty* NewProp_bFinishOnOverlap = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bFinishOnOverlap"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bFinishOnOverlap, UPawnAction_Move), 0x0000080000000000, CPP_BOOL_PROPERTY_BITMASK(bFinishOnOverlap, UPawnAction_Move), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bAllowStrafe, UPawnAction_Move, uint8);
				UProperty* NewProp_bAllowStrafe = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bAllowStrafe"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bAllowStrafe, UPawnAction_Move), 0x0000080000000005, CPP_BOOL_PROPERTY_BITMASK(bAllowStrafe, UPawnAction_Move), sizeof(uint8), false);
				UProperty* NewProp_FilterClass = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("FilterClass"), RF_Public|RF_Transient|RF_Native) UClassProperty(CPP_PROPERTY_BASE(FilterClass, UPawnAction_Move), 0x0004080000000005, Z_Construct_UClass_UNavigationQueryFilter_NoRegister());
				UProperty* NewProp_AcceptableRadius = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AcceptableRadius"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(AcceptableRadius, UPawnAction_Move), 0x0000080000000005);
				UProperty* NewProp_GoalLocation = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("GoalLocation"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(GoalLocation, UPawnAction_Move), 0x0000080000000005, Z_Construct_UScriptStruct_FVector());
				UProperty* NewProp_GoalActor = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("GoalActor"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(GoalActor, UPawnAction_Move), 0x0000080000000005, Z_Construct_UClass_AActor_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Actions/PawnAction_Move.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Actions/PawnAction_Move.h"));
				MetaData->SetValue(NewProp_bAbortChildActionOnPathChange, TEXT("ModuleRelativePath"), TEXT("Classes/Actions/PawnAction_Move.h"));
				MetaData->SetValue(NewProp_bAbortChildActionOnPathChange, TEXT("ToolTip"), TEXT("if set, other actions with the same priority will be aborted when path is changed"));
				MetaData->SetValue(NewProp_bUpdatePathToGoal, TEXT("ModuleRelativePath"), TEXT("Classes/Actions/PawnAction_Move.h"));
				MetaData->SetValue(NewProp_bUpdatePathToGoal, TEXT("ToolTip"), TEXT("if set, path to GoalActor will be updated with goal's movement"));
				MetaData->SetValue(NewProp_bProjectGoalToNavigation, TEXT("ModuleRelativePath"), TEXT("Classes/Actions/PawnAction_Move.h"));
				MetaData->SetValue(NewProp_bProjectGoalToNavigation, TEXT("ToolTip"), TEXT("if set, GoalLocation will be projected on navigation before using"));
				MetaData->SetValue(NewProp_bAllowPartialPath, TEXT("ModuleRelativePath"), TEXT("Classes/Actions/PawnAction_Move.h"));
				MetaData->SetValue(NewProp_bAllowPartialPath, TEXT("ToolTip"), TEXT("if set, use incomplete path when goal can't be reached"));
				MetaData->SetValue(NewProp_bUsePathfinding, TEXT("ModuleRelativePath"), TEXT("Classes/Actions/PawnAction_Move.h"));
				MetaData->SetValue(NewProp_bUsePathfinding, TEXT("ToolTip"), TEXT("if set, movement will use path finding"));
				MetaData->SetValue(NewProp_bFinishOnOverlap, TEXT("ModuleRelativePath"), TEXT("Classes/Actions/PawnAction_Move.h"));
				MetaData->SetValue(NewProp_bFinishOnOverlap, TEXT("ToolTip"), TEXT("if set to true (default) will make action succeed when the pawn's collision component overlaps with goal's collision component"));
				MetaData->SetValue(NewProp_bAllowStrafe, TEXT("Category"), TEXT("PawnAction"));
				MetaData->SetValue(NewProp_bAllowStrafe, TEXT("ModuleRelativePath"), TEXT("Classes/Actions/PawnAction_Move.h"));
				MetaData->SetValue(NewProp_FilterClass, TEXT("Category"), TEXT("PawnAction"));
				MetaData->SetValue(NewProp_FilterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Actions/PawnAction_Move.h"));
				MetaData->SetValue(NewProp_FilterClass, TEXT("ToolTip"), TEXT("\"None\" will result in default filter being used"));
				MetaData->SetValue(NewProp_AcceptableRadius, TEXT("Category"), TEXT("PawnAction"));
				MetaData->SetValue(NewProp_AcceptableRadius, TEXT("ClampMin"), TEXT("0.01"));
				MetaData->SetValue(NewProp_AcceptableRadius, TEXT("ModuleRelativePath"), TEXT("Classes/Actions/PawnAction_Move.h"));
				MetaData->SetValue(NewProp_GoalLocation, TEXT("Category"), TEXT("PawnAction"));
				MetaData->SetValue(NewProp_GoalLocation, TEXT("ModuleRelativePath"), TEXT("Classes/Actions/PawnAction_Move.h"));
				MetaData->SetValue(NewProp_GoalActor, TEXT("Category"), TEXT("PawnAction"));
				MetaData->SetValue(NewProp_GoalActor, TEXT("ModuleRelativePath"), TEXT("Classes/Actions/PawnAction_Move.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UPawnAction_Move(Z_Construct_UClass_UPawnAction_Move, TEXT("UPawnAction_Move"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UPawnAction_Move);
	UClass* Z_Construct_UClass_UPawnAction_Repeat_NoRegister()
	{
		return UPawnAction_Repeat::StaticClass();
	}
	UClass* Z_Construct_UClass_UPawnAction_Repeat()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UPawnAction();
			Z_Construct_UPackage_AIModule();
			OuterClass = UPawnAction_Repeat::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20901080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_ChildFailureHandlingMode = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ChildFailureHandlingMode"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(ChildFailureHandlingMode, UPawnAction_Repeat), 0x0000000000000015, Z_Construct_UEnum_AIModule_EPawnActionFailHandling());
				UProperty* NewProp_RecentActionCopy = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("RecentActionCopy"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(RecentActionCopy, UPawnAction_Repeat), 0x0000000000002000, Z_Construct_UClass_UPawnAction_NoRegister());
				UProperty* NewProp_ActionToRepeat = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ActionToRepeat"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(ActionToRepeat, UPawnAction_Repeat), 0x0000000000000000, Z_Construct_UClass_UPawnAction_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Actions/PawnAction_Repeat.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Actions/PawnAction_Repeat.h"));
				MetaData->SetValue(NewProp_ChildFailureHandlingMode, TEXT("Category"), TEXT("PawnAction"));
				MetaData->SetValue(NewProp_ChildFailureHandlingMode, TEXT("ModuleRelativePath"), TEXT("Classes/Actions/PawnAction_Repeat.h"));
				MetaData->SetValue(NewProp_RecentActionCopy, TEXT("ModuleRelativePath"), TEXT("Classes/Actions/PawnAction_Repeat.h"));
				MetaData->SetValue(NewProp_ActionToRepeat, TEXT("ModuleRelativePath"), TEXT("Classes/Actions/PawnAction_Repeat.h"));
				MetaData->SetValue(NewProp_ActionToRepeat, TEXT("ToolTip"), TEXT("Action to repeat. This instance won't really be run, it's a source for copying actions to be actually performed"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UPawnAction_Repeat(Z_Construct_UClass_UPawnAction_Repeat, TEXT("UPawnAction_Repeat"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UPawnAction_Repeat);
	UClass* Z_Construct_UClass_UPawnAction_Sequence_NoRegister()
	{
		return UPawnAction_Sequence::StaticClass();
	}
	UClass* Z_Construct_UClass_UPawnAction_Sequence()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UPawnAction();
			Z_Construct_UPackage_AIModule();
			OuterClass = UPawnAction_Sequence::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20901080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_RecentActionCopy = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("RecentActionCopy"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(RecentActionCopy, UPawnAction_Sequence), 0x0000000000002000, Z_Construct_UClass_UPawnAction_NoRegister());
				UProperty* NewProp_ChildFailureHandlingMode = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ChildFailureHandlingMode"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(ChildFailureHandlingMode, UPawnAction_Sequence), 0x0000000000000015, Z_Construct_UEnum_AIModule_EPawnActionFailHandling());
				UProperty* NewProp_ActionSequence = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ActionSequence"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(ActionSequence, UPawnAction_Sequence), 0x0000000000000000);
				UProperty* NewProp_ActionSequence_Inner = new(EC_InternalUseOnlyConstructor, NewProp_ActionSequence, TEXT("ActionSequence"), RF_Public|RF_Transient|RF_Native) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UClass_UPawnAction_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Actions/PawnAction_Sequence.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Actions/PawnAction_Sequence.h"));
				MetaData->SetValue(NewProp_RecentActionCopy, TEXT("ModuleRelativePath"), TEXT("Classes/Actions/PawnAction_Sequence.h"));
				MetaData->SetValue(NewProp_ChildFailureHandlingMode, TEXT("Category"), TEXT("PawnAction"));
				MetaData->SetValue(NewProp_ChildFailureHandlingMode, TEXT("ModuleRelativePath"), TEXT("Classes/Actions/PawnAction_Sequence.h"));
				MetaData->SetValue(NewProp_ActionSequence, TEXT("ModuleRelativePath"), TEXT("Classes/Actions/PawnAction_Sequence.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UPawnAction_Sequence(Z_Construct_UClass_UPawnAction_Sequence, TEXT("UPawnAction_Sequence"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UPawnAction_Sequence);
	UClass* Z_Construct_UClass_UPawnAction_Wait_NoRegister()
	{
		return UPawnAction_Wait::StaticClass();
	}
	UClass* Z_Construct_UClass_UPawnAction_Wait()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UPawnAction();
			Z_Construct_UPackage_AIModule();
			OuterClass = UPawnAction_Wait::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20901080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_TimeToWait = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("TimeToWait"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(TimeToWait, UPawnAction_Wait), 0x0000000000000000);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Actions/PawnAction_Wait.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Actions/PawnAction_Wait.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("uses system timers rather then ticking"));
				MetaData->SetValue(NewProp_TimeToWait, TEXT("ModuleRelativePath"), TEXT("Classes/Actions/PawnAction_Wait.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UPawnAction_Wait(Z_Construct_UClass_UPawnAction_Wait, TEXT("UPawnAction_Wait"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UPawnAction_Wait);
	UFunction* Z_Construct_UDelegateFunction_UPawnSensingComponent_HearNoiseDelegate__DelegateSignature()
	{
		struct PawnSensingComponent_eventHearNoiseDelegate_Parms
		{
			APawn* Instigator;
			FVector Location;
			float Volume;
		};
		UObject* Outer=Z_Construct_UClass_UPawnSensingComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("HearNoiseDelegate__DelegateSignature"), RF_Public|RF_Transient|RF_Native) UDelegateFunction(FObjectInitializer(), NULL, 0x00D30000, 65535, sizeof(PawnSensingComponent_eventHearNoiseDelegate_Parms));
			UProperty* NewProp_Volume = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Volume"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(Volume, PawnSensingComponent_eventHearNoiseDelegate_Parms), 0x0000000000000080);
			UProperty* NewProp_Location = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Location"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Location, PawnSensingComponent_eventHearNoiseDelegate_Parms), 0x0000000008000182, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_Instigator = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Instigator"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(Instigator, PawnSensingComponent_eventHearNoiseDelegate_Parms), 0x0000000000000080, Z_Construct_UClass_APawn_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/PawnSensingComponent.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_UPawnSensingComponent_SeePawnDelegate__DelegateSignature()
	{
		struct PawnSensingComponent_eventSeePawnDelegate_Parms
		{
			APawn* Pawn;
		};
		UObject* Outer=Z_Construct_UClass_UPawnSensingComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SeePawnDelegate__DelegateSignature"), RF_Public|RF_Transient|RF_Native) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(PawnSensingComponent_eventSeePawnDelegate_Parms));
			UProperty* NewProp_Pawn = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Pawn"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(Pawn, PawnSensingComponent_eventSeePawnDelegate_Parms), 0x0000000000000080, Z_Construct_UClass_APawn_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/PawnSensingComponent.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UPawnSensingComponent_GetPeripheralVisionAngle()
	{
		struct PawnSensingComponent_eventGetPeripheralVisionAngle_Parms
		{
			float ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UPawnSensingComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetPeripheralVisionAngle"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x54020401, 65535, sizeof(PawnSensingComponent_eventGetPeripheralVisionAngle_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(ReturnValue, PawnSensingComponent_eventGetPeripheralVisionAngle_Parms), 0x0000000000000580);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|Components|PawnSensing"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/PawnSensingComponent.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UPawnSensingComponent_GetPeripheralVisionCosine()
	{
		struct PawnSensingComponent_eventGetPeripheralVisionCosine_Parms
		{
			float ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UPawnSensingComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetPeripheralVisionCosine"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x54020401, 65535, sizeof(PawnSensingComponent_eventGetPeripheralVisionCosine_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(ReturnValue, PawnSensingComponent_eventGetPeripheralVisionCosine_Parms), 0x0000000000000580);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|Components|PawnSensing"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/PawnSensingComponent.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UPawnSensingComponent_SetPeripheralVisionAngle()
	{
		struct PawnSensingComponent_eventSetPeripheralVisionAngle_Parms
		{
			float NewPeripheralVisionAngle;
		};
		UObject* Outer=Z_Construct_UClass_UPawnSensingComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetPeripheralVisionAngle"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020404, 65535, sizeof(PawnSensingComponent_eventSetPeripheralVisionAngle_Parms));
			UProperty* NewProp_NewPeripheralVisionAngle = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NewPeripheralVisionAngle"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(NewPeripheralVisionAngle, PawnSensingComponent_eventSetPeripheralVisionAngle_Parms), 0x0000000000000082);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|Components|PawnSensing"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/PawnSensingComponent.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Sets PeripheralVisionAngle. Calculates PeripheralVisionCosine from PeripheralVisionAngle"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UPawnSensingComponent_SetSensingInterval()
	{
		struct PawnSensingComponent_eventSetSensingInterval_Parms
		{
			float NewSensingInterval;
		};
		UObject* Outer=Z_Construct_UClass_UPawnSensingComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetSensingInterval"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020404, 65535, sizeof(PawnSensingComponent_eventSetSensingInterval_Parms));
			UProperty* NewProp_NewSensingInterval = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NewSensingInterval"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(NewSensingInterval, PawnSensingComponent_eventSetSensingInterval_Parms), 0x0000000000000082);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|Components|PawnSensing"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/PawnSensingComponent.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Changes the SensingInterval.\nIf we are currently waiting for an interval, this can either extend or shorten that interval.\nA value <= 0 prevents any updates."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UPawnSensingComponent_SetSensingUpdatesEnabled()
	{
		struct PawnSensingComponent_eventSetSensingUpdatesEnabled_Parms
		{
			bool bEnabled;
		};
		UObject* Outer=Z_Construct_UClass_UPawnSensingComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetSensingUpdatesEnabled"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020404, 65535, sizeof(PawnSensingComponent_eventSetSensingUpdatesEnabled_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bEnabled, PawnSensingComponent_eventSetSensingUpdatesEnabled_Parms, bool);
			UProperty* NewProp_bEnabled = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("bEnabled"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bEnabled, PawnSensingComponent_eventSetSensingUpdatesEnabled_Parms), 0x0000000000000082, CPP_BOOL_PROPERTY_BITMASK(bEnabled, PawnSensingComponent_eventSetSensingUpdatesEnabled_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|Components|PawnSensing"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/PawnSensingComponent.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Enables or disables sensing updates. The timer is reset in either case."));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UPawnSensingComponent_NoRegister()
	{
		return UPawnSensingComponent::StaticClass();
	}
	UClass* Z_Construct_UClass_UPawnSensingComponent()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UActorComponent();
			Z_Construct_UPackage_AIModule();
			OuterClass = UPawnSensingComponent::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20B00080;

				OuterClass->LinkChild(Z_Construct_UFunction_UPawnSensingComponent_GetPeripheralVisionAngle());
				OuterClass->LinkChild(Z_Construct_UFunction_UPawnSensingComponent_GetPeripheralVisionCosine());
				OuterClass->LinkChild(Z_Construct_UDelegateFunction_UPawnSensingComponent_HearNoiseDelegate__DelegateSignature());
				OuterClass->LinkChild(Z_Construct_UDelegateFunction_UPawnSensingComponent_SeePawnDelegate__DelegateSignature());
				OuterClass->LinkChild(Z_Construct_UFunction_UPawnSensingComponent_SetPeripheralVisionAngle());
				OuterClass->LinkChild(Z_Construct_UFunction_UPawnSensingComponent_SetSensingInterval());
				OuterClass->LinkChild(Z_Construct_UFunction_UPawnSensingComponent_SetSensingUpdatesEnabled());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_PeripheralVisionCosine = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("PeripheralVisionCosine"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(PeripheralVisionCosine, UPawnSensingComponent), 0x0000080000000000);
				UProperty* NewProp_PeripheralVisionAngle = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("PeripheralVisionAngle"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(PeripheralVisionAngle, UPawnSensingComponent), 0x0000080000000015);
				UProperty* NewProp_OnHearNoise = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnHearNoise"), RF_Public|RF_Transient|RF_Native) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnHearNoise, UPawnSensingComponent), 0x0000000010080000, Z_Construct_UDelegateFunction_UPawnSensingComponent_HearNoiseDelegate__DelegateSignature());
				UProperty* NewProp_OnSeePawn = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnSeePawn"), RF_Public|RF_Transient|RF_Native) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnSeePawn, UPawnSensingComponent), 0x0000000010080000, Z_Construct_UDelegateFunction_UPawnSensingComponent_SeePawnDelegate__DelegateSignature());
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bHearNoises, UPawnSensingComponent, uint8);
				UProperty* NewProp_bHearNoises = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bHearNoises"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bHearNoises, UPawnSensingComponent), 0x0000000000000005, CPP_BOOL_PROPERTY_BITMASK(bHearNoises, UPawnSensingComponent), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bSeePawns, UPawnSensingComponent, uint8);
				UProperty* NewProp_bSeePawns = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bSeePawns"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bSeePawns, UPawnSensingComponent), 0x0000000000000005, CPP_BOOL_PROPERTY_BITMASK(bSeePawns, UPawnSensingComponent), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bOnlySensePlayers, UPawnSensingComponent, uint8);
				UProperty* NewProp_bOnlySensePlayers = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bOnlySensePlayers"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bOnlySensePlayers, UPawnSensingComponent), 0x0000000000000005, CPP_BOOL_PROPERTY_BITMASK(bOnlySensePlayers, UPawnSensingComponent), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bEnableSensingUpdates, UPawnSensingComponent, uint8);
				UProperty* NewProp_bEnableSensingUpdates = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bEnableSensingUpdates"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bEnableSensingUpdates, UPawnSensingComponent), 0x0000000000000015, CPP_BOOL_PROPERTY_BITMASK(bEnableSensingUpdates, UPawnSensingComponent), sizeof(uint8), false);
				UProperty* NewProp_HearingMaxSoundAge = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("HearingMaxSoundAge"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(HearingMaxSoundAge, UPawnSensingComponent), 0x0000000000000005);
				UProperty* NewProp_SensingInterval = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SensingInterval"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(SensingInterval, UPawnSensingComponent), 0x0000000000000015);
				UProperty* NewProp_SightRadius = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SightRadius"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(SightRadius, UPawnSensingComponent), 0x0000000000000005);
				UProperty* NewProp_LOSHearingThreshold = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("LOSHearingThreshold"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(LOSHearingThreshold, UPawnSensingComponent), 0x0000000000000005);
				UProperty* NewProp_HearingThreshold = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("HearingThreshold"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(HearingThreshold, UPawnSensingComponent), 0x0000000000000005);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UPawnSensingComponent_GetPeripheralVisionAngle()); // 4147969106
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UPawnSensingComponent_GetPeripheralVisionCosine()); // 3015618379
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UDelegateFunction_UPawnSensingComponent_HearNoiseDelegate__DelegateSignature()); // 321104037
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UDelegateFunction_UPawnSensingComponent_SeePawnDelegate__DelegateSignature()); // 3340257356
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UPawnSensingComponent_SetPeripheralVisionAngle()); // 2052928228
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UPawnSensingComponent_SetSensingInterval()); // 2364293083
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UPawnSensingComponent_SetSensingUpdatesEnabled()); // 1909365662
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintSpawnableComponent"), TEXT(""));
				MetaData->SetValue(OuterClass, TEXT("ClassGroupNames"), TEXT("AI"));
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Activation Components|Activation Collision ComponentReplication"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Perception/PawnSensingComponent.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/PawnSensingComponent.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("SensingComponent encapsulates sensory (ie sight and hearing) settings and functionality for an Actor,\nallowing the actor to see/hear Pawns in the world. It does nothing on network clients."));
				MetaData->SetValue(NewProp_PeripheralVisionCosine, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/PawnSensingComponent.h"));
				MetaData->SetValue(NewProp_PeripheralVisionCosine, TEXT("ToolTip"), TEXT("Cosine of limits of peripheral vision. Computed from PeripheralVisionAngle."));
				MetaData->SetValue(NewProp_PeripheralVisionAngle, TEXT("Category"), TEXT("AI"));
				MetaData->SetValue(NewProp_PeripheralVisionAngle, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/PawnSensingComponent.h"));
				MetaData->SetValue(NewProp_PeripheralVisionAngle, TEXT("ToolTip"), TEXT("How far to the side AI can see, in degrees. Use SetPeripheralVisionAngle to change the value at runtime."));
				MetaData->SetValue(NewProp_OnHearNoise, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/PawnSensingComponent.h"));
				MetaData->SetValue(NewProp_OnHearNoise, TEXT("ToolTip"), TEXT("Delegate to execute when we hear a noise from a Pawn's PawnNoiseEmitterComponent."));
				MetaData->SetValue(NewProp_OnSeePawn, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/PawnSensingComponent.h"));
				MetaData->SetValue(NewProp_OnSeePawn, TEXT("ToolTip"), TEXT("Delegate to execute when we see a Pawn."));
				MetaData->SetValue(NewProp_bHearNoises, TEXT("Category"), TEXT("AI"));
				MetaData->SetValue(NewProp_bHearNoises, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/PawnSensingComponent.h"));
				MetaData->SetValue(NewProp_bHearNoises, TEXT("ToolTip"), TEXT("If true, we will perform audibility tests and will be notified when a Pawn makes a noise that can be heard. Default: true\nIMPORTANT NOTE: If we can see pawns (bSeePawns is true), and the pawn is visible, noise notifications are not triggered."));
				MetaData->SetValue(NewProp_bSeePawns, TEXT("Category"), TEXT("AI"));
				MetaData->SetValue(NewProp_bSeePawns, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/PawnSensingComponent.h"));
				MetaData->SetValue(NewProp_bSeePawns, TEXT("ToolTip"), TEXT("If true, we will perform visibility tests and will trigger notifications when a Pawn is visible. Default: true"));
				MetaData->SetValue(NewProp_bOnlySensePlayers, TEXT("Category"), TEXT("AI"));
				MetaData->SetValue(NewProp_bOnlySensePlayers, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/PawnSensingComponent.h"));
				MetaData->SetValue(NewProp_bOnlySensePlayers, TEXT("ToolTip"), TEXT("If true, will only sense player-controlled pawns in the world. Default: true"));
				MetaData->SetValue(NewProp_bEnableSensingUpdates, TEXT("Category"), TEXT("AI"));
				MetaData->SetValue(NewProp_bEnableSensingUpdates, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/PawnSensingComponent.h"));
				MetaData->SetValue(NewProp_bEnableSensingUpdates, TEXT("ToolTip"), TEXT("If true, component will perform sensing updates. At runtime change this using SetSensingUpdatesEnabled()."));
				MetaData->SetValue(NewProp_HearingMaxSoundAge, TEXT("Category"), TEXT("AI"));
				MetaData->SetValue(NewProp_HearingMaxSoundAge, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/PawnSensingComponent.h"));
				MetaData->SetValue(NewProp_HearingMaxSoundAge, TEXT("ToolTip"), TEXT("Max age of sounds we can hear. Should be greater than SensingInterval, or you might miss hearing some sounds!"));
				MetaData->SetValue(NewProp_SensingInterval, TEXT("Category"), TEXT("AI"));
				MetaData->SetValue(NewProp_SensingInterval, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/PawnSensingComponent.h"));
				MetaData->SetValue(NewProp_SensingInterval, TEXT("ToolTip"), TEXT("Amount of time between pawn sensing updates. Use SetSensingInterval() to adjust this at runtime. A value <= 0 prevents any updates."));
				MetaData->SetValue(NewProp_SightRadius, TEXT("Category"), TEXT("AI"));
				MetaData->SetValue(NewProp_SightRadius, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/PawnSensingComponent.h"));
				MetaData->SetValue(NewProp_SightRadius, TEXT("ToolTip"), TEXT("Maximum sight distance."));
				MetaData->SetValue(NewProp_LOSHearingThreshold, TEXT("Category"), TEXT("AI"));
				MetaData->SetValue(NewProp_LOSHearingThreshold, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/PawnSensingComponent.h"));
				MetaData->SetValue(NewProp_LOSHearingThreshold, TEXT("ToolTip"), TEXT("Max distance at which a makenoise(1.0) loudness sound can be heard if unoccluded (LOSHearingThreshold should be > HearingThreshold)"));
				MetaData->SetValue(NewProp_HearingThreshold, TEXT("Category"), TEXT("AI"));
				MetaData->SetValue(NewProp_HearingThreshold, TEXT("ModuleRelativePath"), TEXT("Classes/Perception/PawnSensingComponent.h"));
				MetaData->SetValue(NewProp_HearingThreshold, TEXT("ToolTip"), TEXT("Max distance at which a makenoise(1.0) loudness sound can be heard, regardless of occlusion"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UPawnSensingComponent(Z_Construct_UClass_UPawnSensingComponent, TEXT("UPawnSensingComponent"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UPawnSensingComponent);
	UPackage* Z_Construct_UPackage_AIModule()
	{
		static UPackage* ReturnPackage = NULL;
		if (!ReturnPackage)
		{
			ReturnPackage = CastChecked<UPackage>(StaticFindObjectFast(UPackage::StaticClass(), NULL, FName(TEXT("/Script/AIModule")), false, false));
			ReturnPackage->SetPackageFlags(PKG_CompiledIn | 0x00000000);
			FGuid Guid;
			Guid.A = 0x118137B8;
			Guid.B = 0x34121040;
			Guid.C = 0x00000000;
			Guid.D = 0x00000000;
			ReturnPackage->SetGuid(Guid);

			Z_Construct_UDelegateFunction_AIModule_AIMoveCompletedSignature__DelegateSignature();
			Z_Construct_UDelegateFunction_AIModule_OAISimpleDelegate__DelegateSignature();
			Z_Construct_UDelegateFunction_UEnvQueryInstanceBlueprintWrapper_EQSQueryDoneSignature__DelegateSignature();
			Z_Construct_UDelegateFunction_AIModule_PerceptionUpdatedDelegate__DelegateSignature();
			Z_Construct_UDelegateFunction_AIModule_ActorPerceptionUpdatedDelegate__DelegateSignature();
			Z_Construct_UDelegateFunction_UPawnSensingComponent_SeePawnDelegate__DelegateSignature();
			Z_Construct_UDelegateFunction_UPawnSensingComponent_HearNoiseDelegate__DelegateSignature();
			Z_Construct_UDelegateFunction_AIModule_MoveTaskCompletedSignature__DelegateSignature();
		}
		return ReturnPackage;
	}
#endif

PRAGMA_ENABLE_DEPRECATION_WARNINGS
