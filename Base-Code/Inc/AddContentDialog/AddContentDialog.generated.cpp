// Copyright 1998-2015 Epic Games, Inc. All Rights Reserved.
/*===========================================================================
	Boilerplate C++ definitions for a single module.
	This is automatically generated by UnrealHeaderTool.
	DO NOT modify this manually! Edit the corresponding .h files instead!
===========================================================================*/

#include "Private/AddContentDialogPCH.h"
#include "AddContentDialog.generated.dep.h"
PRAGMA_DISABLE_DEPRECATION_WARNINGS
void EmptyLinkFunctionForGeneratedCodeAddContentDialog() {}
static class UEnum* EContentSourceCategory_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ADDCONTENTDIALOG_API class UEnum* Z_Construct_UEnum_AddContentDialog_EContentSourceCategory();
		extern ADDCONTENTDIALOG_API class UPackage* Z_Construct_UPackage_AddContentDialog();
		Singleton = GetStaticEnum(Z_Construct_UEnum_AddContentDialog_EContentSourceCategory, Z_Construct_UPackage_AddContentDialog(), TEXT("EContentSourceCategory"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EContentSourceCategory(EContentSourceCategory_StaticEnum, TEXT("/Script/AddContentDialog"));
static class UEnum* EFeaturePackDetailLevel_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ADDCONTENTDIALOG_API class UEnum* Z_Construct_UEnum_AddContentDialog_EFeaturePackDetailLevel();
		extern ADDCONTENTDIALOG_API class UPackage* Z_Construct_UPackage_AddContentDialog();
		Singleton = GetStaticEnum(Z_Construct_UEnum_AddContentDialog_EFeaturePackDetailLevel, Z_Construct_UPackage_AddContentDialog(), TEXT("EFeaturePackDetailLevel"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EFeaturePackDetailLevel(EFeaturePackDetailLevel_StaticEnum, TEXT("/Script/AddContentDialog"));
class UScriptStruct* FFeatureAdditionalFiles::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ADDCONTENTDIALOG_API class UScriptStruct* Z_Construct_UScriptStruct_FFeatureAdditionalFiles();
		extern ADDCONTENTDIALOG_API uint32 Get_Z_Construct_UScriptStruct_FFeatureAdditionalFiles_CRC();
		extern ADDCONTENTDIALOG_API class UPackage* Z_Construct_UPackage_AddContentDialog();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FFeatureAdditionalFiles, Z_Construct_UPackage_AddContentDialog(), TEXT("FeatureAdditionalFiles"), sizeof(FFeatureAdditionalFiles), Get_Z_Construct_UScriptStruct_FFeatureAdditionalFiles_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FFeatureAdditionalFiles(FFeatureAdditionalFiles::StaticStruct, TEXT("/Script/AddContentDialog"));
static struct FScriptStruct_AddContentDialog_StaticRegisterNativesFFeatureAdditionalFiles
{
	FScriptStruct_AddContentDialog_StaticRegisterNativesFFeatureAdditionalFiles()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("FeatureAdditionalFiles")),new UScriptStruct::TCppStructOps<FFeatureAdditionalFiles>);
	}
} ScriptStruct_AddContentDialog_StaticRegisterNativesFFeatureAdditionalFiles;
class UScriptStruct* FFeaturePackLevelSet::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ADDCONTENTDIALOG_API class UScriptStruct* Z_Construct_UScriptStruct_FFeaturePackLevelSet();
		extern ADDCONTENTDIALOG_API uint32 Get_Z_Construct_UScriptStruct_FFeaturePackLevelSet_CRC();
		extern ADDCONTENTDIALOG_API class UPackage* Z_Construct_UPackage_AddContentDialog();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FFeaturePackLevelSet, Z_Construct_UPackage_AddContentDialog(), TEXT("FeaturePackLevelSet"), sizeof(FFeaturePackLevelSet), Get_Z_Construct_UScriptStruct_FFeaturePackLevelSet_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FFeaturePackLevelSet(FFeaturePackLevelSet::StaticStruct, TEXT("/Script/AddContentDialog"));
static struct FScriptStruct_AddContentDialog_StaticRegisterNativesFFeaturePackLevelSet
{
	FScriptStruct_AddContentDialog_StaticRegisterNativesFFeaturePackLevelSet()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("FeaturePackLevelSet")),new UScriptStruct::TCppStructOps<FFeaturePackLevelSet>);
	}
} ScriptStruct_AddContentDialog_StaticRegisterNativesFFeaturePackLevelSet;
#if USE_COMPILED_IN_NATIVES
	ADDCONTENTDIALOG_API class UEnum* Z_Construct_UEnum_AddContentDialog_EContentSourceCategory();
	ADDCONTENTDIALOG_API class UEnum* Z_Construct_UEnum_AddContentDialog_EFeaturePackDetailLevel();
	ADDCONTENTDIALOG_API class UScriptStruct* Z_Construct_UScriptStruct_FFeatureAdditionalFiles();
	ADDCONTENTDIALOG_API class UScriptStruct* Z_Construct_UScriptStruct_FFeaturePackLevelSet();
	ADDCONTENTDIALOG_API class UPackage* Z_Construct_UPackage_AddContentDialog();
	UEnum* Z_Construct_UEnum_AddContentDialog_EContentSourceCategory()
	{
		UPackage* Outer=Z_Construct_UPackage_AddContentDialog();
		extern uint32 Get_Z_Construct_UEnum_AddContentDialog_EContentSourceCategory_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("EContentSourceCategory"), 0, Get_Z_Construct_UEnum_AddContentDialog_EContentSourceCategory_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EContentSourceCategory"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EContentSourceCategory::BlueprintFeature")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EContentSourceCategory::CodeFeature")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EContentSourceCategory::Content")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EContentSourceCategory::SharedPack")), 3));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EContentSourceCategory::Unknown")), 4));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EContentSourceCategory::EContentSourceCategory_MAX")), 5));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::EnumClass);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Private/IContentSource.h"));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("Defines categories for content sources."));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_AddContentDialog_EContentSourceCategory_CRC() { return 2845518785U; }
	UEnum* Z_Construct_UEnum_AddContentDialog_EFeaturePackDetailLevel()
	{
		UPackage* Outer=Z_Construct_UPackage_AddContentDialog();
		extern uint32 Get_Z_Construct_UEnum_AddContentDialog_EFeaturePackDetailLevel_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("EFeaturePackDetailLevel"), 0, Get_Z_Construct_UEnum_AddContentDialog_EFeaturePackDetailLevel_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EFeaturePackDetailLevel"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EFeaturePackDetailLevel::Standard")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EFeaturePackDetailLevel::High")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EFeaturePackDetailLevel::EFeaturePackDetailLevel_MAX")), 2));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::EnumClass);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Public/FeaturePackContentSource.h"));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("Defines categories for shared template resource levels."));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_AddContentDialog_EFeaturePackDetailLevel_CRC() { return 2753069439U; }
	UScriptStruct* Z_Construct_UScriptStruct_FFeatureAdditionalFiles()
	{
		UPackage* Outer=Z_Construct_UPackage_AddContentDialog();
		extern uint32 Get_Z_Construct_UScriptStruct_FFeatureAdditionalFiles_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("FeatureAdditionalFiles"), sizeof(FFeatureAdditionalFiles), Get_Z_Construct_UScriptStruct_FFeatureAdditionalFiles_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("FeatureAdditionalFiles"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FFeatureAdditionalFiles>, EStructFlags(0x00000001));
			UProperty* NewProp_AdditionalFilesList = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("AdditionalFilesList"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(AdditionalFilesList, FFeatureAdditionalFiles), 0x0000000000000000);
			UProperty* NewProp_AdditionalFilesList_Inner = new(EC_InternalUseOnlyConstructor, NewProp_AdditionalFilesList, TEXT("AdditionalFilesList"), RF_Public|RF_Transient|RF_Native) UStrProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000);
			UProperty* NewProp_DestinationFilesFolder = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("DestinationFilesFolder"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(DestinationFilesFolder, FFeatureAdditionalFiles), 0x0000000000000000);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/FeaturePackContentSource.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Structure that defines a shared feature pack resource."));
			MetaData->SetValue(NewProp_AdditionalFilesList, TEXT("ModuleRelativePath"), TEXT("Public/FeaturePackContentSource.h"));
			MetaData->SetValue(NewProp_AdditionalFilesList, TEXT("ToolTip"), TEXT("List of files to insert"));
			MetaData->SetValue(NewProp_DestinationFilesFolder, TEXT("ModuleRelativePath"), TEXT("Public/FeaturePackContentSource.h"));
			MetaData->SetValue(NewProp_DestinationFilesFolder, TEXT("ToolTip"), TEXT("Name of the folder to insert the files to"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FFeatureAdditionalFiles_CRC() { return 1252649195U; }
	UScriptStruct* Z_Construct_UScriptStruct_FFeaturePackLevelSet()
	{
		UPackage* Outer=Z_Construct_UPackage_AddContentDialog();
		extern uint32 Get_Z_Construct_UScriptStruct_FFeaturePackLevelSet_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("FeaturePackLevelSet"), sizeof(FFeaturePackLevelSet), Get_Z_Construct_UScriptStruct_FFeaturePackLevelSet_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("FeaturePackLevelSet"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FFeaturePackLevelSet>, EStructFlags(0x00000001));
			UProperty* NewProp_MountName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("MountName"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(MountName, FFeaturePackLevelSet), 0x0000000000000000);
			UProperty* NewProp_DetailLevels = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("DetailLevels"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(DetailLevels, FFeaturePackLevelSet), 0x0000000000000000);
			UProperty* NewProp_DetailLevels_Inner = new(EC_InternalUseOnlyConstructor, NewProp_DetailLevels, TEXT("DetailLevels"), RF_Public|RF_Transient|RF_Native) UByteProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UEnum_AddContentDialog_EFeaturePackDetailLevel());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/FeaturePackContentSource.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Structure that defines a shared feature pack resource."));
			MetaData->SetValue(NewProp_MountName, TEXT("ModuleRelativePath"), TEXT("Public/FeaturePackContentSource.h"));
			MetaData->SetValue(NewProp_MountName, TEXT("ToolTip"), TEXT("Mount name for the shared resource - this is the folder the resource will be copied to on project generation as well as the name of the folder that will appear in the content browser."));
			MetaData->SetValue(NewProp_DetailLevels, TEXT("ModuleRelativePath"), TEXT("Public/FeaturePackContentSource.h"));
			MetaData->SetValue(NewProp_DetailLevels, TEXT("ToolTip"), TEXT("List of shared resource levels for this shared resource."));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FFeaturePackLevelSet_CRC() { return 1540515249U; }
	UPackage* Z_Construct_UPackage_AddContentDialog()
	{
		static UPackage* ReturnPackage = NULL;
		if (!ReturnPackage)
		{
			ReturnPackage = CastChecked<UPackage>(StaticFindObjectFast(UPackage::StaticClass(), NULL, FName(TEXT("/Script/AddContentDialog")), false, false));
			ReturnPackage->SetPackageFlags(PKG_CompiledIn | 0x00000000);
			FGuid Guid;
			Guid.A = 0x9DE80E27;
			Guid.B = 0xD0DDCDE9;
			Guid.C = 0x00000000;
			Guid.D = 0x00000000;
			ReturnPackage->SetGuid(Guid);

		}
		return ReturnPackage;
	}
#endif

PRAGMA_ENABLE_DEPRECATION_WARNINGS
