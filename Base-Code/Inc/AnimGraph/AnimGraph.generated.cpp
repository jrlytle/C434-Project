// Copyright 1998-2015 Epic Games, Inc. All Rights Reserved.
/*===========================================================================
	Boilerplate C++ definitions for a single module.
	This is automatically generated by UnrealHeaderTool.
	DO NOT modify this manually! Edit the corresponding .h files instead!
===========================================================================*/

#include "Private/AnimGraphPrivatePCH.h"
#include "AnimGraph.generated.dep.h"
PRAGMA_DISABLE_DEPRECATION_WARNINGS
void EmptyLinkFunctionForGeneratedCodeAnimGraph() {}
	void UAnimationConduitGraphSchema::StaticRegisterNativesUAnimationConduitGraphSchema()
	{
	}
	IMPLEMENT_CLASS(UAnimationConduitGraphSchema, 3638934574);
	void UAnimationGraph::StaticRegisterNativesUAnimationGraph()
	{
	}
	IMPLEMENT_CLASS(UAnimationGraph, 1646216967);
	void UAnimationCustomTransitionGraph::StaticRegisterNativesUAnimationCustomTransitionGraph()
	{
	}
	IMPLEMENT_CLASS(UAnimationCustomTransitionGraph, 3424676398);
	void UAnimationStateGraph::StaticRegisterNativesUAnimationStateGraph()
	{
	}
	IMPLEMENT_CLASS(UAnimationStateGraph, 3380798072);
	void UAnimationTransitionGraph::StaticRegisterNativesUAnimationTransitionGraph()
	{
	}
	IMPLEMENT_CLASS(UAnimationTransitionGraph, 2809772753);
	void UAnimationGraphSchema::StaticRegisterNativesUAnimationGraphSchema()
	{
	}
	IMPLEMENT_CLASS(UAnimationGraphSchema, 2454816433);
	void UAnimationCustomTransitionSchema::StaticRegisterNativesUAnimationCustomTransitionSchema()
	{
	}
	IMPLEMENT_CLASS(UAnimationCustomTransitionSchema, 2316257338);
	void UAnimationStateGraphSchema::StaticRegisterNativesUAnimationStateGraphSchema()
	{
	}
	IMPLEMENT_CLASS(UAnimationStateGraphSchema, 1068415856);
	void UAnimationStateMachineGraph::StaticRegisterNativesUAnimationStateMachineGraph()
	{
	}
	IMPLEMENT_CLASS(UAnimationStateMachineGraph, 4268638150);
class UScriptStruct* FEdGraphSchemaAction_NewStateComment::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ANIMGRAPH_API class UScriptStruct* Z_Construct_UScriptStruct_FEdGraphSchemaAction_NewStateComment();
		extern ANIMGRAPH_API uint32 Get_Z_Construct_UScriptStruct_FEdGraphSchemaAction_NewStateComment_CRC();
		extern ANIMGRAPH_API class UPackage* Z_Construct_UPackage_AnimGraph();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FEdGraphSchemaAction_NewStateComment, Z_Construct_UPackage_AnimGraph(), TEXT("EdGraphSchemaAction_NewStateComment"), sizeof(FEdGraphSchemaAction_NewStateComment), Get_Z_Construct_UScriptStruct_FEdGraphSchemaAction_NewStateComment_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FEdGraphSchemaAction_NewStateComment(FEdGraphSchemaAction_NewStateComment::StaticStruct, TEXT("/Script/AnimGraph"));
static struct FScriptStruct_AnimGraph_StaticRegisterNativesFEdGraphSchemaAction_NewStateComment
{
	FScriptStruct_AnimGraph_StaticRegisterNativesFEdGraphSchemaAction_NewStateComment()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("EdGraphSchemaAction_NewStateComment")),new UScriptStruct::TCppStructOps<FEdGraphSchemaAction_NewStateComment>);
	}
} ScriptStruct_AnimGraph_StaticRegisterNativesFEdGraphSchemaAction_NewStateComment;
class UScriptStruct* FEdGraphSchemaAction_NewStateNode::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ANIMGRAPH_API class UScriptStruct* Z_Construct_UScriptStruct_FEdGraphSchemaAction_NewStateNode();
		extern ANIMGRAPH_API uint32 Get_Z_Construct_UScriptStruct_FEdGraphSchemaAction_NewStateNode_CRC();
		extern ANIMGRAPH_API class UPackage* Z_Construct_UPackage_AnimGraph();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FEdGraphSchemaAction_NewStateNode, Z_Construct_UPackage_AnimGraph(), TEXT("EdGraphSchemaAction_NewStateNode"), sizeof(FEdGraphSchemaAction_NewStateNode), Get_Z_Construct_UScriptStruct_FEdGraphSchemaAction_NewStateNode_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FEdGraphSchemaAction_NewStateNode(FEdGraphSchemaAction_NewStateNode::StaticStruct, TEXT("/Script/AnimGraph"));
static struct FScriptStruct_AnimGraph_StaticRegisterNativesFEdGraphSchemaAction_NewStateNode
{
	FScriptStruct_AnimGraph_StaticRegisterNativesFEdGraphSchemaAction_NewStateNode()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("EdGraphSchemaAction_NewStateNode")),new UScriptStruct::TCppStructOps<FEdGraphSchemaAction_NewStateNode>);
	}
} ScriptStruct_AnimGraph_StaticRegisterNativesFEdGraphSchemaAction_NewStateNode;
	void UAnimationStateMachineSchema::StaticRegisterNativesUAnimationStateMachineSchema()
	{
	}
	IMPLEMENT_CLASS(UAnimationStateMachineSchema, 1978091666);
	void UAnimationTransitionSchema::StaticRegisterNativesUAnimationTransitionSchema()
	{
	}
	IMPLEMENT_CLASS(UAnimationTransitionSchema, 2533532755);
	void UAnimGraphNode_Base::StaticRegisterNativesUAnimGraphNode_Base()
	{
	}
	IMPLEMENT_CLASS(UAnimGraphNode_Base, 2830141202);
	void UAnimGraphNode_ApplyAdditive::StaticRegisterNativesUAnimGraphNode_ApplyAdditive()
	{
	}
	IMPLEMENT_CLASS(UAnimGraphNode_ApplyAdditive, 2621602219);
	void UAnimGraphNode_AssetPlayerBase::StaticRegisterNativesUAnimGraphNode_AssetPlayerBase()
	{
	}
	IMPLEMENT_CLASS(UAnimGraphNode_AssetPlayerBase, 3635618152);
	void UAnimGraphNode_BlendSpaceBase::StaticRegisterNativesUAnimGraphNode_BlendSpaceBase()
	{
	}
	IMPLEMENT_CLASS(UAnimGraphNode_BlendSpaceBase, 1063498998);
	void UAnimGraphNode_BlendSpaceEvaluator::StaticRegisterNativesUAnimGraphNode_BlendSpaceEvaluator()
	{
	}
	IMPLEMENT_CLASS(UAnimGraphNode_BlendSpaceEvaluator, 1084267429);
	void UAnimGraphNode_BlendSpacePlayer::StaticRegisterNativesUAnimGraphNode_BlendSpacePlayer()
	{
	}
	IMPLEMENT_CLASS(UAnimGraphNode_BlendSpacePlayer, 2825831770);
	void UAnimGraphNode_RotationOffsetBlendSpace::StaticRegisterNativesUAnimGraphNode_RotationOffsetBlendSpace()
	{
	}
	IMPLEMENT_CLASS(UAnimGraphNode_RotationOffsetBlendSpace, 1113865461);
	void UAnimGraphNode_SequenceEvaluator::StaticRegisterNativesUAnimGraphNode_SequenceEvaluator()
	{
	}
	IMPLEMENT_CLASS(UAnimGraphNode_SequenceEvaluator, 117859836);
	void UAnimGraphNode_SequencePlayer::StaticRegisterNativesUAnimGraphNode_SequencePlayer()
	{
	}
	IMPLEMENT_CLASS(UAnimGraphNode_SequencePlayer, 4000338960);
	void UAnimGraphNode_BlendListBase::StaticRegisterNativesUAnimGraphNode_BlendListBase()
	{
	}
	IMPLEMENT_CLASS(UAnimGraphNode_BlendListBase, 2601356877);
	void UAnimGraphNode_BlendListByBool::StaticRegisterNativesUAnimGraphNode_BlendListByBool()
	{
	}
	IMPLEMENT_CLASS(UAnimGraphNode_BlendListByBool, 148379218);
	void UAnimGraphNode_BlendListByEnum::StaticRegisterNativesUAnimGraphNode_BlendListByEnum()
	{
	}
	IMPLEMENT_CLASS(UAnimGraphNode_BlendListByEnum, 3119544333);
	void UAnimGraphNode_BlendListByInt::StaticRegisterNativesUAnimGraphNode_BlendListByInt()
	{
	}
	IMPLEMENT_CLASS(UAnimGraphNode_BlendListByInt, 4255111388);
	void UAnimGraphNode_LayeredBoneBlend::StaticRegisterNativesUAnimGraphNode_LayeredBoneBlend()
	{
	}
	IMPLEMENT_CLASS(UAnimGraphNode_LayeredBoneBlend, 1074642030);
	void UAnimGraphNode_ComponentToLocalSpace::StaticRegisterNativesUAnimGraphNode_ComponentToLocalSpace()
	{
	}
	IMPLEMENT_CLASS(UAnimGraphNode_ComponentToLocalSpace, 3453036952);
	void UAnimGraphNode_LocalToComponentSpace::StaticRegisterNativesUAnimGraphNode_LocalToComponentSpace()
	{
	}
	IMPLEMENT_CLASS(UAnimGraphNode_LocalToComponentSpace, 359522116);
	void UAnimGraphNode_MeshRefPose::StaticRegisterNativesUAnimGraphNode_MeshRefPose()
	{
	}
	IMPLEMENT_CLASS(UAnimGraphNode_MeshRefPose, 3917477144);
	void UAnimGraphNode_RefPoseBase::StaticRegisterNativesUAnimGraphNode_RefPoseBase()
	{
	}
	IMPLEMENT_CLASS(UAnimGraphNode_RefPoseBase, 2960066094);
	void UAnimGraphNode_IdentityPose::StaticRegisterNativesUAnimGraphNode_IdentityPose()
	{
	}
	IMPLEMENT_CLASS(UAnimGraphNode_IdentityPose, 128114318);
	void UAnimGraphNode_LocalRefPose::StaticRegisterNativesUAnimGraphNode_LocalRefPose()
	{
	}
	IMPLEMENT_CLASS(UAnimGraphNode_LocalRefPose, 3496704873);
	void UAnimGraphNode_Root::StaticRegisterNativesUAnimGraphNode_Root()
	{
	}
	IMPLEMENT_CLASS(UAnimGraphNode_Root, 1992618560);
	void UAnimGraphNode_CustomTransitionResult::StaticRegisterNativesUAnimGraphNode_CustomTransitionResult()
	{
	}
	IMPLEMENT_CLASS(UAnimGraphNode_CustomTransitionResult, 3827701964);
	void UAnimGraphNode_StateResult::StaticRegisterNativesUAnimGraphNode_StateResult()
	{
	}
	IMPLEMENT_CLASS(UAnimGraphNode_StateResult, 184643944);
	void UAnimGraphNode_RotateRootBone::StaticRegisterNativesUAnimGraphNode_RotateRootBone()
	{
	}
	IMPLEMENT_CLASS(UAnimGraphNode_RotateRootBone, 4259094490);
	void UAnimGraphNode_SaveCachedPose::StaticRegisterNativesUAnimGraphNode_SaveCachedPose()
	{
	}
	IMPLEMENT_CLASS(UAnimGraphNode_SaveCachedPose, 3525219195);
	void UAnimGraphNode_SkeletalControlBase::StaticRegisterNativesUAnimGraphNode_SkeletalControlBase()
	{
	}
	IMPLEMENT_CLASS(UAnimGraphNode_SkeletalControlBase, 934962789);
	void UAnimGraphNode_BoneDrivenController::StaticRegisterNativesUAnimGraphNode_BoneDrivenController()
	{
	}
	IMPLEMENT_CLASS(UAnimGraphNode_BoneDrivenController, 753173701);
	void UAnimGraphNode_CopyBone::StaticRegisterNativesUAnimGraphNode_CopyBone()
	{
	}
	IMPLEMENT_CLASS(UAnimGraphNode_CopyBone, 2322189825);
	void UAnimGraphNode_Fabrik::StaticRegisterNativesUAnimGraphNode_Fabrik()
	{
	}
	IMPLEMENT_CLASS(UAnimGraphNode_Fabrik, 821735486);
	void UAnimGraphNode_HandIKRetargeting::StaticRegisterNativesUAnimGraphNode_HandIKRetargeting()
	{
	}
	IMPLEMENT_CLASS(UAnimGraphNode_HandIKRetargeting, 3651857876);
	void UAnimGraphNode_LookAt::StaticRegisterNativesUAnimGraphNode_LookAt()
	{
	}
	IMPLEMENT_CLASS(UAnimGraphNode_LookAt, 3703321308);
	void UAnimGraphNode_ModifyBone::StaticRegisterNativesUAnimGraphNode_ModifyBone()
	{
	}
	IMPLEMENT_CLASS(UAnimGraphNode_ModifyBone, 584499767);
	void UAnimGraphNode_ObserveBone::StaticRegisterNativesUAnimGraphNode_ObserveBone()
	{
	}
	IMPLEMENT_CLASS(UAnimGraphNode_ObserveBone, 2946178020);
	void UAnimGraphNode_RotationMultiplier::StaticRegisterNativesUAnimGraphNode_RotationMultiplier()
	{
	}
	IMPLEMENT_CLASS(UAnimGraphNode_RotationMultiplier, 253792123);
	void UAnimGraphNode_SpringBone::StaticRegisterNativesUAnimGraphNode_SpringBone()
	{
	}
	IMPLEMENT_CLASS(UAnimGraphNode_SpringBone, 1508039469);
	void UAnimGraphNode_Trail::StaticRegisterNativesUAnimGraphNode_Trail()
	{
	}
	IMPLEMENT_CLASS(UAnimGraphNode_Trail, 804906324);
	void UAnimGraphNode_TwoBoneIK::StaticRegisterNativesUAnimGraphNode_TwoBoneIK()
	{
	}
	IMPLEMENT_CLASS(UAnimGraphNode_TwoBoneIK, 163232115);
	void UAnimGraphNode_WheelHandler::StaticRegisterNativesUAnimGraphNode_WheelHandler()
	{
	}
	IMPLEMENT_CLASS(UAnimGraphNode_WheelHandler, 3870990022);
	void UAnimGraphNode_Slot::StaticRegisterNativesUAnimGraphNode_Slot()
	{
	}
	IMPLEMENT_CLASS(UAnimGraphNode_Slot, 3583713466);
	void UAnimGraphNode_StateMachineBase::StaticRegisterNativesUAnimGraphNode_StateMachineBase()
	{
	}
	IMPLEMENT_CLASS(UAnimGraphNode_StateMachineBase, 565686736);
	void UAnimGraphNode_StateMachine::StaticRegisterNativesUAnimGraphNode_StateMachine()
	{
	}
	IMPLEMENT_CLASS(UAnimGraphNode_StateMachine, 2997177037);
	void UAnimGraphNode_TransitionPoseEvaluator::StaticRegisterNativesUAnimGraphNode_TransitionPoseEvaluator()
	{
	}
	IMPLEMENT_CLASS(UAnimGraphNode_TransitionPoseEvaluator, 4182029803);
	void UAnimGraphNode_TransitionResult::StaticRegisterNativesUAnimGraphNode_TransitionResult()
	{
	}
	IMPLEMENT_CLASS(UAnimGraphNode_TransitionResult, 2941503934);
	void UAnimGraphNode_TwoWayBlend::StaticRegisterNativesUAnimGraphNode_TwoWayBlend()
	{
	}
	IMPLEMENT_CLASS(UAnimGraphNode_TwoWayBlend, 3245660182);
	void UAnimGraphNode_UseCachedPose::StaticRegisterNativesUAnimGraphNode_UseCachedPose()
	{
	}
	IMPLEMENT_CLASS(UAnimGraphNode_UseCachedPose, 2378485687);
static class UEnum* EMontagePreviewType_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ANIMGRAPH_API class UEnum* Z_Construct_UEnum_AnimGraph_EMontagePreviewType();
		extern ANIMGRAPH_API class UPackage* Z_Construct_UPackage_AnimGraph();
		Singleton = GetStaticEnum(Z_Construct_UEnum_AnimGraph_EMontagePreviewType, Z_Construct_UPackage_AnimGraph(), TEXT("EMontagePreviewType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EMontagePreviewType(EMontagePreviewType_StaticEnum, TEXT("/Script/AnimGraph"));
	void UAnimPreviewInstance::StaticRegisterNativesUAnimPreviewInstance()
	{
	}
	IMPLEMENT_CLASS(UAnimPreviewInstance, 792913934);
	void UAnimStateEntryNode::StaticRegisterNativesUAnimStateEntryNode()
	{
	}
	IMPLEMENT_CLASS(UAnimStateEntryNode, 3419962018);
	void UAnimStateNodeBase::StaticRegisterNativesUAnimStateNodeBase()
	{
	}
	IMPLEMENT_CLASS(UAnimStateNodeBase, 3877921191);
	void UAnimStateConduitNode::StaticRegisterNativesUAnimStateConduitNode()
	{
	}
	IMPLEMENT_CLASS(UAnimStateConduitNode, 2942970293);
static class UEnum* EAnimStateType_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ANIMGRAPH_API class UEnum* Z_Construct_UEnum_AnimGraph_EAnimStateType();
		extern ANIMGRAPH_API class UPackage* Z_Construct_UPackage_AnimGraph();
		Singleton = GetStaticEnum(Z_Construct_UEnum_AnimGraph_EAnimStateType, Z_Construct_UPackage_AnimGraph(), TEXT("EAnimStateType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EAnimStateType(EAnimStateType_StaticEnum, TEXT("/Script/AnimGraph"));
	void UAnimStateNode::StaticRegisterNativesUAnimStateNode()
	{
	}
	IMPLEMENT_CLASS(UAnimStateNode, 1923424668);
	void UAnimStateTransitionNode::StaticRegisterNativesUAnimStateTransitionNode()
	{
	}
	IMPLEMENT_CLASS(UAnimStateTransitionNode, 214699306);
class UScriptStruct* FNodeSpawnData::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ANIMGRAPH_API class UScriptStruct* Z_Construct_UScriptStruct_FNodeSpawnData();
		extern ANIMGRAPH_API uint32 Get_Z_Construct_UScriptStruct_FNodeSpawnData_CRC();
		extern ANIMGRAPH_API class UPackage* Z_Construct_UPackage_AnimGraph();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FNodeSpawnData, Z_Construct_UPackage_AnimGraph(), TEXT("NodeSpawnData"), sizeof(FNodeSpawnData), Get_Z_Construct_UScriptStruct_FNodeSpawnData_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FNodeSpawnData(FNodeSpawnData::StaticStruct, TEXT("/Script/AnimGraph"));
static struct FScriptStruct_AnimGraph_StaticRegisterNativesFNodeSpawnData
{
	FScriptStruct_AnimGraph_StaticRegisterNativesFNodeSpawnData()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("NodeSpawnData")),new UScriptStruct::TCppStructOps<FNodeSpawnData>);
	}
} ScriptStruct_AnimGraph_StaticRegisterNativesFNodeSpawnData;
	void UK2Node_AnimGetter::StaticRegisterNativesUK2Node_AnimGetter()
	{
	}
	IMPLEMENT_CLASS(UK2Node_AnimGetter, 958561390);
static class UEnum* ETransitionGetter_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ANIMGRAPH_API class UEnum* Z_Construct_UEnum_AnimGraph_ETransitionGetter();
		extern ANIMGRAPH_API class UPackage* Z_Construct_UPackage_AnimGraph();
		Singleton = GetStaticEnum(Z_Construct_UEnum_AnimGraph_ETransitionGetter, Z_Construct_UPackage_AnimGraph(), TEXT("ETransitionGetter"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ETransitionGetter(ETransitionGetter_StaticEnum, TEXT("/Script/AnimGraph"));
	void UK2Node_TransitionRuleGetter::StaticRegisterNativesUK2Node_TransitionRuleGetter()
	{
	}
	IMPLEMENT_CLASS(UK2Node_TransitionRuleGetter, 3675729003);
#if USE_COMPILED_IN_NATIVES
// Cross Module References
	BLUEPRINTGRAPH_API class UClass* Z_Construct_UClass_UEdGraphSchema_K2();
	ENGINE_API class UClass* Z_Construct_UClass_UEdGraph();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FEdGraphSchemaAction();
	ENGINE_API class UClass* Z_Construct_UClass_UEdGraphSchema();
	BLUEPRINTGRAPH_API class UClass* Z_Construct_UClass_UK2Node();
	BLUEPRINTGRAPH_API class UScriptStruct* Z_Construct_UScriptStruct_FOptionalPinFromProperty();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimNode_ApplyAdditive();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimationGroupReference();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimNode_BlendSpaceEvaluator();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimNode_BlendSpacePlayer();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimNode_RotationOffsetBlendSpace();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimNode_SequenceEvaluator();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimNode_SequencePlayer();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimNode_BlendListByBool();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimNode_BlendListByEnum();
	BLUEPRINTGRAPH_API class UClass* Z_Construct_UClass_UNodeDependingOnEnumInterface_NoRegister();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimNode_BlendListByInt();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimNode_LayeredBoneBlend();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimNode_ConvertComponentToLocalSpace();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimNode_ConvertLocalToComponentSpace();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimNode_MeshSpaceRefPose();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimNode_RefPose();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimNode_Root();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimNode_RotateRootBone();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimNode_SaveCachedPose();
	ANIMGRAPHRUNTIME_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimNode_BoneDrivenController();
	ANIMGRAPHRUNTIME_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimNode_CopyBone();
	ANIMGRAPHRUNTIME_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimNode_Fabrik();
	ANIMGRAPHRUNTIME_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimNode_HandIKRetargeting();
	ANIMGRAPHRUNTIME_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimNode_LookAt();
	ANIMGRAPHRUNTIME_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimNode_ModifyBone();
	ANIMGRAPHRUNTIME_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimNode_ObserveBone();
	ANIMGRAPHRUNTIME_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimNode_RotationMultiplier();
	ANIMGRAPHRUNTIME_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimNode_SpringBone();
	ANIMGRAPHRUNTIME_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimNode_Trail();
	ANIMGRAPHRUNTIME_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimNode_TwoBoneIK();
	ANIMGRAPHRUNTIME_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimNode_WheelHandler();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimNode_Slot();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimNode_StateMachine();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimNode_TransitionPoseEvaluator();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimNode_TransitionResult();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimationNode_TwoWayBlend();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimNode_UseCachedPose();
	ENGINE_API class UClass* Z_Construct_UClass_UAnimSingleNodeInstance();
	ENGINE_API class UClass* Z_Construct_UClass_UEdGraphNode();
	ENGINE_API class UClass* Z_Construct_UClass_UEdGraph_NoRegister();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimNotifyEvent();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FGuid();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FLinearColor();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ETransitionLogicType();
	ENGINE_API class UClass* Z_Construct_UClass_UCurveFloat_NoRegister();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EAlphaBlendOption();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ETransitionBlendMode();
	ENGINE_API class UClass* Z_Construct_UClass_UAnimBlueprint_NoRegister();
	COREUOBJECT_API class UClass* Z_Construct_UClass_UObject_NoRegister();
	BLUEPRINTGRAPH_API class UClass* Z_Construct_UClass_UK2Node_CallFunction();

	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimationConduitGraphSchema_NoRegister();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimationConduitGraphSchema();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimationGraph_NoRegister();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimationGraph();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimationCustomTransitionGraph_NoRegister();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimationCustomTransitionGraph();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimationStateGraph_NoRegister();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimationStateGraph();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimationTransitionGraph_NoRegister();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimationTransitionGraph();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimationGraphSchema_NoRegister();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimationGraphSchema();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimationCustomTransitionSchema_NoRegister();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimationCustomTransitionSchema();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimationStateGraphSchema_NoRegister();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimationStateGraphSchema();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimationStateMachineGraph_NoRegister();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimationStateMachineGraph();
	ANIMGRAPH_API class UScriptStruct* Z_Construct_UScriptStruct_FEdGraphSchemaAction_NewStateComment();
	ANIMGRAPH_API class UScriptStruct* Z_Construct_UScriptStruct_FEdGraphSchemaAction_NewStateNode();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimationStateMachineSchema_NoRegister();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimationStateMachineSchema();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimationTransitionSchema_NoRegister();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimationTransitionSchema();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimGraphNode_Base_NoRegister();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimGraphNode_Base();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimGraphNode_ApplyAdditive_NoRegister();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimGraphNode_ApplyAdditive();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimGraphNode_AssetPlayerBase_NoRegister();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimGraphNode_AssetPlayerBase();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimGraphNode_BlendSpaceBase_NoRegister();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimGraphNode_BlendSpaceBase();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimGraphNode_BlendSpaceEvaluator_NoRegister();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimGraphNode_BlendSpaceEvaluator();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimGraphNode_BlendSpacePlayer_NoRegister();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimGraphNode_BlendSpacePlayer();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimGraphNode_RotationOffsetBlendSpace_NoRegister();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimGraphNode_RotationOffsetBlendSpace();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimGraphNode_SequenceEvaluator_NoRegister();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimGraphNode_SequenceEvaluator();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimGraphNode_SequencePlayer_NoRegister();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimGraphNode_SequencePlayer();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimGraphNode_BlendListBase_NoRegister();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimGraphNode_BlendListBase();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimGraphNode_BlendListByBool_NoRegister();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimGraphNode_BlendListByBool();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimGraphNode_BlendListByEnum_NoRegister();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimGraphNode_BlendListByEnum();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimGraphNode_BlendListByInt_NoRegister();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimGraphNode_BlendListByInt();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimGraphNode_LayeredBoneBlend_NoRegister();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimGraphNode_LayeredBoneBlend();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimGraphNode_ComponentToLocalSpace_NoRegister();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimGraphNode_ComponentToLocalSpace();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimGraphNode_LocalToComponentSpace_NoRegister();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimGraphNode_LocalToComponentSpace();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimGraphNode_MeshRefPose_NoRegister();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimGraphNode_MeshRefPose();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimGraphNode_RefPoseBase_NoRegister();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimGraphNode_RefPoseBase();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimGraphNode_IdentityPose_NoRegister();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimGraphNode_IdentityPose();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimGraphNode_LocalRefPose_NoRegister();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimGraphNode_LocalRefPose();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimGraphNode_Root_NoRegister();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimGraphNode_Root();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimGraphNode_CustomTransitionResult_NoRegister();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimGraphNode_CustomTransitionResult();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimGraphNode_StateResult_NoRegister();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimGraphNode_StateResult();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimGraphNode_RotateRootBone_NoRegister();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimGraphNode_RotateRootBone();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimGraphNode_SaveCachedPose_NoRegister();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimGraphNode_SaveCachedPose();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimGraphNode_SkeletalControlBase_NoRegister();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimGraphNode_SkeletalControlBase();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimGraphNode_BoneDrivenController_NoRegister();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimGraphNode_BoneDrivenController();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimGraphNode_CopyBone_NoRegister();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimGraphNode_CopyBone();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimGraphNode_Fabrik_NoRegister();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimGraphNode_Fabrik();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimGraphNode_HandIKRetargeting_NoRegister();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimGraphNode_HandIKRetargeting();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimGraphNode_LookAt_NoRegister();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimGraphNode_LookAt();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimGraphNode_ModifyBone_NoRegister();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimGraphNode_ModifyBone();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimGraphNode_ObserveBone_NoRegister();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimGraphNode_ObserveBone();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimGraphNode_RotationMultiplier_NoRegister();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimGraphNode_RotationMultiplier();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimGraphNode_SpringBone_NoRegister();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimGraphNode_SpringBone();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimGraphNode_Trail_NoRegister();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimGraphNode_Trail();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimGraphNode_TwoBoneIK_NoRegister();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimGraphNode_TwoBoneIK();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimGraphNode_WheelHandler_NoRegister();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimGraphNode_WheelHandler();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimGraphNode_Slot_NoRegister();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimGraphNode_Slot();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimGraphNode_StateMachineBase_NoRegister();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimGraphNode_StateMachineBase();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimGraphNode_StateMachine_NoRegister();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimGraphNode_StateMachine();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimGraphNode_TransitionPoseEvaluator_NoRegister();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimGraphNode_TransitionPoseEvaluator();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimGraphNode_TransitionResult_NoRegister();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimGraphNode_TransitionResult();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimGraphNode_TwoWayBlend_NoRegister();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimGraphNode_TwoWayBlend();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimGraphNode_UseCachedPose_NoRegister();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimGraphNode_UseCachedPose();
	ANIMGRAPH_API class UEnum* Z_Construct_UEnum_AnimGraph_EMontagePreviewType();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimPreviewInstance_NoRegister();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimPreviewInstance();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimStateEntryNode_NoRegister();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimStateEntryNode();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimStateNodeBase_NoRegister();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimStateNodeBase();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimStateConduitNode_NoRegister();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimStateConduitNode();
	ANIMGRAPH_API class UEnum* Z_Construct_UEnum_AnimGraph_EAnimStateType();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimStateNode_NoRegister();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimStateNode();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimStateTransitionNode_NoRegister();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimStateTransitionNode();
	ANIMGRAPH_API class UScriptStruct* Z_Construct_UScriptStruct_FNodeSpawnData();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UK2Node_AnimGetter_NoRegister();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UK2Node_AnimGetter();
	ANIMGRAPH_API class UEnum* Z_Construct_UEnum_AnimGraph_ETransitionGetter();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UK2Node_TransitionRuleGetter_NoRegister();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UK2Node_TransitionRuleGetter();
	ANIMGRAPH_API class UPackage* Z_Construct_UPackage_AnimGraph();
	UClass* Z_Construct_UClass_UAnimationConduitGraphSchema_NoRegister()
	{
		return UAnimationConduitGraphSchema::StaticClass();
	}
	UClass* Z_Construct_UClass_UAnimationConduitGraphSchema()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UEdGraphSchema_K2();
			Z_Construct_UPackage_AnimGraph();
			OuterClass = UAnimationConduitGraphSchema::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080084;


				OuterClass->ClassConfigName = FName(TEXT("Editor"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("AnimationConduitGraphSchema.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/AnimationConduitGraphSchema.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("@TODO: Should this derive from AnimationTransitionSchema (with appropriate suppression of state-based queries)"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAnimationConduitGraphSchema(Z_Construct_UClass_UAnimationConduitGraphSchema, TEXT("UAnimationConduitGraphSchema"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAnimationConduitGraphSchema);
	UClass* Z_Construct_UClass_UAnimationGraph_NoRegister()
	{
		return UAnimationGraph::StaticClass();
	}
	UClass* Z_Construct_UClass_UAnimationGraph()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UEdGraph();
			Z_Construct_UPackage_AnimGraph();
			OuterClass = UAnimationGraph::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("AnimationGraph.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/AnimationGraph.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAnimationGraph(Z_Construct_UClass_UAnimationGraph, TEXT("UAnimationGraph"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAnimationGraph);
	UClass* Z_Construct_UClass_UAnimationCustomTransitionGraph_NoRegister()
	{
		return UAnimationCustomTransitionGraph::StaticClass();
	}
	UClass* Z_Construct_UClass_UAnimationCustomTransitionGraph()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UAnimationGraph();
			Z_Construct_UPackage_AnimGraph();
			OuterClass = UAnimationCustomTransitionGraph::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_MyResultNode = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MyResultNode"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(MyResultNode, UAnimationCustomTransitionGraph), 0x0000000000000000, Z_Construct_UClass_UAnimGraphNode_CustomTransitionResult_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("AnimationCustomTransitionGraph.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/AnimationCustomTransitionGraph.h"));
				MetaData->SetValue(NewProp_MyResultNode, TEXT("ModuleRelativePath"), TEXT("Classes/AnimationCustomTransitionGraph.h"));
				MetaData->SetValue(NewProp_MyResultNode, TEXT("ToolTip"), TEXT("Result node within the state's animation graph"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAnimationCustomTransitionGraph(Z_Construct_UClass_UAnimationCustomTransitionGraph, TEXT("UAnimationCustomTransitionGraph"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAnimationCustomTransitionGraph);
	UClass* Z_Construct_UClass_UAnimationStateGraph_NoRegister()
	{
		return UAnimationStateGraph::StaticClass();
	}
	UClass* Z_Construct_UClass_UAnimationStateGraph()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UAnimationGraph();
			Z_Construct_UPackage_AnimGraph();
			OuterClass = UAnimationStateGraph::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_MyResultNode = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MyResultNode"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(MyResultNode, UAnimationStateGraph), 0x0000000000000000, Z_Construct_UClass_UAnimGraphNode_StateResult_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("AnimationStateGraph.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/AnimationStateGraph.h"));
				MetaData->SetValue(NewProp_MyResultNode, TEXT("ModuleRelativePath"), TEXT("Classes/AnimationStateGraph.h"));
				MetaData->SetValue(NewProp_MyResultNode, TEXT("ToolTip"), TEXT("Result node within the state's animation graph"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAnimationStateGraph(Z_Construct_UClass_UAnimationStateGraph, TEXT("UAnimationStateGraph"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAnimationStateGraph);
	UClass* Z_Construct_UClass_UAnimationTransitionGraph_NoRegister()
	{
		return UAnimationTransitionGraph::StaticClass();
	}
	UClass* Z_Construct_UClass_UAnimationTransitionGraph()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UAnimationGraph();
			Z_Construct_UPackage_AnimGraph();
			OuterClass = UAnimationTransitionGraph::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_MyResultNode = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MyResultNode"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(MyResultNode, UAnimationTransitionGraph), 0x0000000000000000, Z_Construct_UClass_UAnimGraphNode_TransitionResult_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("AnimationTransitionGraph.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/AnimationTransitionGraph.h"));
				MetaData->SetValue(NewProp_MyResultNode, TEXT("ModuleRelativePath"), TEXT("Classes/AnimationTransitionGraph.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAnimationTransitionGraph(Z_Construct_UClass_UAnimationTransitionGraph, TEXT("UAnimationTransitionGraph"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAnimationTransitionGraph);
	UClass* Z_Construct_UClass_UAnimationGraphSchema_NoRegister()
	{
		return UAnimationGraphSchema::StaticClass();
	}
	UClass* Z_Construct_UClass_UAnimationGraphSchema()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UEdGraphSchema_K2();
			Z_Construct_UPackage_AnimGraph();
			OuterClass = UAnimationGraphSchema::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080084;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_DefaultEvaluationHandlerName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("DefaultEvaluationHandlerName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(DefaultEvaluationHandlerName, UAnimationGraphSchema), 0x0000000000000000);
				UProperty* NewProp_NAME_OnEvaluate = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("NAME_OnEvaluate"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(NAME_OnEvaluate, UAnimationGraphSchema), 0x0000000000000000);
				UProperty* NewProp_NAME_CustomizeProperty = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("NAME_CustomizeProperty"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(NAME_CustomizeProperty, UAnimationGraphSchema), 0x0000000000000000);
				UProperty* NewProp_NAME_AlwaysAsPin = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("NAME_AlwaysAsPin"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(NAME_AlwaysAsPin, UAnimationGraphSchema), 0x0000000000000000);
				UProperty* NewProp_NAME_PinShownByDefault = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("NAME_PinShownByDefault"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(NAME_PinShownByDefault, UAnimationGraphSchema), 0x0000000000000000);
				UProperty* NewProp_NAME_PinHiddenByDefault = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("NAME_PinHiddenByDefault"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(NAME_PinHiddenByDefault, UAnimationGraphSchema), 0x0000000000000000);
				UProperty* NewProp_NAME_NeverAsPin = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("NAME_NeverAsPin"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(NAME_NeverAsPin, UAnimationGraphSchema), 0x0000000000000000);
				UProperty* NewProp_PN_SequenceName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("PN_SequenceName"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(PN_SequenceName, UAnimationGraphSchema), 0x0000000000000000);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->ClassConfigName = FName(TEXT("Editor"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("AnimationGraphSchema.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/AnimationGraphSchema.h"));
				MetaData->SetValue(NewProp_DefaultEvaluationHandlerName, TEXT("ModuleRelativePath"), TEXT("Classes/AnimationGraphSchema.h"));
				MetaData->SetValue(NewProp_NAME_OnEvaluate, TEXT("ModuleRelativePath"), TEXT("Classes/AnimationGraphSchema.h"));
				MetaData->SetValue(NewProp_NAME_CustomizeProperty, TEXT("ModuleRelativePath"), TEXT("Classes/AnimationGraphSchema.h"));
				MetaData->SetValue(NewProp_NAME_AlwaysAsPin, TEXT("ModuleRelativePath"), TEXT("Classes/AnimationGraphSchema.h"));
				MetaData->SetValue(NewProp_NAME_PinShownByDefault, TEXT("ModuleRelativePath"), TEXT("Classes/AnimationGraphSchema.h"));
				MetaData->SetValue(NewProp_NAME_PinHiddenByDefault, TEXT("ModuleRelativePath"), TEXT("Classes/AnimationGraphSchema.h"));
				MetaData->SetValue(NewProp_NAME_NeverAsPin, TEXT("ModuleRelativePath"), TEXT("Classes/AnimationGraphSchema.h"));
				MetaData->SetValue(NewProp_NAME_NeverAsPin, TEXT("ToolTip"), TEXT("PC_Object+PSC_Sequence"));
				MetaData->SetValue(NewProp_PN_SequenceName, TEXT("ModuleRelativePath"), TEXT("Classes/AnimationGraphSchema.h"));
				MetaData->SetValue(NewProp_PN_SequenceName, TEXT("ToolTip"), TEXT("Common PinNames"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAnimationGraphSchema(Z_Construct_UClass_UAnimationGraphSchema, TEXT("UAnimationGraphSchema"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAnimationGraphSchema);
	UClass* Z_Construct_UClass_UAnimationCustomTransitionSchema_NoRegister()
	{
		return UAnimationCustomTransitionSchema::StaticClass();
	}
	UClass* Z_Construct_UClass_UAnimationCustomTransitionSchema()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UAnimationGraphSchema();
			Z_Construct_UPackage_AnimGraph();
			OuterClass = UAnimationCustomTransitionSchema::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080084;


				OuterClass->ClassConfigName = FName(TEXT("Editor"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("AnimationCustomTransitionSchema.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/AnimationCustomTransitionSchema.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAnimationCustomTransitionSchema(Z_Construct_UClass_UAnimationCustomTransitionSchema, TEXT("UAnimationCustomTransitionSchema"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAnimationCustomTransitionSchema);
	UClass* Z_Construct_UClass_UAnimationStateGraphSchema_NoRegister()
	{
		return UAnimationStateGraphSchema::StaticClass();
	}
	UClass* Z_Construct_UClass_UAnimationStateGraphSchema()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UAnimationGraphSchema();
			Z_Construct_UPackage_AnimGraph();
			OuterClass = UAnimationStateGraphSchema::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080084;


				OuterClass->ClassConfigName = FName(TEXT("Editor"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("AnimationStateGraphSchema.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/AnimationStateGraphSchema.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAnimationStateGraphSchema(Z_Construct_UClass_UAnimationStateGraphSchema, TEXT("UAnimationStateGraphSchema"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAnimationStateGraphSchema);
	UClass* Z_Construct_UClass_UAnimationStateMachineGraph_NoRegister()
	{
		return UAnimationStateMachineGraph::StaticClass();
	}
	UClass* Z_Construct_UClass_UAnimationStateMachineGraph()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UEdGraph();
			Z_Construct_UPackage_AnimGraph();
			OuterClass = UAnimationStateMachineGraph::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_OwnerAnimGraphNode = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OwnerAnimGraphNode"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(OwnerAnimGraphNode, UAnimationStateMachineGraph), 0x0000000000000000, Z_Construct_UClass_UAnimGraphNode_StateMachineBase_NoRegister());
				UProperty* NewProp_EntryNode = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("EntryNode"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(EntryNode, UAnimationStateMachineGraph), 0x0000000000000000, Z_Construct_UClass_UAnimStateEntryNode_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("AnimationStateMachineGraph.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/AnimationStateMachineGraph.h"));
				MetaData->SetValue(NewProp_OwnerAnimGraphNode, TEXT("ModuleRelativePath"), TEXT("Classes/AnimationStateMachineGraph.h"));
				MetaData->SetValue(NewProp_OwnerAnimGraphNode, TEXT("ToolTip"), TEXT("Parent instance node"));
				MetaData->SetValue(NewProp_EntryNode, TEXT("ModuleRelativePath"), TEXT("Classes/AnimationStateMachineGraph.h"));
				MetaData->SetValue(NewProp_EntryNode, TEXT("ToolTip"), TEXT("Entry node within the state machine"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAnimationStateMachineGraph(Z_Construct_UClass_UAnimationStateMachineGraph, TEXT("UAnimationStateMachineGraph"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAnimationStateMachineGraph);
	UScriptStruct* Z_Construct_UScriptStruct_FEdGraphSchemaAction_NewStateComment()
	{
		UPackage* Outer=Z_Construct_UPackage_AnimGraph();
		extern uint32 Get_Z_Construct_UScriptStruct_FEdGraphSchemaAction_NewStateComment_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("EdGraphSchemaAction_NewStateComment"), sizeof(FEdGraphSchemaAction_NewStateComment), Get_Z_Construct_UScriptStruct_FEdGraphSchemaAction_NewStateComment_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EdGraphSchemaAction_NewStateComment"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), Z_Construct_UScriptStruct_FEdGraphSchemaAction(), new UScriptStruct::TCppStructOps<FEdGraphSchemaAction_NewStateComment>, EStructFlags(0x00000201));
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/AnimationStateMachineSchema.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Action to create new comment"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FEdGraphSchemaAction_NewStateComment_CRC() { return 358659988U; }
	UScriptStruct* Z_Construct_UScriptStruct_FEdGraphSchemaAction_NewStateNode()
	{
		UPackage* Outer=Z_Construct_UPackage_AnimGraph();
		extern uint32 Get_Z_Construct_UScriptStruct_FEdGraphSchemaAction_NewStateNode_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("EdGraphSchemaAction_NewStateNode"), sizeof(FEdGraphSchemaAction_NewStateNode), Get_Z_Construct_UScriptStruct_FEdGraphSchemaAction_NewStateNode_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EdGraphSchemaAction_NewStateNode"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), Z_Construct_UScriptStruct_FEdGraphSchemaAction(), new UScriptStruct::TCppStructOps<FEdGraphSchemaAction_NewStateNode>, EStructFlags(0x00000201));
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/AnimationStateMachineSchema.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Action to add a node to the graph"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FEdGraphSchemaAction_NewStateNode_CRC() { return 3084560181U; }
	UClass* Z_Construct_UClass_UAnimationStateMachineSchema_NoRegister()
	{
		return UAnimationStateMachineSchema::StaticClass();
	}
	UClass* Z_Construct_UClass_UAnimationStateMachineSchema()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UEdGraphSchema();
			Z_Construct_UPackage_AnimGraph();
			OuterClass = UAnimationStateMachineSchema::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_PC_Exec = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("PC_Exec"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(PC_Exec, UAnimationStateMachineSchema), 0x0000000000000000);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("AnimationStateMachineSchema.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/AnimationStateMachineSchema.h"));
				MetaData->SetValue(NewProp_PC_Exec, TEXT("ModuleRelativePath"), TEXT("Classes/AnimationStateMachineSchema.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAnimationStateMachineSchema(Z_Construct_UClass_UAnimationStateMachineSchema, TEXT("UAnimationStateMachineSchema"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAnimationStateMachineSchema);
	UClass* Z_Construct_UClass_UAnimationTransitionSchema_NoRegister()
	{
		return UAnimationTransitionSchema::StaticClass();
	}
	UClass* Z_Construct_UClass_UAnimationTransitionSchema()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UEdGraphSchema_K2();
			Z_Construct_UPackage_AnimGraph();
			OuterClass = UAnimationTransitionSchema::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080084;


				OuterClass->ClassConfigName = FName(TEXT("Editor"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("AnimationTransitionSchema.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/AnimationTransitionSchema.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("This class is the schema for transition rule graphs in animation state machines"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAnimationTransitionSchema(Z_Construct_UClass_UAnimationTransitionSchema, TEXT("UAnimationTransitionSchema"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAnimationTransitionSchema);
	UClass* Z_Construct_UClass_UAnimGraphNode_Base_NoRegister()
	{
		return UAnimGraphNode_Base::StaticClass();
	}
	UClass* Z_Construct_UClass_UAnimGraphNode_Base()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UK2Node();
			Z_Construct_UPackage_AnimGraph();
			OuterClass = UAnimGraphNode_Base::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100081;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_ShowPinForProperties = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ShowPinForProperties"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(ShowPinForProperties, UAnimGraphNode_Base), 0x0000000000000045);
				UProperty* NewProp_ShowPinForProperties_Inner = new(EC_InternalUseOnlyConstructor, NewProp_ShowPinForProperties, TEXT("ShowPinForProperties"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FOptionalPinFromProperty());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("AnimGraphNode_Base.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/AnimGraphNode_Base.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("This is the base class for any animation graph nodes that generate or consume an animation pose in\nthe animation blend graph.\n\nAny concrete implementations will be paired with a runtime graph node derived from FAnimNode_Base"));
				MetaData->SetValue(NewProp_ShowPinForProperties, TEXT("Category"), TEXT("PinOptions"));
				MetaData->SetValue(NewProp_ShowPinForProperties, TEXT("ModuleRelativePath"), TEXT("Classes/AnimGraphNode_Base.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAnimGraphNode_Base(Z_Construct_UClass_UAnimGraphNode_Base, TEXT("UAnimGraphNode_Base"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAnimGraphNode_Base);
	UClass* Z_Construct_UClass_UAnimGraphNode_ApplyAdditive_NoRegister()
	{
		return UAnimGraphNode_ApplyAdditive::StaticClass();
	}
	UClass* Z_Construct_UClass_UAnimGraphNode_ApplyAdditive()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UAnimGraphNode_Base();
			Z_Construct_UPackage_AnimGraph();
			OuterClass = UAnimGraphNode_ApplyAdditive::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_Node = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Node"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Node, UAnimGraphNode_ApplyAdditive), 0x0000000000000001, Z_Construct_UScriptStruct_FAnimNode_ApplyAdditive());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("AnimGraphNode_ApplyAdditive.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/AnimGraphNode_ApplyAdditive.h"));
				MetaData->SetValue(NewProp_Node, TEXT("Category"), TEXT("Settings"));
				MetaData->SetValue(NewProp_Node, TEXT("ModuleRelativePath"), TEXT("Classes/AnimGraphNode_ApplyAdditive.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAnimGraphNode_ApplyAdditive(Z_Construct_UClass_UAnimGraphNode_ApplyAdditive, TEXT("UAnimGraphNode_ApplyAdditive"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAnimGraphNode_ApplyAdditive);
	UClass* Z_Construct_UClass_UAnimGraphNode_AssetPlayerBase_NoRegister()
	{
		return UAnimGraphNode_AssetPlayerBase::StaticClass();
	}
	UClass* Z_Construct_UClass_UAnimGraphNode_AssetPlayerBase()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UAnimGraphNode_Base();
			Z_Construct_UPackage_AnimGraph();
			OuterClass = UAnimGraphNode_AssetPlayerBase::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080081;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("AnimGraphNode_AssetPlayerBase.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/AnimGraphNode_AssetPlayerBase.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Helper / intermediate for asset player graphical nodes"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAnimGraphNode_AssetPlayerBase(Z_Construct_UClass_UAnimGraphNode_AssetPlayerBase, TEXT("UAnimGraphNode_AssetPlayerBase"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAnimGraphNode_AssetPlayerBase);
	UClass* Z_Construct_UClass_UAnimGraphNode_BlendSpaceBase_NoRegister()
	{
		return UAnimGraphNode_BlendSpaceBase::StaticClass();
	}
	UClass* Z_Construct_UClass_UAnimGraphNode_BlendSpaceBase()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UAnimGraphNode_AssetPlayerBase();
			Z_Construct_UPackage_AnimGraph();
			OuterClass = UAnimGraphNode_BlendSpaceBase::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080081;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("AnimGraphNode_BlendSpaceBase.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/AnimGraphNode_BlendSpaceBase.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAnimGraphNode_BlendSpaceBase(Z_Construct_UClass_UAnimGraphNode_BlendSpaceBase, TEXT("UAnimGraphNode_BlendSpaceBase"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAnimGraphNode_BlendSpaceBase);
	UClass* Z_Construct_UClass_UAnimGraphNode_BlendSpaceEvaluator_NoRegister()
	{
		return UAnimGraphNode_BlendSpaceEvaluator::StaticClass();
	}
	UClass* Z_Construct_UClass_UAnimGraphNode_BlendSpaceEvaluator()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UAnimGraphNode_BlendSpaceBase();
			Z_Construct_UPackage_AnimGraph();
			OuterClass = UAnimGraphNode_BlendSpaceEvaluator::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_SyncGroup = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SyncGroup"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(SyncGroup, UAnimGraphNode_BlendSpaceEvaluator), 0x0000000000000001, Z_Construct_UScriptStruct_FAnimationGroupReference());
				UProperty* NewProp_Node = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Node"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Node, UAnimGraphNode_BlendSpaceEvaluator), 0x0000000000000001, Z_Construct_UScriptStruct_FAnimNode_BlendSpaceEvaluator());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("AnimGraphNode_BlendSpaceEvaluator.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/AnimGraphNode_BlendSpaceEvaluator.h"));
				MetaData->SetValue(NewProp_SyncGroup, TEXT("Category"), TEXT("Settings"));
				MetaData->SetValue(NewProp_SyncGroup, TEXT("ModuleRelativePath"), TEXT("Classes/AnimGraphNode_BlendSpaceEvaluator.h"));
				MetaData->SetValue(NewProp_Node, TEXT("Category"), TEXT("Settings"));
				MetaData->SetValue(NewProp_Node, TEXT("ModuleRelativePath"), TEXT("Classes/AnimGraphNode_BlendSpaceEvaluator.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAnimGraphNode_BlendSpaceEvaluator(Z_Construct_UClass_UAnimGraphNode_BlendSpaceEvaluator, TEXT("UAnimGraphNode_BlendSpaceEvaluator"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAnimGraphNode_BlendSpaceEvaluator);
	UClass* Z_Construct_UClass_UAnimGraphNode_BlendSpacePlayer_NoRegister()
	{
		return UAnimGraphNode_BlendSpacePlayer::StaticClass();
	}
	UClass* Z_Construct_UClass_UAnimGraphNode_BlendSpacePlayer()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UAnimGraphNode_BlendSpaceBase();
			Z_Construct_UPackage_AnimGraph();
			OuterClass = UAnimGraphNode_BlendSpacePlayer::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_SyncGroup = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SyncGroup"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(SyncGroup, UAnimGraphNode_BlendSpacePlayer), 0x0000000000000001, Z_Construct_UScriptStruct_FAnimationGroupReference());
				UProperty* NewProp_Node = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Node"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Node, UAnimGraphNode_BlendSpacePlayer), 0x0000000000000001, Z_Construct_UScriptStruct_FAnimNode_BlendSpacePlayer());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("AnimGraphNode_BlendSpacePlayer.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/AnimGraphNode_BlendSpacePlayer.h"));
				MetaData->SetValue(NewProp_SyncGroup, TEXT("Category"), TEXT("Settings"));
				MetaData->SetValue(NewProp_SyncGroup, TEXT("ModuleRelativePath"), TEXT("Classes/AnimGraphNode_BlendSpacePlayer.h"));
				MetaData->SetValue(NewProp_SyncGroup, TEXT("ToolTip"), TEXT("Sync group settings for this player.  Sync groups keep related animations with different lengths synchronized."));
				MetaData->SetValue(NewProp_Node, TEXT("Category"), TEXT("Settings"));
				MetaData->SetValue(NewProp_Node, TEXT("ModuleRelativePath"), TEXT("Classes/AnimGraphNode_BlendSpacePlayer.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAnimGraphNode_BlendSpacePlayer(Z_Construct_UClass_UAnimGraphNode_BlendSpacePlayer, TEXT("UAnimGraphNode_BlendSpacePlayer"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAnimGraphNode_BlendSpacePlayer);
	UClass* Z_Construct_UClass_UAnimGraphNode_RotationOffsetBlendSpace_NoRegister()
	{
		return UAnimGraphNode_RotationOffsetBlendSpace::StaticClass();
	}
	UClass* Z_Construct_UClass_UAnimGraphNode_RotationOffsetBlendSpace()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UAnimGraphNode_BlendSpaceBase();
			Z_Construct_UPackage_AnimGraph();
			OuterClass = UAnimGraphNode_RotationOffsetBlendSpace::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_Node = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Node"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Node, UAnimGraphNode_RotationOffsetBlendSpace), 0x0000000000000001, Z_Construct_UScriptStruct_FAnimNode_RotationOffsetBlendSpace());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("AnimGraphNode_RotationOffsetBlendSpace.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/AnimGraphNode_RotationOffsetBlendSpace.h"));
				MetaData->SetValue(NewProp_Node, TEXT("Category"), TEXT("Settings"));
				MetaData->SetValue(NewProp_Node, TEXT("ModuleRelativePath"), TEXT("Classes/AnimGraphNode_RotationOffsetBlendSpace.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAnimGraphNode_RotationOffsetBlendSpace(Z_Construct_UClass_UAnimGraphNode_RotationOffsetBlendSpace, TEXT("UAnimGraphNode_RotationOffsetBlendSpace"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAnimGraphNode_RotationOffsetBlendSpace);
	UClass* Z_Construct_UClass_UAnimGraphNode_SequenceEvaluator_NoRegister()
	{
		return UAnimGraphNode_SequenceEvaluator::StaticClass();
	}
	UClass* Z_Construct_UClass_UAnimGraphNode_SequenceEvaluator()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UAnimGraphNode_AssetPlayerBase();
			Z_Construct_UPackage_AnimGraph();
			OuterClass = UAnimGraphNode_SequenceEvaluator::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_Node = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Node"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Node, UAnimGraphNode_SequenceEvaluator), 0x0000000000000001, Z_Construct_UScriptStruct_FAnimNode_SequenceEvaluator());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("AnimGraphNode_SequenceEvaluator.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/AnimGraphNode_SequenceEvaluator.h"));
				MetaData->SetValue(NewProp_Node, TEXT("Category"), TEXT("Settings"));
				MetaData->SetValue(NewProp_Node, TEXT("ModuleRelativePath"), TEXT("Classes/AnimGraphNode_SequenceEvaluator.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAnimGraphNode_SequenceEvaluator(Z_Construct_UClass_UAnimGraphNode_SequenceEvaluator, TEXT("UAnimGraphNode_SequenceEvaluator"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAnimGraphNode_SequenceEvaluator);
	UClass* Z_Construct_UClass_UAnimGraphNode_SequencePlayer_NoRegister()
	{
		return UAnimGraphNode_SequencePlayer::StaticClass();
	}
	UClass* Z_Construct_UClass_UAnimGraphNode_SequencePlayer()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UAnimGraphNode_AssetPlayerBase();
			Z_Construct_UPackage_AnimGraph();
			OuterClass = UAnimGraphNode_SequencePlayer::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_SyncGroup = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SyncGroup"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(SyncGroup, UAnimGraphNode_SequencePlayer), 0x0000000000000001, Z_Construct_UScriptStruct_FAnimationGroupReference());
				UProperty* NewProp_Node = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Node"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Node, UAnimGraphNode_SequencePlayer), 0x0000000000000001, Z_Construct_UScriptStruct_FAnimNode_SequencePlayer());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("AnimGraphNode_SequencePlayer.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/AnimGraphNode_SequencePlayer.h"));
				MetaData->SetValue(NewProp_SyncGroup, TEXT("Category"), TEXT("Settings"));
				MetaData->SetValue(NewProp_SyncGroup, TEXT("ModuleRelativePath"), TEXT("Classes/AnimGraphNode_SequencePlayer.h"));
				MetaData->SetValue(NewProp_SyncGroup, TEXT("ToolTip"), TEXT("Sync group settings for this player.  Sync groups keep related animations with different lengths synchronized."));
				MetaData->SetValue(NewProp_Node, TEXT("Category"), TEXT("Settings"));
				MetaData->SetValue(NewProp_Node, TEXT("ModuleRelativePath"), TEXT("Classes/AnimGraphNode_SequencePlayer.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAnimGraphNode_SequencePlayer(Z_Construct_UClass_UAnimGraphNode_SequencePlayer, TEXT("UAnimGraphNode_SequencePlayer"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAnimGraphNode_SequencePlayer);
	UClass* Z_Construct_UClass_UAnimGraphNode_BlendListBase_NoRegister()
	{
		return UAnimGraphNode_BlendListBase::StaticClass();
	}
	UClass* Z_Construct_UClass_UAnimGraphNode_BlendListBase()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UAnimGraphNode_Base();
			Z_Construct_UPackage_AnimGraph();
			OuterClass = UAnimGraphNode_BlendListBase::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080081;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("AnimGraphNode_BlendListBase.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/AnimGraphNode_BlendListBase.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAnimGraphNode_BlendListBase(Z_Construct_UClass_UAnimGraphNode_BlendListBase, TEXT("UAnimGraphNode_BlendListBase"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAnimGraphNode_BlendListBase);
	UClass* Z_Construct_UClass_UAnimGraphNode_BlendListByBool_NoRegister()
	{
		return UAnimGraphNode_BlendListByBool::StaticClass();
	}
	UClass* Z_Construct_UClass_UAnimGraphNode_BlendListByBool()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UAnimGraphNode_BlendListBase();
			Z_Construct_UPackage_AnimGraph();
			OuterClass = UAnimGraphNode_BlendListByBool::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_Node = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Node"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Node, UAnimGraphNode_BlendListByBool), 0x0000000000000001, Z_Construct_UScriptStruct_FAnimNode_BlendListByBool());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("AnimGraphNode_BlendListByBool.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/AnimGraphNode_BlendListByBool.h"));
				MetaData->SetValue(NewProp_Node, TEXT("Category"), TEXT("Settings"));
				MetaData->SetValue(NewProp_Node, TEXT("ModuleRelativePath"), TEXT("Classes/AnimGraphNode_BlendListByBool.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAnimGraphNode_BlendListByBool(Z_Construct_UClass_UAnimGraphNode_BlendListByBool, TEXT("UAnimGraphNode_BlendListByBool"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAnimGraphNode_BlendListByBool);
	UClass* Z_Construct_UClass_UAnimGraphNode_BlendListByEnum_NoRegister()
	{
		return UAnimGraphNode_BlendListByEnum::StaticClass();
	}
	UClass* Z_Construct_UClass_UAnimGraphNode_BlendListByEnum()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UAnimGraphNode_BlendListBase();
			Z_Construct_UPackage_AnimGraph();
			OuterClass = UAnimGraphNode_BlendListByEnum::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_VisibleEnumEntries = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("VisibleEnumEntries"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(VisibleEnumEntries, UAnimGraphNode_BlendListByEnum), 0x0000080000000000);
				UProperty* NewProp_VisibleEnumEntries_Inner = new(EC_InternalUseOnlyConstructor, NewProp_VisibleEnumEntries, TEXT("VisibleEnumEntries"), RF_Public|RF_Transient|RF_Native) UNameProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000);
				UProperty* NewProp_BoundEnum = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("BoundEnum"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(BoundEnum, UAnimGraphNode_BlendListByEnum), 0x0000080000000000, UEnum::StaticClass());
				UProperty* NewProp_Node = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Node"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Node, UAnimGraphNode_BlendListByEnum), 0x0000000000000001, Z_Construct_UScriptStruct_FAnimNode_BlendListByEnum());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->Interfaces.Add(FImplementedInterface(Z_Construct_UClass_UNodeDependingOnEnumInterface_NoRegister(), VTABLE_OFFSET(UAnimGraphNode_BlendListByEnum, INodeDependingOnEnumInterface), false ));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("AnimGraphNode_BlendListByEnum.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/AnimGraphNode_BlendListByEnum.h"));
				MetaData->SetValue(NewProp_VisibleEnumEntries, TEXT("ModuleRelativePath"), TEXT("Classes/AnimGraphNode_BlendListByEnum.h"));
				MetaData->SetValue(NewProp_BoundEnum, TEXT("ModuleRelativePath"), TEXT("Classes/AnimGraphNode_BlendListByEnum.h"));
				MetaData->SetValue(NewProp_BoundEnum, TEXT("ToolTip"), TEXT("Name of the enum being switched on"));
				MetaData->SetValue(NewProp_Node, TEXT("Category"), TEXT("Settings"));
				MetaData->SetValue(NewProp_Node, TEXT("ModuleRelativePath"), TEXT("Classes/AnimGraphNode_BlendListByEnum.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAnimGraphNode_BlendListByEnum(Z_Construct_UClass_UAnimGraphNode_BlendListByEnum, TEXT("UAnimGraphNode_BlendListByEnum"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAnimGraphNode_BlendListByEnum);
	UClass* Z_Construct_UClass_UAnimGraphNode_BlendListByInt_NoRegister()
	{
		return UAnimGraphNode_BlendListByInt::StaticClass();
	}
	UClass* Z_Construct_UClass_UAnimGraphNode_BlendListByInt()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UAnimGraphNode_BlendListBase();
			Z_Construct_UPackage_AnimGraph();
			OuterClass = UAnimGraphNode_BlendListByInt::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_Node = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Node"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Node, UAnimGraphNode_BlendListByInt), 0x0000000000000001, Z_Construct_UScriptStruct_FAnimNode_BlendListByInt());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("AnimGraphNode_BlendListByInt.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/AnimGraphNode_BlendListByInt.h"));
				MetaData->SetValue(NewProp_Node, TEXT("Category"), TEXT("Settings"));
				MetaData->SetValue(NewProp_Node, TEXT("ModuleRelativePath"), TEXT("Classes/AnimGraphNode_BlendListByInt.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAnimGraphNode_BlendListByInt(Z_Construct_UClass_UAnimGraphNode_BlendListByInt, TEXT("UAnimGraphNode_BlendListByInt"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAnimGraphNode_BlendListByInt);
	UClass* Z_Construct_UClass_UAnimGraphNode_LayeredBoneBlend_NoRegister()
	{
		return UAnimGraphNode_LayeredBoneBlend::StaticClass();
	}
	UClass* Z_Construct_UClass_UAnimGraphNode_LayeredBoneBlend()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UAnimGraphNode_BlendListBase();
			Z_Construct_UPackage_AnimGraph();
			OuterClass = UAnimGraphNode_LayeredBoneBlend::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_Node = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Node"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Node, UAnimGraphNode_LayeredBoneBlend), 0x0000000000000001, Z_Construct_UScriptStruct_FAnimNode_LayeredBoneBlend());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("AnimGraphNode_LayeredBoneBlend.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/AnimGraphNode_LayeredBoneBlend.h"));
				MetaData->SetValue(NewProp_Node, TEXT("Category"), TEXT("Settings"));
				MetaData->SetValue(NewProp_Node, TEXT("ModuleRelativePath"), TEXT("Classes/AnimGraphNode_LayeredBoneBlend.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAnimGraphNode_LayeredBoneBlend(Z_Construct_UClass_UAnimGraphNode_LayeredBoneBlend, TEXT("UAnimGraphNode_LayeredBoneBlend"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAnimGraphNode_LayeredBoneBlend);
	UClass* Z_Construct_UClass_UAnimGraphNode_ComponentToLocalSpace_NoRegister()
	{
		return UAnimGraphNode_ComponentToLocalSpace::StaticClass();
	}
	UClass* Z_Construct_UClass_UAnimGraphNode_ComponentToLocalSpace()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UAnimGraphNode_Base();
			Z_Construct_UPackage_AnimGraph();
			OuterClass = UAnimGraphNode_ComponentToLocalSpace::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_Node = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Node"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Node, UAnimGraphNode_ComponentToLocalSpace), 0x0000000000000001, Z_Construct_UScriptStruct_FAnimNode_ConvertComponentToLocalSpace());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("AnimGraphNode_ComponentToLocalSpace.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/AnimGraphNode_ComponentToLocalSpace.h"));
				MetaData->SetValue(NewProp_Node, TEXT("Category"), TEXT("Settings"));
				MetaData->SetValue(NewProp_Node, TEXT("ModuleRelativePath"), TEXT("Classes/AnimGraphNode_ComponentToLocalSpace.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAnimGraphNode_ComponentToLocalSpace(Z_Construct_UClass_UAnimGraphNode_ComponentToLocalSpace, TEXT("UAnimGraphNode_ComponentToLocalSpace"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAnimGraphNode_ComponentToLocalSpace);
	UClass* Z_Construct_UClass_UAnimGraphNode_LocalToComponentSpace_NoRegister()
	{
		return UAnimGraphNode_LocalToComponentSpace::StaticClass();
	}
	UClass* Z_Construct_UClass_UAnimGraphNode_LocalToComponentSpace()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UAnimGraphNode_Base();
			Z_Construct_UPackage_AnimGraph();
			OuterClass = UAnimGraphNode_LocalToComponentSpace::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_Node = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Node"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Node, UAnimGraphNode_LocalToComponentSpace), 0x0000000000000001, Z_Construct_UScriptStruct_FAnimNode_ConvertLocalToComponentSpace());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("AnimGraphNode_LocalToComponentSpace.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/AnimGraphNode_LocalToComponentSpace.h"));
				MetaData->SetValue(NewProp_Node, TEXT("Category"), TEXT("Settings"));
				MetaData->SetValue(NewProp_Node, TEXT("ModuleRelativePath"), TEXT("Classes/AnimGraphNode_LocalToComponentSpace.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAnimGraphNode_LocalToComponentSpace(Z_Construct_UClass_UAnimGraphNode_LocalToComponentSpace, TEXT("UAnimGraphNode_LocalToComponentSpace"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAnimGraphNode_LocalToComponentSpace);
	UClass* Z_Construct_UClass_UAnimGraphNode_MeshRefPose_NoRegister()
	{
		return UAnimGraphNode_MeshRefPose::StaticClass();
	}
	UClass* Z_Construct_UClass_UAnimGraphNode_MeshRefPose()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UAnimGraphNode_Base();
			Z_Construct_UPackage_AnimGraph();
			OuterClass = UAnimGraphNode_MeshRefPose::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_Node = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Node"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Node, UAnimGraphNode_MeshRefPose), 0x0000000000000001, Z_Construct_UScriptStruct_FAnimNode_MeshSpaceRefPose());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("AnimGraphNode_MeshRefPose.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/AnimGraphNode_MeshRefPose.h"));
				MetaData->SetValue(NewProp_Node, TEXT("Category"), TEXT("Settings"));
				MetaData->SetValue(NewProp_Node, TEXT("ModuleRelativePath"), TEXT("Classes/AnimGraphNode_MeshRefPose.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAnimGraphNode_MeshRefPose(Z_Construct_UClass_UAnimGraphNode_MeshRefPose, TEXT("UAnimGraphNode_MeshRefPose"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAnimGraphNode_MeshRefPose);
	UClass* Z_Construct_UClass_UAnimGraphNode_RefPoseBase_NoRegister()
	{
		return UAnimGraphNode_RefPoseBase::StaticClass();
	}
	UClass* Z_Construct_UClass_UAnimGraphNode_RefPoseBase()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UAnimGraphNode_Base();
			Z_Construct_UPackage_AnimGraph();
			OuterClass = UAnimGraphNode_RefPoseBase::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080081;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_Node = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Node"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Node, UAnimGraphNode_RefPoseBase), 0x0000000000000001, Z_Construct_UScriptStruct_FAnimNode_RefPose());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("AnimGraphNode_RefPoseBase.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/AnimGraphNode_RefPoseBase.h"));
				MetaData->SetValue(NewProp_Node, TEXT("Category"), TEXT("Settings"));
				MetaData->SetValue(NewProp_Node, TEXT("ModuleRelativePath"), TEXT("Classes/AnimGraphNode_RefPoseBase.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAnimGraphNode_RefPoseBase(Z_Construct_UClass_UAnimGraphNode_RefPoseBase, TEXT("UAnimGraphNode_RefPoseBase"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAnimGraphNode_RefPoseBase);
	UClass* Z_Construct_UClass_UAnimGraphNode_IdentityPose_NoRegister()
	{
		return UAnimGraphNode_IdentityPose::StaticClass();
	}
	UClass* Z_Construct_UClass_UAnimGraphNode_IdentityPose()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UAnimGraphNode_RefPoseBase();
			Z_Construct_UPackage_AnimGraph();
			OuterClass = UAnimGraphNode_IdentityPose::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("AnimGraphNode_IdentityPose.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/AnimGraphNode_IdentityPose.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAnimGraphNode_IdentityPose(Z_Construct_UClass_UAnimGraphNode_IdentityPose, TEXT("UAnimGraphNode_IdentityPose"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAnimGraphNode_IdentityPose);
	UClass* Z_Construct_UClass_UAnimGraphNode_LocalRefPose_NoRegister()
	{
		return UAnimGraphNode_LocalRefPose::StaticClass();
	}
	UClass* Z_Construct_UClass_UAnimGraphNode_LocalRefPose()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UAnimGraphNode_RefPoseBase();
			Z_Construct_UPackage_AnimGraph();
			OuterClass = UAnimGraphNode_LocalRefPose::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("AnimGraphNode_LocalRefPose.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/AnimGraphNode_LocalRefPose.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAnimGraphNode_LocalRefPose(Z_Construct_UClass_UAnimGraphNode_LocalRefPose, TEXT("UAnimGraphNode_LocalRefPose"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAnimGraphNode_LocalRefPose);
	UClass* Z_Construct_UClass_UAnimGraphNode_Root_NoRegister()
	{
		return UAnimGraphNode_Root::StaticClass();
	}
	UClass* Z_Construct_UClass_UAnimGraphNode_Root()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UAnimGraphNode_Base();
			Z_Construct_UPackage_AnimGraph();
			OuterClass = UAnimGraphNode_Root::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_Node = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Node"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Node, UAnimGraphNode_Root), 0x0000000000000001, Z_Construct_UScriptStruct_FAnimNode_Root());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("AnimGraphNode_Root.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/AnimGraphNode_Root.h"));
				MetaData->SetValue(NewProp_Node, TEXT("Category"), TEXT("Settings"));
				MetaData->SetValue(NewProp_Node, TEXT("ModuleRelativePath"), TEXT("Classes/AnimGraphNode_Root.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAnimGraphNode_Root(Z_Construct_UClass_UAnimGraphNode_Root, TEXT("UAnimGraphNode_Root"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAnimGraphNode_Root);
	UClass* Z_Construct_UClass_UAnimGraphNode_CustomTransitionResult_NoRegister()
	{
		return UAnimGraphNode_CustomTransitionResult::StaticClass();
	}
	UClass* Z_Construct_UClass_UAnimGraphNode_CustomTransitionResult()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UAnimGraphNode_Root();
			Z_Construct_UPackage_AnimGraph();
			OuterClass = UAnimGraphNode_CustomTransitionResult::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("AnimGraphNode_CustomTransitionResult.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/AnimGraphNode_CustomTransitionResult.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAnimGraphNode_CustomTransitionResult(Z_Construct_UClass_UAnimGraphNode_CustomTransitionResult, TEXT("UAnimGraphNode_CustomTransitionResult"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAnimGraphNode_CustomTransitionResult);
	UClass* Z_Construct_UClass_UAnimGraphNode_StateResult_NoRegister()
	{
		return UAnimGraphNode_StateResult::StaticClass();
	}
	UClass* Z_Construct_UClass_UAnimGraphNode_StateResult()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UAnimGraphNode_Root();
			Z_Construct_UPackage_AnimGraph();
			OuterClass = UAnimGraphNode_StateResult::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("AnimGraphNode_StateResult.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/AnimGraphNode_StateResult.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAnimGraphNode_StateResult(Z_Construct_UClass_UAnimGraphNode_StateResult, TEXT("UAnimGraphNode_StateResult"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAnimGraphNode_StateResult);
	UClass* Z_Construct_UClass_UAnimGraphNode_RotateRootBone_NoRegister()
	{
		return UAnimGraphNode_RotateRootBone::StaticClass();
	}
	UClass* Z_Construct_UClass_UAnimGraphNode_RotateRootBone()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UAnimGraphNode_Base();
			Z_Construct_UPackage_AnimGraph();
			OuterClass = UAnimGraphNode_RotateRootBone::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_Node = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Node"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Node, UAnimGraphNode_RotateRootBone), 0x0000000000000001, Z_Construct_UScriptStruct_FAnimNode_RotateRootBone());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("AnimGraphNode_RotateRootBone.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/AnimGraphNode_RotateRootBone.h"));
				MetaData->SetValue(NewProp_Node, TEXT("Category"), TEXT("Settings"));
				MetaData->SetValue(NewProp_Node, TEXT("ModuleRelativePath"), TEXT("Classes/AnimGraphNode_RotateRootBone.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAnimGraphNode_RotateRootBone(Z_Construct_UClass_UAnimGraphNode_RotateRootBone, TEXT("UAnimGraphNode_RotateRootBone"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAnimGraphNode_RotateRootBone);
	UClass* Z_Construct_UClass_UAnimGraphNode_SaveCachedPose_NoRegister()
	{
		return UAnimGraphNode_SaveCachedPose::StaticClass();
	}
	UClass* Z_Construct_UClass_UAnimGraphNode_SaveCachedPose()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UAnimGraphNode_Base();
			Z_Construct_UPackage_AnimGraph();
			OuterClass = UAnimGraphNode_SaveCachedPose::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_CacheName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CacheName"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(CacheName, UAnimGraphNode_SaveCachedPose), 0x0000000000000001);
				UProperty* NewProp_Node = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Node"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Node, UAnimGraphNode_SaveCachedPose), 0x0000000000000001, Z_Construct_UScriptStruct_FAnimNode_SaveCachedPose());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("AnimGraphNode_SaveCachedPose.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/AnimGraphNode_SaveCachedPose.h"));
				MetaData->SetValue(NewProp_CacheName, TEXT("Category"), TEXT("CachedPose"));
				MetaData->SetValue(NewProp_CacheName, TEXT("ModuleRelativePath"), TEXT("Classes/AnimGraphNode_SaveCachedPose.h"));
				MetaData->SetValue(NewProp_Node, TEXT("Category"), TEXT("Settings"));
				MetaData->SetValue(NewProp_Node, TEXT("ModuleRelativePath"), TEXT("Classes/AnimGraphNode_SaveCachedPose.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAnimGraphNode_SaveCachedPose(Z_Construct_UClass_UAnimGraphNode_SaveCachedPose, TEXT("UAnimGraphNode_SaveCachedPose"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAnimGraphNode_SaveCachedPose);
	UClass* Z_Construct_UClass_UAnimGraphNode_SkeletalControlBase_NoRegister()
	{
		return UAnimGraphNode_SkeletalControlBase::StaticClass();
	}
	UClass* Z_Construct_UClass_UAnimGraphNode_SkeletalControlBase()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UAnimGraphNode_Base();
			Z_Construct_UPackage_AnimGraph();
			OuterClass = UAnimGraphNode_SkeletalControlBase::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100081;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("AnimGraphNode_SkeletalControlBase.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/AnimGraphNode_SkeletalControlBase.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("This is the base class for the 'source version' of all skeletal control animation graph nodes\n(nodes that manipulate the pose rather than playing animations to create a pose or blending between poses)\n\nConcrete subclasses should contain a member struct derived from FAnimNode_SkeletalControlBase"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAnimGraphNode_SkeletalControlBase(Z_Construct_UClass_UAnimGraphNode_SkeletalControlBase, TEXT("UAnimGraphNode_SkeletalControlBase"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAnimGraphNode_SkeletalControlBase);
	UClass* Z_Construct_UClass_UAnimGraphNode_BoneDrivenController_NoRegister()
	{
		return UAnimGraphNode_BoneDrivenController::StaticClass();
	}
	UClass* Z_Construct_UClass_UAnimGraphNode_BoneDrivenController()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UAnimGraphNode_SkeletalControlBase();
			Z_Construct_UPackage_AnimGraph();
			OuterClass = UAnimGraphNode_BoneDrivenController::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_Node = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Node"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Node, UAnimGraphNode_BoneDrivenController), 0x0000000000000001, Z_Construct_UScriptStruct_FAnimNode_BoneDrivenController());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("AnimGraphNode_BoneDrivenController.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/AnimGraphNode_BoneDrivenController.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("This is the 'source version' of a bone driven controller, which maps part of the state from one bone to another (e.g., 2 * source.x -> target.z)"));
				MetaData->SetValue(NewProp_Node, TEXT("Category"), TEXT("Settings"));
				MetaData->SetValue(NewProp_Node, TEXT("ModuleRelativePath"), TEXT("Classes/AnimGraphNode_BoneDrivenController.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAnimGraphNode_BoneDrivenController(Z_Construct_UClass_UAnimGraphNode_BoneDrivenController, TEXT("UAnimGraphNode_BoneDrivenController"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAnimGraphNode_BoneDrivenController);
	UClass* Z_Construct_UClass_UAnimGraphNode_CopyBone_NoRegister()
	{
		return UAnimGraphNode_CopyBone::StaticClass();
	}
	UClass* Z_Construct_UClass_UAnimGraphNode_CopyBone()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UAnimGraphNode_SkeletalControlBase();
			Z_Construct_UPackage_AnimGraph();
			OuterClass = UAnimGraphNode_CopyBone::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_Node = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Node"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Node, UAnimGraphNode_CopyBone), 0x0000000000000001, Z_Construct_UScriptStruct_FAnimNode_CopyBone());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("AnimGraphNode_CopyBone.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/AnimGraphNode_CopyBone.h"));
				MetaData->SetValue(NewProp_Node, TEXT("Category"), TEXT("Settings"));
				MetaData->SetValue(NewProp_Node, TEXT("ModuleRelativePath"), TEXT("Classes/AnimGraphNode_CopyBone.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAnimGraphNode_CopyBone(Z_Construct_UClass_UAnimGraphNode_CopyBone, TEXT("UAnimGraphNode_CopyBone"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAnimGraphNode_CopyBone);
	UClass* Z_Construct_UClass_UAnimGraphNode_Fabrik_NoRegister()
	{
		return UAnimGraphNode_Fabrik::StaticClass();
	}
	UClass* Z_Construct_UClass_UAnimGraphNode_Fabrik()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UAnimGraphNode_SkeletalControlBase();
			Z_Construct_UPackage_AnimGraph();
			OuterClass = UAnimGraphNode_Fabrik::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_Node = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Node"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Node, UAnimGraphNode_Fabrik), 0x0000000000000001, Z_Construct_UScriptStruct_FAnimNode_Fabrik());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("AnimGraphNode_Fabrik.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/AnimGraphNode_Fabrik.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Editor node for FABRIK IK skeletal controller"));
				MetaData->SetValue(NewProp_Node, TEXT("Category"), TEXT("Settings"));
				MetaData->SetValue(NewProp_Node, TEXT("ModuleRelativePath"), TEXT("Classes/AnimGraphNode_Fabrik.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAnimGraphNode_Fabrik(Z_Construct_UClass_UAnimGraphNode_Fabrik, TEXT("UAnimGraphNode_Fabrik"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAnimGraphNode_Fabrik);
	UClass* Z_Construct_UClass_UAnimGraphNode_HandIKRetargeting_NoRegister()
	{
		return UAnimGraphNode_HandIKRetargeting::StaticClass();
	}
	UClass* Z_Construct_UClass_UAnimGraphNode_HandIKRetargeting()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UAnimGraphNode_SkeletalControlBase();
			Z_Construct_UPackage_AnimGraph();
			OuterClass = UAnimGraphNode_HandIKRetargeting::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_Node = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Node"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Node, UAnimGraphNode_HandIKRetargeting), 0x0000000000000001, Z_Construct_UScriptStruct_FAnimNode_HandIKRetargeting());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("AnimGraphNode_HandIKRetargeting.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/AnimGraphNode_HandIKRetargeting.h"));
				MetaData->SetValue(NewProp_Node, TEXT("Category"), TEXT("Settings"));
				MetaData->SetValue(NewProp_Node, TEXT("ModuleRelativePath"), TEXT("Classes/AnimGraphNode_HandIKRetargeting.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAnimGraphNode_HandIKRetargeting(Z_Construct_UClass_UAnimGraphNode_HandIKRetargeting, TEXT("UAnimGraphNode_HandIKRetargeting"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAnimGraphNode_HandIKRetargeting);
	UClass* Z_Construct_UClass_UAnimGraphNode_LookAt_NoRegister()
	{
		return UAnimGraphNode_LookAt::StaticClass();
	}
	UClass* Z_Construct_UClass_UAnimGraphNode_LookAt()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UAnimGraphNode_SkeletalControlBase();
			Z_Construct_UPackage_AnimGraph();
			OuterClass = UAnimGraphNode_LookAt::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_Node = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Node"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Node, UAnimGraphNode_LookAt), 0x0000000000000001, Z_Construct_UScriptStruct_FAnimNode_LookAt());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("AnimGraphNode_LookAt.h"));
				MetaData->SetValue(OuterClass, TEXT("Keywords"), TEXT("Look At, Follow, Trace, Track"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/AnimGraphNode_LookAt.h"));
				MetaData->SetValue(NewProp_Node, TEXT("Category"), TEXT("Settings"));
				MetaData->SetValue(NewProp_Node, TEXT("ModuleRelativePath"), TEXT("Classes/AnimGraphNode_LookAt.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAnimGraphNode_LookAt(Z_Construct_UClass_UAnimGraphNode_LookAt, TEXT("UAnimGraphNode_LookAt"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAnimGraphNode_LookAt);
	UClass* Z_Construct_UClass_UAnimGraphNode_ModifyBone_NoRegister()
	{
		return UAnimGraphNode_ModifyBone::StaticClass();
	}
	UClass* Z_Construct_UClass_UAnimGraphNode_ModifyBone()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UAnimGraphNode_SkeletalControlBase();
			Z_Construct_UPackage_AnimGraph();
			OuterClass = UAnimGraphNode_ModifyBone::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_Node = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Node"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Node, UAnimGraphNode_ModifyBone), 0x0000000000000001, Z_Construct_UScriptStruct_FAnimNode_ModifyBone());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("AnimGraphNode_ModifyBone.h"));
				MetaData->SetValue(OuterClass, TEXT("Keywords"), TEXT("Modify Transform"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/AnimGraphNode_ModifyBone.h"));
				MetaData->SetValue(NewProp_Node, TEXT("Category"), TEXT("Settings"));
				MetaData->SetValue(NewProp_Node, TEXT("ModuleRelativePath"), TEXT("Classes/AnimGraphNode_ModifyBone.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAnimGraphNode_ModifyBone(Z_Construct_UClass_UAnimGraphNode_ModifyBone, TEXT("UAnimGraphNode_ModifyBone"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAnimGraphNode_ModifyBone);
	UClass* Z_Construct_UClass_UAnimGraphNode_ObserveBone_NoRegister()
	{
		return UAnimGraphNode_ObserveBone::StaticClass();
	}
	UClass* Z_Construct_UClass_UAnimGraphNode_ObserveBone()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UAnimGraphNode_SkeletalControlBase();
			Z_Construct_UPackage_AnimGraph();
			OuterClass = UAnimGraphNode_ObserveBone::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_Node = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Node"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Node, UAnimGraphNode_ObserveBone), 0x0000000000000001, Z_Construct_UScriptStruct_FAnimNode_ObserveBone());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("AnimGraphNode_ObserveBone.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/AnimGraphNode_ObserveBone.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("This allows you to observe the state of a bone at a particular point in the graph, showing it in any space and optionally relative to the reference pose"));
				MetaData->SetValue(NewProp_Node, TEXT("Category"), TEXT("Settings"));
				MetaData->SetValue(NewProp_Node, TEXT("ModuleRelativePath"), TEXT("Public/AnimGraphNode_ObserveBone.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAnimGraphNode_ObserveBone(Z_Construct_UClass_UAnimGraphNode_ObserveBone, TEXT("UAnimGraphNode_ObserveBone"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAnimGraphNode_ObserveBone);
	UClass* Z_Construct_UClass_UAnimGraphNode_RotationMultiplier_NoRegister()
	{
		return UAnimGraphNode_RotationMultiplier::StaticClass();
	}
	UClass* Z_Construct_UClass_UAnimGraphNode_RotationMultiplier()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UAnimGraphNode_SkeletalControlBase();
			Z_Construct_UPackage_AnimGraph();
			OuterClass = UAnimGraphNode_RotationMultiplier::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_Node = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Node"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Node, UAnimGraphNode_RotationMultiplier), 0x0000000000000001, Z_Construct_UScriptStruct_FAnimNode_RotationMultiplier());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("AnimGraphNode_RotationMultiplier.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/AnimGraphNode_RotationMultiplier.h"));
				MetaData->SetValue(NewProp_Node, TEXT("Category"), TEXT("Settings"));
				MetaData->SetValue(NewProp_Node, TEXT("ModuleRelativePath"), TEXT("Classes/AnimGraphNode_RotationMultiplier.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAnimGraphNode_RotationMultiplier(Z_Construct_UClass_UAnimGraphNode_RotationMultiplier, TEXT("UAnimGraphNode_RotationMultiplier"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAnimGraphNode_RotationMultiplier);
	UClass* Z_Construct_UClass_UAnimGraphNode_SpringBone_NoRegister()
	{
		return UAnimGraphNode_SpringBone::StaticClass();
	}
	UClass* Z_Construct_UClass_UAnimGraphNode_SpringBone()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UAnimGraphNode_SkeletalControlBase();
			Z_Construct_UPackage_AnimGraph();
			OuterClass = UAnimGraphNode_SpringBone::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_Node = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Node"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Node, UAnimGraphNode_SpringBone), 0x0000000000000001, Z_Construct_UScriptStruct_FAnimNode_SpringBone());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("AnimGraphNode_SpringBone.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/AnimGraphNode_SpringBone.h"));
				MetaData->SetValue(NewProp_Node, TEXT("Category"), TEXT("Settings"));
				MetaData->SetValue(NewProp_Node, TEXT("ModuleRelativePath"), TEXT("Classes/AnimGraphNode_SpringBone.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAnimGraphNode_SpringBone(Z_Construct_UClass_UAnimGraphNode_SpringBone, TEXT("UAnimGraphNode_SpringBone"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAnimGraphNode_SpringBone);
	UClass* Z_Construct_UClass_UAnimGraphNode_Trail_NoRegister()
	{
		return UAnimGraphNode_Trail::StaticClass();
	}
	UClass* Z_Construct_UClass_UAnimGraphNode_Trail()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UAnimGraphNode_SkeletalControlBase();
			Z_Construct_UPackage_AnimGraph();
			OuterClass = UAnimGraphNode_Trail::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_Node = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Node"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Node, UAnimGraphNode_Trail), 0x0000000000000001, Z_Construct_UScriptStruct_FAnimNode_Trail());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("AnimGraphNode_Trail.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/AnimGraphNode_Trail.h"));
				MetaData->SetValue(NewProp_Node, TEXT("Category"), TEXT("Settings"));
				MetaData->SetValue(NewProp_Node, TEXT("ModuleRelativePath"), TEXT("Classes/AnimGraphNode_Trail.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAnimGraphNode_Trail(Z_Construct_UClass_UAnimGraphNode_Trail, TEXT("UAnimGraphNode_Trail"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAnimGraphNode_Trail);
	UClass* Z_Construct_UClass_UAnimGraphNode_TwoBoneIK_NoRegister()
	{
		return UAnimGraphNode_TwoBoneIK::StaticClass();
	}
	UClass* Z_Construct_UClass_UAnimGraphNode_TwoBoneIK()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UAnimGraphNode_SkeletalControlBase();
			Z_Construct_UPackage_AnimGraph();
			OuterClass = UAnimGraphNode_TwoBoneIK::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_Node = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Node"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Node, UAnimGraphNode_TwoBoneIK), 0x0000000000000001, Z_Construct_UScriptStruct_FAnimNode_TwoBoneIK());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("AnimGraphNode_TwoBoneIK.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/AnimGraphNode_TwoBoneIK.h"));
				MetaData->SetValue(NewProp_Node, TEXT("Category"), TEXT("Settings"));
				MetaData->SetValue(NewProp_Node, TEXT("ModuleRelativePath"), TEXT("Classes/AnimGraphNode_TwoBoneIK.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAnimGraphNode_TwoBoneIK(Z_Construct_UClass_UAnimGraphNode_TwoBoneIK, TEXT("UAnimGraphNode_TwoBoneIK"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAnimGraphNode_TwoBoneIK);
	UClass* Z_Construct_UClass_UAnimGraphNode_WheelHandler_NoRegister()
	{
		return UAnimGraphNode_WheelHandler::StaticClass();
	}
	UClass* Z_Construct_UClass_UAnimGraphNode_WheelHandler()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UAnimGraphNode_SkeletalControlBase();
			Z_Construct_UPackage_AnimGraph();
			OuterClass = UAnimGraphNode_WheelHandler::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20880080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_Node = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Node"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Node, UAnimGraphNode_WheelHandler), 0x0000008000000001, Z_Construct_UScriptStruct_FAnimNode_WheelHandler());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("AnimGraphNode_WheelHandler.h"));
				MetaData->SetValue(OuterClass, TEXT("Keywords"), TEXT("Modify Wheel Vehicle"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/AnimGraphNode_WheelHandler.h"));
				MetaData->SetValue(NewProp_Node, TEXT("Category"), TEXT("Settings"));
				MetaData->SetValue(NewProp_Node, TEXT("ModuleRelativePath"), TEXT("Classes/AnimGraphNode_WheelHandler.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAnimGraphNode_WheelHandler(Z_Construct_UClass_UAnimGraphNode_WheelHandler, TEXT("UAnimGraphNode_WheelHandler"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAnimGraphNode_WheelHandler);
	UClass* Z_Construct_UClass_UAnimGraphNode_Slot_NoRegister()
	{
		return UAnimGraphNode_Slot::StaticClass();
	}
	UClass* Z_Construct_UClass_UAnimGraphNode_Slot()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UAnimGraphNode_Base();
			Z_Construct_UPackage_AnimGraph();
			OuterClass = UAnimGraphNode_Slot::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_Node = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Node"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Node, UAnimGraphNode_Slot), 0x0000000000000001, Z_Construct_UScriptStruct_FAnimNode_Slot());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("AnimGraphNode_Slot.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/AnimGraphNode_Slot.h"));
				MetaData->SetValue(NewProp_Node, TEXT("Category"), TEXT("Settings"));
				MetaData->SetValue(NewProp_Node, TEXT("ModuleRelativePath"), TEXT("Classes/AnimGraphNode_Slot.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAnimGraphNode_Slot(Z_Construct_UClass_UAnimGraphNode_Slot, TEXT("UAnimGraphNode_Slot"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAnimGraphNode_Slot);
	UClass* Z_Construct_UClass_UAnimGraphNode_StateMachineBase_NoRegister()
	{
		return UAnimGraphNode_StateMachineBase::StaticClass();
	}
	UClass* Z_Construct_UClass_UAnimGraphNode_StateMachineBase()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UAnimGraphNode_Base();
			Z_Construct_UPackage_AnimGraph();
			OuterClass = UAnimGraphNode_StateMachineBase::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100081;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_EditorStateMachineGraph = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("EditorStateMachineGraph"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(EditorStateMachineGraph, UAnimGraphNode_StateMachineBase), 0x0000000000000000, Z_Construct_UClass_UAnimationStateMachineGraph_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("AnimGraphNode_StateMachineBase.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/AnimGraphNode_StateMachineBase.h"));
				MetaData->SetValue(NewProp_EditorStateMachineGraph, TEXT("ModuleRelativePath"), TEXT("Classes/AnimGraphNode_StateMachineBase.h"));
				MetaData->SetValue(NewProp_EditorStateMachineGraph, TEXT("ToolTip"), TEXT("Editor state machine representation"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAnimGraphNode_StateMachineBase(Z_Construct_UClass_UAnimGraphNode_StateMachineBase, TEXT("UAnimGraphNode_StateMachineBase"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAnimGraphNode_StateMachineBase);
	UClass* Z_Construct_UClass_UAnimGraphNode_StateMachine_NoRegister()
	{
		return UAnimGraphNode_StateMachine::StaticClass();
	}
	UClass* Z_Construct_UClass_UAnimGraphNode_StateMachine()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UAnimGraphNode_StateMachineBase();
			Z_Construct_UPackage_AnimGraph();
			OuterClass = UAnimGraphNode_StateMachine::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_Node = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Node"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Node, UAnimGraphNode_StateMachine), 0x0000000000000001, Z_Construct_UScriptStruct_FAnimNode_StateMachine());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("AnimGraphNode_StateMachine.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/AnimGraphNode_StateMachine.h"));
				MetaData->SetValue(NewProp_Node, TEXT("Category"), TEXT("Settings"));
				MetaData->SetValue(NewProp_Node, TEXT("ModuleRelativePath"), TEXT("Classes/AnimGraphNode_StateMachine.h"));
				MetaData->SetValue(NewProp_Node, TEXT("ToolTip"), TEXT("Runtime state machine representation (empty; populated during compilation)"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAnimGraphNode_StateMachine(Z_Construct_UClass_UAnimGraphNode_StateMachine, TEXT("UAnimGraphNode_StateMachine"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAnimGraphNode_StateMachine);
	UClass* Z_Construct_UClass_UAnimGraphNode_TransitionPoseEvaluator_NoRegister()
	{
		return UAnimGraphNode_TransitionPoseEvaluator::StaticClass();
	}
	UClass* Z_Construct_UClass_UAnimGraphNode_TransitionPoseEvaluator()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UAnimGraphNode_Base();
			Z_Construct_UPackage_AnimGraph();
			OuterClass = UAnimGraphNode_TransitionPoseEvaluator::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_Node = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Node"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Node, UAnimGraphNode_TransitionPoseEvaluator), 0x0000000000000005, Z_Construct_UScriptStruct_FAnimNode_TransitionPoseEvaluator());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("AnimGraphNode_TransitionPoseEvaluator.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/AnimGraphNode_TransitionPoseEvaluator.h"));
				MetaData->SetValue(NewProp_Node, TEXT("Category"), TEXT("Settings"));
				MetaData->SetValue(NewProp_Node, TEXT("ModuleRelativePath"), TEXT("Classes/AnimGraphNode_TransitionPoseEvaluator.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAnimGraphNode_TransitionPoseEvaluator(Z_Construct_UClass_UAnimGraphNode_TransitionPoseEvaluator, TEXT("UAnimGraphNode_TransitionPoseEvaluator"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAnimGraphNode_TransitionPoseEvaluator);
	UClass* Z_Construct_UClass_UAnimGraphNode_TransitionResult_NoRegister()
	{
		return UAnimGraphNode_TransitionResult::StaticClass();
	}
	UClass* Z_Construct_UClass_UAnimGraphNode_TransitionResult()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UAnimGraphNode_Base();
			Z_Construct_UPackage_AnimGraph();
			OuterClass = UAnimGraphNode_TransitionResult::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_Node = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Node"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Node, UAnimGraphNode_TransitionResult), 0x0000000000000001, Z_Construct_UScriptStruct_FAnimNode_TransitionResult());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("AnimGraphNode_TransitionResult.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/AnimGraphNode_TransitionResult.h"));
				MetaData->SetValue(NewProp_Node, TEXT("Category"), TEXT("Settings"));
				MetaData->SetValue(NewProp_Node, TEXT("ModuleRelativePath"), TEXT("Classes/AnimGraphNode_TransitionResult.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAnimGraphNode_TransitionResult(Z_Construct_UClass_UAnimGraphNode_TransitionResult, TEXT("UAnimGraphNode_TransitionResult"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAnimGraphNode_TransitionResult);
	UClass* Z_Construct_UClass_UAnimGraphNode_TwoWayBlend_NoRegister()
	{
		return UAnimGraphNode_TwoWayBlend::StaticClass();
	}
	UClass* Z_Construct_UClass_UAnimGraphNode_TwoWayBlend()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UAnimGraphNode_Base();
			Z_Construct_UPackage_AnimGraph();
			OuterClass = UAnimGraphNode_TwoWayBlend::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_BlendNode = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("BlendNode"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(BlendNode, UAnimGraphNode_TwoWayBlend), 0x0000000000000001, Z_Construct_UScriptStruct_FAnimationNode_TwoWayBlend());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("AnimGraphNode_TwoWayBlend.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/AnimGraphNode_TwoWayBlend.h"));
				MetaData->SetValue(NewProp_BlendNode, TEXT("Category"), TEXT("Settings"));
				MetaData->SetValue(NewProp_BlendNode, TEXT("ModuleRelativePath"), TEXT("Classes/AnimGraphNode_TwoWayBlend.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAnimGraphNode_TwoWayBlend(Z_Construct_UClass_UAnimGraphNode_TwoWayBlend, TEXT("UAnimGraphNode_TwoWayBlend"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAnimGraphNode_TwoWayBlend);
	UClass* Z_Construct_UClass_UAnimGraphNode_UseCachedPose_NoRegister()
	{
		return UAnimGraphNode_UseCachedPose::StaticClass();
	}
	UClass* Z_Construct_UClass_UAnimGraphNode_UseCachedPose()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UAnimGraphNode_Base();
			Z_Construct_UPackage_AnimGraph();
			OuterClass = UAnimGraphNode_UseCachedPose::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_NameOfCache = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("NameOfCache"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(NameOfCache, UAnimGraphNode_UseCachedPose), 0x0000000000000000);
				UProperty* NewProp_SaveCachedPoseNode = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SaveCachedPoseNode"), RF_Public|RF_Transient|RF_Native) UWeakObjectProperty(CPP_PROPERTY_BASE(SaveCachedPoseNode, UAnimGraphNode_UseCachedPose), 0x0004000000000000, Z_Construct_UClass_UAnimGraphNode_SaveCachedPose_NoRegister());
				UProperty* NewProp_Node = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Node"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Node, UAnimGraphNode_UseCachedPose), 0x0000000000000000, Z_Construct_UScriptStruct_FAnimNode_UseCachedPose());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("AnimGraphNode_UseCachedPose.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/AnimGraphNode_UseCachedPose.h"));
				MetaData->SetValue(NewProp_NameOfCache, TEXT("ModuleRelativePath"), TEXT("Classes/AnimGraphNode_UseCachedPose.h"));
				MetaData->SetValue(NewProp_SaveCachedPoseNode, TEXT("ModuleRelativePath"), TEXT("Classes/AnimGraphNode_UseCachedPose.h"));
				MetaData->SetValue(NewProp_Node, TEXT("ModuleRelativePath"), TEXT("Classes/AnimGraphNode_UseCachedPose.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAnimGraphNode_UseCachedPose(Z_Construct_UClass_UAnimGraphNode_UseCachedPose, TEXT("UAnimGraphNode_UseCachedPose"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAnimGraphNode_UseCachedPose);
	UEnum* Z_Construct_UEnum_AnimGraph_EMontagePreviewType()
	{
		UPackage* Outer=Z_Construct_UPackage_AnimGraph();
		extern uint32 Get_Z_Construct_UEnum_AnimGraph_EMontagePreviewType_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("EMontagePreviewType"), 0, Get_Z_Construct_UEnum_AnimGraph_EMontagePreviewType_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EMontagePreviewType"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EMPT_Normal")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EMPT_AllSections")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EMPT_MAX")), 2));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Regular);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("EMPT_AllSections.ToolTip"), TEXT("Playing all sections."));
			MetaData->SetValue(ReturnEnum, TEXT("EMPT_Normal.ToolTip"), TEXT("Playing montage in usual way."));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/AnimPreviewInstance.h"));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("Enum to know how montage is being played"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_AnimGraph_EMontagePreviewType_CRC() { return 2745447387U; }
	UClass* Z_Construct_UClass_UAnimPreviewInstance_NoRegister()
	{
		return UAnimPreviewInstance::StaticClass();
	}
	UClass* Z_Construct_UClass_UAnimPreviewInstance()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UAnimSingleNodeInstance();
			Z_Construct_UPackage_AnimGraph();
			OuterClass = UAnimPreviewInstance::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900088;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_MontagePreviewStartSectionIdx = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MontagePreviewStartSectionIdx"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(MontagePreviewStartSectionIdx, UAnimPreviewInstance), 0x0000000000002000);
				UProperty* NewProp_MontagePreviewType = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MontagePreviewType"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(MontagePreviewType, UAnimPreviewInstance), 0x0000000000002000, Z_Construct_UEnum_AnimGraph_EMontagePreviewType());
				UProperty* NewProp_SkeletalControlAlpha = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SkeletalControlAlpha"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(SkeletalControlAlpha, UAnimPreviewInstance), 0x0000000000002000);
				UProperty* NewProp_CurveBoneControllers = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CurveBoneControllers"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(CurveBoneControllers, UAnimPreviewInstance), 0x0000000000002000);
				UProperty* NewProp_CurveBoneControllers_Inner = new(EC_InternalUseOnlyConstructor, NewProp_CurveBoneControllers, TEXT("CurveBoneControllers"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FAnimNode_ModifyBone());
				UProperty* NewProp_BoneControllers = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("BoneControllers"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(BoneControllers, UAnimPreviewInstance), 0x0000000000002000);
				UProperty* NewProp_BoneControllers_Inner = new(EC_InternalUseOnlyConstructor, NewProp_BoneControllers, TEXT("BoneControllers"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FAnimNode_ModifyBone());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("AnimInstance"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("AnimPreviewInstance.h"));
				MetaData->SetValue(OuterClass, TEXT("IsBlueprintBase"), TEXT("false"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/AnimPreviewInstance.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("This Instance only contains one AnimationAsset, and produce poses\nUsed by Preview in AnimGraph, Playing single animation in Kismet2 and etc"));
				MetaData->SetValue(NewProp_MontagePreviewStartSectionIdx, TEXT("ModuleRelativePath"), TEXT("Classes/AnimPreviewInstance.h"));
				MetaData->SetValue(NewProp_MontagePreviewType, TEXT("ModuleRelativePath"), TEXT("Classes/AnimPreviewInstance.h"));
				MetaData->SetValue(NewProp_MontagePreviewType, TEXT("ToolTip"), TEXT("Shared parameters for previewing blendspace or animsequence *"));
				MetaData->SetValue(NewProp_SkeletalControlAlpha, TEXT("ModuleRelativePath"), TEXT("Classes/AnimPreviewInstance.h"));
				MetaData->SetValue(NewProp_SkeletalControlAlpha, TEXT("ToolTip"), TEXT("Shared parameters for previewing blendspace or animsequence *"));
				MetaData->SetValue(NewProp_CurveBoneControllers, TEXT("ModuleRelativePath"), TEXT("Classes/AnimPreviewInstance.h"));
				MetaData->SetValue(NewProp_CurveBoneControllers, TEXT("ToolTip"), TEXT("Curve modifiers"));
				MetaData->SetValue(NewProp_BoneControllers, TEXT("ModuleRelativePath"), TEXT("Classes/AnimPreviewInstance.h"));
				MetaData->SetValue(NewProp_BoneControllers, TEXT("ToolTip"), TEXT("Controllers for individual bones"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAnimPreviewInstance(Z_Construct_UClass_UAnimPreviewInstance, TEXT("UAnimPreviewInstance"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAnimPreviewInstance);
	UClass* Z_Construct_UClass_UAnimStateEntryNode_NoRegister()
	{
		return UAnimStateEntryNode::StaticClass();
	}
	UClass* Z_Construct_UClass_UAnimStateEntryNode()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UEdGraphNode();
			Z_Construct_UPackage_AnimGraph();
			OuterClass = UAnimStateEntryNode::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("AnimStateEntryNode.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/AnimStateEntryNode.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAnimStateEntryNode(Z_Construct_UClass_UAnimStateEntryNode, TEXT("UAnimStateEntryNode"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAnimStateEntryNode);
	UClass* Z_Construct_UClass_UAnimStateNodeBase_NoRegister()
	{
		return UAnimStateNodeBase::StaticClass();
	}
	UClass* Z_Construct_UClass_UAnimStateNodeBase()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UEdGraphNode();
			Z_Construct_UPackage_AnimGraph();
			OuterClass = UAnimStateNodeBase::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080081;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("AnimStateNodeBase.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/AnimStateNodeBase.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAnimStateNodeBase(Z_Construct_UClass_UAnimStateNodeBase, TEXT("UAnimStateNodeBase"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAnimStateNodeBase);
	UClass* Z_Construct_UClass_UAnimStateConduitNode_NoRegister()
	{
		return UAnimStateConduitNode::StaticClass();
	}
	UClass* Z_Construct_UClass_UAnimStateConduitNode()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UAnimStateNodeBase();
			Z_Construct_UPackage_AnimGraph();
			OuterClass = UAnimStateConduitNode::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_BoundGraph = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("BoundGraph"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(BoundGraph, UAnimStateConduitNode), 0x0000000000000000, Z_Construct_UClass_UEdGraph_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("AnimStateConduitNode.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/AnimStateConduitNode.h"));
				MetaData->SetValue(NewProp_BoundGraph, TEXT("ModuleRelativePath"), TEXT("Classes/AnimStateConduitNode.h"));
				MetaData->SetValue(NewProp_BoundGraph, TEXT("ToolTip"), TEXT("The transition graph for this conduit; it's a logic graph, not an animation graph"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAnimStateConduitNode(Z_Construct_UClass_UAnimStateConduitNode, TEXT("UAnimStateConduitNode"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAnimStateConduitNode);
	UEnum* Z_Construct_UEnum_AnimGraph_EAnimStateType()
	{
		UPackage* Outer=Z_Construct_UPackage_AnimGraph();
		extern uint32 Get_Z_Construct_UEnum_AnimGraph_EAnimStateType_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("EAnimStateType"), 0, Get_Z_Construct_UEnum_AnimGraph_EAnimStateType_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EAnimStateType"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("AST_SingleAnimation")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("AST_BlendGraph")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("AST_MAX")), 2));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Regular);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("AST_BlendGraph.DisplayName"), TEXT("Blend graph"));
			MetaData->SetValue(ReturnEnum, TEXT("AST_SingleAnimation.DisplayName"), TEXT("Single animation"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/AnimStateNode.h"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_AnimGraph_EAnimStateType_CRC() { return 3887335143U; }
	UClass* Z_Construct_UClass_UAnimStateNode_NoRegister()
	{
		return UAnimStateNode::StaticClass();
	}
	UClass* Z_Construct_UClass_UAnimStateNode()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UAnimStateNodeBase();
			Z_Construct_UPackage_AnimGraph();
			OuterClass = UAnimStateNode::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20880080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_StateFullyBlended = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("StateFullyBlended"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(StateFullyBlended, UAnimStateNode), 0x0000008000000001, Z_Construct_UScriptStruct_FAnimNotifyEvent());
				UProperty* NewProp_StateLeft = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("StateLeft"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(StateLeft, UAnimStateNode), 0x0000008000000001, Z_Construct_UScriptStruct_FAnimNotifyEvent());
				UProperty* NewProp_StateEntered = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("StateEntered"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(StateEntered, UAnimStateNode), 0x0000008000000001, Z_Construct_UScriptStruct_FAnimNotifyEvent());
				UProperty* NewProp_StateType = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("StateType"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(StateType, UAnimStateNode), 0x0000000000000000, Z_Construct_UEnum_AnimGraph_EAnimStateType());
				UProperty* NewProp_BoundGraph = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("BoundGraph"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(BoundGraph, UAnimStateNode), 0x0000000000000000, Z_Construct_UClass_UEdGraph_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("AnimStateNode.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/AnimStateNode.h"));
				MetaData->SetValue(NewProp_StateFullyBlended, TEXT("Category"), TEXT("Events"));
				MetaData->SetValue(NewProp_StateFullyBlended, TEXT("ModuleRelativePath"), TEXT("Classes/AnimStateNode.h"));
				MetaData->SetValue(NewProp_StateLeft, TEXT("Category"), TEXT("Events"));
				MetaData->SetValue(NewProp_StateLeft, TEXT("ModuleRelativePath"), TEXT("Classes/AnimStateNode.h"));
				MetaData->SetValue(NewProp_StateEntered, TEXT("Category"), TEXT("Events"));
				MetaData->SetValue(NewProp_StateEntered, TEXT("ModuleRelativePath"), TEXT("Classes/AnimStateNode.h"));
				MetaData->SetValue(NewProp_StateType, TEXT("ModuleRelativePath"), TEXT("Classes/AnimStateNode.h"));
				MetaData->SetValue(NewProp_StateType, TEXT("ToolTip"), TEXT("The type of the contents of this state"));
				MetaData->SetValue(NewProp_BoundGraph, TEXT("ModuleRelativePath"), TEXT("Classes/AnimStateNode.h"));
				MetaData->SetValue(NewProp_BoundGraph, TEXT("ToolTip"), TEXT("The animation graph for this state"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAnimStateNode(Z_Construct_UClass_UAnimStateNode, TEXT("UAnimStateNode"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAnimStateNode);
	UClass* Z_Construct_UClass_UAnimStateTransitionNode_NoRegister()
	{
		return UAnimStateTransitionNode::StaticClass();
	}
	UClass* Z_Construct_UClass_UAnimStateTransitionNode()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UAnimStateNodeBase();
			Z_Construct_UPackage_AnimGraph();
			OuterClass = UAnimStateTransitionNode::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20880084;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_SharedCrossfadeIdx = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SharedCrossfadeIdx"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(SharedCrossfadeIdx, UAnimStateTransitionNode), 0x0000000000000000);
				UProperty* NewProp_SharedCrossfadeGuid = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SharedCrossfadeGuid"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(SharedCrossfadeGuid, UAnimStateTransitionNode), 0x0000000000000000, Z_Construct_UScriptStruct_FGuid());
				UProperty* NewProp_SharedCrossfadeName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SharedCrossfadeName"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(SharedCrossfadeName, UAnimStateTransitionNode), 0x0000000000000000);
				UProperty* NewProp_SharedColor = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SharedColor"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(SharedColor, UAnimStateTransitionNode), 0x0000000000000000, Z_Construct_UScriptStruct_FLinearColor());
				UProperty* NewProp_SharedRulesGuid = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SharedRulesGuid"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(SharedRulesGuid, UAnimStateTransitionNode), 0x0000000000000000, Z_Construct_UScriptStruct_FGuid());
				UProperty* NewProp_SharedRulesName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SharedRulesName"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(SharedRulesName, UAnimStateTransitionNode), 0x0000000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bSharedCrossfade, UAnimStateTransitionNode, bool);
				UProperty* NewProp_bSharedCrossfade = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bSharedCrossfade"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bSharedCrossfade, UAnimStateTransitionNode), 0x0000000000000000, CPP_BOOL_PROPERTY_BITMASK(bSharedCrossfade, UAnimStateTransitionNode), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bSharedRules, UAnimStateTransitionNode, bool);
				UProperty* NewProp_bSharedRules = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bSharedRules"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bSharedRules, UAnimStateTransitionNode), 0x0000000000000000, CPP_BOOL_PROPERTY_BITMASK(bSharedRules, UAnimStateTransitionNode), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(Bidirectional, UAnimStateTransitionNode, bool);
				UProperty* NewProp_Bidirectional = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Bidirectional"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Bidirectional, UAnimStateTransitionNode), 0x0000000000000001, CPP_BOOL_PROPERTY_BITMASK(Bidirectional, UAnimStateTransitionNode), sizeof(bool), true);
				UProperty* NewProp_TransitionInterrupt = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("TransitionInterrupt"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(TransitionInterrupt, UAnimStateTransitionNode), 0x0000008000000001, Z_Construct_UScriptStruct_FAnimNotifyEvent());
				UProperty* NewProp_TransitionEnd = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("TransitionEnd"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(TransitionEnd, UAnimStateTransitionNode), 0x0000008000000001, Z_Construct_UScriptStruct_FAnimNotifyEvent());
				UProperty* NewProp_TransitionStart = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("TransitionStart"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(TransitionStart, UAnimStateTransitionNode), 0x0000008000000001, Z_Construct_UScriptStruct_FAnimNotifyEvent());
				UProperty* NewProp_LogicType = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("LogicType"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(LogicType, UAnimStateTransitionNode), 0x0000000000000005, Z_Construct_UEnum_Engine_ETransitionLogicType());
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bAutomaticRuleBasedOnSequencePlayerInState, UAnimStateTransitionNode, bool);
				UProperty* NewProp_bAutomaticRuleBasedOnSequencePlayerInState = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bAutomaticRuleBasedOnSequencePlayerInState"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bAutomaticRuleBasedOnSequencePlayerInState, UAnimStateTransitionNode), 0x0000000000000001, CPP_BOOL_PROPERTY_BITMASK(bAutomaticRuleBasedOnSequencePlayerInState, UAnimStateTransitionNode), sizeof(bool), true);
				UProperty* NewProp_CustomBlendCurve = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CustomBlendCurve"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(CustomBlendCurve, UAnimStateTransitionNode), 0x0000000000000001, Z_Construct_UClass_UCurveFloat_NoRegister());
				UProperty* NewProp_BlendMode = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("BlendMode"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(BlendMode, UAnimStateTransitionNode), 0x0000000000000001, Z_Construct_UEnum_Engine_EAlphaBlendOption());
				UProperty* NewProp_CrossfadeMode = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CrossfadeMode"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(CrossfadeMode_DEPRECATED, UAnimStateTransitionNode), 0x0000000020000000, Z_Construct_UEnum_Engine_ETransitionBlendMode());
				UProperty* NewProp_CrossfadeDuration = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CrossfadeDuration"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(CrossfadeDuration, UAnimStateTransitionNode), 0x0000000000004001);
				UProperty* NewProp_PriorityOrder = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("PriorityOrder"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(PriorityOrder, UAnimStateTransitionNode), 0x0000000000000001);
				UProperty* NewProp_CustomTransitionGraph = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CustomTransitionGraph"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(CustomTransitionGraph, UAnimStateTransitionNode), 0x0000000000000000, Z_Construct_UClass_UEdGraph_NoRegister());
				UProperty* NewProp_BoundGraph = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("BoundGraph"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(BoundGraph, UAnimStateTransitionNode), 0x0000000000000000, Z_Construct_UClass_UEdGraph_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->ClassConfigName = FName(TEXT("Editor"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("AnimStateTransitionNode.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/AnimStateTransitionNode.h"));
				MetaData->SetValue(NewProp_SharedCrossfadeIdx, TEXT("ModuleRelativePath"), TEXT("Classes/AnimStateTransitionNode.h"));
				MetaData->SetValue(NewProp_SharedCrossfadeGuid, TEXT("ModuleRelativePath"), TEXT("Classes/AnimStateTransitionNode.h"));
				MetaData->SetValue(NewProp_SharedCrossfadeName, TEXT("ModuleRelativePath"), TEXT("Classes/AnimStateTransitionNode.h"));
				MetaData->SetValue(NewProp_SharedColor, TEXT("ModuleRelativePath"), TEXT("Classes/AnimStateTransitionNode.h"));
				MetaData->SetValue(NewProp_SharedColor, TEXT("ToolTip"), TEXT("Color we draw in the editor as if we are shared"));
				MetaData->SetValue(NewProp_SharedRulesGuid, TEXT("ModuleRelativePath"), TEXT("Classes/AnimStateTransitionNode.h"));
				MetaData->SetValue(NewProp_SharedRulesGuid, TEXT("ToolTip"), TEXT("Shared rules guid useful when copying between different state machines"));
				MetaData->SetValue(NewProp_SharedRulesName, TEXT("ModuleRelativePath"), TEXT("Classes/AnimStateTransitionNode.h"));
				MetaData->SetValue(NewProp_SharedRulesName, TEXT("ToolTip"), TEXT("What we call this transition if we are shared ('Transition X to Y' can't be used since its used in multiple places)"));
				MetaData->SetValue(NewProp_bSharedCrossfade, TEXT("ModuleRelativePath"), TEXT("Classes/AnimStateTransitionNode.h"));
				MetaData->SetValue(NewProp_bSharedCrossfade, TEXT("ToolTip"), TEXT("The cross-fade settings of this node may be shared"));
				MetaData->SetValue(NewProp_bSharedRules, TEXT("ModuleRelativePath"), TEXT("Classes/AnimStateTransitionNode.h"));
				MetaData->SetValue(NewProp_bSharedRules, TEXT("ToolTip"), TEXT("The rules for this transition may be shared with other transition nodes"));
				MetaData->SetValue(NewProp_Bidirectional, TEXT("Category"), TEXT("Transition"));
				MetaData->SetValue(NewProp_Bidirectional, TEXT("ModuleRelativePath"), TEXT("Classes/AnimStateTransitionNode.h"));
				MetaData->SetValue(NewProp_Bidirectional, TEXT("ToolTip"), TEXT("This transition can go both directions"));
				MetaData->SetValue(NewProp_TransitionInterrupt, TEXT("Category"), TEXT("Events"));
				MetaData->SetValue(NewProp_TransitionInterrupt, TEXT("ModuleRelativePath"), TEXT("Classes/AnimStateTransitionNode.h"));
				MetaData->SetValue(NewProp_TransitionEnd, TEXT("Category"), TEXT("Events"));
				MetaData->SetValue(NewProp_TransitionEnd, TEXT("ModuleRelativePath"), TEXT("Classes/AnimStateTransitionNode.h"));
				MetaData->SetValue(NewProp_TransitionStart, TEXT("Category"), TEXT("Events"));
				MetaData->SetValue(NewProp_TransitionStart, TEXT("ModuleRelativePath"), TEXT("Classes/AnimStateTransitionNode.h"));
				MetaData->SetValue(NewProp_LogicType, TEXT("Category"), TEXT("Transition"));
				MetaData->SetValue(NewProp_LogicType, TEXT("ModuleRelativePath"), TEXT("Classes/AnimStateTransitionNode.h"));
				MetaData->SetValue(NewProp_LogicType, TEXT("ToolTip"), TEXT("What transition logic to use"));
				MetaData->SetValue(NewProp_bAutomaticRuleBasedOnSequencePlayerInState, TEXT("Category"), TEXT("Transition"));
				MetaData->SetValue(NewProp_bAutomaticRuleBasedOnSequencePlayerInState, TEXT("ModuleRelativePath"), TEXT("Classes/AnimStateTransitionNode.h"));
				MetaData->SetValue(NewProp_bAutomaticRuleBasedOnSequencePlayerInState, TEXT("ToolTip"), TEXT("Try setting the rule automatically based on the player node remaining time and the CrossfadeDuration, ignoring the internal time"));
				MetaData->SetValue(NewProp_CustomBlendCurve, TEXT("Category"), TEXT("Transition"));
				MetaData->SetValue(NewProp_CustomBlendCurve, TEXT("ModuleRelativePath"), TEXT("Classes/AnimStateTransitionNode.h"));
				MetaData->SetValue(NewProp_BlendMode, TEXT("Category"), TEXT("Transition"));
				MetaData->SetValue(NewProp_BlendMode, TEXT("ModuleRelativePath"), TEXT("Classes/AnimStateTransitionNode.h"));
				MetaData->SetValue(NewProp_CrossfadeMode, TEXT("ModuleRelativePath"), TEXT("Classes/AnimStateTransitionNode.h"));
				MetaData->SetValue(NewProp_CrossfadeMode, TEXT("ToolTip"), TEXT("The type of blending to use in the crossfade"));
				MetaData->SetValue(NewProp_CrossfadeDuration, TEXT("Category"), TEXT("Transition"));
				MetaData->SetValue(NewProp_CrossfadeDuration, TEXT("ModuleRelativePath"), TEXT("Classes/AnimStateTransitionNode.h"));
				MetaData->SetValue(NewProp_CrossfadeDuration, TEXT("ToolTip"), TEXT("The duration to cross-fade for"));
				MetaData->SetValue(NewProp_PriorityOrder, TEXT("Category"), TEXT("Transition"));
				MetaData->SetValue(NewProp_PriorityOrder, TEXT("ModuleRelativePath"), TEXT("Classes/AnimStateTransitionNode.h"));
				MetaData->SetValue(NewProp_PriorityOrder, TEXT("ToolTip"), TEXT("The priority order of this transition. If multiple transitions out of a state go\ntrue at the same time, the one with the smallest priority order will take precedent"));
				MetaData->SetValue(NewProp_CustomTransitionGraph, TEXT("ModuleRelativePath"), TEXT("Classes/AnimStateTransitionNode.h"));
				MetaData->SetValue(NewProp_CustomTransitionGraph, TEXT("ToolTip"), TEXT("The animation graph for this transition if it uses custom blending (returning a pose)"));
				MetaData->SetValue(NewProp_BoundGraph, TEXT("ModuleRelativePath"), TEXT("Classes/AnimStateTransitionNode.h"));
				MetaData->SetValue(NewProp_BoundGraph, TEXT("ToolTip"), TEXT("The transition logic graph for this transition (returning a boolean)"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAnimStateTransitionNode(Z_Construct_UClass_UAnimStateTransitionNode, TEXT("UAnimStateTransitionNode"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAnimStateTransitionNode);
	UScriptStruct* Z_Construct_UScriptStruct_FNodeSpawnData()
	{
		UPackage* Outer=Z_Construct_UPackage_AnimGraph();
		extern uint32 Get_Z_Construct_UScriptStruct_FNodeSpawnData_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("NodeSpawnData"), sizeof(FNodeSpawnData), Get_Z_Construct_UScriptStruct_FNodeSpawnData_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("NodeSpawnData"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FNodeSpawnData>, EStructFlags(0x00000001));
			UProperty* NewProp_GetterContextString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("GetterContextString"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(GetterContextString, FNodeSpawnData), 0x0000000000000000);
			UProperty* NewProp_Getter = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Getter"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(Getter, FNodeSpawnData), 0x0000000000000000, UField::StaticClass());
			UProperty* NewProp_SourceBlueprint = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("SourceBlueprint"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(SourceBlueprint, FNodeSpawnData), 0x0000000000000000, Z_Construct_UClass_UAnimBlueprint_NoRegister());
			UProperty* NewProp_AnimInstanceClass = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("AnimInstanceClass"), RF_Public|RF_Transient|RF_Native) UClassProperty(CPP_PROPERTY_BASE(AnimInstanceClass, FNodeSpawnData), 0x0000000000000000, Z_Construct_UClass_UObject_NoRegister());
			UProperty* NewProp_SourceStateNode = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("SourceStateNode"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(SourceStateNode, FNodeSpawnData), 0x0000000000000000, Z_Construct_UClass_UAnimStateNodeBase_NoRegister());
			UProperty* NewProp_SourceNode = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("SourceNode"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(SourceNode, FNodeSpawnData), 0x0000000000000000, Z_Construct_UClass_UAnimGraphNode_Base_NoRegister());
#if WITH_EDITORONLY_DATA
			UProperty* NewProp_CachedTitle = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("CachedTitle"), RF_Public|RF_Transient|RF_Native) UTextProperty(CPP_PROPERTY_BASE(CachedTitle, FNodeSpawnData), 0x0000000800000000);
#endif // WITH_EDITORONLY_DATA
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/K2Node_AnimGetter.h"));
			MetaData->SetValue(NewProp_GetterContextString, TEXT("ModuleRelativePath"), TEXT("Classes/K2Node_AnimGetter.h"));
			MetaData->SetValue(NewProp_GetterContextString, TEXT("ToolTip"), TEXT("String of combined valid contexts for the spawned getter"));
			MetaData->SetValue(NewProp_Getter, TEXT("ModuleRelativePath"), TEXT("Classes/K2Node_AnimGetter.h"));
			MetaData->SetValue(NewProp_Getter, TEXT("ToolTip"), TEXT("The UFunction (as a UField)"));
			MetaData->SetValue(NewProp_SourceBlueprint, TEXT("ModuleRelativePath"), TEXT("Classes/K2Node_AnimGetter.h"));
			MetaData->SetValue(NewProp_SourceBlueprint, TEXT("ToolTip"), TEXT("The blueprint the getter is valid within"));
			MetaData->SetValue(NewProp_AnimInstanceClass, TEXT("ModuleRelativePath"), TEXT("Classes/K2Node_AnimGetter.h"));
			MetaData->SetValue(NewProp_AnimInstanceClass, TEXT("ToolTip"), TEXT("The instance class the spawned getter is defined on"));
			MetaData->SetValue(NewProp_SourceStateNode, TEXT("ModuleRelativePath"), TEXT("Classes/K2Node_AnimGetter.h"));
			MetaData->SetValue(NewProp_SourceStateNode, TEXT("ToolTip"), TEXT("The state node the spawned getter accesses"));
			MetaData->SetValue(NewProp_SourceNode, TEXT("ModuleRelativePath"), TEXT("Classes/K2Node_AnimGetter.h"));
			MetaData->SetValue(NewProp_SourceNode, TEXT("ToolTip"), TEXT("The node the spawned getter accesses"));
			MetaData->SetValue(NewProp_CachedTitle, TEXT("ModuleRelativePath"), TEXT("Classes/K2Node_AnimGetter.h"));
			MetaData->SetValue(NewProp_CachedTitle, TEXT("ToolTip"), TEXT("Title to use for the spawned node"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FNodeSpawnData_CRC() { return 3753074450U; }
	UClass* Z_Construct_UClass_UK2Node_AnimGetter_NoRegister()
	{
		return UK2Node_AnimGetter::StaticClass();
	}
	UClass* Z_Construct_UClass_UK2Node_AnimGetter()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UK2Node_CallFunction();
			Z_Construct_UPackage_AnimGraph();
			OuterClass = UK2Node_AnimGetter::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_Contexts = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Contexts"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(Contexts, UK2Node_AnimGetter), 0x0000000000000000);
				UProperty* NewProp_Contexts_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Contexts, TEXT("Contexts"), RF_Public|RF_Transient|RF_Native) UStrProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000);
				UProperty* NewProp_CachedTitle = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CachedTitle"), RF_Public|RF_Transient|RF_Native) UTextProperty(CPP_PROPERTY_BASE(CachedTitle, UK2Node_AnimGetter), 0x0000000000000000);
				UProperty* NewProp_SourceAnimBlueprint = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SourceAnimBlueprint"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(SourceAnimBlueprint, UK2Node_AnimGetter), 0x0000000000000000, Z_Construct_UClass_UAnimBlueprint_NoRegister());
				UProperty* NewProp_GetterClass = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("GetterClass"), RF_Public|RF_Transient|RF_Native) UClassProperty(CPP_PROPERTY_BASE(GetterClass, UK2Node_AnimGetter), 0x0000000000000000, Z_Construct_UClass_UObject_NoRegister());
				UProperty* NewProp_SourceStateNode = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SourceStateNode"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(SourceStateNode, UK2Node_AnimGetter), 0x0000000000000000, Z_Construct_UClass_UAnimStateNodeBase_NoRegister());
				UProperty* NewProp_SourceNode = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SourceNode"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(SourceNode, UK2Node_AnimGetter), 0x0000000000000000, Z_Construct_UClass_UAnimGraphNode_Base_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("K2Node_AnimGetter.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/K2Node_AnimGetter.h"));
				MetaData->SetValue(NewProp_Contexts, TEXT("ModuleRelativePath"), TEXT("Classes/K2Node_AnimGetter.h"));
				MetaData->SetValue(NewProp_Contexts, TEXT("ToolTip"), TEXT("List of valid contexts for the node"));
				MetaData->SetValue(NewProp_CachedTitle, TEXT("ModuleRelativePath"), TEXT("Classes/K2Node_AnimGetter.h"));
				MetaData->SetValue(NewProp_CachedTitle, TEXT("ToolTip"), TEXT("Cached node title"));
				MetaData->SetValue(NewProp_SourceAnimBlueprint, TEXT("ModuleRelativePath"), TEXT("Classes/K2Node_AnimGetter.h"));
				MetaData->SetValue(NewProp_SourceAnimBlueprint, TEXT("ToolTip"), TEXT("The anim blueprint that generated this getter"));
				MetaData->SetValue(NewProp_GetterClass, TEXT("ModuleRelativePath"), TEXT("Classes/K2Node_AnimGetter.h"));
				MetaData->SetValue(NewProp_GetterClass, TEXT("ToolTip"), TEXT("The UAnimInstance derived class that implements the getter we are running"));
				MetaData->SetValue(NewProp_SourceStateNode, TEXT("ModuleRelativePath"), TEXT("Classes/K2Node_AnimGetter.h"));
				MetaData->SetValue(NewProp_SourceStateNode, TEXT("ToolTip"), TEXT("UAnimStateNode doesn't use the same hierarchy so we need to have a seperate property here to handle\nthose."));
				MetaData->SetValue(NewProp_SourceNode, TEXT("ModuleRelativePath"), TEXT("Classes/K2Node_AnimGetter.h"));
				MetaData->SetValue(NewProp_SourceNode, TEXT("ToolTip"), TEXT("The node that is required for the getter"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UK2Node_AnimGetter(Z_Construct_UClass_UK2Node_AnimGetter, TEXT("UK2Node_AnimGetter"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UK2Node_AnimGetter);
	UEnum* Z_Construct_UEnum_AnimGraph_ETransitionGetter()
	{
		UPackage* Outer=Z_Construct_UPackage_AnimGraph();
		extern uint32 Get_Z_Construct_UEnum_AnimGraph_ETransitionGetter_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("ETransitionGetter"), 0, Get_Z_Construct_UEnum_AnimGraph_ETransitionGetter_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ETransitionGetter"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ETransitionGetter::AnimationAsset_GetCurrentTime")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ETransitionGetter::AnimationAsset_GetLength")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ETransitionGetter::AnimationAsset_GetCurrentTimeFraction")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ETransitionGetter::AnimationAsset_GetTimeFromEnd")), 3));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ETransitionGetter::AnimationAsset_GetTimeFromEndFraction")), 4));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ETransitionGetter::CurrentState_ElapsedTime")), 5));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ETransitionGetter::CurrentState_GetBlendWeight")), 6));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ETransitionGetter::CurrentTransitionDuration")), 7));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ETransitionGetter::ArbitraryState_GetBlendWeight")), 8));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ETransitionGetter::ETransitionGetter_MAX")), 9));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/K2Node_TransitionRuleGetter.h"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_AnimGraph_ETransitionGetter_CRC() { return 1549520058U; }
	UClass* Z_Construct_UClass_UK2Node_TransitionRuleGetter_NoRegister()
	{
		return UK2Node_TransitionRuleGetter::StaticClass();
	}
	UClass* Z_Construct_UClass_UK2Node_TransitionRuleGetter()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UK2Node();
			Z_Construct_UPackage_AnimGraph();
			OuterClass = UK2Node_TransitionRuleGetter::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_AssociatedStateNode = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AssociatedStateNode"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(AssociatedStateNode, UK2Node_TransitionRuleGetter), 0x0000000000000000, Z_Construct_UClass_UAnimStateNode_NoRegister());
				UProperty* NewProp_AssociatedAnimAssetPlayerNode = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AssociatedAnimAssetPlayerNode"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(AssociatedAnimAssetPlayerNode, UK2Node_TransitionRuleGetter), 0x0000000000000000, Z_Construct_UClass_UAnimGraphNode_Base_NoRegister());
				UProperty* NewProp_GetterType = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("GetterType"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(GetterType, UK2Node_TransitionRuleGetter), 0x0000000000000000, Z_Construct_UEnum_AnimGraph_ETransitionGetter());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("K2Node_TransitionRuleGetter.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/K2Node_TransitionRuleGetter.h"));
				MetaData->SetValue(NewProp_AssociatedStateNode, TEXT("ModuleRelativePath"), TEXT("Classes/K2Node_TransitionRuleGetter.h"));
				MetaData->SetValue(NewProp_AssociatedAnimAssetPlayerNode, TEXT("ModuleRelativePath"), TEXT("Classes/K2Node_TransitionRuleGetter.h"));
				MetaData->SetValue(NewProp_GetterType, TEXT("ModuleRelativePath"), TEXT("Classes/K2Node_TransitionRuleGetter.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UK2Node_TransitionRuleGetter(Z_Construct_UClass_UK2Node_TransitionRuleGetter, TEXT("UK2Node_TransitionRuleGetter"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UK2Node_TransitionRuleGetter);
	UPackage* Z_Construct_UPackage_AnimGraph()
	{
		static UPackage* ReturnPackage = NULL;
		if (!ReturnPackage)
		{
			ReturnPackage = CastChecked<UPackage>(StaticFindObjectFast(UPackage::StaticClass(), NULL, FName(TEXT("/Script/AnimGraph")), false, false));
			ReturnPackage->SetPackageFlags(PKG_CompiledIn | 0x00000000);
			FGuid Guid;
			Guid.A = 0xDBD6BAAF;
			Guid.B = 0x4D967681;
			Guid.C = 0x00000000;
			Guid.D = 0x00000000;
			ReturnPackage->SetGuid(Guid);

		}
		return ReturnPackage;
	}
#endif

PRAGMA_ENABLE_DEPRECATION_WARNINGS
