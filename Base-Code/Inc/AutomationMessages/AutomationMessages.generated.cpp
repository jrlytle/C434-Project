// Copyright 1998-2015 Epic Games, Inc. All Rights Reserved.
/*===========================================================================
	Boilerplate C++ definitions for a single module.
	This is automatically generated by UnrealHeaderTool.
	DO NOT modify this manually! Edit the corresponding .h files instead!
===========================================================================*/

#include "Private/AutomationMessagesPrivatePCH.h"
#include "AutomationMessages.generated.dep.h"
PRAGMA_DISABLE_DEPRECATION_WARNINGS
void EmptyLinkFunctionForGeneratedCodeAutomationMessages() {}
class UScriptStruct* FAutomationWorkerScreenImage::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern AUTOMATIONMESSAGES_API class UScriptStruct* Z_Construct_UScriptStruct_FAutomationWorkerScreenImage();
		extern AUTOMATIONMESSAGES_API uint32 Get_Z_Construct_UScriptStruct_FAutomationWorkerScreenImage_CRC();
		extern AUTOMATIONMESSAGES_API class UPackage* Z_Construct_UPackage_AutomationMessages();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FAutomationWorkerScreenImage, Z_Construct_UPackage_AutomationMessages(), TEXT("AutomationWorkerScreenImage"), sizeof(FAutomationWorkerScreenImage), Get_Z_Construct_UScriptStruct_FAutomationWorkerScreenImage_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FAutomationWorkerScreenImage(FAutomationWorkerScreenImage::StaticStruct, TEXT("/Script/AutomationMessages"));
static struct FScriptStruct_AutomationMessages_StaticRegisterNativesFAutomationWorkerScreenImage
{
	FScriptStruct_AutomationMessages_StaticRegisterNativesFAutomationWorkerScreenImage()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("AutomationWorkerScreenImage")),new UScriptStruct::TCppStructOps<FAutomationWorkerScreenImage>);
	}
} ScriptStruct_AutomationMessages_StaticRegisterNativesFAutomationWorkerScreenImage;
class UScriptStruct* FAutomationWorkerNextNetworkCommandReply::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern AUTOMATIONMESSAGES_API class UScriptStruct* Z_Construct_UScriptStruct_FAutomationWorkerNextNetworkCommandReply();
		extern AUTOMATIONMESSAGES_API uint32 Get_Z_Construct_UScriptStruct_FAutomationWorkerNextNetworkCommandReply_CRC();
		extern AUTOMATIONMESSAGES_API class UPackage* Z_Construct_UPackage_AutomationMessages();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FAutomationWorkerNextNetworkCommandReply, Z_Construct_UPackage_AutomationMessages(), TEXT("AutomationWorkerNextNetworkCommandReply"), sizeof(FAutomationWorkerNextNetworkCommandReply), Get_Z_Construct_UScriptStruct_FAutomationWorkerNextNetworkCommandReply_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FAutomationWorkerNextNetworkCommandReply(FAutomationWorkerNextNetworkCommandReply::StaticStruct, TEXT("/Script/AutomationMessages"));
static struct FScriptStruct_AutomationMessages_StaticRegisterNativesFAutomationWorkerNextNetworkCommandReply
{
	FScriptStruct_AutomationMessages_StaticRegisterNativesFAutomationWorkerNextNetworkCommandReply()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("AutomationWorkerNextNetworkCommandReply")),new UScriptStruct::TCppStructOps<FAutomationWorkerNextNetworkCommandReply>);
	}
} ScriptStruct_AutomationMessages_StaticRegisterNativesFAutomationWorkerNextNetworkCommandReply;
class UScriptStruct* FAutomationWorkerRequestNextNetworkCommand::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern AUTOMATIONMESSAGES_API class UScriptStruct* Z_Construct_UScriptStruct_FAutomationWorkerRequestNextNetworkCommand();
		extern AUTOMATIONMESSAGES_API uint32 Get_Z_Construct_UScriptStruct_FAutomationWorkerRequestNextNetworkCommand_CRC();
		extern AUTOMATIONMESSAGES_API class UPackage* Z_Construct_UPackage_AutomationMessages();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FAutomationWorkerRequestNextNetworkCommand, Z_Construct_UPackage_AutomationMessages(), TEXT("AutomationWorkerRequestNextNetworkCommand"), sizeof(FAutomationWorkerRequestNextNetworkCommand), Get_Z_Construct_UScriptStruct_FAutomationWorkerRequestNextNetworkCommand_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FAutomationWorkerRequestNextNetworkCommand(FAutomationWorkerRequestNextNetworkCommand::StaticStruct, TEXT("/Script/AutomationMessages"));
static struct FScriptStruct_AutomationMessages_StaticRegisterNativesFAutomationWorkerRequestNextNetworkCommand
{
	FScriptStruct_AutomationMessages_StaticRegisterNativesFAutomationWorkerRequestNextNetworkCommand()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("AutomationWorkerRequestNextNetworkCommand")),new UScriptStruct::TCppStructOps<FAutomationWorkerRequestNextNetworkCommand>);
	}
} ScriptStruct_AutomationMessages_StaticRegisterNativesFAutomationWorkerRequestNextNetworkCommand;
class UScriptStruct* FAutomationWorkerRunTestsReply::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern AUTOMATIONMESSAGES_API class UScriptStruct* Z_Construct_UScriptStruct_FAutomationWorkerRunTestsReply();
		extern AUTOMATIONMESSAGES_API uint32 Get_Z_Construct_UScriptStruct_FAutomationWorkerRunTestsReply_CRC();
		extern AUTOMATIONMESSAGES_API class UPackage* Z_Construct_UPackage_AutomationMessages();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FAutomationWorkerRunTestsReply, Z_Construct_UPackage_AutomationMessages(), TEXT("AutomationWorkerRunTestsReply"), sizeof(FAutomationWorkerRunTestsReply), Get_Z_Construct_UScriptStruct_FAutomationWorkerRunTestsReply_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FAutomationWorkerRunTestsReply(FAutomationWorkerRunTestsReply::StaticStruct, TEXT("/Script/AutomationMessages"));
static struct FScriptStruct_AutomationMessages_StaticRegisterNativesFAutomationWorkerRunTestsReply
{
	FScriptStruct_AutomationMessages_StaticRegisterNativesFAutomationWorkerRunTestsReply()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("AutomationWorkerRunTestsReply")),new UScriptStruct::TCppStructOps<FAutomationWorkerRunTestsReply>);
	}
} ScriptStruct_AutomationMessages_StaticRegisterNativesFAutomationWorkerRunTestsReply;
class UScriptStruct* FAutomationWorkerRunTests::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern AUTOMATIONMESSAGES_API class UScriptStruct* Z_Construct_UScriptStruct_FAutomationWorkerRunTests();
		extern AUTOMATIONMESSAGES_API uint32 Get_Z_Construct_UScriptStruct_FAutomationWorkerRunTests_CRC();
		extern AUTOMATIONMESSAGES_API class UPackage* Z_Construct_UPackage_AutomationMessages();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FAutomationWorkerRunTests, Z_Construct_UPackage_AutomationMessages(), TEXT("AutomationWorkerRunTests"), sizeof(FAutomationWorkerRunTests), Get_Z_Construct_UScriptStruct_FAutomationWorkerRunTests_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FAutomationWorkerRunTests(FAutomationWorkerRunTests::StaticStruct, TEXT("/Script/AutomationMessages"));
static struct FScriptStruct_AutomationMessages_StaticRegisterNativesFAutomationWorkerRunTests
{
	FScriptStruct_AutomationMessages_StaticRegisterNativesFAutomationWorkerRunTests()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("AutomationWorkerRunTests")),new UScriptStruct::TCppStructOps<FAutomationWorkerRunTests>);
	}
} ScriptStruct_AutomationMessages_StaticRegisterNativesFAutomationWorkerRunTests;
class UScriptStruct* FAutomationWorkerRequestTestsReply::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern AUTOMATIONMESSAGES_API class UScriptStruct* Z_Construct_UScriptStruct_FAutomationWorkerRequestTestsReply();
		extern AUTOMATIONMESSAGES_API uint32 Get_Z_Construct_UScriptStruct_FAutomationWorkerRequestTestsReply_CRC();
		extern AUTOMATIONMESSAGES_API class UPackage* Z_Construct_UPackage_AutomationMessages();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FAutomationWorkerRequestTestsReply, Z_Construct_UPackage_AutomationMessages(), TEXT("AutomationWorkerRequestTestsReply"), sizeof(FAutomationWorkerRequestTestsReply), Get_Z_Construct_UScriptStruct_FAutomationWorkerRequestTestsReply_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FAutomationWorkerRequestTestsReply(FAutomationWorkerRequestTestsReply::StaticStruct, TEXT("/Script/AutomationMessages"));
static struct FScriptStruct_AutomationMessages_StaticRegisterNativesFAutomationWorkerRequestTestsReply
{
	FScriptStruct_AutomationMessages_StaticRegisterNativesFAutomationWorkerRequestTestsReply()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("AutomationWorkerRequestTestsReply")),new UScriptStruct::TCppStructOps<FAutomationWorkerRequestTestsReply>);
	}
} ScriptStruct_AutomationMessages_StaticRegisterNativesFAutomationWorkerRequestTestsReply;
class UScriptStruct* FAutomationWorkerRequestTests::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern AUTOMATIONMESSAGES_API class UScriptStruct* Z_Construct_UScriptStruct_FAutomationWorkerRequestTests();
		extern AUTOMATIONMESSAGES_API uint32 Get_Z_Construct_UScriptStruct_FAutomationWorkerRequestTests_CRC();
		extern AUTOMATIONMESSAGES_API class UPackage* Z_Construct_UPackage_AutomationMessages();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FAutomationWorkerRequestTests, Z_Construct_UPackage_AutomationMessages(), TEXT("AutomationWorkerRequestTests"), sizeof(FAutomationWorkerRequestTests), Get_Z_Construct_UScriptStruct_FAutomationWorkerRequestTests_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FAutomationWorkerRequestTests(FAutomationWorkerRequestTests::StaticStruct, TEXT("/Script/AutomationMessages"));
static struct FScriptStruct_AutomationMessages_StaticRegisterNativesFAutomationWorkerRequestTests
{
	FScriptStruct_AutomationMessages_StaticRegisterNativesFAutomationWorkerRequestTests()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("AutomationWorkerRequestTests")),new UScriptStruct::TCppStructOps<FAutomationWorkerRequestTests>);
	}
} ScriptStruct_AutomationMessages_StaticRegisterNativesFAutomationWorkerRequestTests;
class UScriptStruct* FAutomationWorkerPong::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern AUTOMATIONMESSAGES_API class UScriptStruct* Z_Construct_UScriptStruct_FAutomationWorkerPong();
		extern AUTOMATIONMESSAGES_API uint32 Get_Z_Construct_UScriptStruct_FAutomationWorkerPong_CRC();
		extern AUTOMATIONMESSAGES_API class UPackage* Z_Construct_UPackage_AutomationMessages();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FAutomationWorkerPong, Z_Construct_UPackage_AutomationMessages(), TEXT("AutomationWorkerPong"), sizeof(FAutomationWorkerPong), Get_Z_Construct_UScriptStruct_FAutomationWorkerPong_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FAutomationWorkerPong(FAutomationWorkerPong::StaticStruct, TEXT("/Script/AutomationMessages"));
static struct FScriptStruct_AutomationMessages_StaticRegisterNativesFAutomationWorkerPong
{
	FScriptStruct_AutomationMessages_StaticRegisterNativesFAutomationWorkerPong()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("AutomationWorkerPong")),new UScriptStruct::TCppStructOps<FAutomationWorkerPong>);
	}
} ScriptStruct_AutomationMessages_StaticRegisterNativesFAutomationWorkerPong;
class UScriptStruct* FAutomationWorkerResetTests::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern AUTOMATIONMESSAGES_API class UScriptStruct* Z_Construct_UScriptStruct_FAutomationWorkerResetTests();
		extern AUTOMATIONMESSAGES_API uint32 Get_Z_Construct_UScriptStruct_FAutomationWorkerResetTests_CRC();
		extern AUTOMATIONMESSAGES_API class UPackage* Z_Construct_UPackage_AutomationMessages();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FAutomationWorkerResetTests, Z_Construct_UPackage_AutomationMessages(), TEXT("AutomationWorkerResetTests"), sizeof(FAutomationWorkerResetTests), Get_Z_Construct_UScriptStruct_FAutomationWorkerResetTests_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FAutomationWorkerResetTests(FAutomationWorkerResetTests::StaticStruct, TEXT("/Script/AutomationMessages"));
static struct FScriptStruct_AutomationMessages_StaticRegisterNativesFAutomationWorkerResetTests
{
	FScriptStruct_AutomationMessages_StaticRegisterNativesFAutomationWorkerResetTests()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("AutomationWorkerResetTests")),new UScriptStruct::TCppStructOps<FAutomationWorkerResetTests>);
	}
} ScriptStruct_AutomationMessages_StaticRegisterNativesFAutomationWorkerResetTests;
class UScriptStruct* FAutomationWorkerPing::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern AUTOMATIONMESSAGES_API class UScriptStruct* Z_Construct_UScriptStruct_FAutomationWorkerPing();
		extern AUTOMATIONMESSAGES_API uint32 Get_Z_Construct_UScriptStruct_FAutomationWorkerPing_CRC();
		extern AUTOMATIONMESSAGES_API class UPackage* Z_Construct_UPackage_AutomationMessages();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FAutomationWorkerPing, Z_Construct_UPackage_AutomationMessages(), TEXT("AutomationWorkerPing"), sizeof(FAutomationWorkerPing), Get_Z_Construct_UScriptStruct_FAutomationWorkerPing_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FAutomationWorkerPing(FAutomationWorkerPing::StaticStruct, TEXT("/Script/AutomationMessages"));
static struct FScriptStruct_AutomationMessages_StaticRegisterNativesFAutomationWorkerPing
{
	FScriptStruct_AutomationMessages_StaticRegisterNativesFAutomationWorkerPing()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("AutomationWorkerPing")),new UScriptStruct::TCppStructOps<FAutomationWorkerPing>);
	}
} ScriptStruct_AutomationMessages_StaticRegisterNativesFAutomationWorkerPing;
class UScriptStruct* FAutomationWorkerWorkerOffline::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern AUTOMATIONMESSAGES_API class UScriptStruct* Z_Construct_UScriptStruct_FAutomationWorkerWorkerOffline();
		extern AUTOMATIONMESSAGES_API uint32 Get_Z_Construct_UScriptStruct_FAutomationWorkerWorkerOffline_CRC();
		extern AUTOMATIONMESSAGES_API class UPackage* Z_Construct_UPackage_AutomationMessages();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FAutomationWorkerWorkerOffline, Z_Construct_UPackage_AutomationMessages(), TEXT("AutomationWorkerWorkerOffline"), sizeof(FAutomationWorkerWorkerOffline), Get_Z_Construct_UScriptStruct_FAutomationWorkerWorkerOffline_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FAutomationWorkerWorkerOffline(FAutomationWorkerWorkerOffline::StaticStruct, TEXT("/Script/AutomationMessages"));
static struct FScriptStruct_AutomationMessages_StaticRegisterNativesFAutomationWorkerWorkerOffline
{
	FScriptStruct_AutomationMessages_StaticRegisterNativesFAutomationWorkerWorkerOffline()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("AutomationWorkerWorkerOffline")),new UScriptStruct::TCppStructOps<FAutomationWorkerWorkerOffline>);
	}
} ScriptStruct_AutomationMessages_StaticRegisterNativesFAutomationWorkerWorkerOffline;
class UScriptStruct* FAutomationWorkerFindWorkersResponse::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern AUTOMATIONMESSAGES_API class UScriptStruct* Z_Construct_UScriptStruct_FAutomationWorkerFindWorkersResponse();
		extern AUTOMATIONMESSAGES_API uint32 Get_Z_Construct_UScriptStruct_FAutomationWorkerFindWorkersResponse_CRC();
		extern AUTOMATIONMESSAGES_API class UPackage* Z_Construct_UPackage_AutomationMessages();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FAutomationWorkerFindWorkersResponse, Z_Construct_UPackage_AutomationMessages(), TEXT("AutomationWorkerFindWorkersResponse"), sizeof(FAutomationWorkerFindWorkersResponse), Get_Z_Construct_UScriptStruct_FAutomationWorkerFindWorkersResponse_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FAutomationWorkerFindWorkersResponse(FAutomationWorkerFindWorkersResponse::StaticStruct, TEXT("/Script/AutomationMessages"));
static struct FScriptStruct_AutomationMessages_StaticRegisterNativesFAutomationWorkerFindWorkersResponse
{
	FScriptStruct_AutomationMessages_StaticRegisterNativesFAutomationWorkerFindWorkersResponse()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("AutomationWorkerFindWorkersResponse")),new UScriptStruct::TCppStructOps<FAutomationWorkerFindWorkersResponse>);
	}
} ScriptStruct_AutomationMessages_StaticRegisterNativesFAutomationWorkerFindWorkersResponse;
class UScriptStruct* FAutomationWorkerFindWorkers::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern AUTOMATIONMESSAGES_API class UScriptStruct* Z_Construct_UScriptStruct_FAutomationWorkerFindWorkers();
		extern AUTOMATIONMESSAGES_API uint32 Get_Z_Construct_UScriptStruct_FAutomationWorkerFindWorkers_CRC();
		extern AUTOMATIONMESSAGES_API class UPackage* Z_Construct_UPackage_AutomationMessages();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FAutomationWorkerFindWorkers, Z_Construct_UPackage_AutomationMessages(), TEXT("AutomationWorkerFindWorkers"), sizeof(FAutomationWorkerFindWorkers), Get_Z_Construct_UScriptStruct_FAutomationWorkerFindWorkers_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FAutomationWorkerFindWorkers(FAutomationWorkerFindWorkers::StaticStruct, TEXT("/Script/AutomationMessages"));
static struct FScriptStruct_AutomationMessages_StaticRegisterNativesFAutomationWorkerFindWorkers
{
	FScriptStruct_AutomationMessages_StaticRegisterNativesFAutomationWorkerFindWorkers()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("AutomationWorkerFindWorkers")),new UScriptStruct::TCppStructOps<FAutomationWorkerFindWorkers>);
	}
} ScriptStruct_AutomationMessages_StaticRegisterNativesFAutomationWorkerFindWorkers;
#if USE_COMPILED_IN_NATIVES
// Cross Module References
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FGuid();

	AUTOMATIONMESSAGES_API class UScriptStruct* Z_Construct_UScriptStruct_FAutomationWorkerScreenImage();
	AUTOMATIONMESSAGES_API class UScriptStruct* Z_Construct_UScriptStruct_FAutomationWorkerNextNetworkCommandReply();
	AUTOMATIONMESSAGES_API class UScriptStruct* Z_Construct_UScriptStruct_FAutomationWorkerRequestNextNetworkCommand();
	AUTOMATIONMESSAGES_API class UScriptStruct* Z_Construct_UScriptStruct_FAutomationWorkerRunTestsReply();
	AUTOMATIONMESSAGES_API class UScriptStruct* Z_Construct_UScriptStruct_FAutomationWorkerRunTests();
	AUTOMATIONMESSAGES_API class UScriptStruct* Z_Construct_UScriptStruct_FAutomationWorkerRequestTestsReply();
	AUTOMATIONMESSAGES_API class UScriptStruct* Z_Construct_UScriptStruct_FAutomationWorkerRequestTests();
	AUTOMATIONMESSAGES_API class UScriptStruct* Z_Construct_UScriptStruct_FAutomationWorkerPong();
	AUTOMATIONMESSAGES_API class UScriptStruct* Z_Construct_UScriptStruct_FAutomationWorkerResetTests();
	AUTOMATIONMESSAGES_API class UScriptStruct* Z_Construct_UScriptStruct_FAutomationWorkerPing();
	AUTOMATIONMESSAGES_API class UScriptStruct* Z_Construct_UScriptStruct_FAutomationWorkerWorkerOffline();
	AUTOMATIONMESSAGES_API class UScriptStruct* Z_Construct_UScriptStruct_FAutomationWorkerFindWorkersResponse();
	AUTOMATIONMESSAGES_API class UScriptStruct* Z_Construct_UScriptStruct_FAutomationWorkerFindWorkers();
	AUTOMATIONMESSAGES_API class UPackage* Z_Construct_UPackage_AutomationMessages();
	UScriptStruct* Z_Construct_UScriptStruct_FAutomationWorkerScreenImage()
	{
		UPackage* Outer=Z_Construct_UPackage_AutomationMessages();
		extern uint32 Get_Z_Construct_UScriptStruct_FAutomationWorkerScreenImage_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("AutomationWorkerScreenImage"), sizeof(FAutomationWorkerScreenImage), Get_Z_Construct_UScriptStruct_FAutomationWorkerScreenImage_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("AutomationWorkerScreenImage"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FAutomationWorkerScreenImage>, EStructFlags(0x00000001));
			UProperty* NewProp_ScreenShotName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ScreenShotName"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(ScreenShotName, FAutomationWorkerScreenImage), 0x0000000000000000);
			UProperty* NewProp_ScreenImage = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ScreenImage"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(ScreenImage, FAutomationWorkerScreenImage), 0x0000000000000000);
			UProperty* NewProp_ScreenImage_Inner = new(EC_InternalUseOnlyConstructor, NewProp_ScreenImage, TEXT("ScreenImage"), RF_Public|RF_Transient|RF_Native) UByteProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/AutomationWorkerMessages.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Implements a message that is sent in containing a screen shot run during performance test."));
			MetaData->SetValue(NewProp_ScreenShotName, TEXT("ModuleRelativePath"), TEXT("Classes/AutomationWorkerMessages.h"));
			MetaData->SetValue(NewProp_ScreenShotName, TEXT("ToolTip"), TEXT("The screen shot name."));
			MetaData->SetValue(NewProp_ScreenImage, TEXT("ModuleRelativePath"), TEXT("Classes/AutomationWorkerMessages.h"));
			MetaData->SetValue(NewProp_ScreenImage, TEXT("ToolTip"), TEXT("The screen shot data."));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FAutomationWorkerScreenImage_CRC() { return 668110733U; }
	UScriptStruct* Z_Construct_UScriptStruct_FAutomationWorkerNextNetworkCommandReply()
	{
		UPackage* Outer=Z_Construct_UPackage_AutomationMessages();
		extern uint32 Get_Z_Construct_UScriptStruct_FAutomationWorkerNextNetworkCommandReply_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("AutomationWorkerNextNetworkCommandReply"), sizeof(FAutomationWorkerNextNetworkCommandReply), Get_Z_Construct_UScriptStruct_FAutomationWorkerNextNetworkCommandReply_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("AutomationWorkerNextNetworkCommandReply"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FAutomationWorkerNextNetworkCommandReply>, EStructFlags(0x00000001));
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/AutomationWorkerMessages.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FAutomationWorkerNextNetworkCommandReply_CRC() { return 1019860873U; }
	UScriptStruct* Z_Construct_UScriptStruct_FAutomationWorkerRequestNextNetworkCommand()
	{
		UPackage* Outer=Z_Construct_UPackage_AutomationMessages();
		extern uint32 Get_Z_Construct_UScriptStruct_FAutomationWorkerRequestNextNetworkCommand_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("AutomationWorkerRequestNextNetworkCommand"), sizeof(FAutomationWorkerRequestNextNetworkCommand), Get_Z_Construct_UScriptStruct_FAutomationWorkerRequestNextNetworkCommand_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("AutomationWorkerRequestNextNetworkCommand"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FAutomationWorkerRequestNextNetworkCommand>, EStructFlags(0x00000001));
			UProperty* NewProp_ExecutionCount = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ExecutionCount"), RF_Public|RF_Transient|RF_Native) UUInt32Property(CPP_PROPERTY_BASE(ExecutionCount, FAutomationWorkerRequestNextNetworkCommand), 0x0000000000000000);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/AutomationWorkerMessages.h"));
			MetaData->SetValue(NewProp_ExecutionCount, TEXT("ModuleRelativePath"), TEXT("Classes/AutomationWorkerMessages.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FAutomationWorkerRequestNextNetworkCommand_CRC() { return 3353915883U; }
	UScriptStruct* Z_Construct_UScriptStruct_FAutomationWorkerRunTestsReply()
	{
		UPackage* Outer=Z_Construct_UPackage_AutomationMessages();
		extern uint32 Get_Z_Construct_UScriptStruct_FAutomationWorkerRunTestsReply_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("AutomationWorkerRunTestsReply"), sizeof(FAutomationWorkerRunTestsReply), Get_Z_Construct_UScriptStruct_FAutomationWorkerRunTestsReply_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("AutomationWorkerRunTestsReply"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FAutomationWorkerRunTestsReply>, EStructFlags(0x00000001));
			UProperty* NewProp_Warnings = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Warnings"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(Warnings, FAutomationWorkerRunTestsReply), 0x0000000000000000);
			UProperty* NewProp_Warnings_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Warnings, TEXT("Warnings"), RF_Public|RF_Transient|RF_Native) UStrProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000);
			UProperty* NewProp_TestName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("TestName"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(TestName, FAutomationWorkerRunTestsReply), 0x0000000000000000);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Success, FAutomationWorkerRunTestsReply, bool);
			UProperty* NewProp_Success = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Success"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Success, FAutomationWorkerRunTestsReply), 0x0000000000000000, CPP_BOOL_PROPERTY_BITMASK(Success, FAutomationWorkerRunTestsReply), sizeof(bool), true);
			UProperty* NewProp_Logs = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Logs"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(Logs, FAutomationWorkerRunTestsReply), 0x0000000000000000);
			UProperty* NewProp_Logs_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Logs, TEXT("Logs"), RF_Public|RF_Transient|RF_Native) UStrProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000);
			UProperty* NewProp_ExecutionCount = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ExecutionCount"), RF_Public|RF_Transient|RF_Native) UUInt32Property(CPP_PROPERTY_BASE(ExecutionCount, FAutomationWorkerRunTestsReply), 0x0000000000000000);
			UProperty* NewProp_Errors = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Errors"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(Errors, FAutomationWorkerRunTestsReply), 0x0000000000000000);
			UProperty* NewProp_Errors_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Errors, TEXT("Errors"), RF_Public|RF_Transient|RF_Native) UStrProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000);
			UProperty* NewProp_Duration = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Duration"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(Duration, FAutomationWorkerRunTestsReply), 0x0000000000000000);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/AutomationWorkerMessages.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Implements a message that is sent in response to FAutomationWorkerRunTests."));
			MetaData->SetValue(NewProp_Warnings, TEXT("ModuleRelativePath"), TEXT("Classes/AutomationWorkerMessages.h"));
			MetaData->SetValue(NewProp_TestName, TEXT("ModuleRelativePath"), TEXT("Classes/AutomationWorkerMessages.h"));
			MetaData->SetValue(NewProp_Success, TEXT("ModuleRelativePath"), TEXT("Classes/AutomationWorkerMessages.h"));
			MetaData->SetValue(NewProp_Logs, TEXT("ModuleRelativePath"), TEXT("Classes/AutomationWorkerMessages.h"));
			MetaData->SetValue(NewProp_ExecutionCount, TEXT("ModuleRelativePath"), TEXT("Classes/AutomationWorkerMessages.h"));
			MetaData->SetValue(NewProp_Errors, TEXT("ModuleRelativePath"), TEXT("Classes/AutomationWorkerMessages.h"));
			MetaData->SetValue(NewProp_Duration, TEXT("ModuleRelativePath"), TEXT("Classes/AutomationWorkerMessages.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FAutomationWorkerRunTestsReply_CRC() { return 2021099621U; }
	UScriptStruct* Z_Construct_UScriptStruct_FAutomationWorkerRunTests()
	{
		UPackage* Outer=Z_Construct_UPackage_AutomationMessages();
		extern uint32 Get_Z_Construct_UScriptStruct_FAutomationWorkerRunTests_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("AutomationWorkerRunTests"), sizeof(FAutomationWorkerRunTests), Get_Z_Construct_UScriptStruct_FAutomationWorkerRunTests_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("AutomationWorkerRunTests"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FAutomationWorkerRunTests>, EStructFlags(0x00000001));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bUseFullSizeScreenShots, FAutomationWorkerRunTests, bool);
			UProperty* NewProp_bUseFullSizeScreenShots = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bUseFullSizeScreenShots"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bUseFullSizeScreenShots, FAutomationWorkerRunTests), 0x0000000000000000, CPP_BOOL_PROPERTY_BITMASK(bUseFullSizeScreenShots, FAutomationWorkerRunTests), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bScreenshotsEnabled, FAutomationWorkerRunTests, bool);
			UProperty* NewProp_bScreenshotsEnabled = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bScreenshotsEnabled"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bScreenshotsEnabled, FAutomationWorkerRunTests), 0x0000000000000000, CPP_BOOL_PROPERTY_BITMASK(bScreenshotsEnabled, FAutomationWorkerRunTests), sizeof(bool), true);
			UProperty* NewProp_TestName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("TestName"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(TestName, FAutomationWorkerRunTests), 0x0000000000000000);
			UProperty* NewProp_RoleIndex = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("RoleIndex"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(RoleIndex, FAutomationWorkerRunTests), 0x0000000000000000);
			UProperty* NewProp_ExecutionCount = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ExecutionCount"), RF_Public|RF_Transient|RF_Native) UUInt32Property(CPP_PROPERTY_BASE(ExecutionCount, FAutomationWorkerRunTests), 0x0000000000000000);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/AutomationWorkerMessages.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Implements a message to request the running of automation tests on a worker."));
			MetaData->SetValue(NewProp_bUseFullSizeScreenShots, TEXT("ModuleRelativePath"), TEXT("Classes/AutomationWorkerMessages.h"));
			MetaData->SetValue(NewProp_bUseFullSizeScreenShots, TEXT("ToolTip"), TEXT("If true, we will not resize screen shots."));
			MetaData->SetValue(NewProp_bScreenshotsEnabled, TEXT("ModuleRelativePath"), TEXT("Classes/AutomationWorkerMessages.h"));
			MetaData->SetValue(NewProp_bScreenshotsEnabled, TEXT("ToolTip"), TEXT("If true, we will save out screenshots for tests that support them."));
			MetaData->SetValue(NewProp_TestName, TEXT("ModuleRelativePath"), TEXT("Classes/AutomationWorkerMessages.h"));
			MetaData->SetValue(NewProp_TestName, TEXT("ToolTip"), TEXT("Holds the name of the test to run."));
			MetaData->SetValue(NewProp_RoleIndex, TEXT("ModuleRelativePath"), TEXT("Classes/AutomationWorkerMessages.h"));
			MetaData->SetValue(NewProp_ExecutionCount, TEXT("ModuleRelativePath"), TEXT("Classes/AutomationWorkerMessages.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FAutomationWorkerRunTests_CRC() { return 657079951U; }
	UScriptStruct* Z_Construct_UScriptStruct_FAutomationWorkerRequestTestsReply()
	{
		UPackage* Outer=Z_Construct_UPackage_AutomationMessages();
		extern uint32 Get_Z_Construct_UScriptStruct_FAutomationWorkerRequestTestsReply_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("AutomationWorkerRequestTestsReply"), sizeof(FAutomationWorkerRequestTestsReply), Get_Z_Construct_UScriptStruct_FAutomationWorkerRequestTestsReply_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("AutomationWorkerRequestTestsReply"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FAutomationWorkerRequestTestsReply>, EStructFlags(0x00000001));
			UProperty* NewProp_TotalNumTests = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("TotalNumTests"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(TotalNumTests, FAutomationWorkerRequestTestsReply), 0x0000000000000000);
			UProperty* NewProp_TestInfo = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("TestInfo"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(TestInfo, FAutomationWorkerRequestTestsReply), 0x0000000000000000);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/AutomationWorkerMessages.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Implements a message that is sent in response to FAutomationWorkerRequestTests."));
			MetaData->SetValue(NewProp_TotalNumTests, TEXT("ModuleRelativePath"), TEXT("Classes/AutomationWorkerMessages.h"));
			MetaData->SetValue(NewProp_TotalNumTests, TEXT("ToolTip"), TEXT("Holds the total number of tests returned."));
			MetaData->SetValue(NewProp_TestInfo, TEXT("ModuleRelativePath"), TEXT("Classes/AutomationWorkerMessages.h"));
			MetaData->SetValue(NewProp_TestInfo, TEXT("ToolTip"), TEXT("Holds the test information serialized into a string."));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FAutomationWorkerRequestTestsReply_CRC() { return 1495568966U; }
	UScriptStruct* Z_Construct_UScriptStruct_FAutomationWorkerRequestTests()
	{
		UPackage* Outer=Z_Construct_UPackage_AutomationMessages();
		extern uint32 Get_Z_Construct_UScriptStruct_FAutomationWorkerRequestTests_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("AutomationWorkerRequestTests"), sizeof(FAutomationWorkerRequestTests), Get_Z_Construct_UScriptStruct_FAutomationWorkerRequestTests_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("AutomationWorkerRequestTests"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FAutomationWorkerRequestTests>, EStructFlags(0x00000001));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(VisualCommandletFilterOn, FAutomationWorkerRequestTests, bool);
			UProperty* NewProp_VisualCommandletFilterOn = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("VisualCommandletFilterOn"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(VisualCommandletFilterOn, FAutomationWorkerRequestTests), 0x0000000000000000, CPP_BOOL_PROPERTY_BITMASK(VisualCommandletFilterOn, FAutomationWorkerRequestTests), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(DeveloperDirectoryIncluded, FAutomationWorkerRequestTests, bool);
			UProperty* NewProp_DeveloperDirectoryIncluded = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("DeveloperDirectoryIncluded"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(DeveloperDirectoryIncluded, FAutomationWorkerRequestTests), 0x0000000000000000, CPP_BOOL_PROPERTY_BITMASK(DeveloperDirectoryIncluded, FAutomationWorkerRequestTests), sizeof(bool), true);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/AutomationWorkerMessages.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Implements a message for requesting available automation tests from a worker."));
			MetaData->SetValue(NewProp_VisualCommandletFilterOn, TEXT("ModuleRelativePath"), TEXT("Classes/AutomationWorkerMessages.h"));
			MetaData->SetValue(NewProp_VisualCommandletFilterOn, TEXT("ToolTip"), TEXT("Holds a flag indicating whether the visual commandlet filter is enabled."));
			MetaData->SetValue(NewProp_DeveloperDirectoryIncluded, TEXT("ModuleRelativePath"), TEXT("Classes/AutomationWorkerMessages.h"));
			MetaData->SetValue(NewProp_DeveloperDirectoryIncluded, TEXT("ToolTip"), TEXT("Holds a flag indicating whether the developer directory should be included."));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FAutomationWorkerRequestTests_CRC() { return 3990373237U; }
	UScriptStruct* Z_Construct_UScriptStruct_FAutomationWorkerPong()
	{
		UPackage* Outer=Z_Construct_UPackage_AutomationMessages();
		extern uint32 Get_Z_Construct_UScriptStruct_FAutomationWorkerPong_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("AutomationWorkerPong"), sizeof(FAutomationWorkerPong), Get_Z_Construct_UScriptStruct_FAutomationWorkerPong_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("AutomationWorkerPong"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FAutomationWorkerPong>, EStructFlags(0x00000001));
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/AutomationWorkerMessages.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FAutomationWorkerPong_CRC() { return 4231758907U; }
	UScriptStruct* Z_Construct_UScriptStruct_FAutomationWorkerResetTests()
	{
		UPackage* Outer=Z_Construct_UPackage_AutomationMessages();
		extern uint32 Get_Z_Construct_UScriptStruct_FAutomationWorkerResetTests_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("AutomationWorkerResetTests"), sizeof(FAutomationWorkerResetTests), Get_Z_Construct_UScriptStruct_FAutomationWorkerResetTests_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("AutomationWorkerResetTests"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FAutomationWorkerResetTests>, EStructFlags(0x00000001));
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/AutomationWorkerMessages.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FAutomationWorkerResetTests_CRC() { return 3463841184U; }
	UScriptStruct* Z_Construct_UScriptStruct_FAutomationWorkerPing()
	{
		UPackage* Outer=Z_Construct_UPackage_AutomationMessages();
		extern uint32 Get_Z_Construct_UScriptStruct_FAutomationWorkerPing_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("AutomationWorkerPing"), sizeof(FAutomationWorkerPing), Get_Z_Construct_UScriptStruct_FAutomationWorkerPing_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("AutomationWorkerPing"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FAutomationWorkerPing>, EStructFlags(0x00000001));
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/AutomationWorkerMessages.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FAutomationWorkerPing_CRC() { return 2236192493U; }
	UScriptStruct* Z_Construct_UScriptStruct_FAutomationWorkerWorkerOffline()
	{
		UPackage* Outer=Z_Construct_UPackage_AutomationMessages();
		extern uint32 Get_Z_Construct_UScriptStruct_FAutomationWorkerWorkerOffline_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("AutomationWorkerWorkerOffline"), sizeof(FAutomationWorkerWorkerOffline), Get_Z_Construct_UScriptStruct_FAutomationWorkerWorkerOffline_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("AutomationWorkerWorkerOffline"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FAutomationWorkerWorkerOffline>, EStructFlags(0x00000001));
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/AutomationWorkerMessages.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Implements a message that notifies automation controllers that a worker went off-line."));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FAutomationWorkerWorkerOffline_CRC() { return 1531727768U; }
	UScriptStruct* Z_Construct_UScriptStruct_FAutomationWorkerFindWorkersResponse()
	{
		UPackage* Outer=Z_Construct_UPackage_AutomationMessages();
		extern uint32 Get_Z_Construct_UScriptStruct_FAutomationWorkerFindWorkersResponse_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("AutomationWorkerFindWorkersResponse"), sizeof(FAutomationWorkerFindWorkersResponse), Get_Z_Construct_UScriptStruct_FAutomationWorkerFindWorkersResponse_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("AutomationWorkerFindWorkersResponse"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FAutomationWorkerFindWorkersResponse>, EStructFlags(0x00000001));
			UProperty* NewProp_SessionId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("SessionId"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(SessionId, FAutomationWorkerFindWorkersResponse), 0x0000000000000000, Z_Construct_UScriptStruct_FGuid());
			UProperty* NewProp_RenderModeName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("RenderModeName"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(RenderModeName, FAutomationWorkerFindWorkersResponse), 0x0000000000000000);
			UProperty* NewProp_RAMInGB = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("RAMInGB"), RF_Public|RF_Transient|RF_Native) UUInt32Property(CPP_PROPERTY_BASE(RAMInGB, FAutomationWorkerFindWorkersResponse), 0x0000000000000000);
			UProperty* NewProp_CPUModelName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("CPUModelName"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(CPUModelName, FAutomationWorkerFindWorkersResponse), 0x0000000000000000);
			UProperty* NewProp_GPUName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("GPUName"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(GPUName, FAutomationWorkerFindWorkersResponse), 0x0000000000000000);
			UProperty* NewProp_ModelName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ModelName"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(ModelName, FAutomationWorkerFindWorkersResponse), 0x0000000000000000);
			UProperty* NewProp_OSVersionName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("OSVersionName"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(OSVersionName, FAutomationWorkerFindWorkersResponse), 0x0000000000000000);
			UProperty* NewProp_Platform = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Platform"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(Platform, FAutomationWorkerFindWorkersResponse), 0x0000000000000000);
			UProperty* NewProp_InstanceName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("InstanceName"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(InstanceName, FAutomationWorkerFindWorkersResponse), 0x0000000000000000);
			UProperty* NewProp_DeviceName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("DeviceName"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(DeviceName, FAutomationWorkerFindWorkersResponse), 0x0000000000000000);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/AutomationWorkerMessages.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Implements a message that is sent in response to FAutomationWorkerFindWorkers."));
			MetaData->SetValue(NewProp_SessionId, TEXT("ModuleRelativePath"), TEXT("Classes/AutomationWorkerMessages.h"));
			MetaData->SetValue(NewProp_SessionId, TEXT("ToolTip"), TEXT("Holds the worker's application session identifier."));
			MetaData->SetValue(NewProp_RenderModeName, TEXT("ModuleRelativePath"), TEXT("Classes/AutomationWorkerMessages.h"));
			MetaData->SetValue(NewProp_RenderModeName, TEXT("ToolTip"), TEXT("Holds the name of the current render mode."));
			MetaData->SetValue(NewProp_RAMInGB, TEXT("ModuleRelativePath"), TEXT("Classes/AutomationWorkerMessages.h"));
			MetaData->SetValue(NewProp_RAMInGB, TEXT("ToolTip"), TEXT("Holds the amount of RAM this device has in gigabytes."));
			MetaData->SetValue(NewProp_CPUModelName, TEXT("ModuleRelativePath"), TEXT("Classes/AutomationWorkerMessages.h"));
			MetaData->SetValue(NewProp_CPUModelName, TEXT("ToolTip"), TEXT("Holds the name of the CPU model."));
			MetaData->SetValue(NewProp_GPUName, TEXT("ModuleRelativePath"), TEXT("Classes/AutomationWorkerMessages.h"));
			MetaData->SetValue(NewProp_GPUName, TEXT("ToolTip"), TEXT("Holds the name of the GPU."));
			MetaData->SetValue(NewProp_ModelName, TEXT("ModuleRelativePath"), TEXT("Classes/AutomationWorkerMessages.h"));
			MetaData->SetValue(NewProp_ModelName, TEXT("ToolTip"), TEXT("Holds the name of the device model."));
			MetaData->SetValue(NewProp_OSVersionName, TEXT("ModuleRelativePath"), TEXT("Classes/AutomationWorkerMessages.h"));
			MetaData->SetValue(NewProp_OSVersionName, TEXT("ToolTip"), TEXT("Holds the name of the operating system version."));
			MetaData->SetValue(NewProp_Platform, TEXT("ModuleRelativePath"), TEXT("Classes/AutomationWorkerMessages.h"));
			MetaData->SetValue(NewProp_Platform, TEXT("ToolTip"), TEXT("Holds the name of the platform that the worker is running on."));
			MetaData->SetValue(NewProp_InstanceName, TEXT("ModuleRelativePath"), TEXT("Classes/AutomationWorkerMessages.h"));
			MetaData->SetValue(NewProp_InstanceName, TEXT("ToolTip"), TEXT("Holds the name of the worker's application instance."));
			MetaData->SetValue(NewProp_DeviceName, TEXT("ModuleRelativePath"), TEXT("Classes/AutomationWorkerMessages.h"));
			MetaData->SetValue(NewProp_DeviceName, TEXT("ToolTip"), TEXT("Holds the name of the device that the worker is running on."));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FAutomationWorkerFindWorkersResponse_CRC() { return 1858590679U; }
	UScriptStruct* Z_Construct_UScriptStruct_FAutomationWorkerFindWorkers()
	{
		UPackage* Outer=Z_Construct_UPackage_AutomationMessages();
		extern uint32 Get_Z_Construct_UScriptStruct_FAutomationWorkerFindWorkers_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("AutomationWorkerFindWorkers"), sizeof(FAutomationWorkerFindWorkers), Get_Z_Construct_UScriptStruct_FAutomationWorkerFindWorkers_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("AutomationWorkerFindWorkers"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FAutomationWorkerFindWorkers>, EStructFlags(0x00000001));
			UProperty* NewProp_SessionId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("SessionId"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(SessionId, FAutomationWorkerFindWorkers), 0x0000000000000000, Z_Construct_UScriptStruct_FGuid());
			UProperty* NewProp_ProcessName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ProcessName"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(ProcessName, FAutomationWorkerFindWorkers), 0x0000000000000000);
			UProperty* NewProp_GameName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("GameName"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(GameName, FAutomationWorkerFindWorkers), 0x0000000000000000);
			UProperty* NewProp_Changelist = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Changelist"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(Changelist, FAutomationWorkerFindWorkers), 0x0000000000000000);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/AutomationWorkerMessages.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Implements a message that is published to find automation workers."));
			MetaData->SetValue(NewProp_SessionId, TEXT("ModuleRelativePath"), TEXT("Classes/AutomationWorkerMessages.h"));
			MetaData->SetValue(NewProp_SessionId, TEXT("ToolTip"), TEXT("Holds the session identifier to find workers for."));
			MetaData->SetValue(NewProp_ProcessName, TEXT("ModuleRelativePath"), TEXT("Classes/AutomationWorkerMessages.h"));
			MetaData->SetValue(NewProp_ProcessName, TEXT("ToolTip"), TEXT("The name of the process."));
			MetaData->SetValue(NewProp_GameName, TEXT("ModuleRelativePath"), TEXT("Classes/AutomationWorkerMessages.h"));
			MetaData->SetValue(NewProp_GameName, TEXT("ToolTip"), TEXT("The name of the game."));
			MetaData->SetValue(NewProp_Changelist, TEXT("ModuleRelativePath"), TEXT("Classes/AutomationWorkerMessages.h"));
			MetaData->SetValue(NewProp_Changelist, TEXT("ToolTip"), TEXT("Holds the change list number to find workers for."));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FAutomationWorkerFindWorkers_CRC() { return 3420057085U; }
	UPackage* Z_Construct_UPackage_AutomationMessages()
	{
		static UPackage* ReturnPackage = NULL;
		if (!ReturnPackage)
		{
			ReturnPackage = CastChecked<UPackage>(StaticFindObjectFast(UPackage::StaticClass(), NULL, FName(TEXT("/Script/AutomationMessages")), false, false));
			ReturnPackage->SetPackageFlags(PKG_CompiledIn | 0x00000000);
			FGuid Guid;
			Guid.A = 0x277EA489;
			Guid.B = 0x9C388EFB;
			Guid.C = 0x00000000;
			Guid.D = 0x00000000;
			ReturnPackage->SetGuid(Guid);

		}
		return ReturnPackage;
	}
#endif

PRAGMA_ENABLE_DEPRECATION_WARNINGS
