// Copyright 1998-2015 Epic Games, Inc. All Rights Reserved.
/*===========================================================================
	C++ class header boilerplate exported from UnrealHeaderTool.
	This is automatically generated by the tools.
	DO NOT modify this manually! Edit the corresponding .h files instead!
===========================================================================*/

#include "ObjectBase.h"

PRAGMA_DISABLE_DEPRECATION_WARNINGS
class UVertexAnimation;
class UAnimationAsset;
struct FVector;
#ifdef ENGINE_AnimSingleNodeInstance_generated_h
#error "AnimSingleNodeInstance.generated.h already included, missing '#pragma once' in AnimSingleNodeInstance.h"
#endif
#define ENGINE_AnimSingleNodeInstance_generated_h

#define Engine_Source_Runtime_Engine_Classes_Animation_AnimSingleNodeInstance_h_13_DELEGATE \
static inline void FPostEvaluateAnimEvent_DelegateWrapper(const FScriptDelegate& PostEvaluateAnimEvent) \
{ \
	PostEvaluateAnimEvent.ProcessDelegate<UObject>(NULL); \
}




#define Engine_Source_Runtime_Engine_Classes_Animation_AnimSingleNodeInstance_h_18_RPC_WRAPPERS \
 \
	DECLARE_FUNCTION(execSetVertexAnimation) \
	{ \
		P_GET_OBJECT(UVertexAnimation,Z_Param_NewVertexAnim); \
		P_GET_UBOOL(Z_Param_bIsLooping); \
		P_GET_PROPERTY(UFloatProperty,Z_Param_InPlayRate); \
		P_FINISH; \
		this->SetVertexAnimation(Z_Param_NewVertexAnim,Z_Param_bIsLooping,Z_Param_InPlayRate); \
	} \
 \
	DECLARE_FUNCTION(execSetAnimationAsset) \
	{ \
		P_GET_OBJECT(UAnimationAsset,Z_Param_NewAsset); \
		P_GET_UBOOL(Z_Param_bIsLooping); \
		P_GET_PROPERTY(UFloatProperty,Z_Param_InPlayRate); \
		P_FINISH; \
		this->SetAnimationAsset(Z_Param_NewAsset,Z_Param_bIsLooping,Z_Param_InPlayRate); \
	} \
 \
	DECLARE_FUNCTION(execStopAnim) \
	{ \
		P_FINISH; \
		this->StopAnim(); \
	} \
 \
	DECLARE_FUNCTION(execPlayAnim) \
	{ \
		P_GET_UBOOL(Z_Param_bIsLooping); \
		P_GET_PROPERTY(UFloatProperty,Z_Param_InPlayRate); \
		P_GET_PROPERTY(UFloatProperty,Z_Param_InStartPosition); \
		P_FINISH; \
		this->PlayAnim(Z_Param_bIsLooping,Z_Param_InPlayRate,Z_Param_InStartPosition); \
	} \
 \
	DECLARE_FUNCTION(execGetLength) \
	{ \
		P_FINISH; \
		*(float*)Z_Param__Result=this->GetLength(); \
	} \
 \
	DECLARE_FUNCTION(execSetPlaying) \
	{ \
		P_GET_UBOOL(Z_Param_bIsPlaying); \
		P_FINISH; \
		this->SetPlaying(Z_Param_bIsPlaying); \
	} \
 \
	DECLARE_FUNCTION(execSetBlendSpaceInput) \
	{ \
		P_GET_STRUCT_REF(FVector,Z_Param_Out_InBlendInput); \
		P_FINISH; \
		this->SetBlendSpaceInput(Z_Param_Out_InBlendInput); \
	} \
 \
	DECLARE_FUNCTION(execSetPosition) \
	{ \
		P_GET_PROPERTY(UFloatProperty,Z_Param_InPosition); \
		P_GET_UBOOL(Z_Param_bFireNotifies); \
		P_FINISH; \
		this->SetPosition(Z_Param_InPosition,Z_Param_bFireNotifies); \
	} \
 \
	DECLARE_FUNCTION(execSetReverse) \
	{ \
		P_GET_UBOOL(Z_Param_bInReverse); \
		P_FINISH; \
		this->SetReverse(Z_Param_bInReverse); \
	} \
 \
	DECLARE_FUNCTION(execSetPlayRate) \
	{ \
		P_GET_PROPERTY(UFloatProperty,Z_Param_InPlayRate); \
		P_FINISH; \
		this->SetPlayRate(Z_Param_InPlayRate); \
	} \
 \
	DECLARE_FUNCTION(execSetLooping) \
	{ \
		P_GET_UBOOL(Z_Param_bIsLooping); \
		P_FINISH; \
		this->SetLooping(Z_Param_bIsLooping); \
	}


#define Engine_Source_Runtime_Engine_Classes_Animation_AnimSingleNodeInstance_h_18_RPC_WRAPPERS_NO_PURE_DECLS \
 \
	DECLARE_FUNCTION(execSetVertexAnimation) \
	{ \
		P_GET_OBJECT(UVertexAnimation,Z_Param_NewVertexAnim); \
		P_GET_UBOOL(Z_Param_bIsLooping); \
		P_GET_PROPERTY(UFloatProperty,Z_Param_InPlayRate); \
		P_FINISH; \
		this->SetVertexAnimation(Z_Param_NewVertexAnim,Z_Param_bIsLooping,Z_Param_InPlayRate); \
	} \
 \
	DECLARE_FUNCTION(execSetAnimationAsset) \
	{ \
		P_GET_OBJECT(UAnimationAsset,Z_Param_NewAsset); \
		P_GET_UBOOL(Z_Param_bIsLooping); \
		P_GET_PROPERTY(UFloatProperty,Z_Param_InPlayRate); \
		P_FINISH; \
		this->SetAnimationAsset(Z_Param_NewAsset,Z_Param_bIsLooping,Z_Param_InPlayRate); \
	} \
 \
	DECLARE_FUNCTION(execStopAnim) \
	{ \
		P_FINISH; \
		this->StopAnim(); \
	} \
 \
	DECLARE_FUNCTION(execPlayAnim) \
	{ \
		P_GET_UBOOL(Z_Param_bIsLooping); \
		P_GET_PROPERTY(UFloatProperty,Z_Param_InPlayRate); \
		P_GET_PROPERTY(UFloatProperty,Z_Param_InStartPosition); \
		P_FINISH; \
		this->PlayAnim(Z_Param_bIsLooping,Z_Param_InPlayRate,Z_Param_InStartPosition); \
	} \
 \
	DECLARE_FUNCTION(execGetLength) \
	{ \
		P_FINISH; \
		*(float*)Z_Param__Result=this->GetLength(); \
	} \
 \
	DECLARE_FUNCTION(execSetPlaying) \
	{ \
		P_GET_UBOOL(Z_Param_bIsPlaying); \
		P_FINISH; \
		this->SetPlaying(Z_Param_bIsPlaying); \
	} \
 \
	DECLARE_FUNCTION(execSetBlendSpaceInput) \
	{ \
		P_GET_STRUCT_REF(FVector,Z_Param_Out_InBlendInput); \
		P_FINISH; \
		this->SetBlendSpaceInput(Z_Param_Out_InBlendInput); \
	} \
 \
	DECLARE_FUNCTION(execSetPosition) \
	{ \
		P_GET_PROPERTY(UFloatProperty,Z_Param_InPosition); \
		P_GET_UBOOL(Z_Param_bFireNotifies); \
		P_FINISH; \
		this->SetPosition(Z_Param_InPosition,Z_Param_bFireNotifies); \
	} \
 \
	DECLARE_FUNCTION(execSetReverse) \
	{ \
		P_GET_UBOOL(Z_Param_bInReverse); \
		P_FINISH; \
		this->SetReverse(Z_Param_bInReverse); \
	} \
 \
	DECLARE_FUNCTION(execSetPlayRate) \
	{ \
		P_GET_PROPERTY(UFloatProperty,Z_Param_InPlayRate); \
		P_FINISH; \
		this->SetPlayRate(Z_Param_InPlayRate); \
	} \
 \
	DECLARE_FUNCTION(execSetLooping) \
	{ \
		P_GET_UBOOL(Z_Param_bIsLooping); \
		P_FINISH; \
		this->SetLooping(Z_Param_bIsLooping); \
	}


#define Engine_Source_Runtime_Engine_Classes_Animation_AnimSingleNodeInstance_h_18_INCLASS_NO_PURE_DECLS \
	private: \
	static void StaticRegisterNativesUAnimSingleNodeInstance(); \
	friend ENGINE_API class UClass* Z_Construct_UClass_UAnimSingleNodeInstance(); \
	public: \
	DECLARE_CLASS(UAnimSingleNodeInstance, UAnimInstance, COMPILED_IN_FLAGS(0 | CLASS_Transient), 0, Engine, NO_API) \
	DECLARE_SERIALIZER(UAnimSingleNodeInstance) \
	/** Indicates whether the class is compiled into the engine */    enum {IsIntrinsic=COMPILED_IN_INTRINSIC}; \
	virtual UObject* _getUObject() const override { return const_cast<UAnimSingleNodeInstance*>(this); }


#define Engine_Source_Runtime_Engine_Classes_Animation_AnimSingleNodeInstance_h_18_INCLASS \
	private: \
	static void StaticRegisterNativesUAnimSingleNodeInstance(); \
	friend ENGINE_API class UClass* Z_Construct_UClass_UAnimSingleNodeInstance(); \
	public: \
	DECLARE_CLASS(UAnimSingleNodeInstance, UAnimInstance, COMPILED_IN_FLAGS(0 | CLASS_Transient), 0, Engine, NO_API) \
	DECLARE_SERIALIZER(UAnimSingleNodeInstance) \
	/** Indicates whether the class is compiled into the engine */    enum {IsIntrinsic=COMPILED_IN_INTRINSIC}; \
	virtual UObject* _getUObject() const override { return const_cast<UAnimSingleNodeInstance*>(this); }


#define Engine_Source_Runtime_Engine_Classes_Animation_AnimSingleNodeInstance_h_18_STANDARD_CONSTRUCTORS \
	/** Standard constructor, called after all reflected properties have been initialized */ \
	NO_API UAnimSingleNodeInstance(const FObjectInitializer& ObjectInitializer = FObjectInitializer::Get()); \
	DEFINE_DEFAULT_OBJECT_INITIALIZER_CONSTRUCTOR_CALL(UAnimSingleNodeInstance) \
	DECLARE_VTABLE_PTR_HELPER_CTOR(NO_API, UAnimSingleNodeInstance); \
DEFINE_VTABLE_PTR_HELPER_CTOR_CALLER(UAnimSingleNodeInstance); \
private: \
	/** Private copy-constructor, should never be used */ \
	NO_API UAnimSingleNodeInstance(const UAnimSingleNodeInstance& InCopy); \
public:


#define Engine_Source_Runtime_Engine_Classes_Animation_AnimSingleNodeInstance_h_18_ENHANCED_CONSTRUCTORS \
	/** Standard constructor, called after all reflected properties have been initialized */ \
	NO_API UAnimSingleNodeInstance(const FObjectInitializer& ObjectInitializer = FObjectInitializer::Get()) : Super(ObjectInitializer) { }; \
private: \
	/** Private copy-constructor, should never be used */ \
	NO_API UAnimSingleNodeInstance(const UAnimSingleNodeInstance& InCopy); \
public: \
	DECLARE_VTABLE_PTR_HELPER_CTOR(NO_API, UAnimSingleNodeInstance); \
DEFINE_VTABLE_PTR_HELPER_CTOR_CALLER(UAnimSingleNodeInstance); \
	DEFINE_DEFAULT_OBJECT_INITIALIZER_CONSTRUCTOR_CALL(UAnimSingleNodeInstance)


#define Engine_Source_Runtime_Engine_Classes_Animation_AnimSingleNodeInstance_h_15_PROLOG
#define Engine_Source_Runtime_Engine_Classes_Animation_AnimSingleNodeInstance_h_18_GENERATED_BODY_LEGACY \
PRAGMA_DISABLE_DEPRECATION_WARNINGS \
public: \
	Engine_Source_Runtime_Engine_Classes_Animation_AnimSingleNodeInstance_h_18_RPC_WRAPPERS \
	Engine_Source_Runtime_Engine_Classes_Animation_AnimSingleNodeInstance_h_18_INCLASS \
	Engine_Source_Runtime_Engine_Classes_Animation_AnimSingleNodeInstance_h_18_STANDARD_CONSTRUCTORS \
public: \
PRAGMA_ENABLE_DEPRECATION_WARNINGS


#define Engine_Source_Runtime_Engine_Classes_Animation_AnimSingleNodeInstance_h_18_GENERATED_BODY \
PRAGMA_DISABLE_DEPRECATION_WARNINGS \
public: \
	Engine_Source_Runtime_Engine_Classes_Animation_AnimSingleNodeInstance_h_18_RPC_WRAPPERS_NO_PURE_DECLS \
	Engine_Source_Runtime_Engine_Classes_Animation_AnimSingleNodeInstance_h_18_INCLASS_NO_PURE_DECLS \
	Engine_Source_Runtime_Engine_Classes_Animation_AnimSingleNodeInstance_h_18_ENHANCED_CONSTRUCTORS \
static_assert(false, "Unknown access specifier for GENERATED_BODY() macro in class AnimSingleNodeInstance."); \
PRAGMA_ENABLE_DEPRECATION_WARNINGS


#undef CURRENT_FILE_ID
#define CURRENT_FILE_ID Engine_Source_Runtime_Engine_Classes_Animation_AnimSingleNodeInstance_h


PRAGMA_ENABLE_DEPRECATION_WARNINGS
