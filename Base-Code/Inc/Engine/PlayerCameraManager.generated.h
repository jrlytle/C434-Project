// Copyright 1998-2015 Epic Games, Inc. All Rights Reserved.
/*===========================================================================
	C++ class header boilerplate exported from UnrealHeaderTool.
	This is automatically generated by the tools.
	DO NOT modify this manually! Edit the corresponding .h files instead!
===========================================================================*/

#include "ObjectBase.h"

PRAGMA_DISABLE_DEPRECATION_WARNINGS
class UCameraAnimInst;
class UCameraAnim;
struct FRotator;
struct FLinearColor;
class UCameraShake;
class AEmitterCameraLensEffectBase;
struct FVector;
class UCameraModifier;
class APlayerController;
class AActor;
#ifdef ENGINE_PlayerCameraManager_generated_h
#error "PlayerCameraManager.generated.h already included, missing '#pragma once' in PlayerCameraManager.h"
#endif
#define ENGINE_PlayerCameraManager_generated_h

#define Engine_Source_Runtime_Engine_Classes_Camera_PlayerCameraManager_h_96_GENERATED_BODY \
	friend ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FViewTargetTransitionParams(); \
	ENGINE_API static class UScriptStruct* StaticStruct();


#define Engine_Source_Runtime_Engine_Classes_Camera_PlayerCameraManager_h_57_GENERATED_BODY \
	friend ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FTViewTarget(); \
	static class UScriptStruct* StaticStruct();


#define Engine_Source_Runtime_Engine_Classes_Camera_PlayerCameraManager_h_37_GENERATED_BODY \
	friend ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FCameraCacheEntry(); \
	ENGINE_API static class UScriptStruct* StaticStruct();


#define Engine_Source_Runtime_Engine_Classes_Camera_PlayerCameraManager_h_166_RPC_WRAPPERS \
 \
	DECLARE_FUNCTION(execStopAllCameraAnims) \
	{ \
		P_GET_UBOOL(Z_Param_bImmediate); \
		P_FINISH; \
		this->StopAllCameraAnims(Z_Param_bImmediate); \
	} \
 \
	DECLARE_FUNCTION(execStopCameraAnimInst) \
	{ \
		P_GET_OBJECT(UCameraAnimInst,Z_Param_AnimInst); \
		P_GET_UBOOL(Z_Param_bImmediate); \
		P_FINISH; \
		this->StopCameraAnimInst(Z_Param_AnimInst,Z_Param_bImmediate); \
	} \
 \
	DECLARE_FUNCTION(execStopAllInstancesOfCameraAnim) \
	{ \
		P_GET_OBJECT(UCameraAnim,Z_Param_Anim); \
		P_GET_UBOOL(Z_Param_bImmediate); \
		P_FINISH; \
		this->StopAllInstancesOfCameraAnim(Z_Param_Anim,Z_Param_bImmediate); \
	} \
 \
	DECLARE_FUNCTION(execPlayCameraAnim) \
	{ \
		P_GET_OBJECT(UCameraAnim,Z_Param_Anim); \
		P_GET_PROPERTY(UFloatProperty,Z_Param_Rate); \
		P_GET_PROPERTY(UFloatProperty,Z_Param_Scale); \
		P_GET_PROPERTY(UFloatProperty,Z_Param_BlendInTime); \
		P_GET_PROPERTY(UFloatProperty,Z_Param_BlendOutTime); \
		P_GET_UBOOL(Z_Param_bLoop); \
		P_GET_UBOOL(Z_Param_bRandomStartTime); \
		P_GET_PROPERTY(UFloatProperty,Z_Param_Duration); \
		P_GET_PROPERTY(UByteProperty,Z_Param_PlaySpace); \
		P_GET_STRUCT(FRotator,Z_Param_UserPlaySpaceRot); \
		P_FINISH; \
		*(UCameraAnimInst**)Z_Param__Result=this->PlayCameraAnim(Z_Param_Anim,Z_Param_Rate,Z_Param_Scale,Z_Param_BlendInTime,Z_Param_BlendOutTime,Z_Param_bLoop,Z_Param_bRandomStartTime,Z_Param_Duration,ECameraAnimPlaySpace::Type(Z_Param_PlaySpace),Z_Param_UserPlaySpaceRot); \
	} \
 \
	DECLARE_FUNCTION(execSetManualCameraFade) \
	{ \
		P_GET_PROPERTY(UFloatProperty,Z_Param_InFadeAmount); \
		P_GET_STRUCT(FLinearColor,Z_Param_Color); \
		P_GET_UBOOL(Z_Param_bInFadeAudio); \
		P_FINISH; \
		this->SetManualCameraFade(Z_Param_InFadeAmount,Z_Param_Color,Z_Param_bInFadeAudio); \
	} \
 \
	DECLARE_FUNCTION(execStopCameraFade) \
	{ \
		P_FINISH; \
		this->StopCameraFade(); \
	} \
 \
	DECLARE_FUNCTION(execStartCameraFade) \
	{ \
		P_GET_PROPERTY(UFloatProperty,Z_Param_FromAlpha); \
		P_GET_PROPERTY(UFloatProperty,Z_Param_ToAlpha); \
		P_GET_PROPERTY(UFloatProperty,Z_Param_Duration); \
		P_GET_STRUCT(FLinearColor,Z_Param_Color); \
		P_GET_UBOOL(Z_Param_bShouldFadeAudio); \
		P_GET_UBOOL(Z_Param_bHoldWhenFinished); \
		P_FINISH; \
		this->StartCameraFade(Z_Param_FromAlpha,Z_Param_ToAlpha,Z_Param_Duration,Z_Param_Color,Z_Param_bShouldFadeAudio,Z_Param_bHoldWhenFinished); \
	} \
 \
	DECLARE_FUNCTION(execStopAllCameraShakes) \
	{ \
		P_FINISH; \
		this->StopAllCameraShakes(); \
	} \
 \
	DECLARE_FUNCTION(execStopAllInstancesOfCameraShake) \
	{ \
		P_GET_OBJECT(UClass,Z_Param_Shake); \
		P_FINISH; \
		this->StopAllInstancesOfCameraShake(Z_Param_Shake); \
	} \
 \
	DECLARE_FUNCTION(execStopCameraShake) \
	{ \
		P_GET_OBJECT(UCameraShake,Z_Param_ShakeInstance); \
		P_FINISH; \
		this->StopCameraShake(Z_Param_ShakeInstance); \
	} \
 \
	DECLARE_FUNCTION(execPlayCameraShake) \
	{ \
		P_GET_OBJECT(UClass,Z_Param_ShakeClass); \
		P_GET_PROPERTY(UFloatProperty,Z_Param_Scale); \
		P_GET_PROPERTY(UByteProperty,Z_Param_PlaySpace); \
		P_GET_STRUCT(FRotator,Z_Param_UserPlaySpaceRot); \
		P_FINISH; \
		*(UCameraShake**)Z_Param__Result=this->PlayCameraShake(Z_Param_ShakeClass,Z_Param_Scale,ECameraAnimPlaySpace::Type(Z_Param_PlaySpace),Z_Param_UserPlaySpaceRot); \
	} \
 \
	DECLARE_FUNCTION(execClearCameraLensEffects) \
	{ \
		P_FINISH; \
		this->ClearCameraLensEffects(); \
	} \
 \
	DECLARE_FUNCTION(execRemoveCameraLensEffect) \
	{ \
		P_GET_OBJECT(AEmitterCameraLensEffectBase,Z_Param_Emitter); \
		P_FINISH; \
		this->RemoveCameraLensEffect(Z_Param_Emitter); \
	} \
 \
	DECLARE_FUNCTION(execAddCameraLensEffect) \
	{ \
		P_GET_OBJECT(UClass,Z_Param_LensEffectEmitterClass); \
		P_FINISH; \
		*(AEmitterCameraLensEffectBase**)Z_Param__Result=this->AddCameraLensEffect(Z_Param_LensEffectEmitterClass); \
	} \
 \
	DECLARE_FUNCTION(execGetCameraLocation) \
	{ \
		P_FINISH; \
		*(FVector*)Z_Param__Result=this->GetCameraLocation(); \
	} \
 \
	DECLARE_FUNCTION(execGetCameraRotation) \
	{ \
		P_FINISH; \
		*(FRotator*)Z_Param__Result=this->GetCameraRotation(); \
	} \
 \
	DECLARE_FUNCTION(execGetFOVAngle) \
	{ \
		P_FINISH; \
		*(float*)Z_Param__Result=this->GetFOVAngle(); \
	} \
 \
	DECLARE_FUNCTION(execRemoveCameraModifier) \
	{ \
		P_GET_OBJECT(UCameraModifier,Z_Param_ModifierToRemove); \
		P_FINISH; \
		*(bool*)Z_Param__Result=this->RemoveCameraModifier(Z_Param_ModifierToRemove); \
	} \
 \
	DECLARE_FUNCTION(execFindCameraModifierByClass) \
	{ \
		P_GET_OBJECT(UClass,Z_Param_ModifierClass); \
		P_FINISH; \
		*(UCameraModifier**)Z_Param__Result=this->FindCameraModifierByClass(Z_Param_ModifierClass); \
	} \
 \
	DECLARE_FUNCTION(execAddNewCameraModifier) \
	{ \
		P_GET_OBJECT(UClass,Z_Param_ModifierClass); \
		P_FINISH; \
		*(UCameraModifier**)Z_Param__Result=this->AddNewCameraModifier(Z_Param_ModifierClass); \
	} \
 \
	DECLARE_FUNCTION(execGetOwningPlayerController) \
	{ \
		P_FINISH; \
		*(APlayerController**)Z_Param__Result=this->GetOwningPlayerController(); \
	}


#define Engine_Source_Runtime_Engine_Classes_Camera_PlayerCameraManager_h_166_RPC_WRAPPERS_NO_PURE_DECLS \
 \
	DECLARE_FUNCTION(execStopAllCameraAnims) \
	{ \
		P_GET_UBOOL(Z_Param_bImmediate); \
		P_FINISH; \
		this->StopAllCameraAnims(Z_Param_bImmediate); \
	} \
 \
	DECLARE_FUNCTION(execStopCameraAnimInst) \
	{ \
		P_GET_OBJECT(UCameraAnimInst,Z_Param_AnimInst); \
		P_GET_UBOOL(Z_Param_bImmediate); \
		P_FINISH; \
		this->StopCameraAnimInst(Z_Param_AnimInst,Z_Param_bImmediate); \
	} \
 \
	DECLARE_FUNCTION(execStopAllInstancesOfCameraAnim) \
	{ \
		P_GET_OBJECT(UCameraAnim,Z_Param_Anim); \
		P_GET_UBOOL(Z_Param_bImmediate); \
		P_FINISH; \
		this->StopAllInstancesOfCameraAnim(Z_Param_Anim,Z_Param_bImmediate); \
	} \
 \
	DECLARE_FUNCTION(execPlayCameraAnim) \
	{ \
		P_GET_OBJECT(UCameraAnim,Z_Param_Anim); \
		P_GET_PROPERTY(UFloatProperty,Z_Param_Rate); \
		P_GET_PROPERTY(UFloatProperty,Z_Param_Scale); \
		P_GET_PROPERTY(UFloatProperty,Z_Param_BlendInTime); \
		P_GET_PROPERTY(UFloatProperty,Z_Param_BlendOutTime); \
		P_GET_UBOOL(Z_Param_bLoop); \
		P_GET_UBOOL(Z_Param_bRandomStartTime); \
		P_GET_PROPERTY(UFloatProperty,Z_Param_Duration); \
		P_GET_PROPERTY(UByteProperty,Z_Param_PlaySpace); \
		P_GET_STRUCT(FRotator,Z_Param_UserPlaySpaceRot); \
		P_FINISH; \
		*(UCameraAnimInst**)Z_Param__Result=this->PlayCameraAnim(Z_Param_Anim,Z_Param_Rate,Z_Param_Scale,Z_Param_BlendInTime,Z_Param_BlendOutTime,Z_Param_bLoop,Z_Param_bRandomStartTime,Z_Param_Duration,ECameraAnimPlaySpace::Type(Z_Param_PlaySpace),Z_Param_UserPlaySpaceRot); \
	} \
 \
	DECLARE_FUNCTION(execSetManualCameraFade) \
	{ \
		P_GET_PROPERTY(UFloatProperty,Z_Param_InFadeAmount); \
		P_GET_STRUCT(FLinearColor,Z_Param_Color); \
		P_GET_UBOOL(Z_Param_bInFadeAudio); \
		P_FINISH; \
		this->SetManualCameraFade(Z_Param_InFadeAmount,Z_Param_Color,Z_Param_bInFadeAudio); \
	} \
 \
	DECLARE_FUNCTION(execStopCameraFade) \
	{ \
		P_FINISH; \
		this->StopCameraFade(); \
	} \
 \
	DECLARE_FUNCTION(execStartCameraFade) \
	{ \
		P_GET_PROPERTY(UFloatProperty,Z_Param_FromAlpha); \
		P_GET_PROPERTY(UFloatProperty,Z_Param_ToAlpha); \
		P_GET_PROPERTY(UFloatProperty,Z_Param_Duration); \
		P_GET_STRUCT(FLinearColor,Z_Param_Color); \
		P_GET_UBOOL(Z_Param_bShouldFadeAudio); \
		P_GET_UBOOL(Z_Param_bHoldWhenFinished); \
		P_FINISH; \
		this->StartCameraFade(Z_Param_FromAlpha,Z_Param_ToAlpha,Z_Param_Duration,Z_Param_Color,Z_Param_bShouldFadeAudio,Z_Param_bHoldWhenFinished); \
	} \
 \
	DECLARE_FUNCTION(execStopAllCameraShakes) \
	{ \
		P_FINISH; \
		this->StopAllCameraShakes(); \
	} \
 \
	DECLARE_FUNCTION(execStopAllInstancesOfCameraShake) \
	{ \
		P_GET_OBJECT(UClass,Z_Param_Shake); \
		P_FINISH; \
		this->StopAllInstancesOfCameraShake(Z_Param_Shake); \
	} \
 \
	DECLARE_FUNCTION(execStopCameraShake) \
	{ \
		P_GET_OBJECT(UCameraShake,Z_Param_ShakeInstance); \
		P_FINISH; \
		this->StopCameraShake(Z_Param_ShakeInstance); \
	} \
 \
	DECLARE_FUNCTION(execPlayCameraShake) \
	{ \
		P_GET_OBJECT(UClass,Z_Param_ShakeClass); \
		P_GET_PROPERTY(UFloatProperty,Z_Param_Scale); \
		P_GET_PROPERTY(UByteProperty,Z_Param_PlaySpace); \
		P_GET_STRUCT(FRotator,Z_Param_UserPlaySpaceRot); \
		P_FINISH; \
		*(UCameraShake**)Z_Param__Result=this->PlayCameraShake(Z_Param_ShakeClass,Z_Param_Scale,ECameraAnimPlaySpace::Type(Z_Param_PlaySpace),Z_Param_UserPlaySpaceRot); \
	} \
 \
	DECLARE_FUNCTION(execClearCameraLensEffects) \
	{ \
		P_FINISH; \
		this->ClearCameraLensEffects(); \
	} \
 \
	DECLARE_FUNCTION(execRemoveCameraLensEffect) \
	{ \
		P_GET_OBJECT(AEmitterCameraLensEffectBase,Z_Param_Emitter); \
		P_FINISH; \
		this->RemoveCameraLensEffect(Z_Param_Emitter); \
	} \
 \
	DECLARE_FUNCTION(execAddCameraLensEffect) \
	{ \
		P_GET_OBJECT(UClass,Z_Param_LensEffectEmitterClass); \
		P_FINISH; \
		*(AEmitterCameraLensEffectBase**)Z_Param__Result=this->AddCameraLensEffect(Z_Param_LensEffectEmitterClass); \
	} \
 \
	DECLARE_FUNCTION(execGetCameraLocation) \
	{ \
		P_FINISH; \
		*(FVector*)Z_Param__Result=this->GetCameraLocation(); \
	} \
 \
	DECLARE_FUNCTION(execGetCameraRotation) \
	{ \
		P_FINISH; \
		*(FRotator*)Z_Param__Result=this->GetCameraRotation(); \
	} \
 \
	DECLARE_FUNCTION(execGetFOVAngle) \
	{ \
		P_FINISH; \
		*(float*)Z_Param__Result=this->GetFOVAngle(); \
	} \
 \
	DECLARE_FUNCTION(execRemoveCameraModifier) \
	{ \
		P_GET_OBJECT(UCameraModifier,Z_Param_ModifierToRemove); \
		P_FINISH; \
		*(bool*)Z_Param__Result=this->RemoveCameraModifier(Z_Param_ModifierToRemove); \
	} \
 \
	DECLARE_FUNCTION(execFindCameraModifierByClass) \
	{ \
		P_GET_OBJECT(UClass,Z_Param_ModifierClass); \
		P_FINISH; \
		*(UCameraModifier**)Z_Param__Result=this->FindCameraModifierByClass(Z_Param_ModifierClass); \
	} \
 \
	DECLARE_FUNCTION(execAddNewCameraModifier) \
	{ \
		P_GET_OBJECT(UClass,Z_Param_ModifierClass); \
		P_FINISH; \
		*(UCameraModifier**)Z_Param__Result=this->AddNewCameraModifier(Z_Param_ModifierClass); \
	} \
 \
	DECLARE_FUNCTION(execGetOwningPlayerController) \
	{ \
		P_FINISH; \
		*(APlayerController**)Z_Param__Result=this->GetOwningPlayerController(); \
	}


#define Engine_Source_Runtime_Engine_Classes_Camera_PlayerCameraManager_h_166_EVENT_PARMS \
	struct PlayerCameraManager_eventBlueprintUpdateCamera_Parms \
	{ \
		AActor* CameraTarget; \
		FVector NewCameraLocation; \
		FRotator NewCameraRotation; \
		float NewCameraFOV; \
		bool ReturnValue; \
 \
		/** Constructor, intializes return property only **/ \
		PlayerCameraManager_eventBlueprintUpdateCamera_Parms() \
			: ReturnValue(false) \
		{ \
		} \
	};


extern ENGINE_API  FName ENGINE_BlueprintUpdateCamera;
#define Engine_Source_Runtime_Engine_Classes_Camera_PlayerCameraManager_h_166_CALLBACK_WRAPPERS
#define Engine_Source_Runtime_Engine_Classes_Camera_PlayerCameraManager_h_166_INCLASS_NO_PURE_DECLS \
	private: \
	static void StaticRegisterNativesAPlayerCameraManager(); \
	friend ENGINE_API class UClass* Z_Construct_UClass_APlayerCameraManager(); \
	public: \
	DECLARE_CLASS(APlayerCameraManager, AActor, COMPILED_IN_FLAGS(0 | CLASS_Transient), 0, Engine, NO_API) \
	DECLARE_SERIALIZER(APlayerCameraManager) \
	/** Indicates whether the class is compiled into the engine */    enum {IsIntrinsic=COMPILED_IN_INTRINSIC}; \
	virtual UObject* _getUObject() const override { return const_cast<APlayerCameraManager*>(this); }


#define Engine_Source_Runtime_Engine_Classes_Camera_PlayerCameraManager_h_166_INCLASS \
	private: \
	static void StaticRegisterNativesAPlayerCameraManager(); \
	friend ENGINE_API class UClass* Z_Construct_UClass_APlayerCameraManager(); \
	public: \
	DECLARE_CLASS(APlayerCameraManager, AActor, COMPILED_IN_FLAGS(0 | CLASS_Transient), 0, Engine, NO_API) \
	DECLARE_SERIALIZER(APlayerCameraManager) \
	/** Indicates whether the class is compiled into the engine */    enum {IsIntrinsic=COMPILED_IN_INTRINSIC}; \
	virtual UObject* _getUObject() const override { return const_cast<APlayerCameraManager*>(this); }


#define Engine_Source_Runtime_Engine_Classes_Camera_PlayerCameraManager_h_166_STANDARD_CONSTRUCTORS \
	/** Standard constructor, called after all reflected properties have been initialized */ \
	NO_API APlayerCameraManager(const FObjectInitializer& ObjectInitializer = FObjectInitializer::Get()); \
	DEFINE_DEFAULT_OBJECT_INITIALIZER_CONSTRUCTOR_CALL(APlayerCameraManager) \
	DECLARE_VTABLE_PTR_HELPER_CTOR(NO_API, APlayerCameraManager); \
DEFINE_VTABLE_PTR_HELPER_CTOR_CALLER(APlayerCameraManager); \
private: \
	/** Private copy-constructor, should never be used */ \
	NO_API APlayerCameraManager(const APlayerCameraManager& InCopy); \
public:


#define Engine_Source_Runtime_Engine_Classes_Camera_PlayerCameraManager_h_166_ENHANCED_CONSTRUCTORS \
	/** Standard constructor, called after all reflected properties have been initialized */ \
	NO_API APlayerCameraManager(const FObjectInitializer& ObjectInitializer = FObjectInitializer::Get()) : Super(ObjectInitializer) { }; \
private: \
	/** Private copy-constructor, should never be used */ \
	NO_API APlayerCameraManager(const APlayerCameraManager& InCopy); \
public: \
	DECLARE_VTABLE_PTR_HELPER_CTOR(NO_API, APlayerCameraManager); \
DEFINE_VTABLE_PTR_HELPER_CTOR_CALLER(APlayerCameraManager); \
	DEFINE_DEFAULT_OBJECT_INITIALIZER_CONSTRUCTOR_CALL(APlayerCameraManager)


#define Engine_Source_Runtime_Engine_Classes_Camera_PlayerCameraManager_h_163_PROLOG \
	Engine_Source_Runtime_Engine_Classes_Camera_PlayerCameraManager_h_166_EVENT_PARMS


#define Engine_Source_Runtime_Engine_Classes_Camera_PlayerCameraManager_h_166_GENERATED_BODY_LEGACY \
PRAGMA_DISABLE_DEPRECATION_WARNINGS \
public: \
	Engine_Source_Runtime_Engine_Classes_Camera_PlayerCameraManager_h_166_RPC_WRAPPERS \
	Engine_Source_Runtime_Engine_Classes_Camera_PlayerCameraManager_h_166_CALLBACK_WRAPPERS \
	Engine_Source_Runtime_Engine_Classes_Camera_PlayerCameraManager_h_166_INCLASS \
	Engine_Source_Runtime_Engine_Classes_Camera_PlayerCameraManager_h_166_STANDARD_CONSTRUCTORS \
public: \
PRAGMA_ENABLE_DEPRECATION_WARNINGS


#define Engine_Source_Runtime_Engine_Classes_Camera_PlayerCameraManager_h_166_GENERATED_BODY \
PRAGMA_DISABLE_DEPRECATION_WARNINGS \
public: \
	Engine_Source_Runtime_Engine_Classes_Camera_PlayerCameraManager_h_166_RPC_WRAPPERS_NO_PURE_DECLS \
	Engine_Source_Runtime_Engine_Classes_Camera_PlayerCameraManager_h_166_CALLBACK_WRAPPERS \
	Engine_Source_Runtime_Engine_Classes_Camera_PlayerCameraManager_h_166_INCLASS_NO_PURE_DECLS \
	Engine_Source_Runtime_Engine_Classes_Camera_PlayerCameraManager_h_166_ENHANCED_CONSTRUCTORS \
static_assert(false, "Unknown access specifier for GENERATED_BODY() macro in class PlayerCameraManager."); \
PRAGMA_ENABLE_DEPRECATION_WARNINGS


#undef CURRENT_FILE_ID
#define CURRENT_FILE_ID Engine_Source_Runtime_Engine_Classes_Camera_PlayerCameraManager_h


#define FOREACH_ENUM_EVIEWTARGETBLENDFUNCTION(op) \
	op(VTBlend_Linear) \
	op(VTBlend_Cubic) \
	op(VTBlend_EaseIn) \
	op(VTBlend_EaseOut) \
	op(VTBlend_EaseInOut) 
PRAGMA_ENABLE_DEPRECATION_WARNINGS
