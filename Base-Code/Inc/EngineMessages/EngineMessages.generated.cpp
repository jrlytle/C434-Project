// Copyright 1998-2015 Epic Games, Inc. All Rights Reserved.
/*===========================================================================
	Boilerplate C++ definitions for a single module.
	This is automatically generated by UnrealHeaderTool.
	DO NOT modify this manually! Edit the corresponding .h files instead!
===========================================================================*/

#include "Private/EngineMessagesPrivatePCH.h"
#include "EngineMessages.generated.dep.h"
PRAGMA_DISABLE_DEPRECATION_WARNINGS
void EmptyLinkFunctionForGeneratedCodeEngineMessages() {}
class UScriptStruct* FEngineServiceNotification::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINEMESSAGES_API class UScriptStruct* Z_Construct_UScriptStruct_FEngineServiceNotification();
		extern ENGINEMESSAGES_API uint32 Get_Z_Construct_UScriptStruct_FEngineServiceNotification_CRC();
		extern ENGINEMESSAGES_API class UPackage* Z_Construct_UPackage_EngineMessages();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FEngineServiceNotification, Z_Construct_UPackage_EngineMessages(), TEXT("EngineServiceNotification"), sizeof(FEngineServiceNotification), Get_Z_Construct_UScriptStruct_FEngineServiceNotification_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FEngineServiceNotification(FEngineServiceNotification::StaticStruct, TEXT("/Script/EngineMessages"));
static struct FScriptStruct_EngineMessages_StaticRegisterNativesFEngineServiceNotification
{
	FScriptStruct_EngineMessages_StaticRegisterNativesFEngineServiceNotification()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("EngineServiceNotification")),new UScriptStruct::TCppStructOps<FEngineServiceNotification>);
	}
} ScriptStruct_EngineMessages_StaticRegisterNativesFEngineServiceNotification;
class UScriptStruct* FEngineServiceTerminate::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINEMESSAGES_API class UScriptStruct* Z_Construct_UScriptStruct_FEngineServiceTerminate();
		extern ENGINEMESSAGES_API uint32 Get_Z_Construct_UScriptStruct_FEngineServiceTerminate_CRC();
		extern ENGINEMESSAGES_API class UPackage* Z_Construct_UPackage_EngineMessages();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FEngineServiceTerminate, Z_Construct_UPackage_EngineMessages(), TEXT("EngineServiceTerminate"), sizeof(FEngineServiceTerminate), Get_Z_Construct_UScriptStruct_FEngineServiceTerminate_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FEngineServiceTerminate(FEngineServiceTerminate::StaticStruct, TEXT("/Script/EngineMessages"));
static struct FScriptStruct_EngineMessages_StaticRegisterNativesFEngineServiceTerminate
{
	FScriptStruct_EngineMessages_StaticRegisterNativesFEngineServiceTerminate()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("EngineServiceTerminate")),new UScriptStruct::TCppStructOps<FEngineServiceTerminate>);
	}
} ScriptStruct_EngineMessages_StaticRegisterNativesFEngineServiceTerminate;
class UScriptStruct* FEngineServiceExecuteCommand::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINEMESSAGES_API class UScriptStruct* Z_Construct_UScriptStruct_FEngineServiceExecuteCommand();
		extern ENGINEMESSAGES_API uint32 Get_Z_Construct_UScriptStruct_FEngineServiceExecuteCommand_CRC();
		extern ENGINEMESSAGES_API class UPackage* Z_Construct_UPackage_EngineMessages();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FEngineServiceExecuteCommand, Z_Construct_UPackage_EngineMessages(), TEXT("EngineServiceExecuteCommand"), sizeof(FEngineServiceExecuteCommand), Get_Z_Construct_UScriptStruct_FEngineServiceExecuteCommand_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FEngineServiceExecuteCommand(FEngineServiceExecuteCommand::StaticStruct, TEXT("/Script/EngineMessages"));
static struct FScriptStruct_EngineMessages_StaticRegisterNativesFEngineServiceExecuteCommand
{
	FScriptStruct_EngineMessages_StaticRegisterNativesFEngineServiceExecuteCommand()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("EngineServiceExecuteCommand")),new UScriptStruct::TCppStructOps<FEngineServiceExecuteCommand>);
	}
} ScriptStruct_EngineMessages_StaticRegisterNativesFEngineServiceExecuteCommand;
class UScriptStruct* FEngineServiceAuthGrant::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINEMESSAGES_API class UScriptStruct* Z_Construct_UScriptStruct_FEngineServiceAuthGrant();
		extern ENGINEMESSAGES_API uint32 Get_Z_Construct_UScriptStruct_FEngineServiceAuthGrant_CRC();
		extern ENGINEMESSAGES_API class UPackage* Z_Construct_UPackage_EngineMessages();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FEngineServiceAuthGrant, Z_Construct_UPackage_EngineMessages(), TEXT("EngineServiceAuthGrant"), sizeof(FEngineServiceAuthGrant), Get_Z_Construct_UScriptStruct_FEngineServiceAuthGrant_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FEngineServiceAuthGrant(FEngineServiceAuthGrant::StaticStruct, TEXT("/Script/EngineMessages"));
static struct FScriptStruct_EngineMessages_StaticRegisterNativesFEngineServiceAuthGrant
{
	FScriptStruct_EngineMessages_StaticRegisterNativesFEngineServiceAuthGrant()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("EngineServiceAuthGrant")),new UScriptStruct::TCppStructOps<FEngineServiceAuthGrant>);
	}
} ScriptStruct_EngineMessages_StaticRegisterNativesFEngineServiceAuthGrant;
class UScriptStruct* FEngineServiceAuthDeny::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINEMESSAGES_API class UScriptStruct* Z_Construct_UScriptStruct_FEngineServiceAuthDeny();
		extern ENGINEMESSAGES_API uint32 Get_Z_Construct_UScriptStruct_FEngineServiceAuthDeny_CRC();
		extern ENGINEMESSAGES_API class UPackage* Z_Construct_UPackage_EngineMessages();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FEngineServiceAuthDeny, Z_Construct_UPackage_EngineMessages(), TEXT("EngineServiceAuthDeny"), sizeof(FEngineServiceAuthDeny), Get_Z_Construct_UScriptStruct_FEngineServiceAuthDeny_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FEngineServiceAuthDeny(FEngineServiceAuthDeny::StaticStruct, TEXT("/Script/EngineMessages"));
static struct FScriptStruct_EngineMessages_StaticRegisterNativesFEngineServiceAuthDeny
{
	FScriptStruct_EngineMessages_StaticRegisterNativesFEngineServiceAuthDeny()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("EngineServiceAuthDeny")),new UScriptStruct::TCppStructOps<FEngineServiceAuthDeny>);
	}
} ScriptStruct_EngineMessages_StaticRegisterNativesFEngineServiceAuthDeny;
class UScriptStruct* FEngineServicePong::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINEMESSAGES_API class UScriptStruct* Z_Construct_UScriptStruct_FEngineServicePong();
		extern ENGINEMESSAGES_API uint32 Get_Z_Construct_UScriptStruct_FEngineServicePong_CRC();
		extern ENGINEMESSAGES_API class UPackage* Z_Construct_UPackage_EngineMessages();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FEngineServicePong, Z_Construct_UPackage_EngineMessages(), TEXT("EngineServicePong"), sizeof(FEngineServicePong), Get_Z_Construct_UScriptStruct_FEngineServicePong_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FEngineServicePong(FEngineServicePong::StaticStruct, TEXT("/Script/EngineMessages"));
static struct FScriptStruct_EngineMessages_StaticRegisterNativesFEngineServicePong
{
	FScriptStruct_EngineMessages_StaticRegisterNativesFEngineServicePong()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("EngineServicePong")),new UScriptStruct::TCppStructOps<FEngineServicePong>);
	}
} ScriptStruct_EngineMessages_StaticRegisterNativesFEngineServicePong;
class UScriptStruct* FEngineServicePing::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINEMESSAGES_API class UScriptStruct* Z_Construct_UScriptStruct_FEngineServicePing();
		extern ENGINEMESSAGES_API uint32 Get_Z_Construct_UScriptStruct_FEngineServicePing_CRC();
		extern ENGINEMESSAGES_API class UPackage* Z_Construct_UPackage_EngineMessages();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FEngineServicePing, Z_Construct_UPackage_EngineMessages(), TEXT("EngineServicePing"), sizeof(FEngineServicePing), Get_Z_Construct_UScriptStruct_FEngineServicePing_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FEngineServicePing(FEngineServicePing::StaticStruct, TEXT("/Script/EngineMessages"));
static struct FScriptStruct_EngineMessages_StaticRegisterNativesFEngineServicePing
{
	FScriptStruct_EngineMessages_StaticRegisterNativesFEngineServicePing()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("EngineServicePing")),new UScriptStruct::TCppStructOps<FEngineServicePing>);
	}
} ScriptStruct_EngineMessages_StaticRegisterNativesFEngineServicePing;
#if USE_COMPILED_IN_NATIVES
// Cross Module References
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FGuid();

	ENGINEMESSAGES_API class UScriptStruct* Z_Construct_UScriptStruct_FEngineServiceNotification();
	ENGINEMESSAGES_API class UScriptStruct* Z_Construct_UScriptStruct_FEngineServiceTerminate();
	ENGINEMESSAGES_API class UScriptStruct* Z_Construct_UScriptStruct_FEngineServiceExecuteCommand();
	ENGINEMESSAGES_API class UScriptStruct* Z_Construct_UScriptStruct_FEngineServiceAuthGrant();
	ENGINEMESSAGES_API class UScriptStruct* Z_Construct_UScriptStruct_FEngineServiceAuthDeny();
	ENGINEMESSAGES_API class UScriptStruct* Z_Construct_UScriptStruct_FEngineServicePong();
	ENGINEMESSAGES_API class UScriptStruct* Z_Construct_UScriptStruct_FEngineServicePing();
	ENGINEMESSAGES_API class UPackage* Z_Construct_UPackage_EngineMessages();
	UScriptStruct* Z_Construct_UScriptStruct_FEngineServiceNotification()
	{
		UPackage* Outer=Z_Construct_UPackage_EngineMessages();
		extern uint32 Get_Z_Construct_UScriptStruct_FEngineServiceNotification_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("EngineServiceNotification"), sizeof(FEngineServiceNotification), Get_Z_Construct_UScriptStruct_FEngineServiceNotification_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EngineServiceNotification"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FEngineServiceNotification>, EStructFlags(0x00000001));
			UProperty* NewProp_TimeSeconds = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("TimeSeconds"), RF_Public|RF_Transient|RF_Native) UDoubleProperty(CPP_PROPERTY_BASE(TimeSeconds, FEngineServiceNotification), 0x0000000000000000);
			UProperty* NewProp_Text = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Text"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(Text, FEngineServiceNotification), 0x0000000000000000);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/EngineServiceMessages.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Implements a message that contains a notification or log output."));
			MetaData->SetValue(NewProp_TimeSeconds, TEXT("ModuleRelativePath"), TEXT("Classes/EngineServiceMessages.h"));
			MetaData->SetValue(NewProp_TimeSeconds, TEXT("ToolTip"), TEXT("Holds the time in seconds since the engine started."));
			MetaData->SetValue(NewProp_Text, TEXT("ModuleRelativePath"), TEXT("Classes/EngineServiceMessages.h"));
			MetaData->SetValue(NewProp_Text, TEXT("ToolTip"), TEXT("Holds the notification text."));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FEngineServiceNotification_CRC() { return 784688991U; }
	UScriptStruct* Z_Construct_UScriptStruct_FEngineServiceTerminate()
	{
		UPackage* Outer=Z_Construct_UPackage_EngineMessages();
		extern uint32 Get_Z_Construct_UScriptStruct_FEngineServiceTerminate_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("EngineServiceTerminate"), sizeof(FEngineServiceTerminate), Get_Z_Construct_UScriptStruct_FEngineServiceTerminate_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EngineServiceTerminate"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FEngineServiceTerminate>, EStructFlags(0x00000001));
			UProperty* NewProp_UserName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("UserName"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(UserName, FEngineServiceTerminate), 0x0000000000000000);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/EngineServiceMessages.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Implements a message for terminating the engine."));
			MetaData->SetValue(NewProp_UserName, TEXT("ModuleRelativePath"), TEXT("Classes/EngineServiceMessages.h"));
			MetaData->SetValue(NewProp_UserName, TEXT("ToolTip"), TEXT("Holds the name of the user that wants to terminate the engine."));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FEngineServiceTerminate_CRC() { return 4281333388U; }
	UScriptStruct* Z_Construct_UScriptStruct_FEngineServiceExecuteCommand()
	{
		UPackage* Outer=Z_Construct_UPackage_EngineMessages();
		extern uint32 Get_Z_Construct_UScriptStruct_FEngineServiceExecuteCommand_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("EngineServiceExecuteCommand"), sizeof(FEngineServiceExecuteCommand), Get_Z_Construct_UScriptStruct_FEngineServiceExecuteCommand_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EngineServiceExecuteCommand"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FEngineServiceExecuteCommand>, EStructFlags(0x00000001));
			UProperty* NewProp_UserName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("UserName"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(UserName, FEngineServiceExecuteCommand), 0x0000000000000000);
			UProperty* NewProp_Command = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Command"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(Command, FEngineServiceExecuteCommand), 0x0000000000000000);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/EngineServiceMessages.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Implements a message for executing a console command."));
			MetaData->SetValue(NewProp_UserName, TEXT("ModuleRelativePath"), TEXT("Classes/EngineServiceMessages.h"));
			MetaData->SetValue(NewProp_UserName, TEXT("ToolTip"), TEXT("Holds the name of the user that wants to execute the command."));
			MetaData->SetValue(NewProp_Command, TEXT("ModuleRelativePath"), TEXT("Classes/EngineServiceMessages.h"));
			MetaData->SetValue(NewProp_Command, TEXT("ToolTip"), TEXT("Holds the command to execute."));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FEngineServiceExecuteCommand_CRC() { return 2533375585U; }
	UScriptStruct* Z_Construct_UScriptStruct_FEngineServiceAuthGrant()
	{
		UPackage* Outer=Z_Construct_UPackage_EngineMessages();
		extern uint32 Get_Z_Construct_UScriptStruct_FEngineServiceAuthGrant_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("EngineServiceAuthGrant"), sizeof(FEngineServiceAuthGrant), Get_Z_Construct_UScriptStruct_FEngineServiceAuthGrant_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EngineServiceAuthGrant"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FEngineServiceAuthGrant>, EStructFlags(0x00000001));
			UProperty* NewProp_UserToGrant = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("UserToGrant"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(UserToGrant, FEngineServiceAuthGrant), 0x0000000000000000);
			UProperty* NewProp_UserName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("UserName"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(UserName, FEngineServiceAuthGrant), 0x0000000000000000);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/EngineServiceMessages.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Implements a message for granting service access to a remote user."));
			MetaData->SetValue(NewProp_UserToGrant, TEXT("ModuleRelativePath"), TEXT("Classes/EngineServiceMessages.h"));
			MetaData->SetValue(NewProp_UserToGrant, TEXT("ToolTip"), TEXT("Holds the name of the user that access is granted to."));
			MetaData->SetValue(NewProp_UserName, TEXT("ModuleRelativePath"), TEXT("Classes/EngineServiceMessages.h"));
			MetaData->SetValue(NewProp_UserName, TEXT("ToolTip"), TEXT("Holds the name of the user that granted access."));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FEngineServiceAuthGrant_CRC() { return 1433709130U; }
	UScriptStruct* Z_Construct_UScriptStruct_FEngineServiceAuthDeny()
	{
		UPackage* Outer=Z_Construct_UPackage_EngineMessages();
		extern uint32 Get_Z_Construct_UScriptStruct_FEngineServiceAuthDeny_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("EngineServiceAuthDeny"), sizeof(FEngineServiceAuthDeny), Get_Z_Construct_UScriptStruct_FEngineServiceAuthDeny_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EngineServiceAuthDeny"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FEngineServiceAuthDeny>, EStructFlags(0x00000001));
			UProperty* NewProp_UserToDeny = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("UserToDeny"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(UserToDeny, FEngineServiceAuthDeny), 0x0000000000000000);
			UProperty* NewProp_UserName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("UserName"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(UserName, FEngineServiceAuthDeny), 0x0000000000000000);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/EngineServiceMessages.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Implements a message for denying service access to a remote user."));
			MetaData->SetValue(NewProp_UserToDeny, TEXT("ModuleRelativePath"), TEXT("Classes/EngineServiceMessages.h"));
			MetaData->SetValue(NewProp_UserToDeny, TEXT("ToolTip"), TEXT("Holds the name of the user that access is denied to."));
			MetaData->SetValue(NewProp_UserName, TEXT("ModuleRelativePath"), TEXT("Classes/EngineServiceMessages.h"));
			MetaData->SetValue(NewProp_UserName, TEXT("ToolTip"), TEXT("Holds the name of the user that denied access."));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FEngineServiceAuthDeny_CRC() { return 2281110906U; }
	UScriptStruct* Z_Construct_UScriptStruct_FEngineServicePong()
	{
		UPackage* Outer=Z_Construct_UPackage_EngineMessages();
		extern uint32 Get_Z_Construct_UScriptStruct_FEngineServicePong_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("EngineServicePong"), sizeof(FEngineServicePong), Get_Z_Construct_UScriptStruct_FEngineServicePong_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EngineServicePong"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FEngineServicePong>, EStructFlags(0x00000001));
			UProperty* NewProp_WorldTimeSeconds = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("WorldTimeSeconds"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(WorldTimeSeconds, FEngineServicePong), 0x0000000000000000);
			UProperty* NewProp_SessionId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("SessionId"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(SessionId, FEngineServicePong), 0x0000000000000000, Z_Construct_UScriptStruct_FGuid());
			UProperty* NewProp_InstanceType = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("InstanceType"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(InstanceType, FEngineServicePong), 0x0000000000000000);
			UProperty* NewProp_InstanceId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("InstanceId"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(InstanceId, FEngineServicePong), 0x0000000000000000, Z_Construct_UScriptStruct_FGuid());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasBegunPlay, FEngineServicePong, bool);
			UProperty* NewProp_HasBegunPlay = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasBegunPlay"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasBegunPlay, FEngineServicePong), 0x0000000000000000, CPP_BOOL_PROPERTY_BITMASK(HasBegunPlay, FEngineServicePong), sizeof(bool), true);
			UProperty* NewProp_EngineVersion = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("EngineVersion"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(EngineVersion, FEngineServicePong), 0x0000000000000000);
			UProperty* NewProp_CurrentLevel = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("CurrentLevel"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(CurrentLevel, FEngineServicePong), 0x0000000000000000);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/EngineServiceMessages.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Implements a message for responding to a request to discover engine instances on the network."));
			MetaData->SetValue(NewProp_WorldTimeSeconds, TEXT("ModuleRelativePath"), TEXT("Classes/EngineServiceMessages.h"));
			MetaData->SetValue(NewProp_WorldTimeSeconds, TEXT("ToolTip"), TEXT("Holds the time in seconds since the world was loaded."));
			MetaData->SetValue(NewProp_SessionId, TEXT("ModuleRelativePath"), TEXT("Classes/EngineServiceMessages.h"));
			MetaData->SetValue(NewProp_SessionId, TEXT("ToolTip"), TEXT("Holds the identifier of the session that the application belongs to."));
			MetaData->SetValue(NewProp_InstanceType, TEXT("ModuleRelativePath"), TEXT("Classes/EngineServiceMessages.h"));
			MetaData->SetValue(NewProp_InstanceType, TEXT("ToolTip"), TEXT("Holds the type of the engine instance."));
			MetaData->SetValue(NewProp_InstanceId, TEXT("ModuleRelativePath"), TEXT("Classes/EngineServiceMessages.h"));
			MetaData->SetValue(NewProp_InstanceId, TEXT("ToolTip"), TEXT("Holds the instance identifier."));
			MetaData->SetValue(NewProp_HasBegunPlay, TEXT("ModuleRelativePath"), TEXT("Classes/EngineServiceMessages.h"));
			MetaData->SetValue(NewProp_HasBegunPlay, TEXT("ToolTip"), TEXT("Holds a flag indicating whether game play has begun."));
			MetaData->SetValue(NewProp_EngineVersion, TEXT("ModuleRelativePath"), TEXT("Classes/EngineServiceMessages.h"));
			MetaData->SetValue(NewProp_EngineVersion, TEXT("ToolTip"), TEXT("Holds the engine version."));
			MetaData->SetValue(NewProp_CurrentLevel, TEXT("ModuleRelativePath"), TEXT("Classes/EngineServiceMessages.h"));
			MetaData->SetValue(NewProp_CurrentLevel, TEXT("ToolTip"), TEXT("Holds the name of the currently loaded level, if any."));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FEngineServicePong_CRC() { return 3223821185U; }
	UScriptStruct* Z_Construct_UScriptStruct_FEngineServicePing()
	{
		UPackage* Outer=Z_Construct_UPackage_EngineMessages();
		extern uint32 Get_Z_Construct_UScriptStruct_FEngineServicePing_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("EngineServicePing"), sizeof(FEngineServicePing), Get_Z_Construct_UScriptStruct_FEngineServicePing_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EngineServicePing"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FEngineServicePing>, EStructFlags(0x00000001));
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/EngineServiceMessages.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Implements a message for discovering engine instances on the network."));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FEngineServicePing_CRC() { return 184441033U; }
	UPackage* Z_Construct_UPackage_EngineMessages()
	{
		static UPackage* ReturnPackage = NULL;
		if (!ReturnPackage)
		{
			ReturnPackage = CastChecked<UPackage>(StaticFindObjectFast(UPackage::StaticClass(), NULL, FName(TEXT("/Script/EngineMessages")), false, false));
			ReturnPackage->SetPackageFlags(PKG_CompiledIn | 0x00000000);
			FGuid Guid;
			Guid.A = 0xAD053808;
			Guid.B = 0x950B8CEC;
			Guid.C = 0x00000000;
			Guid.D = 0x00000000;
			ReturnPackage->SetGuid(Guid);

		}
		return ReturnPackage;
	}
#endif

PRAGMA_ENABLE_DEPRECATION_WARNINGS
