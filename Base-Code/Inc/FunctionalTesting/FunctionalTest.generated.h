// Copyright 1998-2015 Epic Games, Inc. All Rights Reserved.
/*===========================================================================
	C++ class header boilerplate exported from UnrealHeaderTool.
	This is automatically generated by the tools.
	DO NOT modify this manually! Edit the corresponding .h files instead!
===========================================================================*/

#include "ObjectBase.h"

PRAGMA_DISABLE_DEPRECATION_WARNINGS
class AActor;
#ifdef FUNCTIONALTESTING_FunctionalTest_generated_h
#error "FunctionalTest.generated.h already included, missing '#pragma once' in FunctionalTest.h"
#endif
#define FUNCTIONALTESTING_FunctionalTest_generated_h

#define Engine_Source_Developer_FunctionalTesting_Classes_FunctionalTest_h_23_DELEGATE \
static inline void FFunctionalTestEventSignature_DelegateWrapper(const FMulticastScriptDelegate& FunctionalTestEventSignature) \
{ \
	FunctionalTestEventSignature.ProcessMulticastDelegate<UObject>(NULL); \
}




#define Engine_Source_Developer_FunctionalTesting_Classes_FunctionalTest_h_29_RPC_WRAPPERS \
 \
	DECLARE_FUNCTION(execRegisterAutoDestroyActor) \
	{ \
		P_GET_OBJECT(AActor,Z_Param_ActorToAutoDestroy); \
		P_FINISH; \
		this->RegisterAutoDestroyActor(Z_Param_ActorToAutoDestroy); \
	} \
 \
	DECLARE_FUNCTION(execSetTimeLimit) \
	{ \
		P_GET_PROPERTY(UFloatProperty,Z_Param_NewTimeLimit); \
		P_GET_PROPERTY(UByteProperty,Z_Param_ResultWhenTimeRunsOut); \
		P_FINISH; \
		this->SetTimeLimit(Z_Param_NewTimeLimit,EFunctionalTestResult::Type(Z_Param_ResultWhenTimeRunsOut)); \
	} \
 \
	DECLARE_FUNCTION(execLogMessage) \
	{ \
		P_GET_PROPERTY(UStrProperty,Z_Param_Message); \
		P_FINISH; \
		this->LogMessage(Z_Param_Message); \
	} \
 \
	DECLARE_FUNCTION(execFinishTest) \
	{ \
		P_GET_PROPERTY(UByteProperty,Z_Param_TestResult); \
		P_GET_PROPERTY(UStrProperty,Z_Param_Message); \
		P_FINISH; \
		this->FinishTest(EFunctionalTestResult::Type(Z_Param_TestResult),Z_Param_Message); \
	}


#define Engine_Source_Developer_FunctionalTesting_Classes_FunctionalTest_h_29_RPC_WRAPPERS_NO_PURE_DECLS \
 \
	DECLARE_FUNCTION(execRegisterAutoDestroyActor) \
	{ \
		P_GET_OBJECT(AActor,Z_Param_ActorToAutoDestroy); \
		P_FINISH; \
		this->RegisterAutoDestroyActor(Z_Param_ActorToAutoDestroy); \
	} \
 \
	DECLARE_FUNCTION(execSetTimeLimit) \
	{ \
		P_GET_PROPERTY(UFloatProperty,Z_Param_NewTimeLimit); \
		P_GET_PROPERTY(UByteProperty,Z_Param_ResultWhenTimeRunsOut); \
		P_FINISH; \
		this->SetTimeLimit(Z_Param_NewTimeLimit,EFunctionalTestResult::Type(Z_Param_ResultWhenTimeRunsOut)); \
	} \
 \
	DECLARE_FUNCTION(execLogMessage) \
	{ \
		P_GET_PROPERTY(UStrProperty,Z_Param_Message); \
		P_FINISH; \
		this->LogMessage(Z_Param_Message); \
	} \
 \
	DECLARE_FUNCTION(execFinishTest) \
	{ \
		P_GET_PROPERTY(UByteProperty,Z_Param_TestResult); \
		P_GET_PROPERTY(UStrProperty,Z_Param_Message); \
		P_FINISH; \
		this->FinishTest(EFunctionalTestResult::Type(Z_Param_TestResult),Z_Param_Message); \
	}


#define Engine_Source_Developer_FunctionalTesting_Classes_FunctionalTest_h_29_EVENT_PARMS \
	struct FunctionalTest_eventDebugGatherRelevantActors_Parms \
	{ \
		TArray<AActor*> ReturnValue; \
	}; \
	struct FunctionalTest_eventOnAdditionalTestFinishedMessageRequest_Parms \
	{ \
		TEnumAsByte<EFunctionalTestResult::Type> TestResult; \
		FString ReturnValue; \
	}; \
	struct FunctionalTest_eventOnWantsReRunCheck_Parms \
	{ \
		bool ReturnValue; \
 \
		/** Constructor, intializes return property only **/ \
		FunctionalTest_eventOnWantsReRunCheck_Parms() \
			: ReturnValue(false) \
		{ \
		} \
	};


extern FUNCTIONALTESTING_API  FName FUNCTIONALTESTING_DebugGatherRelevantActors;
extern FUNCTIONALTESTING_API  FName FUNCTIONALTESTING_OnAdditionalTestFinishedMessageRequest;
extern FUNCTIONALTESTING_API  FName FUNCTIONALTESTING_OnWantsReRunCheck;
#define Engine_Source_Developer_FunctionalTesting_Classes_FunctionalTest_h_29_CALLBACK_WRAPPERS
#define Engine_Source_Developer_FunctionalTesting_Classes_FunctionalTest_h_29_INCLASS_NO_PURE_DECLS \
	private: \
	static void StaticRegisterNativesAFunctionalTest(); \
	friend FUNCTIONALTESTING_API class UClass* Z_Construct_UClass_AFunctionalTest(); \
	public: \
	DECLARE_CLASS(AFunctionalTest, AActor, COMPILED_IN_FLAGS(0), 0, FunctionalTesting, FUNCTIONALTESTING_API) \
	DECLARE_SERIALIZER(AFunctionalTest) \
	/** Indicates whether the class is compiled into the engine */    enum {IsIntrinsic=COMPILED_IN_INTRINSIC}; \
	virtual UObject* _getUObject() const override { return const_cast<AFunctionalTest*>(this); }


#define Engine_Source_Developer_FunctionalTesting_Classes_FunctionalTest_h_29_INCLASS \
	private: \
	static void StaticRegisterNativesAFunctionalTest(); \
	friend FUNCTIONALTESTING_API class UClass* Z_Construct_UClass_AFunctionalTest(); \
	public: \
	DECLARE_CLASS(AFunctionalTest, AActor, COMPILED_IN_FLAGS(0), 0, FunctionalTesting, FUNCTIONALTESTING_API) \
	DECLARE_SERIALIZER(AFunctionalTest) \
	/** Indicates whether the class is compiled into the engine */    enum {IsIntrinsic=COMPILED_IN_INTRINSIC}; \
	virtual UObject* _getUObject() const override { return const_cast<AFunctionalTest*>(this); }


#define Engine_Source_Developer_FunctionalTesting_Classes_FunctionalTest_h_29_STANDARD_CONSTRUCTORS \
	/** Standard constructor, called after all reflected properties have been initialized */ \
	FUNCTIONALTESTING_API AFunctionalTest(const FObjectInitializer& ObjectInitializer = FObjectInitializer::Get()); \
	DEFINE_DEFAULT_OBJECT_INITIALIZER_CONSTRUCTOR_CALL(AFunctionalTest) \
	DECLARE_VTABLE_PTR_HELPER_CTOR(FUNCTIONALTESTING_API, AFunctionalTest); \
DEFINE_VTABLE_PTR_HELPER_CTOR_CALLER(AFunctionalTest); \
private: \
	/** Private copy-constructor, should never be used */ \
	FUNCTIONALTESTING_API AFunctionalTest(const AFunctionalTest& InCopy); \
public:


#define Engine_Source_Developer_FunctionalTesting_Classes_FunctionalTest_h_29_ENHANCED_CONSTRUCTORS \
	/** Standard constructor, called after all reflected properties have been initialized */ \
	FUNCTIONALTESTING_API AFunctionalTest(const FObjectInitializer& ObjectInitializer = FObjectInitializer::Get()) : Super(ObjectInitializer) { }; \
private: \
	/** Private copy-constructor, should never be used */ \
	FUNCTIONALTESTING_API AFunctionalTest(const AFunctionalTest& InCopy); \
public: \
	DECLARE_VTABLE_PTR_HELPER_CTOR(FUNCTIONALTESTING_API, AFunctionalTest); \
DEFINE_VTABLE_PTR_HELPER_CTOR_CALLER(AFunctionalTest); \
	DEFINE_DEFAULT_OBJECT_INITIALIZER_CONSTRUCTOR_CALL(AFunctionalTest)


#define Engine_Source_Developer_FunctionalTesting_Classes_FunctionalTest_h_26_PROLOG \
	Engine_Source_Developer_FunctionalTesting_Classes_FunctionalTest_h_29_EVENT_PARMS


#define Engine_Source_Developer_FunctionalTesting_Classes_FunctionalTest_h_29_GENERATED_BODY_LEGACY \
PRAGMA_DISABLE_DEPRECATION_WARNINGS \
public: \
	Engine_Source_Developer_FunctionalTesting_Classes_FunctionalTest_h_29_RPC_WRAPPERS \
	Engine_Source_Developer_FunctionalTesting_Classes_FunctionalTest_h_29_CALLBACK_WRAPPERS \
	Engine_Source_Developer_FunctionalTesting_Classes_FunctionalTest_h_29_INCLASS \
	Engine_Source_Developer_FunctionalTesting_Classes_FunctionalTest_h_29_STANDARD_CONSTRUCTORS \
public: \
PRAGMA_ENABLE_DEPRECATION_WARNINGS


#define Engine_Source_Developer_FunctionalTesting_Classes_FunctionalTest_h_29_GENERATED_BODY \
PRAGMA_DISABLE_DEPRECATION_WARNINGS \
public: \
	Engine_Source_Developer_FunctionalTesting_Classes_FunctionalTest_h_29_RPC_WRAPPERS_NO_PURE_DECLS \
	Engine_Source_Developer_FunctionalTesting_Classes_FunctionalTest_h_29_CALLBACK_WRAPPERS \
	Engine_Source_Developer_FunctionalTesting_Classes_FunctionalTest_h_29_INCLASS_NO_PURE_DECLS \
	Engine_Source_Developer_FunctionalTesting_Classes_FunctionalTest_h_29_ENHANCED_CONSTRUCTORS \
static_assert(false, "Unknown access specifier for GENERATED_BODY() macro in class FunctionalTest."); \
PRAGMA_ENABLE_DEPRECATION_WARNINGS


#undef CURRENT_FILE_ID
#define CURRENT_FILE_ID Engine_Source_Developer_FunctionalTesting_Classes_FunctionalTest_h


#define FOREACH_ENUM_EFUNCTIONALTESTRESULT(op) \
	op(EFunctionalTestResult::Invalid) \
	op(EFunctionalTestResult::Error) \
	op(EFunctionalTestResult::Running) \
	op(EFunctionalTestResult::Failed) \
	op(EFunctionalTestResult::Succeeded) 
PRAGMA_ENABLE_DEPRECATION_WARNINGS
