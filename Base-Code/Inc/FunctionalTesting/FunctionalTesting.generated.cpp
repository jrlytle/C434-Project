// Copyright 1998-2015 Epic Games, Inc. All Rights Reserved.
/*===========================================================================
	Boilerplate C++ definitions for a single module.
	This is automatically generated by UnrealHeaderTool.
	DO NOT modify this manually! Edit the corresponding .h files instead!
===========================================================================*/

#include "Private/FunctionalTestingPrivatePCH.h"
#include "FunctionalTesting.generated.dep.h"
PRAGMA_DISABLE_DEPRECATION_WARNINGS
void EmptyLinkFunctionForGeneratedCodeFunctionalTesting() {}
	void UFuncTestRenderingComponent::StaticRegisterNativesUFuncTestRenderingComponent()
	{
	}
	IMPLEMENT_CLASS(UFuncTestRenderingComponent, 1315517701);
static class UEnum* EFunctionalTestResult_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern FUNCTIONALTESTING_API class UEnum* Z_Construct_UEnum_FunctionalTesting_EFunctionalTestResult();
		extern FUNCTIONALTESTING_API class UPackage* Z_Construct_UPackage_FunctionalTesting();
		Singleton = GetStaticEnum(Z_Construct_UEnum_FunctionalTesting_EFunctionalTestResult, Z_Construct_UPackage_FunctionalTesting(), TEXT("EFunctionalTestResult"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EFunctionalTestResult(EFunctionalTestResult_StaticEnum, TEXT("/Script/FunctionalTesting"));
	TArray<AActor*> AFunctionalTest::DebugGatherRelevantActors() const
	{
		FunctionalTest_eventDebugGatherRelevantActors_Parms Parms;
		const_cast<AFunctionalTest*>(this)->ProcessEvent(FindFunctionChecked(FUNCTIONALTESTING_DebugGatherRelevantActors),&Parms);
		return Parms.ReturnValue;
	}
	FString AFunctionalTest::OnAdditionalTestFinishedMessageRequest(EFunctionalTestResult::Type TestResult) const
	{
		FunctionalTest_eventOnAdditionalTestFinishedMessageRequest_Parms Parms;
		Parms.TestResult=TestResult;
		const_cast<AFunctionalTest*>(this)->ProcessEvent(FindFunctionChecked(FUNCTIONALTESTING_OnAdditionalTestFinishedMessageRequest),&Parms);
		return Parms.ReturnValue;
	}
	bool AFunctionalTest::OnWantsReRunCheck() const
	{
		FunctionalTest_eventOnWantsReRunCheck_Parms Parms;
		const_cast<AFunctionalTest*>(this)->ProcessEvent(FindFunctionChecked(FUNCTIONALTESTING_OnWantsReRunCheck),&Parms);
		return !!Parms.ReturnValue;
	}
	void AFunctionalTest::StaticRegisterNativesAFunctionalTest()
	{
		FNativeFunctionRegistrar::RegisterFunction(AFunctionalTest::StaticClass(),"FinishTest",(Native)&AFunctionalTest::execFinishTest);
		FNativeFunctionRegistrar::RegisterFunction(AFunctionalTest::StaticClass(),"LogMessage",(Native)&AFunctionalTest::execLogMessage);
		FNativeFunctionRegistrar::RegisterFunction(AFunctionalTest::StaticClass(),"RegisterAutoDestroyActor",(Native)&AFunctionalTest::execRegisterAutoDestroyActor);
		FNativeFunctionRegistrar::RegisterFunction(AFunctionalTest::StaticClass(),"SetTimeLimit",(Native)&AFunctionalTest::execSetTimeLimit);
	}
	IMPLEMENT_CLASS(AFunctionalTest, 3433026369);
class UScriptStruct* FAITestSpawnSet::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern FUNCTIONALTESTING_API class UScriptStruct* Z_Construct_UScriptStruct_FAITestSpawnSet();
		extern FUNCTIONALTESTING_API uint32 Get_Z_Construct_UScriptStruct_FAITestSpawnSet_CRC();
		extern FUNCTIONALTESTING_API class UPackage* Z_Construct_UPackage_FunctionalTesting();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FAITestSpawnSet, Z_Construct_UPackage_FunctionalTesting(), TEXT("AITestSpawnSet"), sizeof(FAITestSpawnSet), Get_Z_Construct_UScriptStruct_FAITestSpawnSet_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FAITestSpawnSet(FAITestSpawnSet::StaticStruct, TEXT("/Script/FunctionalTesting"));
static struct FScriptStruct_FunctionalTesting_StaticRegisterNativesFAITestSpawnSet
{
	FScriptStruct_FunctionalTesting_StaticRegisterNativesFAITestSpawnSet()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("AITestSpawnSet")),new UScriptStruct::TCppStructOps<FAITestSpawnSet>);
	}
} ScriptStruct_FunctionalTesting_StaticRegisterNativesFAITestSpawnSet;
class UScriptStruct* FPendingDelayedSpawn::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern FUNCTIONALTESTING_API class UScriptStruct* Z_Construct_UScriptStruct_FPendingDelayedSpawn();
		extern FUNCTIONALTESTING_API uint32 Get_Z_Construct_UScriptStruct_FPendingDelayedSpawn_CRC();
		extern FUNCTIONALTESTING_API class UPackage* Z_Construct_UPackage_FunctionalTesting();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FPendingDelayedSpawn, Z_Construct_UPackage_FunctionalTesting(), TEXT("PendingDelayedSpawn"), sizeof(FPendingDelayedSpawn), Get_Z_Construct_UScriptStruct_FPendingDelayedSpawn_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FPendingDelayedSpawn(FPendingDelayedSpawn::StaticStruct, TEXT("/Script/FunctionalTesting"));
static struct FScriptStruct_FunctionalTesting_StaticRegisterNativesFPendingDelayedSpawn
{
	FScriptStruct_FunctionalTesting_StaticRegisterNativesFPendingDelayedSpawn()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("PendingDelayedSpawn")),new UScriptStruct::TCppStructOps<FPendingDelayedSpawn>);
	}
} ScriptStruct_FunctionalTesting_StaticRegisterNativesFPendingDelayedSpawn;
class UScriptStruct* FAITestSpawnInfo::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern FUNCTIONALTESTING_API class UScriptStruct* Z_Construct_UScriptStruct_FAITestSpawnInfo();
		extern FUNCTIONALTESTING_API uint32 Get_Z_Construct_UScriptStruct_FAITestSpawnInfo_CRC();
		extern FUNCTIONALTESTING_API class UPackage* Z_Construct_UPackage_FunctionalTesting();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FAITestSpawnInfo, Z_Construct_UPackage_FunctionalTesting(), TEXT("AITestSpawnInfo"), sizeof(FAITestSpawnInfo), Get_Z_Construct_UScriptStruct_FAITestSpawnInfo_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FAITestSpawnInfo(FAITestSpawnInfo::StaticStruct, TEXT("/Script/FunctionalTesting"));
static struct FScriptStruct_FunctionalTesting_StaticRegisterNativesFAITestSpawnInfo
{
	FScriptStruct_FunctionalTesting_StaticRegisterNativesFAITestSpawnInfo()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("AITestSpawnInfo")),new UScriptStruct::TCppStructOps<FAITestSpawnInfo>);
	}
} ScriptStruct_FunctionalTesting_StaticRegisterNativesFAITestSpawnInfo;
	void AFunctionalAITest::StaticRegisterNativesAFunctionalAITest()
	{
		FNativeFunctionRegistrar::RegisterFunction(AFunctionalAITest::StaticClass(),"IsOneOfSpawnedPawns",(Native)&AFunctionalAITest::execIsOneOfSpawnedPawns);
	}
	IMPLEMENT_CLASS(AFunctionalAITest, 2552847300);
	void UFunctionalTestingManager::StaticRegisterNativesUFunctionalTestingManager()
	{
		FNativeFunctionRegistrar::RegisterFunction(UFunctionalTestingManager::StaticClass(),"RunAllFunctionalTests",(Native)&UFunctionalTestingManager::execRunAllFunctionalTests);
	}
	IMPLEMENT_CLASS(UFunctionalTestingManager, 567515214);
FName FUNCTIONALTESTING_DebugGatherRelevantActors = FName(TEXT("DebugGatherRelevantActors"));
FName FUNCTIONALTESTING_OnAdditionalTestFinishedMessageRequest = FName(TEXT("OnAdditionalTestFinishedMessageRequest"));
FName FUNCTIONALTESTING_OnWantsReRunCheck = FName(TEXT("OnWantsReRunCheck"));
#if USE_COMPILED_IN_NATIVES
// Cross Module References
	ENGINE_API class UClass* Z_Construct_UClass_UPrimitiveComponent();
	ENGINE_API class UClass* Z_Construct_UClass_AActor_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_AActor();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FRandomStream();
	ENGINE_API class UClass* Z_Construct_UClass_UBillboardComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_APawn_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_AAIController_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UBehaviorTree_NoRegister();
	AIMODULE_API class UScriptStruct* Z_Construct_UScriptStruct_FGenericTeamId();
	COREUOBJECT_API class UClass* Z_Construct_UClass_UObject_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UBlueprintFunctionLibrary();

	FUNCTIONALTESTING_API class UClass* Z_Construct_UClass_UFuncTestRenderingComponent_NoRegister();
	FUNCTIONALTESTING_API class UClass* Z_Construct_UClass_UFuncTestRenderingComponent();
	FUNCTIONALTESTING_API class UFunction* Z_Construct_UDelegateFunction_FunctionalTesting_FunctionalTestEventSignature__DelegateSignature();
	FUNCTIONALTESTING_API class UEnum* Z_Construct_UEnum_FunctionalTesting_EFunctionalTestResult();
	FUNCTIONALTESTING_API class UFunction* Z_Construct_UFunction_AFunctionalTest_DebugGatherRelevantActors();
	FUNCTIONALTESTING_API class UFunction* Z_Construct_UFunction_AFunctionalTest_FinishTest();
	FUNCTIONALTESTING_API class UFunction* Z_Construct_UFunction_AFunctionalTest_LogMessage();
	FUNCTIONALTESTING_API class UFunction* Z_Construct_UFunction_AFunctionalTest_OnAdditionalTestFinishedMessageRequest();
	FUNCTIONALTESTING_API class UFunction* Z_Construct_UFunction_AFunctionalTest_OnWantsReRunCheck();
	FUNCTIONALTESTING_API class UFunction* Z_Construct_UFunction_AFunctionalTest_RegisterAutoDestroyActor();
	FUNCTIONALTESTING_API class UFunction* Z_Construct_UFunction_AFunctionalTest_SetTimeLimit();
	FUNCTIONALTESTING_API class UClass* Z_Construct_UClass_AFunctionalTest_NoRegister();
	FUNCTIONALTESTING_API class UClass* Z_Construct_UClass_AFunctionalTest();
	FUNCTIONALTESTING_API class UFunction* Z_Construct_UDelegateFunction_FunctionalTesting_FunctionalTestAISpawned__DelegateSignature();
	FUNCTIONALTESTING_API class UScriptStruct* Z_Construct_UScriptStruct_FAITestSpawnSet();
	FUNCTIONALTESTING_API class UScriptStruct* Z_Construct_UScriptStruct_FPendingDelayedSpawn();
	FUNCTIONALTESTING_API class UScriptStruct* Z_Construct_UScriptStruct_FAITestSpawnInfo();
	FUNCTIONALTESTING_API class UFunction* Z_Construct_UFunction_AFunctionalAITest_IsOneOfSpawnedPawns();
	FUNCTIONALTESTING_API class UClass* Z_Construct_UClass_AFunctionalAITest_NoRegister();
	FUNCTIONALTESTING_API class UClass* Z_Construct_UClass_AFunctionalAITest();
	FUNCTIONALTESTING_API class UFunction* Z_Construct_UFunction_UFunctionalTestingManager_RunAllFunctionalTests();
	FUNCTIONALTESTING_API class UClass* Z_Construct_UClass_UFunctionalTestingManager_NoRegister();
	FUNCTIONALTESTING_API class UClass* Z_Construct_UClass_UFunctionalTestingManager();
	FUNCTIONALTESTING_API class UPackage* Z_Construct_UPackage_FunctionalTesting();
	UClass* Z_Construct_UClass_UFuncTestRenderingComponent_NoRegister()
	{
		return UFuncTestRenderingComponent::StaticClass();
	}
	UClass* Z_Construct_UClass_UFuncTestRenderingComponent()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UPrimitiveComponent();
			Z_Construct_UPackage_FunctionalTesting();
			OuterClass = UFuncTestRenderingComponent::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20A01080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object Mobility Trigger ComponentReplication"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("FuncTestRenderingComponent.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/FuncTestRenderingComponent.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UFuncTestRenderingComponent(Z_Construct_UClass_UFuncTestRenderingComponent, TEXT("UFuncTestRenderingComponent"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UFuncTestRenderingComponent);
	UFunction* Z_Construct_UDelegateFunction_FunctionalTesting_FunctionalTestEventSignature__DelegateSignature()
	{
		UObject* Outer=Z_Construct_UPackage_FunctionalTesting();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("FunctionalTestEventSignature__DelegateSignature"), RF_Public|RF_Transient|RF_Native) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/FunctionalTest.h"));
#endif
		}
		return ReturnFunction;
	}
	UEnum* Z_Construct_UEnum_FunctionalTesting_EFunctionalTestResult()
	{
		UPackage* Outer=Z_Construct_UPackage_FunctionalTesting();
		extern uint32 Get_Z_Construct_UEnum_FunctionalTesting_EFunctionalTestResult_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("EFunctionalTestResult"), 0, Get_Z_Construct_UEnum_FunctionalTesting_EFunctionalTestResult_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EFunctionalTestResult"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EFunctionalTestResult::Invalid")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EFunctionalTestResult::Error")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EFunctionalTestResult::Running")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EFunctionalTestResult::Failed")), 3));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EFunctionalTestResult::Succeeded")), 4));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EFunctionalTestResult::EFunctionalTestResult_MAX")), 5));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/FunctionalTest.h"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_FunctionalTesting_EFunctionalTestResult_CRC() { return 2497761796U; }
	UFunction* Z_Construct_UFunction_AFunctionalTest_DebugGatherRelevantActors()
	{
		UObject* Outer=Z_Construct_UClass_AFunctionalTest();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("DebugGatherRelevantActors"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x48020800, 65535, sizeof(FunctionalTest_eventDebugGatherRelevantActors_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(ReturnValue, FunctionalTest_eventDebugGatherRelevantActors_Parms), 0x0000000000000580);
			UProperty* NewProp_ReturnValue_Inner = new(EC_InternalUseOnlyConstructor, NewProp_ReturnValue, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UClass_AActor_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("FunctionalTesting"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/FunctionalTest.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Used by debug drawing to gather actors this test is using and point at them on the level to better understand test's setup"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AFunctionalTest_FinishTest()
	{
		struct FunctionalTest_eventFinishTest_Parms
		{
			TEnumAsByte<EFunctionalTestResult::Type> TestResult;
			FString Message;
		};
		UObject* Outer=Z_Construct_UClass_AFunctionalTest();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("FinishTest"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020400, 65535, sizeof(FunctionalTest_eventFinishTest_Parms));
			UProperty* NewProp_Message = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Message"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(Message, FunctionalTest_eventFinishTest_Parms), 0x0000000000000080);
			UProperty* NewProp_TestResult = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("TestResult"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(TestResult, FunctionalTest_eventFinishTest_Parms), 0x0000000000000080, Z_Construct_UEnum_FunctionalTesting_EFunctionalTestResult());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Development"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/FunctionalTest.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AFunctionalTest_LogMessage()
	{
		struct FunctionalTest_eventLogMessage_Parms
		{
			FString Message;
		};
		UObject* Outer=Z_Construct_UClass_AFunctionalTest();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("LogMessage"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020400, 65535, sizeof(FunctionalTest_eventLogMessage_Parms));
			UProperty* NewProp_Message = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Message"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(Message, FunctionalTest_eventLogMessage_Parms), 0x0000000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Development"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/FunctionalTest.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AFunctionalTest_OnAdditionalTestFinishedMessageRequest()
	{
		UObject* Outer=Z_Construct_UClass_AFunctionalTest();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnAdditionalTestFinishedMessageRequest"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x48020800, 65535, sizeof(FunctionalTest_eventOnAdditionalTestFinishedMessageRequest_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(ReturnValue, FunctionalTest_eventOnAdditionalTestFinishedMessageRequest_Parms), 0x0000000000000580);
			UProperty* NewProp_TestResult = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("TestResult"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(TestResult, FunctionalTest_eventOnAdditionalTestFinishedMessageRequest_Parms), 0x0000000000000080, Z_Construct_UEnum_FunctionalTesting_EFunctionalTestResult());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("FunctionalTesting"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/FunctionalTest.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AFunctionalTest_OnWantsReRunCheck()
	{
		UObject* Outer=Z_Construct_UClass_AFunctionalTest();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnWantsReRunCheck"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x48020800, 65535, sizeof(FunctionalTest_eventOnWantsReRunCheck_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, FunctionalTest_eventOnWantsReRunCheck_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, FunctionalTest_eventOnWantsReRunCheck_Parms), 0x0000000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, FunctionalTest_eventOnWantsReRunCheck_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("FunctionalTesting"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/FunctionalTest.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("retrieves information whether test wants to have another run just after finishing"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AFunctionalTest_RegisterAutoDestroyActor()
	{
		struct FunctionalTest_eventRegisterAutoDestroyActor_Parms
		{
			AActor* ActorToAutoDestroy;
		};
		UObject* Outer=Z_Construct_UClass_AFunctionalTest();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("RegisterAutoDestroyActor"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020400, 65535, sizeof(FunctionalTest_eventRegisterAutoDestroyActor_Parms));
			UProperty* NewProp_ActorToAutoDestroy = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ActorToAutoDestroy"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(ActorToAutoDestroy, FunctionalTest_eventRegisterAutoDestroyActor_Parms), 0x0000000000000080, Z_Construct_UClass_AActor_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Development"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Delete"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/FunctionalTest.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("ACtors registered this way will be automatically destroyed (by limiting their lifespan)\n    on test finish"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AFunctionalTest_SetTimeLimit()
	{
		struct FunctionalTest_eventSetTimeLimit_Parms
		{
			float NewTimeLimit;
			TEnumAsByte<EFunctionalTestResult::Type> ResultWhenTimeRunsOut;
		};
		UObject* Outer=Z_Construct_UClass_AFunctionalTest();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetTimeLimit"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020400, 65535, sizeof(FunctionalTest_eventSetTimeLimit_Parms));
			UProperty* NewProp_ResultWhenTimeRunsOut = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ResultWhenTimeRunsOut"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(ResultWhenTimeRunsOut, FunctionalTest_eventSetTimeLimit_Parms), 0x0000000000000080, Z_Construct_UEnum_FunctionalTesting_EFunctionalTestResult());
			UProperty* NewProp_NewTimeLimit = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NewTimeLimit"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(NewTimeLimit, FunctionalTest_eventSetTimeLimit_Parms), 0x0000000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Development"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/FunctionalTest.h"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_AFunctionalTest_NoRegister()
	{
		return AFunctionalTest::StaticClass();
	}
	UClass* Z_Construct_UClass_AFunctionalTest()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AActor();
			Z_Construct_UPackage_FunctionalTesting();
			OuterClass = AFunctionalTest::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20880080;

				OuterClass->LinkChild(Z_Construct_UFunction_AFunctionalTest_DebugGatherRelevantActors());
				OuterClass->LinkChild(Z_Construct_UFunction_AFunctionalTest_FinishTest());
				OuterClass->LinkChild(Z_Construct_UFunction_AFunctionalTest_LogMessage());
				OuterClass->LinkChild(Z_Construct_UFunction_AFunctionalTest_OnAdditionalTestFinishedMessageRequest());
				OuterClass->LinkChild(Z_Construct_UFunction_AFunctionalTest_OnWantsReRunCheck());
				OuterClass->LinkChild(Z_Construct_UFunction_AFunctionalTest_RegisterAutoDestroyActor());
				OuterClass->LinkChild(Z_Construct_UFunction_AFunctionalTest_SetTimeLimit());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bIsEnabled, AFunctionalTest, uint8);
				UProperty* NewProp_bIsEnabled = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bIsEnabled"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bIsEnabled, AFunctionalTest), 0x0000000000000015, CPP_BOOL_PROPERTY_BITMASK(bIsEnabled, AFunctionalTest), sizeof(uint8), false);
#if WITH_EDITORONLY_DATA
				UProperty* NewProp_RenderComp = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("RenderComp"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(RenderComp, AFunctionalTest), 0x0000000800080008, Z_Construct_UClass_UFuncTestRenderingComponent_NoRegister());
#endif // WITH_EDITORONLY_DATA
				UProperty* NewProp_Description = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Description"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(Description, AFunctionalTest), 0x0000000000000015);
				UProperty* NewProp_RandomNumbersStream = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("RandomNumbersStream"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(RandomNumbersStream, AFunctionalTest), 0x0000000000000005, Z_Construct_UScriptStruct_FRandomStream());
				UProperty* NewProp_AutoDestroyActors = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AutoDestroyActors"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(AutoDestroyActors, AFunctionalTest), 0x0000000000002000);
				UProperty* NewProp_AutoDestroyActors_Inner = new(EC_InternalUseOnlyConstructor, NewProp_AutoDestroyActors, TEXT("AutoDestroyActors"), RF_Public|RF_Transient|RF_Native) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UClass_AActor_NoRegister());
				UProperty* NewProp_OnTestFinished = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnTestFinished"), RF_Public|RF_Transient|RF_Native) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnTestFinished, AFunctionalTest), 0x0000000010080000, Z_Construct_UDelegateFunction_FunctionalTesting_FunctionalTestEventSignature__DelegateSignature());
				UProperty* NewProp_OnTestStart = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnTestStart"), RF_Public|RF_Transient|RF_Native) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnTestStart, AFunctionalTest), 0x0000000010080000, Z_Construct_UDelegateFunction_FunctionalTesting_FunctionalTestEventSignature__DelegateSignature());
				UProperty* NewProp_ObservationPoint = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ObservationPoint"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(ObservationPoint, AFunctionalTest), 0x0000000000000005, Z_Construct_UClass_AActor_NoRegister());
				UProperty* NewProp_TimesUpMessage = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("TimesUpMessage"), RF_Public|RF_Transient|RF_Native) UTextProperty(CPP_PROPERTY_BASE(TimesUpMessage, AFunctionalTest), 0x0000000000000005);
				UProperty* NewProp_TimeLimit = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("TimeLimit"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(TimeLimit, AFunctionalTest), 0x0000000000000015);
				UProperty* NewProp_TimesUpResult = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("TimesUpResult"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(TimesUpResult, AFunctionalTest), 0x0000000000000001, Z_Construct_UEnum_FunctionalTesting_EFunctionalTestResult());
				UProperty* NewProp_Result = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Result"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(Result, AFunctionalTest), 0x0000000000000004, Z_Construct_UEnum_FunctionalTesting_EFunctionalTestResult());
				UProperty* NewProp_SpriteComponent = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SpriteComponent"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(SpriteComponent, AFunctionalTest), 0x0000000000080008, Z_Construct_UClass_UBillboardComponent_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_AFunctionalTest_DebugGatherRelevantActors()); // 2504401558
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_AFunctionalTest_FinishTest()); // 928388063
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_AFunctionalTest_LogMessage()); // 1678521709
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_AFunctionalTest_OnAdditionalTestFinishedMessageRequest()); // 702047637
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_AFunctionalTest_OnWantsReRunCheck()); // 2754117840
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_AFunctionalTest_RegisterAutoDestroyActor()); // 3882662724
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_AFunctionalTest_SetTimeLimit()); // 3110724026
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("FunctionalTest.h"));
				MetaData->SetValue(OuterClass, TEXT("IsBlueprintBase"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/FunctionalTest.h"));
				MetaData->SetValue(NewProp_bIsEnabled, TEXT("Category"), TEXT("FunctionalTesting"));
				MetaData->SetValue(NewProp_bIsEnabled, TEXT("ModuleRelativePath"), TEXT("Classes/FunctionalTest.h"));
				MetaData->SetValue(NewProp_RenderComp, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_RenderComp, TEXT("ModuleRelativePath"), TEXT("Classes/FunctionalTest.h"));
				MetaData->SetValue(NewProp_Description, TEXT("Category"), TEXT("FunctionalTesting"));
				MetaData->SetValue(NewProp_Description, TEXT("ModuleRelativePath"), TEXT("Classes/FunctionalTest.h"));
				MetaData->SetValue(NewProp_RandomNumbersStream, TEXT("Category"), TEXT("FunctionalTesting"));
				MetaData->SetValue(NewProp_RandomNumbersStream, TEXT("ModuleRelativePath"), TEXT("Classes/FunctionalTest.h"));
				MetaData->SetValue(NewProp_AutoDestroyActors, TEXT("ModuleRelativePath"), TEXT("Classes/FunctionalTest.h"));
				MetaData->SetValue(NewProp_OnTestFinished, TEXT("ModuleRelativePath"), TEXT("Classes/FunctionalTest.h"));
				MetaData->SetValue(NewProp_OnTestFinished, TEXT("ToolTip"), TEXT("Called when the test is finished. Use it to clean up"));
				MetaData->SetValue(NewProp_OnTestStart, TEXT("ModuleRelativePath"), TEXT("Classes/FunctionalTest.h"));
				MetaData->SetValue(NewProp_OnTestStart, TEXT("ToolTip"), TEXT("Called when the test is started"));
				MetaData->SetValue(NewProp_ObservationPoint, TEXT("Category"), TEXT("FunctionalTesting"));
				MetaData->SetValue(NewProp_ObservationPoint, TEXT("ModuleRelativePath"), TEXT("Classes/FunctionalTest.h"));
				MetaData->SetValue(NewProp_TimesUpMessage, TEXT("Category"), TEXT("FunctionalTesting"));
				MetaData->SetValue(NewProp_TimesUpMessage, TEXT("ModuleRelativePath"), TEXT("Classes/FunctionalTest.h"));
				MetaData->SetValue(NewProp_TimeLimit, TEXT("Category"), TEXT("FunctionalTesting"));
				MetaData->SetValue(NewProp_TimeLimit, TEXT("ModuleRelativePath"), TEXT("Classes/FunctionalTest.h"));
				MetaData->SetValue(NewProp_TimeLimit, TEXT("ToolTip"), TEXT("Test's time limit. '0' means no limit"));
				MetaData->SetValue(NewProp_TimesUpResult, TEXT("Category"), TEXT("FunctionalTesting"));
				MetaData->SetValue(NewProp_TimesUpResult, TEXT("ModuleRelativePath"), TEXT("Classes/FunctionalTest.h"));
				MetaData->SetValue(NewProp_TimesUpResult, TEXT("ToolTip"), TEXT("If test is limited by time this is the result that will be returned when time runs out"));
				MetaData->SetValue(NewProp_Result, TEXT("Category"), TEXT("FunctionalTesting"));
				MetaData->SetValue(NewProp_Result, TEXT("ModuleRelativePath"), TEXT("Classes/FunctionalTest.h"));
				MetaData->SetValue(NewProp_SpriteComponent, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_SpriteComponent, TEXT("ModuleRelativePath"), TEXT("Classes/FunctionalTest.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AFunctionalTest(Z_Construct_UClass_AFunctionalTest, TEXT("AFunctionalTest"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(AFunctionalTest);
	UFunction* Z_Construct_UDelegateFunction_FunctionalTesting_FunctionalTestAISpawned__DelegateSignature()
	{
		struct _Script_FunctionalTesting_eventFunctionalTestAISpawned_Parms
		{
			AAIController* Controller;
			APawn* Pawn;
		};
		UObject* Outer=Z_Construct_UPackage_FunctionalTesting();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("FunctionalTestAISpawned__DelegateSignature"), RF_Public|RF_Transient|RF_Native) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_FunctionalTesting_eventFunctionalTestAISpawned_Parms));
			UProperty* NewProp_Pawn = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Pawn"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(Pawn, _Script_FunctionalTesting_eventFunctionalTestAISpawned_Parms), 0x0000000000000080, Z_Construct_UClass_APawn_NoRegister());
			UProperty* NewProp_Controller = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Controller"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(Controller, _Script_FunctionalTesting_eventFunctionalTestAISpawned_Parms), 0x0000000000000080, Z_Construct_UClass_AAIController_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/FunctionalAITest.h"));
#endif
		}
		return ReturnFunction;
	}
	UScriptStruct* Z_Construct_UScriptStruct_FAITestSpawnSet()
	{
		UPackage* Outer=Z_Construct_UPackage_FunctionalTesting();
		extern uint32 Get_Z_Construct_UScriptStruct_FAITestSpawnSet_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("AITestSpawnSet"), sizeof(FAITestSpawnSet), Get_Z_Construct_UScriptStruct_FAITestSpawnSet_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("AITestSpawnSet"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FAITestSpawnSet>, EStructFlags(0x00000001));
			UProperty* NewProp_FallbackSpawnLocation = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("FallbackSpawnLocation"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(FallbackSpawnLocation, FAITestSpawnSet), 0x0000000000000005, Z_Construct_UClass_AActor_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bEnabled, FAITestSpawnSet, uint8);
			UProperty* NewProp_bEnabled = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bEnabled"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bEnabled, FAITestSpawnSet), 0x0000000000000005, CPP_BOOL_PROPERTY_BITMASK(bEnabled, FAITestSpawnSet), sizeof(uint8), false);
			UProperty* NewProp_Name = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Name"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(Name, FAITestSpawnSet), 0x0000000000000005);
			UProperty* NewProp_SpawnInfoContainer = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("SpawnInfoContainer"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(SpawnInfoContainer, FAITestSpawnSet), 0x0000000000000005);
			UProperty* NewProp_SpawnInfoContainer_Inner = new(EC_InternalUseOnlyConstructor, NewProp_SpawnInfoContainer, TEXT("SpawnInfoContainer"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FAITestSpawnInfo());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/FunctionalAITest.h"));
			MetaData->SetValue(NewProp_FallbackSpawnLocation, TEXT("Category"), TEXT("AISpawn"));
			MetaData->SetValue(NewProp_FallbackSpawnLocation, TEXT("ModuleRelativePath"), TEXT("Classes/FunctionalAITest.h"));
			MetaData->SetValue(NewProp_FallbackSpawnLocation, TEXT("ToolTip"), TEXT("location used for spawning if spawn info doesn't define one"));
			MetaData->SetValue(NewProp_bEnabled, TEXT("Category"), TEXT("AISpawn"));
			MetaData->SetValue(NewProp_bEnabled, TEXT("ModuleRelativePath"), TEXT("Classes/FunctionalAITest.h"));
			MetaData->SetValue(NewProp_Name, TEXT("Category"), TEXT("AISpawn"));
			MetaData->SetValue(NewProp_Name, TEXT("ModuleRelativePath"), TEXT("Classes/FunctionalAITest.h"));
			MetaData->SetValue(NewProp_Name, TEXT("ToolTip"), TEXT("give the set a name to help identify it if need be"));
			MetaData->SetValue(NewProp_SpawnInfoContainer, TEXT("Category"), TEXT("AISpawn"));
			MetaData->SetValue(NewProp_SpawnInfoContainer, TEXT("ModuleRelativePath"), TEXT("Classes/FunctionalAITest.h"));
			MetaData->SetValue(NewProp_SpawnInfoContainer, TEXT("ToolTip"), TEXT("what to spawn"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FAITestSpawnSet_CRC() { return 3085412642U; }
	UScriptStruct* Z_Construct_UScriptStruct_FPendingDelayedSpawn()
	{
		UPackage* Outer=Z_Construct_UPackage_FunctionalTesting();
		extern uint32 Get_Z_Construct_UScriptStruct_FPendingDelayedSpawn_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("PendingDelayedSpawn"), sizeof(FPendingDelayedSpawn), Get_Z_Construct_UScriptStruct_FPendingDelayedSpawn_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("PendingDelayedSpawn"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), Z_Construct_UScriptStruct_FAITestSpawnInfo(), new UScriptStruct::TCppStructOps<FPendingDelayedSpawn>, EStructFlags(0x00000001));
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/FunctionalAITest.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FPendingDelayedSpawn_CRC() { return 2884941116U; }
	UScriptStruct* Z_Construct_UScriptStruct_FAITestSpawnInfo()
	{
		UPackage* Outer=Z_Construct_UPackage_FunctionalTesting();
		extern uint32 Get_Z_Construct_UScriptStruct_FAITestSpawnInfo_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("AITestSpawnInfo"), sizeof(FAITestSpawnInfo), Get_Z_Construct_UScriptStruct_FAITestSpawnInfo_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("AITestSpawnInfo"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FAITestSpawnInfo>, EStructFlags(0x00000001));
			UProperty* NewProp_SpawnDelay = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("SpawnDelay"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(SpawnDelay, FAITestSpawnInfo), 0x0000000000000005);
			UProperty* NewProp_NumberToSpawn = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("NumberToSpawn"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(NumberToSpawn, FAITestSpawnInfo), 0x0000000000000005);
			UProperty* NewProp_SpawnLocation = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("SpawnLocation"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(SpawnLocation, FAITestSpawnInfo), 0x0000000000000005, Z_Construct_UClass_AActor_NoRegister());
			UProperty* NewProp_BehaviorTree = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("BehaviorTree"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(BehaviorTree, FAITestSpawnInfo), 0x0000000000000005, Z_Construct_UClass_UBehaviorTree_NoRegister());
			UProperty* NewProp_TeamID = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("TeamID"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(TeamID, FAITestSpawnInfo), 0x0000000000000005, Z_Construct_UScriptStruct_FGenericTeamId());
			UProperty* NewProp_ControllerClass = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ControllerClass"), RF_Public|RF_Transient|RF_Native) UClassProperty(CPP_PROPERTY_BASE(ControllerClass, FAITestSpawnInfo), 0x0004000000000005, Z_Construct_UClass_AAIController_NoRegister());
			UProperty* NewProp_PawnClass = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("PawnClass"), RF_Public|RF_Transient|RF_Native) UClassProperty(CPP_PROPERTY_BASE(PawnClass, FAITestSpawnInfo), 0x0004000000000005, Z_Construct_UClass_APawn_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/FunctionalAITest.h"));
			MetaData->SetValue(NewProp_SpawnDelay, TEXT("Category"), TEXT("AISpawn"));
			MetaData->SetValue(NewProp_SpawnDelay, TEXT("ClampMin"), TEXT("0"));
			MetaData->SetValue(NewProp_SpawnDelay, TEXT("ModuleRelativePath"), TEXT("Classes/FunctionalAITest.h"));
			MetaData->SetValue(NewProp_SpawnDelay, TEXT("ToolTip"), TEXT("delay between consecutive spawn attempts"));
			MetaData->SetValue(NewProp_SpawnDelay, TEXT("UIMin"), TEXT("0"));
			MetaData->SetValue(NewProp_NumberToSpawn, TEXT("Category"), TEXT("AISpawn"));
			MetaData->SetValue(NewProp_NumberToSpawn, TEXT("ClampMin"), TEXT("1"));
			MetaData->SetValue(NewProp_NumberToSpawn, TEXT("ModuleRelativePath"), TEXT("Classes/FunctionalAITest.h"));
			MetaData->SetValue(NewProp_NumberToSpawn, TEXT("UIMin"), TEXT("1"));
			MetaData->SetValue(NewProp_SpawnLocation, TEXT("Category"), TEXT("AISpawn"));
			MetaData->SetValue(NewProp_SpawnLocation, TEXT("ModuleRelativePath"), TEXT("Classes/FunctionalAITest.h"));
			MetaData->SetValue(NewProp_SpawnLocation, TEXT("ToolTip"), TEXT("Where should AI be spawned"));
			MetaData->SetValue(NewProp_BehaviorTree, TEXT("Category"), TEXT("AISpawn"));
			MetaData->SetValue(NewProp_BehaviorTree, TEXT("ModuleRelativePath"), TEXT("Classes/FunctionalAITest.h"));
			MetaData->SetValue(NewProp_BehaviorTree, TEXT("ToolTip"), TEXT("if set will be applied to spawned AI"));
			MetaData->SetValue(NewProp_TeamID, TEXT("Category"), TEXT("AISpawn"));
			MetaData->SetValue(NewProp_TeamID, TEXT("ModuleRelativePath"), TEXT("Classes/FunctionalAITest.h"));
			MetaData->SetValue(NewProp_ControllerClass, TEXT("Category"), TEXT("AISpawn"));
			MetaData->SetValue(NewProp_ControllerClass, TEXT("ModuleRelativePath"), TEXT("Classes/FunctionalAITest.h"));
			MetaData->SetValue(NewProp_ControllerClass, TEXT("ToolTip"), TEXT("class to override default pawn's controller class. If None the default will be used"));
			MetaData->SetValue(NewProp_PawnClass, TEXT("Category"), TEXT("AISpawn"));
			MetaData->SetValue(NewProp_PawnClass, TEXT("ModuleRelativePath"), TEXT("Classes/FunctionalAITest.h"));
			MetaData->SetValue(NewProp_PawnClass, TEXT("ToolTip"), TEXT("Determines AI to be spawned"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FAITestSpawnInfo_CRC() { return 2221764700U; }
	UFunction* Z_Construct_UFunction_AFunctionalAITest_IsOneOfSpawnedPawns()
	{
		struct FunctionalAITest_eventIsOneOfSpawnedPawns_Parms
		{
			AActor* Actor;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_AFunctionalAITest();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("IsOneOfSpawnedPawns"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020400, 65535, sizeof(FunctionalAITest_eventIsOneOfSpawnedPawns_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, FunctionalAITest_eventIsOneOfSpawnedPawns_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, FunctionalAITest_eventIsOneOfSpawnedPawns_Parms), 0x0000000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, FunctionalAITest_eventIsOneOfSpawnedPawns_Parms), sizeof(bool), true);
			UProperty* NewProp_Actor = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Actor"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(Actor, FunctionalAITest_eventIsOneOfSpawnedPawns_Parms), 0x0000000000000080, Z_Construct_UClass_AActor_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Development"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/FunctionalAITest.h"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_AFunctionalAITest_NoRegister()
	{
		return AFunctionalAITest::StaticClass();
	}
	UClass* Z_Construct_UClass_AFunctionalAITest()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AFunctionalTest();
			Z_Construct_UPackage_FunctionalTesting();
			OuterClass = AFunctionalAITest::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20880080;

				OuterClass->LinkChild(Z_Construct_UFunction_AFunctionalAITest_IsOneOfSpawnedPawns());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_OnAllAISPawned = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnAllAISPawned"), RF_Public|RF_Transient|RF_Native) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnAllAISPawned, AFunctionalAITest), 0x0000080010080000, Z_Construct_UDelegateFunction_FunctionalTesting_FunctionalTestEventSignature__DelegateSignature());
				UProperty* NewProp_OnAISpawned = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnAISpawned"), RF_Public|RF_Transient|RF_Native) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnAISpawned, AFunctionalAITest), 0x0000080010080000, Z_Construct_UDelegateFunction_FunctionalTesting_FunctionalTestAISpawned__DelegateSignature());
				UProperty* NewProp_PendingDelayedSpawns = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("PendingDelayedSpawns"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(PendingDelayedSpawns, AFunctionalAITest), 0x0000080000000014);
				UProperty* NewProp_PendingDelayedSpawns_Inner = new(EC_InternalUseOnlyConstructor, NewProp_PendingDelayedSpawns, TEXT("PendingDelayedSpawns"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FPendingDelayedSpawn());
				UProperty* NewProp_SpawnedPawns = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SpawnedPawns"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(SpawnedPawns, AFunctionalAITest), 0x0000080000000014);
				UProperty* NewProp_SpawnedPawns_Inner = new(EC_InternalUseOnlyConstructor, NewProp_SpawnedPawns, TEXT("SpawnedPawns"), RF_Public|RF_Transient|RF_Native) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UClass_APawn_NoRegister());
				UProperty* NewProp_SpawnLocationRandomizationRange = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SpawnLocationRandomizationRange"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(SpawnLocationRandomizationRange, AFunctionalAITest), 0x0000080000000015);
				UProperty* NewProp_SpawnSets = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SpawnSets"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(SpawnSets, AFunctionalAITest), 0x0000080000000015);
				UProperty* NewProp_SpawnSets_Inner = new(EC_InternalUseOnlyConstructor, NewProp_SpawnSets, TEXT("SpawnSets"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FAITestSpawnSet());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_AFunctionalAITest_IsOneOfSpawnedPawns()); // 763826505
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("FunctionalAITest.h"));
				MetaData->SetValue(OuterClass, TEXT("IsBlueprintBase"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/FunctionalAITest.h"));
				MetaData->SetValue(NewProp_OnAllAISPawned, TEXT("ModuleRelativePath"), TEXT("Classes/FunctionalAITest.h"));
				MetaData->SetValue(NewProp_OnAllAISPawned, TEXT("ToolTip"), TEXT("Called when a all AI finished spawning"));
				MetaData->SetValue(NewProp_OnAISpawned, TEXT("ModuleRelativePath"), TEXT("Classes/FunctionalAITest.h"));
				MetaData->SetValue(NewProp_OnAISpawned, TEXT("ToolTip"), TEXT("Called when a single AI finished spawning"));
				MetaData->SetValue(NewProp_PendingDelayedSpawns, TEXT("Category"), TEXT("AITest"));
				MetaData->SetValue(NewProp_PendingDelayedSpawns, TEXT("ModuleRelativePath"), TEXT("Classes/FunctionalAITest.h"));
				MetaData->SetValue(NewProp_SpawnedPawns, TEXT("Category"), TEXT("AITest"));
				MetaData->SetValue(NewProp_SpawnedPawns, TEXT("ModuleRelativePath"), TEXT("Classes/FunctionalAITest.h"));
				MetaData->SetValue(NewProp_SpawnLocationRandomizationRange, TEXT("Category"), TEXT("AITest"));
				MetaData->SetValue(NewProp_SpawnLocationRandomizationRange, TEXT("ModuleRelativePath"), TEXT("Classes/FunctionalAITest.h"));
				MetaData->SetValue(NewProp_SpawnLocationRandomizationRange, TEXT("UIMin"), TEXT("0.0"));
				MetaData->SetValue(NewProp_SpawnSets, TEXT("Category"), TEXT("AITest"));
				MetaData->SetValue(NewProp_SpawnSets, TEXT("ModuleRelativePath"), TEXT("Classes/FunctionalAITest.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AFunctionalAITest(Z_Construct_UClass_AFunctionalAITest, TEXT("AFunctionalAITest"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(AFunctionalAITest);
	UFunction* Z_Construct_UFunction_UFunctionalTestingManager_RunAllFunctionalTests()
	{
		struct FunctionalTestingManager_eventRunAllFunctionalTests_Parms
		{
			UObject* WorldContext;
			bool bNewLog;
			bool bRunLooped;
			bool bWaitForNavigationBuildFinish;
			FString FailedTestsReproString;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UFunctionalTestingManager();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("RunAllFunctionalTests"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(FunctionalTestingManager_eventRunAllFunctionalTests_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, FunctionalTestingManager_eventRunAllFunctionalTests_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, FunctionalTestingManager_eventRunAllFunctionalTests_Parms), 0x0000000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, FunctionalTestingManager_eventRunAllFunctionalTests_Parms), sizeof(bool), true);
			UProperty* NewProp_FailedTestsReproString = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("FailedTestsReproString"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(FailedTestsReproString, FunctionalTestingManager_eventRunAllFunctionalTests_Parms), 0x0000000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bWaitForNavigationBuildFinish, FunctionalTestingManager_eventRunAllFunctionalTests_Parms, bool);
			UProperty* NewProp_bWaitForNavigationBuildFinish = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("bWaitForNavigationBuildFinish"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bWaitForNavigationBuildFinish, FunctionalTestingManager_eventRunAllFunctionalTests_Parms), 0x0000000000000080, CPP_BOOL_PROPERTY_BITMASK(bWaitForNavigationBuildFinish, FunctionalTestingManager_eventRunAllFunctionalTests_Parms), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bRunLooped, FunctionalTestingManager_eventRunAllFunctionalTests_Parms, bool);
			UProperty* NewProp_bRunLooped = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("bRunLooped"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bRunLooped, FunctionalTestingManager_eventRunAllFunctionalTests_Parms), 0x0000000000000080, CPP_BOOL_PROPERTY_BITMASK(bRunLooped, FunctionalTestingManager_eventRunAllFunctionalTests_Parms), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bNewLog, FunctionalTestingManager_eventRunAllFunctionalTests_Parms, bool);
			UProperty* NewProp_bNewLog = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("bNewLog"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bNewLog, FunctionalTestingManager_eventRunAllFunctionalTests_Parms), 0x0000000000000080, CPP_BOOL_PROPERTY_BITMASK(bNewLog, FunctionalTestingManager_eventRunAllFunctionalTests_Parms), sizeof(bool), true);
			UProperty* NewProp_WorldContext = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("WorldContext"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(WorldContext, FunctionalTestingManager_eventRunAllFunctionalTests_Parms), 0x0000000000000080, Z_Construct_UClass_UObject_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("CallableWithoutWorldContext"), TEXT(""));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("FunctionalTesting"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_bNewLog"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_bRunLooped"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_bWaitForNavigationBuildFinish"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/FunctionalTestingManager.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Triggers in sequence all functional tests found on the level.\n    @return true if any tests have been triggered"));
			MetaData->SetValue(ReturnFunction, TEXT("WorldContext"), TEXT("WorldContext"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UFunctionalTestingManager_NoRegister()
	{
		return UFunctionalTestingManager::StaticClass();
	}
	UClass* Z_Construct_UClass_UFunctionalTestingManager()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UBlueprintFunctionLibrary();
			Z_Construct_UPackage_FunctionalTesting();
			OuterClass = UFunctionalTestingManager::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20880080;

				OuterClass->LinkChild(Z_Construct_UFunction_UFunctionalTestingManager_RunAllFunctionalTests());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_OnSetupTests = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnSetupTests"), RF_Public|RF_Transient|RF_Native) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnSetupTests, UFunctionalTestingManager), 0x0000000010080000, Z_Construct_UDelegateFunction_FunctionalTesting_FunctionalTestEventSignature__DelegateSignature());
				UProperty* NewProp_AllTests = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AllTests"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(AllTests, UFunctionalTestingManager), 0x0000000000002000);
				UProperty* NewProp_AllTests_Inner = new(EC_InternalUseOnlyConstructor, NewProp_AllTests, TEXT("AllTests"), RF_Public|RF_Transient|RF_Native) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UClass_AFunctionalTest_NoRegister());
				UProperty* NewProp_TestsLeft = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("TestsLeft"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(TestsLeft, UFunctionalTestingManager), 0x0000000000002000);
				UProperty* NewProp_TestsLeft_Inner = new(EC_InternalUseOnlyConstructor, NewProp_TestsLeft, TEXT("TestsLeft"), RF_Public|RF_Transient|RF_Native) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UClass_AFunctionalTest_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UFunctionalTestingManager_RunAllFunctionalTests()); // 1236973378
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("FunctionalTestingManager.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/FunctionalTestingManager.h"));
				MetaData->SetValue(NewProp_OnSetupTests, TEXT("ModuleRelativePath"), TEXT("Classes/FunctionalTestingManager.h"));
				MetaData->SetValue(NewProp_AllTests, TEXT("ModuleRelativePath"), TEXT("Classes/FunctionalTestingManager.h"));
				MetaData->SetValue(NewProp_TestsLeft, TEXT("ModuleRelativePath"), TEXT("Classes/FunctionalTestingManager.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UFunctionalTestingManager(Z_Construct_UClass_UFunctionalTestingManager, TEXT("UFunctionalTestingManager"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UFunctionalTestingManager);
	UPackage* Z_Construct_UPackage_FunctionalTesting()
	{
		static UPackage* ReturnPackage = NULL;
		if (!ReturnPackage)
		{
			ReturnPackage = CastChecked<UPackage>(StaticFindObjectFast(UPackage::StaticClass(), NULL, FName(TEXT("/Script/FunctionalTesting")), false, false));
			ReturnPackage->SetPackageFlags(PKG_CompiledIn | 0x00000000);
			FGuid Guid;
			Guid.A = 0x2204173D;
			Guid.B = 0xA98156AB;
			Guid.C = 0x00000000;
			Guid.D = 0x00000000;
			ReturnPackage->SetGuid(Guid);

			Z_Construct_UDelegateFunction_FunctionalTesting_FunctionalTestEventSignature__DelegateSignature();
			Z_Construct_UDelegateFunction_FunctionalTesting_FunctionalTestAISpawned__DelegateSignature();
		}
		return ReturnPackage;
	}
#endif

PRAGMA_ENABLE_DEPRECATION_WARNINGS
