// Copyright 1998-2015 Epic Games, Inc. All Rights Reserved.
/*===========================================================================
	C++ class header boilerplate exported from UnrealHeaderTool.
	This is automatically generated by the tools.
	DO NOT modify this manually! Edit the corresponding .h files instead!
===========================================================================*/

#include "ObjectBase.h"

PRAGMA_DISABLE_DEPRECATION_WARNINGS
class UObject;
struct FGameplayAbilityTargetingLocationInfo;
class UAnimMontage;
class UGameplayEffect;
struct FGameplayEffectSpecHandle;
class USkeletalMeshComponent;
class AActor;
struct FGameplayAbilityActorInfo;
struct FGameplayAbilityTargetDataHandle;
struct FGameplayEffectContextHandle;
struct FGameplayTag;
struct FGameplayCueParameters;
struct FGameplayTagContainer;
struct FActiveGameplayEffectHandle;
struct FGameplayEventData;
#ifdef GAMEPLAYABILITIES_GameplayAbility_generated_h
#error "GameplayAbility.generated.h already included, missing '#pragma once' in GameplayAbility.h"
#endif
#define GAMEPLAYABILITIES_GameplayAbility_generated_h

#define Engine_Source_Runtime_GameplayAbilities_Public_Abilities_GameplayAbility_h_82_GENERATED_BODY \
	friend GAMEPLAYABILITIES_API class UScriptStruct* Z_Construct_UScriptStruct_FAbilityTriggerData(); \
	GAMEPLAYABILITIES_API static class UScriptStruct* StaticStruct();


#define Engine_Source_Runtime_GameplayAbilities_Public_Abilities_GameplayAbility_h_103_RPC_WRAPPERS \
 \
	DECLARE_FUNCTION(execGetCurrentSourceObject) \
	{ \
		P_FINISH; \
		*(UObject**)Z_Param__Result=this->GetCurrentSourceObject(); \
	} \
 \
	DECLARE_FUNCTION(execGetAbilityLevel) \
	{ \
		P_FINISH; \
		*(int32*)Z_Param__Result=this->GetAbilityLevel(); \
	} \
 \
	DECLARE_FUNCTION(execMakeTargetLocationInfoFromOwnerSkeletalMeshComponent) \
	{ \
		P_GET_PROPERTY(UNameProperty,Z_Param_SocketName); \
		P_FINISH; \
		*(FGameplayAbilityTargetingLocationInfo*)Z_Param__Result=this->MakeTargetLocationInfoFromOwnerSkeletalMeshComponent(Z_Param_SocketName); \
	} \
 \
	DECLARE_FUNCTION(execMakeTargetLocationInfoFromOwnerActor) \
	{ \
		P_FINISH; \
		*(FGameplayAbilityTargetingLocationInfo*)Z_Param__Result=this->MakeTargetLocationInfoFromOwnerActor(); \
	} \
 \
	DECLARE_FUNCTION(execMontageStop) \
	{ \
		P_GET_PROPERTY(UFloatProperty,Z_Param_OverrideBlendOutTime); \
		P_FINISH; \
		this->MontageStop(Z_Param_OverrideBlendOutTime); \
	} \
 \
	DECLARE_FUNCTION(execMontageSetNextSectionName) \
	{ \
		P_GET_PROPERTY(UNameProperty,Z_Param_FromSectionName); \
		P_GET_PROPERTY(UNameProperty,Z_Param_ToSectionName); \
		P_FINISH; \
		this->MontageSetNextSectionName(Z_Param_FromSectionName,Z_Param_ToSectionName); \
	} \
 \
	DECLARE_FUNCTION(execMontageJumpToSection) \
	{ \
		P_GET_PROPERTY(UNameProperty,Z_Param_SectionName); \
		P_FINISH; \
		this->MontageJumpToSection(Z_Param_SectionName); \
	} \
 \
	DECLARE_FUNCTION(execSetShouldBlockOtherAbilities) \
	{ \
		P_GET_UBOOL(Z_Param_bShouldBlockAbilities); \
		P_FINISH; \
		this->SetShouldBlockOtherAbilities(Z_Param_bShouldBlockAbilities); \
	} \
 \
	DECLARE_FUNCTION(execSetCanBeCanceled) \
	{ \
		P_GET_UBOOL(Z_Param_bCanBeCanceled); \
		P_FINISH; \
		this->SetCanBeCanceled(Z_Param_bCanBeCanceled); \
	} \
 \
	DECLARE_FUNCTION(execGetCurrentMontage) \
	{ \
		P_FINISH; \
		*(UAnimMontage**)Z_Param__Result=this->GetCurrentMontage(); \
	} \
 \
	DECLARE_FUNCTION(execGetOutgoingGameplayEffectSpec) \
	{ \
		P_GET_OBJECT(UGameplayEffect,Z_Param_GameplayEffect); \
		P_GET_PROPERTY(UFloatProperty,Z_Param_Level); \
		P_FINISH; \
		*(FGameplayEffectSpecHandle*)Z_Param__Result=this->GetOutgoingGameplayEffectSpec(Z_Param_GameplayEffect,Z_Param_Level); \
	} \
 \
	DECLARE_FUNCTION(execMakeOutgoingGameplayEffectSpec) \
	{ \
		P_GET_OBJECT(UClass,Z_Param_GameplayEffectClass); \
		P_GET_PROPERTY(UFloatProperty,Z_Param_Level); \
		P_FINISH; \
		*(FGameplayEffectSpecHandle*)Z_Param__Result=this->MakeOutgoingGameplayEffectSpec(Z_Param_GameplayEffectClass,Z_Param_Level); \
	} \
 \
	DECLARE_FUNCTION(execGetOwningComponentFromActorInfo) \
	{ \
		P_FINISH; \
		*(USkeletalMeshComponent**)Z_Param__Result=this->GetOwningComponentFromActorInfo(); \
	} \
 \
	DECLARE_FUNCTION(execGetAvatarActorFromActorInfo) \
	{ \
		P_FINISH; \
		*(AActor**)Z_Param__Result=this->GetAvatarActorFromActorInfo(); \
	} \
 \
	DECLARE_FUNCTION(execGetOwningActorFromActorInfo) \
	{ \
		P_FINISH; \
		*(AActor**)Z_Param__Result=this->GetOwningActorFromActorInfo(); \
	} \
 \
	DECLARE_FUNCTION(execGetActorInfo) \
	{ \
		P_FINISH; \
		*(FGameplayAbilityActorInfo*)Z_Param__Result=this->GetActorInfo(); \
	} \
 \
	DECLARE_FUNCTION(execGetContextFromOwner) \
	{ \
		P_GET_STRUCT(FGameplayAbilityTargetDataHandle,Z_Param_OptionalTargetData); \
		P_FINISH; \
		*(FGameplayEffectContextHandle*)Z_Param__Result=this->GetContextFromOwner(Z_Param_OptionalTargetData); \
	} \
 \
	DECLARE_FUNCTION(execK2_RemoveGameplayCue) \
	{ \
		P_GET_STRUCT(FGameplayTag,Z_Param_GameplayCueTag); \
		P_FINISH; \
		this->K2_RemoveGameplayCue(Z_Param_GameplayCueTag); \
	} \
 \
	DECLARE_FUNCTION(execK2_AddGameplayCue) \
	{ \
		P_GET_STRUCT(FGameplayTag,Z_Param_GameplayCueTag); \
		P_GET_STRUCT(FGameplayEffectContextHandle,Z_Param_Context); \
		P_GET_UBOOL(Z_Param_bRemoveOnAbilityEnd); \
		P_FINISH; \
		this->K2_AddGameplayCue(Z_Param_GameplayCueTag,Z_Param_Context,Z_Param_bRemoveOnAbilityEnd); \
	} \
 \
	DECLARE_FUNCTION(execK2_ExecuteGameplayCueWithParams) \
	{ \
		P_GET_STRUCT(FGameplayTag,Z_Param_GameplayCueTag); \
		P_GET_STRUCT_REF(FGameplayCueParameters,Z_Param_Out_GameplayCueParameters); \
		P_FINISH; \
		this->K2_ExecuteGameplayCueWithParams(Z_Param_GameplayCueTag,Z_Param_Out_GameplayCueParameters); \
	} \
 \
	DECLARE_FUNCTION(execK2_ExecuteGameplayCue) \
	{ \
		P_GET_STRUCT(FGameplayTag,Z_Param_GameplayCueTag); \
		P_GET_STRUCT(FGameplayEffectContextHandle,Z_Param_Context); \
		P_FINISH; \
		this->K2_ExecuteGameplayCue(Z_Param_GameplayCueTag,Z_Param_Context); \
	} \
 \
	DECLARE_FUNCTION(execBP_RemoveGameplayEffectFromOwnerWithGrantedTags) \
	{ \
		P_GET_STRUCT(FGameplayTagContainer,Z_Param_WithGrantedTags); \
		P_GET_PROPERTY(UIntProperty,Z_Param_StacksToRemove); \
		P_FINISH; \
		this->BP_RemoveGameplayEffectFromOwnerWithGrantedTags(Z_Param_WithGrantedTags,Z_Param_StacksToRemove); \
	} \
 \
	DECLARE_FUNCTION(execBP_RemoveGameplayEffectFromOwnerWithAssetTags) \
	{ \
		P_GET_STRUCT(FGameplayTagContainer,Z_Param_WithAssetTags); \
		P_GET_PROPERTY(UIntProperty,Z_Param_StacksToRemove); \
		P_FINISH; \
		this->BP_RemoveGameplayEffectFromOwnerWithAssetTags(Z_Param_WithAssetTags,Z_Param_StacksToRemove); \
	} \
 \
	DECLARE_FUNCTION(execK2_ApplyGameplayEffectSpecToTarget) \
	{ \
		P_GET_STRUCT(FGameplayEffectSpecHandle,Z_Param_EffectSpecHandle); \
		P_GET_STRUCT(FGameplayAbilityTargetDataHandle,Z_Param_TargetData); \
		P_FINISH; \
		*(TArray<FActiveGameplayEffectHandle>*)Z_Param__Result=this->K2_ApplyGameplayEffectSpecToTarget(Z_Param_EffectSpecHandle,Z_Param_TargetData); \
	} \
 \
	DECLARE_FUNCTION(execK2_ApplyGameplayEffectToTarget) \
	{ \
		P_GET_STRUCT(FGameplayAbilityTargetDataHandle,Z_Param_TargetData); \
		P_GET_OBJECT(UGameplayEffect,Z_Param_GameplayEffect); \
		P_GET_PROPERTY(UIntProperty,Z_Param_GameplayEffectLevel); \
		P_FINISH; \
		*(TArray<FActiveGameplayEffectHandle>*)Z_Param__Result=this->K2_ApplyGameplayEffectToTarget(Z_Param_TargetData,Z_Param_GameplayEffect,Z_Param_GameplayEffectLevel); \
	} \
 \
	DECLARE_FUNCTION(execBP_ApplyGameplayEffectToTarget) \
	{ \
		P_GET_STRUCT(FGameplayAbilityTargetDataHandle,Z_Param_TargetData); \
		P_GET_OBJECT(UClass,Z_Param_GameplayEffectClass); \
		P_GET_PROPERTY(UIntProperty,Z_Param_GameplayEffectLevel); \
		P_FINISH; \
		*(TArray<FActiveGameplayEffectHandle>*)Z_Param__Result=this->BP_ApplyGameplayEffectToTarget(Z_Param_TargetData,Z_Param_GameplayEffectClass,Z_Param_GameplayEffectLevel); \
	} \
 \
	DECLARE_FUNCTION(execK2_ApplyGameplayEffectSpecToOwner) \
	{ \
		P_GET_STRUCT(FGameplayEffectSpecHandle,Z_Param_EffectSpecHandle); \
		P_FINISH; \
		*(FActiveGameplayEffectHandle*)Z_Param__Result=this->K2_ApplyGameplayEffectSpecToOwner(Z_Param_EffectSpecHandle); \
	} \
 \
	DECLARE_FUNCTION(execK2_ApplyGameplayEffectToOwner) \
	{ \
		P_GET_OBJECT(UGameplayEffect,Z_Param_GameplayEffect); \
		P_GET_PROPERTY(UIntProperty,Z_Param_GameplayEffectLevel); \
		P_FINISH; \
		*(FActiveGameplayEffectHandle*)Z_Param__Result=this->K2_ApplyGameplayEffectToOwner(Z_Param_GameplayEffect,Z_Param_GameplayEffectLevel); \
	} \
 \
	DECLARE_FUNCTION(execBP_ApplyGameplayEffectToOwner) \
	{ \
		P_GET_OBJECT(UClass,Z_Param_GameplayEffectClass); \
		P_GET_PROPERTY(UIntProperty,Z_Param_GameplayEffectLevel); \
		P_FINISH; \
		*(FActiveGameplayEffectHandle*)Z_Param__Result=this->BP_ApplyGameplayEffectToOwner(Z_Param_GameplayEffectClass,Z_Param_GameplayEffectLevel); \
	} \
 \
	DECLARE_FUNCTION(execK2_EndAbility) \
	{ \
		P_FINISH; \
		this->K2_EndAbility(); \
	} \
 \
	DECLARE_FUNCTION(execEndAbilityState) \
	{ \
		P_GET_PROPERTY(UNameProperty,Z_Param_OptionalStateNameToEnd); \
		P_FINISH; \
		this->EndAbilityState(Z_Param_OptionalStateNameToEnd); \
	} \
 \
	DECLARE_FUNCTION(execCancelTaskByInstanceName) \
	{ \
		P_GET_PROPERTY(UNameProperty,Z_Param_InstanceName); \
		P_FINISH; \
		this->CancelTaskByInstanceName(Z_Param_InstanceName); \
	} \
 \
	DECLARE_FUNCTION(execEndTaskByInstanceName) \
	{ \
		P_GET_PROPERTY(UNameProperty,Z_Param_InstanceName); \
		P_FINISH; \
		this->EndTaskByInstanceName(Z_Param_InstanceName); \
	} \
 \
	DECLARE_FUNCTION(execConfirmTaskByInstanceName) \
	{ \
		P_GET_PROPERTY(UNameProperty,Z_Param_InstanceName); \
		P_GET_UBOOL(Z_Param_bEndTask); \
		P_FINISH; \
		this->ConfirmTaskByInstanceName(Z_Param_InstanceName,Z_Param_bEndTask); \
	} \
 \
	DECLARE_FUNCTION(execK2_CheckAbilityCost) \
	{ \
		P_FINISH; \
		*(bool*)Z_Param__Result=this->K2_CheckAbilityCost(); \
	} \
 \
	DECLARE_FUNCTION(execK2_CheckAbilityCooldown) \
	{ \
		P_FINISH; \
		*(bool*)Z_Param__Result=this->K2_CheckAbilityCooldown(); \
	} \
 \
	DECLARE_FUNCTION(execK2_CommitAbilityCost) \
	{ \
		P_GET_UBOOL(Z_Param_BroadcastCommitEvent); \
		P_FINISH; \
		*(bool*)Z_Param__Result=this->K2_CommitAbilityCost(Z_Param_BroadcastCommitEvent); \
	} \
 \
	DECLARE_FUNCTION(execK2_CommitAbilityCooldown) \
	{ \
		P_GET_UBOOL(Z_Param_BroadcastCommitEvent); \
		P_FINISH; \
		*(bool*)Z_Param__Result=this->K2_CommitAbilityCooldown(Z_Param_BroadcastCommitEvent); \
	} \
 \
	DECLARE_FUNCTION(execK2_CommitAbility) \
	{ \
		P_FINISH; \
		*(bool*)Z_Param__Result=this->K2_CommitAbility(); \
	} \
 \
	DECLARE_FUNCTION(execSendGameplayEvent) \
	{ \
		P_GET_STRUCT(FGameplayTag,Z_Param_EventTag); \
		P_GET_STRUCT(FGameplayEventData,Z_Param_Payload); \
		P_FINISH; \
		this->SendGameplayEvent(Z_Param_EventTag,Z_Param_Payload); \
	}


#define Engine_Source_Runtime_GameplayAbilities_Public_Abilities_GameplayAbility_h_103_RPC_WRAPPERS_NO_PURE_DECLS \
 \
	DECLARE_FUNCTION(execGetCurrentSourceObject) \
	{ \
		P_FINISH; \
		*(UObject**)Z_Param__Result=this->GetCurrentSourceObject(); \
	} \
 \
	DECLARE_FUNCTION(execGetAbilityLevel) \
	{ \
		P_FINISH; \
		*(int32*)Z_Param__Result=this->GetAbilityLevel(); \
	} \
 \
	DECLARE_FUNCTION(execMakeTargetLocationInfoFromOwnerSkeletalMeshComponent) \
	{ \
		P_GET_PROPERTY(UNameProperty,Z_Param_SocketName); \
		P_FINISH; \
		*(FGameplayAbilityTargetingLocationInfo*)Z_Param__Result=this->MakeTargetLocationInfoFromOwnerSkeletalMeshComponent(Z_Param_SocketName); \
	} \
 \
	DECLARE_FUNCTION(execMakeTargetLocationInfoFromOwnerActor) \
	{ \
		P_FINISH; \
		*(FGameplayAbilityTargetingLocationInfo*)Z_Param__Result=this->MakeTargetLocationInfoFromOwnerActor(); \
	} \
 \
	DECLARE_FUNCTION(execMontageStop) \
	{ \
		P_GET_PROPERTY(UFloatProperty,Z_Param_OverrideBlendOutTime); \
		P_FINISH; \
		this->MontageStop(Z_Param_OverrideBlendOutTime); \
	} \
 \
	DECLARE_FUNCTION(execMontageSetNextSectionName) \
	{ \
		P_GET_PROPERTY(UNameProperty,Z_Param_FromSectionName); \
		P_GET_PROPERTY(UNameProperty,Z_Param_ToSectionName); \
		P_FINISH; \
		this->MontageSetNextSectionName(Z_Param_FromSectionName,Z_Param_ToSectionName); \
	} \
 \
	DECLARE_FUNCTION(execMontageJumpToSection) \
	{ \
		P_GET_PROPERTY(UNameProperty,Z_Param_SectionName); \
		P_FINISH; \
		this->MontageJumpToSection(Z_Param_SectionName); \
	} \
 \
	DECLARE_FUNCTION(execSetShouldBlockOtherAbilities) \
	{ \
		P_GET_UBOOL(Z_Param_bShouldBlockAbilities); \
		P_FINISH; \
		this->SetShouldBlockOtherAbilities(Z_Param_bShouldBlockAbilities); \
	} \
 \
	DECLARE_FUNCTION(execSetCanBeCanceled) \
	{ \
		P_GET_UBOOL(Z_Param_bCanBeCanceled); \
		P_FINISH; \
		this->SetCanBeCanceled(Z_Param_bCanBeCanceled); \
	} \
 \
	DECLARE_FUNCTION(execGetCurrentMontage) \
	{ \
		P_FINISH; \
		*(UAnimMontage**)Z_Param__Result=this->GetCurrentMontage(); \
	} \
 \
	DECLARE_FUNCTION(execGetOutgoingGameplayEffectSpec) \
	{ \
		P_GET_OBJECT(UGameplayEffect,Z_Param_GameplayEffect); \
		P_GET_PROPERTY(UFloatProperty,Z_Param_Level); \
		P_FINISH; \
		*(FGameplayEffectSpecHandle*)Z_Param__Result=this->GetOutgoingGameplayEffectSpec(Z_Param_GameplayEffect,Z_Param_Level); \
	} \
 \
	DECLARE_FUNCTION(execMakeOutgoingGameplayEffectSpec) \
	{ \
		P_GET_OBJECT(UClass,Z_Param_GameplayEffectClass); \
		P_GET_PROPERTY(UFloatProperty,Z_Param_Level); \
		P_FINISH; \
		*(FGameplayEffectSpecHandle*)Z_Param__Result=this->MakeOutgoingGameplayEffectSpec(Z_Param_GameplayEffectClass,Z_Param_Level); \
	} \
 \
	DECLARE_FUNCTION(execGetOwningComponentFromActorInfo) \
	{ \
		P_FINISH; \
		*(USkeletalMeshComponent**)Z_Param__Result=this->GetOwningComponentFromActorInfo(); \
	} \
 \
	DECLARE_FUNCTION(execGetAvatarActorFromActorInfo) \
	{ \
		P_FINISH; \
		*(AActor**)Z_Param__Result=this->GetAvatarActorFromActorInfo(); \
	} \
 \
	DECLARE_FUNCTION(execGetOwningActorFromActorInfo) \
	{ \
		P_FINISH; \
		*(AActor**)Z_Param__Result=this->GetOwningActorFromActorInfo(); \
	} \
 \
	DECLARE_FUNCTION(execGetActorInfo) \
	{ \
		P_FINISH; \
		*(FGameplayAbilityActorInfo*)Z_Param__Result=this->GetActorInfo(); \
	} \
 \
	DECLARE_FUNCTION(execGetContextFromOwner) \
	{ \
		P_GET_STRUCT(FGameplayAbilityTargetDataHandle,Z_Param_OptionalTargetData); \
		P_FINISH; \
		*(FGameplayEffectContextHandle*)Z_Param__Result=this->GetContextFromOwner(Z_Param_OptionalTargetData); \
	} \
 \
	DECLARE_FUNCTION(execK2_RemoveGameplayCue) \
	{ \
		P_GET_STRUCT(FGameplayTag,Z_Param_GameplayCueTag); \
		P_FINISH; \
		this->K2_RemoveGameplayCue(Z_Param_GameplayCueTag); \
	} \
 \
	DECLARE_FUNCTION(execK2_AddGameplayCue) \
	{ \
		P_GET_STRUCT(FGameplayTag,Z_Param_GameplayCueTag); \
		P_GET_STRUCT(FGameplayEffectContextHandle,Z_Param_Context); \
		P_GET_UBOOL(Z_Param_bRemoveOnAbilityEnd); \
		P_FINISH; \
		this->K2_AddGameplayCue(Z_Param_GameplayCueTag,Z_Param_Context,Z_Param_bRemoveOnAbilityEnd); \
	} \
 \
	DECLARE_FUNCTION(execK2_ExecuteGameplayCueWithParams) \
	{ \
		P_GET_STRUCT(FGameplayTag,Z_Param_GameplayCueTag); \
		P_GET_STRUCT_REF(FGameplayCueParameters,Z_Param_Out_GameplayCueParameters); \
		P_FINISH; \
		this->K2_ExecuteGameplayCueWithParams(Z_Param_GameplayCueTag,Z_Param_Out_GameplayCueParameters); \
	} \
 \
	DECLARE_FUNCTION(execK2_ExecuteGameplayCue) \
	{ \
		P_GET_STRUCT(FGameplayTag,Z_Param_GameplayCueTag); \
		P_GET_STRUCT(FGameplayEffectContextHandle,Z_Param_Context); \
		P_FINISH; \
		this->K2_ExecuteGameplayCue(Z_Param_GameplayCueTag,Z_Param_Context); \
	} \
 \
	DECLARE_FUNCTION(execBP_RemoveGameplayEffectFromOwnerWithGrantedTags) \
	{ \
		P_GET_STRUCT(FGameplayTagContainer,Z_Param_WithGrantedTags); \
		P_GET_PROPERTY(UIntProperty,Z_Param_StacksToRemove); \
		P_FINISH; \
		this->BP_RemoveGameplayEffectFromOwnerWithGrantedTags(Z_Param_WithGrantedTags,Z_Param_StacksToRemove); \
	} \
 \
	DECLARE_FUNCTION(execBP_RemoveGameplayEffectFromOwnerWithAssetTags) \
	{ \
		P_GET_STRUCT(FGameplayTagContainer,Z_Param_WithAssetTags); \
		P_GET_PROPERTY(UIntProperty,Z_Param_StacksToRemove); \
		P_FINISH; \
		this->BP_RemoveGameplayEffectFromOwnerWithAssetTags(Z_Param_WithAssetTags,Z_Param_StacksToRemove); \
	} \
 \
	DECLARE_FUNCTION(execK2_ApplyGameplayEffectSpecToTarget) \
	{ \
		P_GET_STRUCT(FGameplayEffectSpecHandle,Z_Param_EffectSpecHandle); \
		P_GET_STRUCT(FGameplayAbilityTargetDataHandle,Z_Param_TargetData); \
		P_FINISH; \
		*(TArray<FActiveGameplayEffectHandle>*)Z_Param__Result=this->K2_ApplyGameplayEffectSpecToTarget(Z_Param_EffectSpecHandle,Z_Param_TargetData); \
	} \
 \
	DECLARE_FUNCTION(execK2_ApplyGameplayEffectToTarget) \
	{ \
		P_GET_STRUCT(FGameplayAbilityTargetDataHandle,Z_Param_TargetData); \
		P_GET_OBJECT(UGameplayEffect,Z_Param_GameplayEffect); \
		P_GET_PROPERTY(UIntProperty,Z_Param_GameplayEffectLevel); \
		P_FINISH; \
		*(TArray<FActiveGameplayEffectHandle>*)Z_Param__Result=this->K2_ApplyGameplayEffectToTarget(Z_Param_TargetData,Z_Param_GameplayEffect,Z_Param_GameplayEffectLevel); \
	} \
 \
	DECLARE_FUNCTION(execBP_ApplyGameplayEffectToTarget) \
	{ \
		P_GET_STRUCT(FGameplayAbilityTargetDataHandle,Z_Param_TargetData); \
		P_GET_OBJECT(UClass,Z_Param_GameplayEffectClass); \
		P_GET_PROPERTY(UIntProperty,Z_Param_GameplayEffectLevel); \
		P_FINISH; \
		*(TArray<FActiveGameplayEffectHandle>*)Z_Param__Result=this->BP_ApplyGameplayEffectToTarget(Z_Param_TargetData,Z_Param_GameplayEffectClass,Z_Param_GameplayEffectLevel); \
	} \
 \
	DECLARE_FUNCTION(execK2_ApplyGameplayEffectSpecToOwner) \
	{ \
		P_GET_STRUCT(FGameplayEffectSpecHandle,Z_Param_EffectSpecHandle); \
		P_FINISH; \
		*(FActiveGameplayEffectHandle*)Z_Param__Result=this->K2_ApplyGameplayEffectSpecToOwner(Z_Param_EffectSpecHandle); \
	} \
 \
	DECLARE_FUNCTION(execK2_ApplyGameplayEffectToOwner) \
	{ \
		P_GET_OBJECT(UGameplayEffect,Z_Param_GameplayEffect); \
		P_GET_PROPERTY(UIntProperty,Z_Param_GameplayEffectLevel); \
		P_FINISH; \
		*(FActiveGameplayEffectHandle*)Z_Param__Result=this->K2_ApplyGameplayEffectToOwner(Z_Param_GameplayEffect,Z_Param_GameplayEffectLevel); \
	} \
 \
	DECLARE_FUNCTION(execBP_ApplyGameplayEffectToOwner) \
	{ \
		P_GET_OBJECT(UClass,Z_Param_GameplayEffectClass); \
		P_GET_PROPERTY(UIntProperty,Z_Param_GameplayEffectLevel); \
		P_FINISH; \
		*(FActiveGameplayEffectHandle*)Z_Param__Result=this->BP_ApplyGameplayEffectToOwner(Z_Param_GameplayEffectClass,Z_Param_GameplayEffectLevel); \
	} \
 \
	DECLARE_FUNCTION(execK2_EndAbility) \
	{ \
		P_FINISH; \
		this->K2_EndAbility(); \
	} \
 \
	DECLARE_FUNCTION(execEndAbilityState) \
	{ \
		P_GET_PROPERTY(UNameProperty,Z_Param_OptionalStateNameToEnd); \
		P_FINISH; \
		this->EndAbilityState(Z_Param_OptionalStateNameToEnd); \
	} \
 \
	DECLARE_FUNCTION(execCancelTaskByInstanceName) \
	{ \
		P_GET_PROPERTY(UNameProperty,Z_Param_InstanceName); \
		P_FINISH; \
		this->CancelTaskByInstanceName(Z_Param_InstanceName); \
	} \
 \
	DECLARE_FUNCTION(execEndTaskByInstanceName) \
	{ \
		P_GET_PROPERTY(UNameProperty,Z_Param_InstanceName); \
		P_FINISH; \
		this->EndTaskByInstanceName(Z_Param_InstanceName); \
	} \
 \
	DECLARE_FUNCTION(execConfirmTaskByInstanceName) \
	{ \
		P_GET_PROPERTY(UNameProperty,Z_Param_InstanceName); \
		P_GET_UBOOL(Z_Param_bEndTask); \
		P_FINISH; \
		this->ConfirmTaskByInstanceName(Z_Param_InstanceName,Z_Param_bEndTask); \
	} \
 \
	DECLARE_FUNCTION(execK2_CheckAbilityCost) \
	{ \
		P_FINISH; \
		*(bool*)Z_Param__Result=this->K2_CheckAbilityCost(); \
	} \
 \
	DECLARE_FUNCTION(execK2_CheckAbilityCooldown) \
	{ \
		P_FINISH; \
		*(bool*)Z_Param__Result=this->K2_CheckAbilityCooldown(); \
	} \
 \
	DECLARE_FUNCTION(execK2_CommitAbilityCost) \
	{ \
		P_GET_UBOOL(Z_Param_BroadcastCommitEvent); \
		P_FINISH; \
		*(bool*)Z_Param__Result=this->K2_CommitAbilityCost(Z_Param_BroadcastCommitEvent); \
	} \
 \
	DECLARE_FUNCTION(execK2_CommitAbilityCooldown) \
	{ \
		P_GET_UBOOL(Z_Param_BroadcastCommitEvent); \
		P_FINISH; \
		*(bool*)Z_Param__Result=this->K2_CommitAbilityCooldown(Z_Param_BroadcastCommitEvent); \
	} \
 \
	DECLARE_FUNCTION(execK2_CommitAbility) \
	{ \
		P_FINISH; \
		*(bool*)Z_Param__Result=this->K2_CommitAbility(); \
	} \
 \
	DECLARE_FUNCTION(execSendGameplayEvent) \
	{ \
		P_GET_STRUCT(FGameplayTag,Z_Param_EventTag); \
		P_GET_STRUCT(FGameplayEventData,Z_Param_Payload); \
		P_FINISH; \
		this->SendGameplayEvent(Z_Param_EventTag,Z_Param_Payload); \
	}


#define Engine_Source_Runtime_GameplayAbilities_Public_Abilities_GameplayAbility_h_103_EVENT_PARMS \
	struct GameplayAbility_eventK2_ActivateAbilityFromEvent_Parms \
	{ \
		FGameplayEventData EventData; \
	}; \
	struct GameplayAbility_eventK2_CanActivateAbility_Parms \
	{ \
		FGameplayAbilityActorInfo ActorInfo; \
		FGameplayTagContainer RelevantTags; \
		bool ReturnValue; \
 \
		/** Constructor, intializes return property only **/ \
		GameplayAbility_eventK2_CanActivateAbility_Parms() \
			: ReturnValue(false) \
		{ \
		} \
	}; \
	struct GameplayAbility_eventK2_ShouldAbilityRespondToEvent_Parms \
	{ \
		FGameplayAbilityActorInfo ActorInfo; \
		FGameplayEventData Payload; \
		bool ReturnValue; \
 \
		/** Constructor, intializes return property only **/ \
		GameplayAbility_eventK2_ShouldAbilityRespondToEvent_Parms() \
			: ReturnValue(false) \
		{ \
		} \
	};


extern GAMEPLAYABILITIES_API  FName GAMEPLAYABILITIES_K2_ActivateAbility;
extern GAMEPLAYABILITIES_API  FName GAMEPLAYABILITIES_K2_ActivateAbilityFromEvent;
extern GAMEPLAYABILITIES_API  FName GAMEPLAYABILITIES_K2_CanActivateAbility;
extern GAMEPLAYABILITIES_API  FName GAMEPLAYABILITIES_K2_CommitExecute;
extern GAMEPLAYABILITIES_API  FName GAMEPLAYABILITIES_K2_OnEndAbility;
extern GAMEPLAYABILITIES_API  FName GAMEPLAYABILITIES_K2_ShouldAbilityRespondToEvent;
#define Engine_Source_Runtime_GameplayAbilities_Public_Abilities_GameplayAbility_h_103_CALLBACK_WRAPPERS
#define Engine_Source_Runtime_GameplayAbilities_Public_Abilities_GameplayAbility_h_103_INCLASS_NO_PURE_DECLS \
	private: \
	static void StaticRegisterNativesUGameplayAbility(); \
	friend GAMEPLAYABILITIES_API class UClass* Z_Construct_UClass_UGameplayAbility(); \
	public: \
	DECLARE_CLASS(UGameplayAbility, UObject, COMPILED_IN_FLAGS(0), 0, GameplayAbilities, NO_API) \
	DECLARE_SERIALIZER(UGameplayAbility) \
	/** Indicates whether the class is compiled into the engine */    enum {IsIntrinsic=COMPILED_IN_INTRINSIC}; \
	virtual UObject* _getUObject() const { return const_cast<UGameplayAbility*>(this); }


#define Engine_Source_Runtime_GameplayAbilities_Public_Abilities_GameplayAbility_h_103_INCLASS \
	private: \
	static void StaticRegisterNativesUGameplayAbility(); \
	friend GAMEPLAYABILITIES_API class UClass* Z_Construct_UClass_UGameplayAbility(); \
	public: \
	DECLARE_CLASS(UGameplayAbility, UObject, COMPILED_IN_FLAGS(0), 0, GameplayAbilities, NO_API) \
	DECLARE_SERIALIZER(UGameplayAbility) \
	/** Indicates whether the class is compiled into the engine */    enum {IsIntrinsic=COMPILED_IN_INTRINSIC}; \
	virtual UObject* _getUObject() const { return const_cast<UGameplayAbility*>(this); }


#define Engine_Source_Runtime_GameplayAbilities_Public_Abilities_GameplayAbility_h_103_STANDARD_CONSTRUCTORS \
	/** Standard constructor, called after all reflected properties have been initialized */ \
	NO_API UGameplayAbility(const FObjectInitializer& ObjectInitializer = FObjectInitializer::Get()); \
	DEFINE_DEFAULT_OBJECT_INITIALIZER_CONSTRUCTOR_CALL(UGameplayAbility) \
	DECLARE_VTABLE_PTR_HELPER_CTOR(NO_API, UGameplayAbility); \
DEFINE_VTABLE_PTR_HELPER_CTOR_CALLER(UGameplayAbility); \
private: \
	/** Private copy-constructor, should never be used */ \
	NO_API UGameplayAbility(const UGameplayAbility& InCopy); \
public:


#define Engine_Source_Runtime_GameplayAbilities_Public_Abilities_GameplayAbility_h_103_ENHANCED_CONSTRUCTORS \
	/** Standard constructor, called after all reflected properties have been initialized */ \
	NO_API UGameplayAbility(const FObjectInitializer& ObjectInitializer = FObjectInitializer::Get()) : Super(ObjectInitializer) { }; \
private: \
	/** Private copy-constructor, should never be used */ \
	NO_API UGameplayAbility(const UGameplayAbility& InCopy); \
public: \
	DECLARE_VTABLE_PTR_HELPER_CTOR(NO_API, UGameplayAbility); \
DEFINE_VTABLE_PTR_HELPER_CTOR_CALLER(UGameplayAbility); \
	DEFINE_DEFAULT_OBJECT_INITIALIZER_CONSTRUCTOR_CALL(UGameplayAbility)


#define Engine_Source_Runtime_GameplayAbilities_Public_Abilities_GameplayAbility_h_100_PROLOG \
	Engine_Source_Runtime_GameplayAbilities_Public_Abilities_GameplayAbility_h_103_EVENT_PARMS


#define Engine_Source_Runtime_GameplayAbilities_Public_Abilities_GameplayAbility_h_103_GENERATED_BODY_LEGACY \
PRAGMA_DISABLE_DEPRECATION_WARNINGS \
public: \
	Engine_Source_Runtime_GameplayAbilities_Public_Abilities_GameplayAbility_h_103_RPC_WRAPPERS \
	Engine_Source_Runtime_GameplayAbilities_Public_Abilities_GameplayAbility_h_103_CALLBACK_WRAPPERS \
	Engine_Source_Runtime_GameplayAbilities_Public_Abilities_GameplayAbility_h_103_INCLASS \
	Engine_Source_Runtime_GameplayAbilities_Public_Abilities_GameplayAbility_h_103_STANDARD_CONSTRUCTORS \
public: \
PRAGMA_ENABLE_DEPRECATION_WARNINGS


#define Engine_Source_Runtime_GameplayAbilities_Public_Abilities_GameplayAbility_h_103_GENERATED_BODY \
PRAGMA_DISABLE_DEPRECATION_WARNINGS \
public: \
	Engine_Source_Runtime_GameplayAbilities_Public_Abilities_GameplayAbility_h_103_RPC_WRAPPERS_NO_PURE_DECLS \
	Engine_Source_Runtime_GameplayAbilities_Public_Abilities_GameplayAbility_h_103_CALLBACK_WRAPPERS \
	Engine_Source_Runtime_GameplayAbilities_Public_Abilities_GameplayAbility_h_103_INCLASS_NO_PURE_DECLS \
	Engine_Source_Runtime_GameplayAbilities_Public_Abilities_GameplayAbility_h_103_ENHANCED_CONSTRUCTORS \
static_assert(false, "Unknown access specifier for GENERATED_BODY() macro in class GameplayAbility."); \
PRAGMA_ENABLE_DEPRECATION_WARNINGS


#undef CURRENT_FILE_ID
#define CURRENT_FILE_ID Engine_Source_Runtime_GameplayAbilities_Public_Abilities_GameplayAbility_h


PRAGMA_ENABLE_DEPRECATION_WARNINGS
