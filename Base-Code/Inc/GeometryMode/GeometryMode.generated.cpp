// Copyright 1998-2015 Epic Games, Inc. All Rights Reserved.
/*===========================================================================
	Boilerplate C++ definitions for a single module.
	This is automatically generated by UnrealHeaderTool.
	DO NOT modify this manually! Edit the corresponding .h files instead!
===========================================================================*/

#include "Private/GeometryModePrivatePCH.h"
#include "GeometryMode.generated.dep.h"
PRAGMA_DISABLE_DEPRECATION_WARNINGS
void EmptyLinkFunctionForGeneratedCodeGeometryMode() {}
	void UGeomModifier::StaticRegisterNativesUGeomModifier()
	{
	}
	IMPLEMENT_CLASS(UGeomModifier, 1580084655);
	void UGeomModifier_Edit::StaticRegisterNativesUGeomModifier_Edit()
	{
	}
	IMPLEMENT_CLASS(UGeomModifier_Edit, 2460246613);
	void UGeomModifier_Clip::StaticRegisterNativesUGeomModifier_Clip()
	{
	}
	IMPLEMENT_CLASS(UGeomModifier_Clip, 2076320210);
	void UGeomModifier_Create::StaticRegisterNativesUGeomModifier_Create()
	{
	}
	IMPLEMENT_CLASS(UGeomModifier_Create, 1806645894);
	void UGeomModifier_Delete::StaticRegisterNativesUGeomModifier_Delete()
	{
	}
	IMPLEMENT_CLASS(UGeomModifier_Delete, 2626078082);
	void UGeomModifier_Extrude::StaticRegisterNativesUGeomModifier_Extrude()
	{
	}
	IMPLEMENT_CLASS(UGeomModifier_Extrude, 1886900515);
	void UGeomModifier_Flip::StaticRegisterNativesUGeomModifier_Flip()
	{
	}
	IMPLEMENT_CLASS(UGeomModifier_Flip, 762807114);
	void UGeomModifier_Lathe::StaticRegisterNativesUGeomModifier_Lathe()
	{
	}
	IMPLEMENT_CLASS(UGeomModifier_Lathe, 675239163);
	void UGeomModifier_Pen::StaticRegisterNativesUGeomModifier_Pen()
	{
	}
	IMPLEMENT_CLASS(UGeomModifier_Pen, 2853895135);
	void UGeomModifier_Split::StaticRegisterNativesUGeomModifier_Split()
	{
	}
	IMPLEMENT_CLASS(UGeomModifier_Split, 2297341384);
	void UGeomModifier_Triangulate::StaticRegisterNativesUGeomModifier_Triangulate()
	{
	}
	IMPLEMENT_CLASS(UGeomModifier_Triangulate, 3091176030);
	void UGeomModifier_Optimize::StaticRegisterNativesUGeomModifier_Optimize()
	{
	}
	IMPLEMENT_CLASS(UGeomModifier_Optimize, 770915648);
	void UGeomModifier_Turn::StaticRegisterNativesUGeomModifier_Turn()
	{
	}
	IMPLEMENT_CLASS(UGeomModifier_Turn, 3319624760);
	void UGeomModifier_Weld::StaticRegisterNativesUGeomModifier_Weld()
	{
	}
	IMPLEMENT_CLASS(UGeomModifier_Weld, 867186719);
#if USE_COMPILED_IN_NATIVES
// Cross Module References
	COREUOBJECT_API class UClass* Z_Construct_UClass_UObject();
	ENGINE_API class UClass* Z_Construct_UClass_UPolys_NoRegister();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FVector();
	COREUOBJECT_API class UEnum* Z_Construct_UEnum_CoreUObject_EAxis();

	GEOMETRYMODE_API class UClass* Z_Construct_UClass_UGeomModifier_NoRegister();
	GEOMETRYMODE_API class UClass* Z_Construct_UClass_UGeomModifier();
	GEOMETRYMODE_API class UClass* Z_Construct_UClass_UGeomModifier_Edit_NoRegister();
	GEOMETRYMODE_API class UClass* Z_Construct_UClass_UGeomModifier_Edit();
	GEOMETRYMODE_API class UClass* Z_Construct_UClass_UGeomModifier_Clip_NoRegister();
	GEOMETRYMODE_API class UClass* Z_Construct_UClass_UGeomModifier_Clip();
	GEOMETRYMODE_API class UClass* Z_Construct_UClass_UGeomModifier_Create_NoRegister();
	GEOMETRYMODE_API class UClass* Z_Construct_UClass_UGeomModifier_Create();
	GEOMETRYMODE_API class UClass* Z_Construct_UClass_UGeomModifier_Delete_NoRegister();
	GEOMETRYMODE_API class UClass* Z_Construct_UClass_UGeomModifier_Delete();
	GEOMETRYMODE_API class UClass* Z_Construct_UClass_UGeomModifier_Extrude_NoRegister();
	GEOMETRYMODE_API class UClass* Z_Construct_UClass_UGeomModifier_Extrude();
	GEOMETRYMODE_API class UClass* Z_Construct_UClass_UGeomModifier_Flip_NoRegister();
	GEOMETRYMODE_API class UClass* Z_Construct_UClass_UGeomModifier_Flip();
	GEOMETRYMODE_API class UClass* Z_Construct_UClass_UGeomModifier_Lathe_NoRegister();
	GEOMETRYMODE_API class UClass* Z_Construct_UClass_UGeomModifier_Lathe();
	GEOMETRYMODE_API class UClass* Z_Construct_UClass_UGeomModifier_Pen_NoRegister();
	GEOMETRYMODE_API class UClass* Z_Construct_UClass_UGeomModifier_Pen();
	GEOMETRYMODE_API class UClass* Z_Construct_UClass_UGeomModifier_Split_NoRegister();
	GEOMETRYMODE_API class UClass* Z_Construct_UClass_UGeomModifier_Split();
	GEOMETRYMODE_API class UClass* Z_Construct_UClass_UGeomModifier_Triangulate_NoRegister();
	GEOMETRYMODE_API class UClass* Z_Construct_UClass_UGeomModifier_Triangulate();
	GEOMETRYMODE_API class UClass* Z_Construct_UClass_UGeomModifier_Optimize_NoRegister();
	GEOMETRYMODE_API class UClass* Z_Construct_UClass_UGeomModifier_Optimize();
	GEOMETRYMODE_API class UClass* Z_Construct_UClass_UGeomModifier_Turn_NoRegister();
	GEOMETRYMODE_API class UClass* Z_Construct_UClass_UGeomModifier_Turn();
	GEOMETRYMODE_API class UClass* Z_Construct_UClass_UGeomModifier_Weld_NoRegister();
	GEOMETRYMODE_API class UClass* Z_Construct_UClass_UGeomModifier_Weld();
	GEOMETRYMODE_API class UPackage* Z_Construct_UPackage_GeometryMode();
	UClass* Z_Construct_UClass_UGeomModifier_NoRegister()
	{
		return UGeomModifier::StaticClass();
	}
	UClass* Z_Construct_UClass_UGeomModifier()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage_GeometryMode();
			OuterClass = UGeomModifier::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000081;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_CachedPolys = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CachedPolys"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(CachedPolys, UGeomModifier), 0x0000000000000000, Z_Construct_UClass_UPolys_NoRegister());
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bInitialized, UGeomModifier, uint8);
				UProperty* NewProp_bInitialized = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bInitialized"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bInitialized, UGeomModifier), 0x0000000000000001, CPP_BOOL_PROPERTY_BITMASK(bInitialized, UGeomModifier), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bPushButton, UGeomModifier, uint8);
				UProperty* NewProp_bPushButton = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bPushButton"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bPushButton, UGeomModifier), 0x0000000000000001, CPP_BOOL_PROPERTY_BITMASK(bPushButton, UGeomModifier), sizeof(uint8), false);
				UProperty* NewProp_Tooltip = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Tooltip"), RF_Public|RF_Transient|RF_Native) UTextProperty(CPP_PROPERTY_BASE(Tooltip, UGeomModifier), 0x0000000000000001);
				UProperty* NewProp_Description = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Description"), RF_Public|RF_Transient|RF_Native) UTextProperty(CPP_PROPERTY_BASE(Description, UGeomModifier), 0x0000000000000001);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object GeomModifier"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GeomModifier.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/GeomModifier.h"));
				MetaData->SetValue(NewProp_CachedPolys, TEXT("ModuleRelativePath"), TEXT("Classes/GeomModifier.h"));
				MetaData->SetValue(NewProp_CachedPolys, TEXT("ToolTip"), TEXT("Stored state of polys in case the brush state needs to be restroed"));
				MetaData->SetValue(NewProp_bInitialized, TEXT("Category"), TEXT("GeomModifier"));
				MetaData->SetValue(NewProp_bInitialized, TEXT("ModuleRelativePath"), TEXT("Classes/GeomModifier.h"));
				MetaData->SetValue(NewProp_bInitialized, TEXT("ToolTip"), TEXT("true if the modifier has been initialized.\nThis is useful for interpreting user input and mouse drags correctly."));
				MetaData->SetValue(NewProp_bPushButton, TEXT("Category"), TEXT("GeomModifier"));
				MetaData->SetValue(NewProp_bPushButton, TEXT("ModuleRelativePath"), TEXT("Classes/GeomModifier.h"));
				MetaData->SetValue(NewProp_bPushButton, TEXT("ToolTip"), TEXT("If true, this modifier should be displayed as a push button instead of a radio button"));
				MetaData->SetValue(NewProp_Tooltip, TEXT("Category"), TEXT("GeomModifier"));
				MetaData->SetValue(NewProp_Tooltip, TEXT("ModuleRelativePath"), TEXT("Classes/GeomModifier.h"));
				MetaData->SetValue(NewProp_Tooltip, TEXT("ToolTip"), TEXT("The tooltip to be displayed for this modifier"));
				MetaData->SetValue(NewProp_Description, TEXT("Category"), TEXT("GeomModifier"));
				MetaData->SetValue(NewProp_Description, TEXT("ModuleRelativePath"), TEXT("Classes/GeomModifier.h"));
				MetaData->SetValue(NewProp_Description, TEXT("ToolTip"), TEXT("A human readable name for this modifier (appears on buttons, menus, etc)"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGeomModifier(Z_Construct_UClass_UGeomModifier, TEXT("UGeomModifier"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGeomModifier);
	UClass* Z_Construct_UClass_UGeomModifier_Edit_NoRegister()
	{
		return UGeomModifier_Edit::StaticClass();
	}
	UClass* Z_Construct_UClass_UGeomModifier_Edit()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UGeomModifier();
			Z_Construct_UPackage_GeometryMode();
			OuterClass = UGeomModifier_Edit::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("AutoExpandCategories"), TEXT("Settings"));
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object GeomModifier"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GeomModifier_Edit.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/GeomModifier_Edit.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGeomModifier_Edit(Z_Construct_UClass_UGeomModifier_Edit, TEXT("UGeomModifier_Edit"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGeomModifier_Edit);
	UClass* Z_Construct_UClass_UGeomModifier_Clip_NoRegister()
	{
		return UGeomModifier_Clip::StaticClass();
	}
	UClass* Z_Construct_UClass_UGeomModifier_Clip()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UGeomModifier_Edit();
			Z_Construct_UPackage_GeometryMode();
			OuterClass = UGeomModifier_Clip::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_SnappedMouseWorldSpacePos = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SnappedMouseWorldSpacePos"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(SnappedMouseWorldSpacePos, UGeomModifier_Clip), 0x0000000000000000, Z_Construct_UScriptStruct_FVector());
				UProperty* NewProp_ClipMarkers = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ClipMarkers"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(ClipMarkers, UGeomModifier_Clip), 0x0000000000000000);
				UProperty* NewProp_ClipMarkers_Inner = new(EC_InternalUseOnlyConstructor, NewProp_ClipMarkers, TEXT("ClipMarkers"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FVector());
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bSplit, UGeomModifier_Clip, uint8);
				UProperty* NewProp_bSplit = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bSplit"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bSplit, UGeomModifier_Clip), 0x0000000000000001, CPP_BOOL_PROPERTY_BITMASK(bSplit, UGeomModifier_Clip), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bFlipNormal, UGeomModifier_Clip, uint8);
				UProperty* NewProp_bFlipNormal = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bFlipNormal"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bFlipNormal, UGeomModifier_Clip), 0x0000000000000001, CPP_BOOL_PROPERTY_BITMASK(bFlipNormal, UGeomModifier_Clip), sizeof(uint8), false);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("AutoExpandCategories"), TEXT("Settings"));
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object GeomModifier"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GeomModifier_Clip.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/GeomModifier_Clip.h"));
				MetaData->SetValue(NewProp_SnappedMouseWorldSpacePos, TEXT("ModuleRelativePath"), TEXT("Classes/GeomModifier_Clip.h"));
				MetaData->SetValue(NewProp_SnappedMouseWorldSpacePos, TEXT("ToolTip"), TEXT("The mouse position, in world space, where the user currently is hovering."));
				MetaData->SetValue(NewProp_ClipMarkers, TEXT("ModuleRelativePath"), TEXT("Classes/GeomModifier_Clip.h"));
				MetaData->SetValue(NewProp_ClipMarkers, TEXT("ToolTip"), TEXT("The clip markers that the user has dropped down in the world so far."));
				MetaData->SetValue(NewProp_bSplit, TEXT("Category"), TEXT("Settings"));
				MetaData->SetValue(NewProp_bSplit, TEXT("ModuleRelativePath"), TEXT("Classes/GeomModifier_Clip.h"));
				MetaData->SetValue(NewProp_bFlipNormal, TEXT("Category"), TEXT("Settings"));
				MetaData->SetValue(NewProp_bFlipNormal, TEXT("ModuleRelativePath"), TEXT("Classes/GeomModifier_Clip.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGeomModifier_Clip(Z_Construct_UClass_UGeomModifier_Clip, TEXT("UGeomModifier_Clip"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGeomModifier_Clip);
	UClass* Z_Construct_UClass_UGeomModifier_Create_NoRegister()
	{
		return UGeomModifier_Create::StaticClass();
	}
	UClass* Z_Construct_UClass_UGeomModifier_Create()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UGeomModifier_Edit();
			Z_Construct_UPackage_GeometryMode();
			OuterClass = UGeomModifier_Create::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("AutoExpandCategories"), TEXT("Settings"));
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object GeomModifier"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GeomModifier_Create.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/GeomModifier_Create.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGeomModifier_Create(Z_Construct_UClass_UGeomModifier_Create, TEXT("UGeomModifier_Create"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGeomModifier_Create);
	UClass* Z_Construct_UClass_UGeomModifier_Delete_NoRegister()
	{
		return UGeomModifier_Delete::StaticClass();
	}
	UClass* Z_Construct_UClass_UGeomModifier_Delete()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UGeomModifier_Edit();
			Z_Construct_UPackage_GeometryMode();
			OuterClass = UGeomModifier_Delete::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("AutoExpandCategories"), TEXT("Settings"));
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object GeomModifier"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GeomModifier_Delete.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/GeomModifier_Delete.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGeomModifier_Delete(Z_Construct_UClass_UGeomModifier_Delete, TEXT("UGeomModifier_Delete"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGeomModifier_Delete);
	UClass* Z_Construct_UClass_UGeomModifier_Extrude_NoRegister()
	{
		return UGeomModifier_Extrude::StaticClass();
	}
	UClass* Z_Construct_UClass_UGeomModifier_Extrude()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UGeomModifier_Edit();
			Z_Construct_UPackage_GeometryMode();
			OuterClass = UGeomModifier_Extrude::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_SaveCoordSystem = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SaveCoordSystem"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(SaveCoordSystem, UGeomModifier_Extrude), 0x0000000000000000);
				UProperty* NewProp_Segments = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Segments"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(Segments, UGeomModifier_Extrude), 0x0000000000000001);
				UProperty* NewProp_Length = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Length"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(Length, UGeomModifier_Extrude), 0x0000000000000001);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("AutoExpandCategories"), TEXT("Settings"));
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object GeomModifier"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GeomModifier_Extrude.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/GeomModifier_Extrude.h"));
				MetaData->SetValue(NewProp_SaveCoordSystem, TEXT("ModuleRelativePath"), TEXT("Classes/GeomModifier_Extrude.h"));
				MetaData->SetValue(NewProp_Segments, TEXT("Category"), TEXT("Settings"));
				MetaData->SetValue(NewProp_Segments, TEXT("ModuleRelativePath"), TEXT("Classes/GeomModifier_Extrude.h"));
				MetaData->SetValue(NewProp_Length, TEXT("Category"), TEXT("Settings"));
				MetaData->SetValue(NewProp_Length, TEXT("ModuleRelativePath"), TEXT("Classes/GeomModifier_Extrude.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGeomModifier_Extrude(Z_Construct_UClass_UGeomModifier_Extrude, TEXT("UGeomModifier_Extrude"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGeomModifier_Extrude);
	UClass* Z_Construct_UClass_UGeomModifier_Flip_NoRegister()
	{
		return UGeomModifier_Flip::StaticClass();
	}
	UClass* Z_Construct_UClass_UGeomModifier_Flip()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UGeomModifier_Edit();
			Z_Construct_UPackage_GeometryMode();
			OuterClass = UGeomModifier_Flip::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("AutoExpandCategories"), TEXT("Settings"));
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object GeomModifier"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GeomModifier_Flip.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/GeomModifier_Flip.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGeomModifier_Flip(Z_Construct_UClass_UGeomModifier_Flip, TEXT("UGeomModifier_Flip"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGeomModifier_Flip);
	UClass* Z_Construct_UClass_UGeomModifier_Lathe_NoRegister()
	{
		return UGeomModifier_Lathe::StaticClass();
	}
	UClass* Z_Construct_UClass_UGeomModifier_Lathe()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UGeomModifier_Edit();
			Z_Construct_UPackage_GeometryMode();
			OuterClass = UGeomModifier_Lathe::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_Axis = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Axis"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(Axis, UGeomModifier_Lathe), 0x0000000000000000, Z_Construct_UEnum_CoreUObject_EAxis());
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(AlignToSide, UGeomModifier_Lathe, uint8);
				UProperty* NewProp_AlignToSide = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AlignToSide"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(AlignToSide, UGeomModifier_Lathe), 0x0000000000000001, CPP_BOOL_PROPERTY_BITMASK(AlignToSide, UGeomModifier_Lathe), sizeof(uint8), false);
				UProperty* NewProp_Segments = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Segments"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(Segments, UGeomModifier_Lathe), 0x0000000000000001);
				UProperty* NewProp_TotalSegments = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("TotalSegments"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(TotalSegments, UGeomModifier_Lathe), 0x0000000000000001);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("AutoExpandCategories"), TEXT("Settings"));
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object GeomModifier"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GeomModifier_Lathe.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/GeomModifier_Lathe.h"));
				MetaData->SetValue(NewProp_Axis, TEXT("ModuleRelativePath"), TEXT("Classes/GeomModifier_Lathe.h"));
				MetaData->SetValue(NewProp_Axis, TEXT("ToolTip"), TEXT("The axis of rotation to use when creating the brush.  This is automatically determined from the current ortho viewport."));
				MetaData->SetValue(NewProp_AlignToSide, TEXT("Category"), TEXT("Settings"));
				MetaData->SetValue(NewProp_AlignToSide, TEXT("ModuleRelativePath"), TEXT("Classes/GeomModifier_Lathe.h"));
				MetaData->SetValue(NewProp_Segments, TEXT("Category"), TEXT("Settings"));
				MetaData->SetValue(NewProp_Segments, TEXT("ModuleRelativePath"), TEXT("Classes/GeomModifier_Lathe.h"));
				MetaData->SetValue(NewProp_TotalSegments, TEXT("Category"), TEXT("Settings"));
				MetaData->SetValue(NewProp_TotalSegments, TEXT("ModuleRelativePath"), TEXT("Classes/GeomModifier_Lathe.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGeomModifier_Lathe(Z_Construct_UClass_UGeomModifier_Lathe, TEXT("UGeomModifier_Lathe"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGeomModifier_Lathe);
	UClass* Z_Construct_UClass_UGeomModifier_Pen_NoRegister()
	{
		return UGeomModifier_Pen::StaticClass();
	}
	UClass* Z_Construct_UClass_UGeomModifier_Pen()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UGeomModifier_Edit();
			Z_Construct_UPackage_GeometryMode();
			OuterClass = UGeomModifier_Pen::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_MouseWorldSpacePos = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MouseWorldSpacePos"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(MouseWorldSpacePos, UGeomModifier_Pen), 0x0000000000002000, Z_Construct_UScriptStruct_FVector());
				UProperty* NewProp_ShapeVertices = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ShapeVertices"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(ShapeVertices, UGeomModifier_Pen), 0x0000000000000000);
				UProperty* NewProp_ShapeVertices_Inner = new(EC_InternalUseOnlyConstructor, NewProp_ShapeVertices, TEXT("ShapeVertices"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FVector());
				UProperty* NewProp_ExtrudeDepth = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ExtrudeDepth"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(ExtrudeDepth, UGeomModifier_Pen), 0x0000000000000001);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bCreateBrushShape, UGeomModifier_Pen, uint8);
				UProperty* NewProp_bCreateBrushShape = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bCreateBrushShape"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bCreateBrushShape, UGeomModifier_Pen), 0x0000000000000001, CPP_BOOL_PROPERTY_BITMASK(bCreateBrushShape, UGeomModifier_Pen), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bCreateConvexPolygons, UGeomModifier_Pen, uint8);
				UProperty* NewProp_bCreateConvexPolygons = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bCreateConvexPolygons"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bCreateConvexPolygons, UGeomModifier_Pen), 0x0000000000000001, CPP_BOOL_PROPERTY_BITMASK(bCreateConvexPolygons, UGeomModifier_Pen), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bAutoExtrude, UGeomModifier_Pen, uint8);
				UProperty* NewProp_bAutoExtrude = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bAutoExtrude"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bAutoExtrude, UGeomModifier_Pen), 0x0000000000000001, CPP_BOOL_PROPERTY_BITMASK(bAutoExtrude, UGeomModifier_Pen), sizeof(uint8), false);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("AutoExpandCategories"), TEXT("Settings"));
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object GeomModifier"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GeomModifier_Pen.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/GeomModifier_Pen.h"));
				MetaData->SetValue(NewProp_MouseWorldSpacePos, TEXT("ModuleRelativePath"), TEXT("Classes/GeomModifier_Pen.h"));
				MetaData->SetValue(NewProp_MouseWorldSpacePos, TEXT("ToolTip"), TEXT("The mouse position, in world space, where the user currently is hovering (snapped to grid if that setting is enabled)."));
				MetaData->SetValue(NewProp_ShapeVertices, TEXT("ModuleRelativePath"), TEXT("Classes/GeomModifier_Pen.h"));
				MetaData->SetValue(NewProp_ShapeVertices, TEXT("ToolTip"), TEXT("The vertices that the user has dropped down in the world so far."));
				MetaData->SetValue(NewProp_ExtrudeDepth, TEXT("Category"), TEXT("Settings"));
				MetaData->SetValue(NewProp_ExtrudeDepth, TEXT("ModuleRelativePath"), TEXT("Classes/GeomModifier_Pen.h"));
				MetaData->SetValue(NewProp_ExtrudeDepth, TEXT("ToolTip"), TEXT("How far to extrude the newly created brush if bAutoExtrude is set to true."));
				MetaData->SetValue(NewProp_bCreateBrushShape, TEXT("Category"), TEXT("Settings"));
				MetaData->SetValue(NewProp_bCreateBrushShape, TEXT("ModuleRelativePath"), TEXT("Classes/GeomModifier_Pen.h"));
				MetaData->SetValue(NewProp_bCreateBrushShape, TEXT("ToolTip"), TEXT("If true, the resulting shape will be turned into an ABrushShape actor."));
				MetaData->SetValue(NewProp_bCreateConvexPolygons, TEXT("Category"), TEXT("Settings"));
				MetaData->SetValue(NewProp_bCreateConvexPolygons, TEXT("ModuleRelativePath"), TEXT("Classes/GeomModifier_Pen.h"));
				MetaData->SetValue(NewProp_bCreateConvexPolygons, TEXT("ToolTip"), TEXT("If true, the tool will try and optimize the resulting triangles into convex polygons before creating the brush."));
				MetaData->SetValue(NewProp_bAutoExtrude, TEXT("Category"), TEXT("Settings"));
				MetaData->SetValue(NewProp_bAutoExtrude, TEXT("ModuleRelativePath"), TEXT("Classes/GeomModifier_Pen.h"));
				MetaData->SetValue(NewProp_bAutoExtrude, TEXT("ToolTip"), TEXT("If true, the shape will be automatically extruded into a brush upon completion."));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGeomModifier_Pen(Z_Construct_UClass_UGeomModifier_Pen, TEXT("UGeomModifier_Pen"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGeomModifier_Pen);
	UClass* Z_Construct_UClass_UGeomModifier_Split_NoRegister()
	{
		return UGeomModifier_Split::StaticClass();
	}
	UClass* Z_Construct_UClass_UGeomModifier_Split()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UGeomModifier_Edit();
			Z_Construct_UPackage_GeometryMode();
			OuterClass = UGeomModifier_Split::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("AutoExpandCategories"), TEXT("Settings"));
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object GeomModifier"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GeomModifier_Split.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/GeomModifier_Split.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGeomModifier_Split(Z_Construct_UClass_UGeomModifier_Split, TEXT("UGeomModifier_Split"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGeomModifier_Split);
	UClass* Z_Construct_UClass_UGeomModifier_Triangulate_NoRegister()
	{
		return UGeomModifier_Triangulate::StaticClass();
	}
	UClass* Z_Construct_UClass_UGeomModifier_Triangulate()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UGeomModifier_Edit();
			Z_Construct_UPackage_GeometryMode();
			OuterClass = UGeomModifier_Triangulate::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("AutoExpandCategories"), TEXT("Settings"));
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object GeomModifier"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GeomModifier_Triangulate.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/GeomModifier_Triangulate.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGeomModifier_Triangulate(Z_Construct_UClass_UGeomModifier_Triangulate, TEXT("UGeomModifier_Triangulate"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGeomModifier_Triangulate);
	UClass* Z_Construct_UClass_UGeomModifier_Optimize_NoRegister()
	{
		return UGeomModifier_Optimize::StaticClass();
	}
	UClass* Z_Construct_UClass_UGeomModifier_Optimize()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UGeomModifier_Triangulate();
			Z_Construct_UPackage_GeometryMode();
			OuterClass = UGeomModifier_Optimize::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("AutoExpandCategories"), TEXT("Settings"));
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object GeomModifier"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GeomModifier_Optimize.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/GeomModifier_Optimize.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGeomModifier_Optimize(Z_Construct_UClass_UGeomModifier_Optimize, TEXT("UGeomModifier_Optimize"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGeomModifier_Optimize);
	UClass* Z_Construct_UClass_UGeomModifier_Turn_NoRegister()
	{
		return UGeomModifier_Turn::StaticClass();
	}
	UClass* Z_Construct_UClass_UGeomModifier_Turn()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UGeomModifier_Edit();
			Z_Construct_UPackage_GeometryMode();
			OuterClass = UGeomModifier_Turn::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("AutoExpandCategories"), TEXT("Settings"));
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object GeomModifier"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GeomModifier_Turn.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/GeomModifier_Turn.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGeomModifier_Turn(Z_Construct_UClass_UGeomModifier_Turn, TEXT("UGeomModifier_Turn"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGeomModifier_Turn);
	UClass* Z_Construct_UClass_UGeomModifier_Weld_NoRegister()
	{
		return UGeomModifier_Weld::StaticClass();
	}
	UClass* Z_Construct_UClass_UGeomModifier_Weld()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UGeomModifier_Edit();
			Z_Construct_UPackage_GeometryMode();
			OuterClass = UGeomModifier_Weld::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("AutoExpandCategories"), TEXT("Settings"));
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object GeomModifier"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GeomModifier_Weld.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/GeomModifier_Weld.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGeomModifier_Weld(Z_Construct_UClass_UGeomModifier_Weld, TEXT("UGeomModifier_Weld"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGeomModifier_Weld);
	UPackage* Z_Construct_UPackage_GeometryMode()
	{
		static UPackage* ReturnPackage = NULL;
		if (!ReturnPackage)
		{
			ReturnPackage = CastChecked<UPackage>(StaticFindObjectFast(UPackage::StaticClass(), NULL, FName(TEXT("/Script/GeometryMode")), false, false));
			ReturnPackage->SetPackageFlags(PKG_CompiledIn | 0x00000000);
			FGuid Guid;
			Guid.A = 0x3EA21504;
			Guid.B = 0x2FA6B285;
			Guid.C = 0x00000000;
			Guid.D = 0x00000000;
			ReturnPackage->SetGuid(Guid);

		}
		return ReturnPackage;
	}
#endif

PRAGMA_ENABLE_DEPRECATION_WARNINGS
