// Copyright 1998-2015 Epic Games, Inc. All Rights Reserved.
/*===========================================================================
	Boilerplate C++ definitions for a single module.
	This is automatically generated by UnrealHeaderTool.
	DO NOT modify this manually! Edit the corresponding .h files instead!
===========================================================================*/

#include "Private/IntroTutorialsPrivatePCH.h"
#include "IntroTutorials.generated.dep.h"
PRAGMA_DISABLE_DEPRECATION_WARNINGS
void EmptyLinkFunctionForGeneratedCodeIntroTutorials() {}
static class UEnum* ETutorialAnchorIdentifier_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern INTROTUTORIALS_API class UEnum* Z_Construct_UEnum_IntroTutorials_ETutorialAnchorIdentifier();
		extern INTROTUTORIALS_API class UPackage* Z_Construct_UPackage_IntroTutorials();
		Singleton = GetStaticEnum(Z_Construct_UEnum_IntroTutorials_ETutorialAnchorIdentifier, Z_Construct_UPackage_IntroTutorials(), TEXT("ETutorialAnchorIdentifier"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ETutorialAnchorIdentifier(ETutorialAnchorIdentifier_StaticEnum, TEXT("/Script/IntroTutorials"));
static class UEnum* ETutorialContent_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern INTROTUTORIALS_API class UEnum* Z_Construct_UEnum_IntroTutorials_ETutorialContent();
		extern INTROTUTORIALS_API class UPackage* Z_Construct_UPackage_IntroTutorials();
		Singleton = GetStaticEnum(Z_Construct_UEnum_IntroTutorials_ETutorialContent, Z_Construct_UPackage_IntroTutorials(), TEXT("ETutorialContent"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ETutorialContent(ETutorialContent_StaticEnum, TEXT("/Script/IntroTutorials"));
class UScriptStruct* FTutorialStage::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern INTROTUTORIALS_API class UScriptStruct* Z_Construct_UScriptStruct_FTutorialStage();
		extern INTROTUTORIALS_API uint32 Get_Z_Construct_UScriptStruct_FTutorialStage_CRC();
		extern INTROTUTORIALS_API class UPackage* Z_Construct_UPackage_IntroTutorials();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FTutorialStage, Z_Construct_UPackage_IntroTutorials(), TEXT("TutorialStage"), sizeof(FTutorialStage), Get_Z_Construct_UScriptStruct_FTutorialStage_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FTutorialStage(FTutorialStage::StaticStruct, TEXT("/Script/IntroTutorials"));
static struct FScriptStruct_IntroTutorials_StaticRegisterNativesFTutorialStage
{
	FScriptStruct_IntroTutorials_StaticRegisterNativesFTutorialStage()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("TutorialStage")),new UScriptStruct::TCppStructOps<FTutorialStage>);
	}
} ScriptStruct_IntroTutorials_StaticRegisterNativesFTutorialStage;
class UScriptStruct* FTutorialWidgetContent::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern INTROTUTORIALS_API class UScriptStruct* Z_Construct_UScriptStruct_FTutorialWidgetContent();
		extern INTROTUTORIALS_API uint32 Get_Z_Construct_UScriptStruct_FTutorialWidgetContent_CRC();
		extern INTROTUTORIALS_API class UPackage* Z_Construct_UPackage_IntroTutorials();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FTutorialWidgetContent, Z_Construct_UPackage_IntroTutorials(), TEXT("TutorialWidgetContent"), sizeof(FTutorialWidgetContent), Get_Z_Construct_UScriptStruct_FTutorialWidgetContent_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FTutorialWidgetContent(FTutorialWidgetContent::StaticStruct, TEXT("/Script/IntroTutorials"));
static struct FScriptStruct_IntroTutorials_StaticRegisterNativesFTutorialWidgetContent
{
	FScriptStruct_IntroTutorials_StaticRegisterNativesFTutorialWidgetContent()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("TutorialWidgetContent")),new UScriptStruct::TCppStructOps<FTutorialWidgetContent>);
	}
} ScriptStruct_IntroTutorials_StaticRegisterNativesFTutorialWidgetContent;
class UScriptStruct* FTutorialContentAnchor::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern INTROTUTORIALS_API class UScriptStruct* Z_Construct_UScriptStruct_FTutorialContentAnchor();
		extern INTROTUTORIALS_API uint32 Get_Z_Construct_UScriptStruct_FTutorialContentAnchor_CRC();
		extern INTROTUTORIALS_API class UPackage* Z_Construct_UPackage_IntroTutorials();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FTutorialContentAnchor, Z_Construct_UPackage_IntroTutorials(), TEXT("TutorialContentAnchor"), sizeof(FTutorialContentAnchor), Get_Z_Construct_UScriptStruct_FTutorialContentAnchor_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FTutorialContentAnchor(FTutorialContentAnchor::StaticStruct, TEXT("/Script/IntroTutorials"));
static struct FScriptStruct_IntroTutorials_StaticRegisterNativesFTutorialContentAnchor
{
	FScriptStruct_IntroTutorials_StaticRegisterNativesFTutorialContentAnchor()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("TutorialContentAnchor")),new UScriptStruct::TCppStructOps<FTutorialContentAnchor>);
	}
} ScriptStruct_IntroTutorials_StaticRegisterNativesFTutorialContentAnchor;
class UScriptStruct* FTutorialContent::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern INTROTUTORIALS_API class UScriptStruct* Z_Construct_UScriptStruct_FTutorialContent();
		extern INTROTUTORIALS_API uint32 Get_Z_Construct_UScriptStruct_FTutorialContent_CRC();
		extern INTROTUTORIALS_API class UPackage* Z_Construct_UPackage_IntroTutorials();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FTutorialContent, Z_Construct_UPackage_IntroTutorials(), TEXT("TutorialContent"), sizeof(FTutorialContent), Get_Z_Construct_UScriptStruct_FTutorialContent_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FTutorialContent(FTutorialContent::StaticStruct, TEXT("/Script/IntroTutorials"));
static struct FScriptStruct_IntroTutorials_StaticRegisterNativesFTutorialContent
{
	FScriptStruct_IntroTutorials_StaticRegisterNativesFTutorialContent()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("TutorialContent")),new UScriptStruct::TCppStructOps<FTutorialContent>);
	}
} ScriptStruct_IntroTutorials_StaticRegisterNativesFTutorialContent;
class UScriptStruct* FTutorialCategory::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern INTROTUTORIALS_API class UScriptStruct* Z_Construct_UScriptStruct_FTutorialCategory();
		extern INTROTUTORIALS_API uint32 Get_Z_Construct_UScriptStruct_FTutorialCategory_CRC();
		extern INTROTUTORIALS_API class UPackage* Z_Construct_UPackage_IntroTutorials();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FTutorialCategory, Z_Construct_UPackage_IntroTutorials(), TEXT("TutorialCategory"), sizeof(FTutorialCategory), Get_Z_Construct_UScriptStruct_FTutorialCategory_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FTutorialCategory(FTutorialCategory::StaticStruct, TEXT("/Script/IntroTutorials"));
static struct FScriptStruct_IntroTutorials_StaticRegisterNativesFTutorialCategory
{
	FScriptStruct_IntroTutorials_StaticRegisterNativesFTutorialCategory()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("TutorialCategory")),new UScriptStruct::TCppStructOps<FTutorialCategory>);
	}
} ScriptStruct_IntroTutorials_StaticRegisterNativesFTutorialCategory;
	void UEditorTutorial::OnTutorialClosed()
	{
		ProcessEvent(FindFunctionChecked(INTROTUTORIALS_OnTutorialClosed),NULL);
	}
	void UEditorTutorial::OnTutorialLaunched()
	{
		ProcessEvent(FindFunctionChecked(INTROTUTORIALS_OnTutorialLaunched),NULL);
	}
	void UEditorTutorial::OnTutorialStageEnded(FName StageName)
	{
		EditorTutorial_eventOnTutorialStageEnded_Parms Parms;
		Parms.StageName=StageName;
		ProcessEvent(FindFunctionChecked(INTROTUTORIALS_OnTutorialStageEnded),&Parms);
	}
	void UEditorTutorial::OnTutorialStageStarted(FName StageName)
	{
		EditorTutorial_eventOnTutorialStageStarted_Parms Parms;
		Parms.StageName=StageName;
		ProcessEvent(FindFunctionChecked(INTROTUTORIALS_OnTutorialStageStarted),&Parms);
	}
	void UEditorTutorial::StaticRegisterNativesUEditorTutorial()
	{
		FNativeFunctionRegistrar::RegisterFunction(UEditorTutorial::StaticClass(),"BeginTutorial",(Native)&UEditorTutorial::execBeginTutorial);
		FNativeFunctionRegistrar::RegisterFunction(UEditorTutorial::StaticClass(),"GetActorReference",(Native)&UEditorTutorial::execGetActorReference);
		FNativeFunctionRegistrar::RegisterFunction(UEditorTutorial::StaticClass(),"GetEngineFolderVisibilty",(Native)&UEditorTutorial::execGetEngineFolderVisibilty);
		FNativeFunctionRegistrar::RegisterFunction(UEditorTutorial::StaticClass(),"GoToNextTutorialStage",(Native)&UEditorTutorial::execGoToNextTutorialStage);
		FNativeFunctionRegistrar::RegisterFunction(UEditorTutorial::StaticClass(),"GoToPreviousTutorialStage",(Native)&UEditorTutorial::execGoToPreviousTutorialStage);
		FNativeFunctionRegistrar::RegisterFunction(UEditorTutorial::StaticClass(),"OpenAsset",(Native)&UEditorTutorial::execOpenAsset);
		FNativeFunctionRegistrar::RegisterFunction(UEditorTutorial::StaticClass(),"SetEngineFolderVisibilty",(Native)&UEditorTutorial::execSetEngineFolderVisibilty);
	}
	IMPLEMENT_CLASS(UEditorTutorial, 38186325);
	void UEditorTutorialFactory::StaticRegisterNativesUEditorTutorialFactory()
	{
	}
	IMPLEMENT_CLASS(UEditorTutorialFactory, 675505717);
	void UEditorTutorialImportFactory::StaticRegisterNativesUEditorTutorialImportFactory()
	{
	}
	IMPLEMENT_CLASS(UEditorTutorialImportFactory, 2843120901);
class UScriptStruct* FTutorialContext::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern INTROTUTORIALS_API class UScriptStruct* Z_Construct_UScriptStruct_FTutorialContext();
		extern INTROTUTORIALS_API uint32 Get_Z_Construct_UScriptStruct_FTutorialContext_CRC();
		extern INTROTUTORIALS_API class UPackage* Z_Construct_UPackage_IntroTutorials();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FTutorialContext, Z_Construct_UPackage_IntroTutorials(), TEXT("TutorialContext"), sizeof(FTutorialContext), Get_Z_Construct_UScriptStruct_FTutorialContext_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FTutorialContext(FTutorialContext::StaticStruct, TEXT("/Script/IntroTutorials"));
static struct FScriptStruct_IntroTutorials_StaticRegisterNativesFTutorialContext
{
	FScriptStruct_IntroTutorials_StaticRegisterNativesFTutorialContext()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("TutorialContext")),new UScriptStruct::TCppStructOps<FTutorialContext>);
	}
} ScriptStruct_IntroTutorials_StaticRegisterNativesFTutorialContext;
	void UEditorTutorialSettings::StaticRegisterNativesUEditorTutorialSettings()
	{
	}
	IMPLEMENT_CLASS(UEditorTutorialSettings, 990599981);
	void UTutorialSettings::StaticRegisterNativesUTutorialSettings()
	{
	}
	IMPLEMENT_CLASS(UTutorialSettings, 45144783);
class UScriptStruct* FTutorialProgress::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern INTROTUTORIALS_API class UScriptStruct* Z_Construct_UScriptStruct_FTutorialProgress();
		extern INTROTUTORIALS_API uint32 Get_Z_Construct_UScriptStruct_FTutorialProgress_CRC();
		extern INTROTUTORIALS_API class UPackage* Z_Construct_UPackage_IntroTutorials();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FTutorialProgress, Z_Construct_UPackage_IntroTutorials(), TEXT("TutorialProgress"), sizeof(FTutorialProgress), Get_Z_Construct_UScriptStruct_FTutorialProgress_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FTutorialProgress(FTutorialProgress::StaticStruct, TEXT("/Script/IntroTutorials"));
static struct FScriptStruct_IntroTutorials_StaticRegisterNativesFTutorialProgress
{
	FScriptStruct_IntroTutorials_StaticRegisterNativesFTutorialProgress()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("TutorialProgress")),new UScriptStruct::TCppStructOps<FTutorialProgress>);
	}
} ScriptStruct_IntroTutorials_StaticRegisterNativesFTutorialProgress;
	void UTutorialStateSettings::StaticRegisterNativesUTutorialStateSettings()
	{
	}
	IMPLEMENT_CLASS(UTutorialStateSettings, 469762110);
FName INTROTUTORIALS_OnTutorialClosed = FName(TEXT("OnTutorialClosed"));
FName INTROTUTORIALS_OnTutorialLaunched = FName(TEXT("OnTutorialLaunched"));
FName INTROTUTORIALS_OnTutorialStageEnded = FName(TEXT("OnTutorialStageEnded"));
FName INTROTUTORIALS_OnTutorialStageStarted = FName(TEXT("OnTutorialStageStarted"));
#if USE_COMPILED_IN_NATIVES
// Cross Module References
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FVector2D();
	SLATECORE_API class UEnum* Z_Construct_UEnum_SlateCore_EVerticalAlignment();
	SLATECORE_API class UEnum* Z_Construct_UEnum_SlateCore_EHorizontalAlignment();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FStringAssetReference();
	ENGINE_API class UClass* Z_Construct_UClass_AActor_NoRegister();
	COREUOBJECT_API class UClass* Z_Construct_UClass_UObject_NoRegister();
	COREUOBJECT_API class UClass* Z_Construct_UClass_UObject();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FStringClassReference();
	ENGINE_API class UClass* Z_Construct_UClass_UTexture2D_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UFactory();

	INTROTUTORIALS_API class UEnum* Z_Construct_UEnum_IntroTutorials_ETutorialAnchorIdentifier();
	INTROTUTORIALS_API class UEnum* Z_Construct_UEnum_IntroTutorials_ETutorialContent();
	INTROTUTORIALS_API class UScriptStruct* Z_Construct_UScriptStruct_FTutorialStage();
	INTROTUTORIALS_API class UScriptStruct* Z_Construct_UScriptStruct_FTutorialWidgetContent();
	INTROTUTORIALS_API class UScriptStruct* Z_Construct_UScriptStruct_FTutorialContentAnchor();
	INTROTUTORIALS_API class UScriptStruct* Z_Construct_UScriptStruct_FTutorialContent();
	INTROTUTORIALS_API class UScriptStruct* Z_Construct_UScriptStruct_FTutorialCategory();
	INTROTUTORIALS_API class UFunction* Z_Construct_UFunction_UEditorTutorial_BeginTutorial();
	INTROTUTORIALS_API class UFunction* Z_Construct_UFunction_UEditorTutorial_GetActorReference();
	INTROTUTORIALS_API class UFunction* Z_Construct_UFunction_UEditorTutorial_GetEngineFolderVisibilty();
	INTROTUTORIALS_API class UFunction* Z_Construct_UFunction_UEditorTutorial_GoToNextTutorialStage();
	INTROTUTORIALS_API class UFunction* Z_Construct_UFunction_UEditorTutorial_GoToPreviousTutorialStage();
	INTROTUTORIALS_API class UFunction* Z_Construct_UFunction_UEditorTutorial_OnTutorialClosed();
	INTROTUTORIALS_API class UFunction* Z_Construct_UFunction_UEditorTutorial_OnTutorialLaunched();
	INTROTUTORIALS_API class UFunction* Z_Construct_UFunction_UEditorTutorial_OnTutorialStageEnded();
	INTROTUTORIALS_API class UFunction* Z_Construct_UFunction_UEditorTutorial_OnTutorialStageStarted();
	INTROTUTORIALS_API class UFunction* Z_Construct_UFunction_UEditorTutorial_OpenAsset();
	INTROTUTORIALS_API class UFunction* Z_Construct_UFunction_UEditorTutorial_SetEngineFolderVisibilty();
	INTROTUTORIALS_API class UClass* Z_Construct_UClass_UEditorTutorial_NoRegister();
	INTROTUTORIALS_API class UClass* Z_Construct_UClass_UEditorTutorial();
	INTROTUTORIALS_API class UClass* Z_Construct_UClass_UEditorTutorialFactory_NoRegister();
	INTROTUTORIALS_API class UClass* Z_Construct_UClass_UEditorTutorialFactory();
	INTROTUTORIALS_API class UClass* Z_Construct_UClass_UEditorTutorialImportFactory_NoRegister();
	INTROTUTORIALS_API class UClass* Z_Construct_UClass_UEditorTutorialImportFactory();
	INTROTUTORIALS_API class UScriptStruct* Z_Construct_UScriptStruct_FTutorialContext();
	INTROTUTORIALS_API class UClass* Z_Construct_UClass_UEditorTutorialSettings_NoRegister();
	INTROTUTORIALS_API class UClass* Z_Construct_UClass_UEditorTutorialSettings();
	INTROTUTORIALS_API class UClass* Z_Construct_UClass_UTutorialSettings_NoRegister();
	INTROTUTORIALS_API class UClass* Z_Construct_UClass_UTutorialSettings();
	INTROTUTORIALS_API class UScriptStruct* Z_Construct_UScriptStruct_FTutorialProgress();
	INTROTUTORIALS_API class UClass* Z_Construct_UClass_UTutorialStateSettings_NoRegister();
	INTROTUTORIALS_API class UClass* Z_Construct_UClass_UTutorialStateSettings();
	INTROTUTORIALS_API class UPackage* Z_Construct_UPackage_IntroTutorials();
	UEnum* Z_Construct_UEnum_IntroTutorials_ETutorialAnchorIdentifier()
	{
		UPackage* Outer=Z_Construct_UPackage_IntroTutorials();
		extern uint32 Get_Z_Construct_UEnum_IntroTutorials_ETutorialAnchorIdentifier_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("ETutorialAnchorIdentifier"), 0, Get_Z_Construct_UEnum_IntroTutorials_ETutorialAnchorIdentifier_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ETutorialAnchorIdentifier"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ETutorialAnchorIdentifier::None")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ETutorialAnchorIdentifier::NamedWidget")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ETutorialAnchorIdentifier::Asset")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ETutorialAnchorIdentifier::ETutorialAnchorIdentifier_MAX")), 3));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("Asset.ToolTip"), TEXT("An asset accessible via the content browser"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Public/EditorTutorial.h"));
			MetaData->SetValue(ReturnEnum, TEXT("NamedWidget.ToolTip"), TEXT("Uses a tutorial wrapper widget"));
			MetaData->SetValue(ReturnEnum, TEXT("None.ToolTip"), TEXT("No anchor"));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("The type of tutorial content to display"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_IntroTutorials_ETutorialAnchorIdentifier_CRC() { return 2675611627U; }
	UEnum* Z_Construct_UEnum_IntroTutorials_ETutorialContent()
	{
		UPackage* Outer=Z_Construct_UPackage_IntroTutorials();
		extern uint32 Get_Z_Construct_UEnum_IntroTutorials_ETutorialContent_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("ETutorialContent"), 0, Get_Z_Construct_UEnum_IntroTutorials_ETutorialContent_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ETutorialContent"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ETutorialContent::None")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ETutorialContent::Text")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ETutorialContent::UDNExcerpt")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ETutorialContent::RichText")), 3));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ETutorialContent::ETutorialContent_MAX")), 4));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Public/EditorTutorial.h"));
			MetaData->SetValue(ReturnEnum, TEXT("None.ToolTip"), TEXT("Blank - displays no content"));
			MetaData->SetValue(ReturnEnum, TEXT("RichText.ToolTip"), TEXT("Rich text content"));
			MetaData->SetValue(ReturnEnum, TEXT("Text.ToolTip"), TEXT("Plain text content"));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("The type of tutorial content to display"));
			MetaData->SetValue(ReturnEnum, TEXT("UDNExcerpt.ToolTip"), TEXT("Content from a UDN excerpt"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_IntroTutorials_ETutorialContent_CRC() { return 2004636432U; }
	UScriptStruct* Z_Construct_UScriptStruct_FTutorialStage()
	{
		UPackage* Outer=Z_Construct_UPackage_IntroTutorials();
		extern uint32 Get_Z_Construct_UScriptStruct_FTutorialStage_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("TutorialStage"), sizeof(FTutorialStage), Get_Z_Construct_UScriptStruct_FTutorialStage_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("TutorialStage"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FTutorialStage>, EStructFlags(0x00000201));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bInvertPlatformTest, FTutorialStage, bool);
			UProperty* NewProp_bInvertPlatformTest = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bInvertPlatformTest"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bInvertPlatformTest, FTutorialStage), 0x0000000000000001, CPP_BOOL_PROPERTY_BITMASK(bInvertPlatformTest, FTutorialStage), sizeof(bool), true);
			UProperty* NewProp_PlatformsToTest = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("PlatformsToTest"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(PlatformsToTest, FTutorialStage), 0x0000000000000001);
			UProperty* NewProp_PlatformsToTest_Inner = new(EC_InternalUseOnlyConstructor, NewProp_PlatformsToTest, TEXT("PlatformsToTest"), RF_Public|RF_Transient|RF_Native) UStrProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000);
			UProperty* NewProp_BackButtonText = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("BackButtonText"), RF_Public|RF_Transient|RF_Native) UTextProperty(CPP_PROPERTY_BASE(BackButtonText, FTutorialStage), 0x0000000000000001);
			UProperty* NewProp_NextButtonText = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("NextButtonText"), RF_Public|RF_Transient|RF_Native) UTextProperty(CPP_PROPERTY_BASE(NextButtonText, FTutorialStage), 0x0000000000000001);
			UProperty* NewProp_WidgetContent = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("WidgetContent"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(WidgetContent, FTutorialStage), 0x0000000000000001);
			UProperty* NewProp_WidgetContent_Inner = new(EC_InternalUseOnlyConstructor, NewProp_WidgetContent, TEXT("WidgetContent"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FTutorialWidgetContent());
			UProperty* NewProp_Content = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Content"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Content, FTutorialStage), 0x0000000000000001, Z_Construct_UScriptStruct_FTutorialContent());
			UProperty* NewProp_Name = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Name"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(Name, FTutorialStage), 0x0000000000000001);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/EditorTutorial.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("A single tutorial stage, containing the optional main content & a number of widgets with content attached"));
			MetaData->SetValue(NewProp_bInvertPlatformTest, TEXT("Category"), TEXT("Stage"));
			MetaData->SetValue(NewProp_bInvertPlatformTest, TEXT("ModuleRelativePath"), TEXT("Public/EditorTutorial.h"));
			MetaData->SetValue(NewProp_bInvertPlatformTest, TEXT("ToolTip"), TEXT("If false, stage will be skipped if running on any platform in PlatformsToTest. If true, the stage will be if not running on any platform in PlatformsToTest."));
			MetaData->SetValue(NewProp_PlatformsToTest, TEXT("Category"), TEXT("Stage"));
			MetaData->SetValue(NewProp_PlatformsToTest, TEXT("ModuleRelativePath"), TEXT("Public/EditorTutorial.h"));
			MetaData->SetValue(NewProp_PlatformsToTest, TEXT("ToolTip"), TEXT("List of platforms to test against. Meaning of test is determined by InvertPlatformTest."));
			MetaData->SetValue(NewProp_BackButtonText, TEXT("Category"), TEXT("Stage"));
			MetaData->SetValue(NewProp_BackButtonText, TEXT("ModuleRelativePath"), TEXT("Public/EditorTutorial.h"));
			MetaData->SetValue(NewProp_BackButtonText, TEXT("ToolTip"), TEXT("Text to display on the back button"));
			MetaData->SetValue(NewProp_NextButtonText, TEXT("Category"), TEXT("Stage"));
			MetaData->SetValue(NewProp_NextButtonText, TEXT("ModuleRelativePath"), TEXT("Public/EditorTutorial.h"));
			MetaData->SetValue(NewProp_NextButtonText, TEXT("ToolTip"), TEXT("Text to display on the next button"));
			MetaData->SetValue(NewProp_WidgetContent, TEXT("Category"), TEXT("Stage"));
			MetaData->SetValue(NewProp_WidgetContent, TEXT("ModuleRelativePath"), TEXT("Public/EditorTutorial.h"));
			MetaData->SetValue(NewProp_WidgetContent, TEXT("ToolTip"), TEXT("Widget-bound content to display for this stage"));
			MetaData->SetValue(NewProp_Content, TEXT("Category"), TEXT("Stage"));
			MetaData->SetValue(NewProp_Content, TEXT("ModuleRelativePath"), TEXT("Public/EditorTutorial.h"));
			MetaData->SetValue(NewProp_Content, TEXT("ToolTip"), TEXT("Non-widget-bound content to display in this stage"));
			MetaData->SetValue(NewProp_Name, TEXT("Category"), TEXT("Stage"));
			MetaData->SetValue(NewProp_Name, TEXT("ModuleRelativePath"), TEXT("Public/EditorTutorial.h"));
			MetaData->SetValue(NewProp_Name, TEXT("ToolTip"), TEXT("Identifier for this stage"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FTutorialStage_CRC() { return 1222089775U; }
	UScriptStruct* Z_Construct_UScriptStruct_FTutorialWidgetContent()
	{
		UPackage* Outer=Z_Construct_UPackage_IntroTutorials();
		extern uint32 Get_Z_Construct_UScriptStruct_FTutorialWidgetContent_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("TutorialWidgetContent"), sizeof(FTutorialWidgetContent), Get_Z_Construct_UScriptStruct_FTutorialWidgetContent_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("TutorialWidgetContent"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FTutorialWidgetContent>, EStructFlags(0x00000201));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bAutoFocus, FTutorialWidgetContent, bool);
			UProperty* NewProp_bAutoFocus = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bAutoFocus"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bAutoFocus, FTutorialWidgetContent), 0x0000000000000001, CPP_BOOL_PROPERTY_BITMASK(bAutoFocus, FTutorialWidgetContent), sizeof(bool), true);
			UProperty* NewProp_ContentWidth = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ContentWidth"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(ContentWidth, FTutorialWidgetContent), 0x0000040000000001);
			UProperty* NewProp_Offset = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Offset"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Offset, FTutorialWidgetContent), 0x0000040000000001, Z_Construct_UScriptStruct_FVector2D());
			UProperty* NewProp_VerticalAlignment = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("VerticalAlignment"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(VerticalAlignment, FTutorialWidgetContent), 0x0000040000000001, Z_Construct_UEnum_SlateCore_EVerticalAlignment());
			UProperty* NewProp_HorizontalAlignment = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HorizontalAlignment"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(HorizontalAlignment, FTutorialWidgetContent), 0x0000040000000001, Z_Construct_UEnum_SlateCore_EHorizontalAlignment());
			UProperty* NewProp_WidgetAnchor = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("WidgetAnchor"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(WidgetAnchor, FTutorialWidgetContent), 0x0000000000000001, Z_Construct_UScriptStruct_FTutorialContentAnchor());
			UProperty* NewProp_Content = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Content"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Content, FTutorialWidgetContent), 0x0000000000000001, Z_Construct_UScriptStruct_FTutorialContent());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/EditorTutorial.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Content that is displayed relative to a widget"));
			MetaData->SetValue(NewProp_bAutoFocus, TEXT("Category"), TEXT("Anchor"));
			MetaData->SetValue(NewProp_bAutoFocus, TEXT("ModuleRelativePath"), TEXT("Public/EditorTutorial.h"));
			MetaData->SetValue(NewProp_bAutoFocus, TEXT("ToolTip"), TEXT("If this a node that can be focused (EG a blueprint node) should we auto focus on it"));
			MetaData->SetValue(NewProp_ContentWidth, TEXT("Category"), TEXT("Widget"));
			MetaData->SetValue(NewProp_ContentWidth, TEXT("ModuleRelativePath"), TEXT("Public/EditorTutorial.h"));
			MetaData->SetValue(NewProp_ContentWidth, TEXT("ToolTip"), TEXT("Content width - text will be wrapped at this point"));
			MetaData->SetValue(NewProp_ContentWidth, TEXT("UIMax"), TEXT("600.0"));
			MetaData->SetValue(NewProp_ContentWidth, TEXT("UIMin"), TEXT("10.0"));
			MetaData->SetValue(NewProp_Offset, TEXT("Category"), TEXT("Widget"));
			MetaData->SetValue(NewProp_Offset, TEXT("ModuleRelativePath"), TEXT("Public/EditorTutorial.h"));
			MetaData->SetValue(NewProp_Offset, TEXT("ToolTip"), TEXT("Custom offset from widget"));
			MetaData->SetValue(NewProp_VerticalAlignment, TEXT("Category"), TEXT("Widget"));
			MetaData->SetValue(NewProp_VerticalAlignment, TEXT("ModuleRelativePath"), TEXT("Public/EditorTutorial.h"));
			MetaData->SetValue(NewProp_HorizontalAlignment, TEXT("Category"), TEXT("Widget"));
			MetaData->SetValue(NewProp_HorizontalAlignment, TEXT("ModuleRelativePath"), TEXT("Public/EditorTutorial.h"));
			MetaData->SetValue(NewProp_WidgetAnchor, TEXT("Category"), TEXT("Widget"));
			MetaData->SetValue(NewProp_WidgetAnchor, TEXT("ModuleRelativePath"), TEXT("Public/EditorTutorial.h"));
			MetaData->SetValue(NewProp_WidgetAnchor, TEXT("ToolTip"), TEXT("Anchor for content widget to highlight"));
			MetaData->SetValue(NewProp_Content, TEXT("Category"), TEXT("Widget"));
			MetaData->SetValue(NewProp_Content, TEXT("ModuleRelativePath"), TEXT("Public/EditorTutorial.h"));
			MetaData->SetValue(NewProp_Content, TEXT("ToolTip"), TEXT("Content to associate with widget"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FTutorialWidgetContent_CRC() { return 796776874U; }
	UScriptStruct* Z_Construct_UScriptStruct_FTutorialContentAnchor()
	{
		UPackage* Outer=Z_Construct_UPackage_IntroTutorials();
		extern uint32 Get_Z_Construct_UScriptStruct_FTutorialContentAnchor_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("TutorialContentAnchor"), sizeof(FTutorialContentAnchor), Get_Z_Construct_UScriptStruct_FTutorialContentAnchor_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("TutorialContentAnchor"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FTutorialContentAnchor>, EStructFlags(0x00000201));
			UProperty* NewProp_OuterName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("OuterName"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(OuterName, FTutorialContentAnchor), 0x0000000000000001);
			UProperty* NewProp_GUIDString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("GUIDString"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(GUIDString, FTutorialContentAnchor), 0x0000000000000001);
			UProperty* NewProp_FriendlyName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("FriendlyName"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(FriendlyName, FTutorialContentAnchor), 0x0000000000000001);
			UProperty* NewProp_TabToFocusOrOpen = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("TabToFocusOrOpen"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(TabToFocusOrOpen, FTutorialContentAnchor), 0x0000000000000001);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bDrawHighlight, FTutorialContentAnchor, bool);
			UProperty* NewProp_bDrawHighlight = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bDrawHighlight"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bDrawHighlight, FTutorialContentAnchor), 0x0000000000000001, CPP_BOOL_PROPERTY_BITMASK(bDrawHighlight, FTutorialContentAnchor), sizeof(bool), true);
			UProperty* NewProp_Asset = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Asset"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Asset, FTutorialContentAnchor), 0x0000000000000001, Z_Construct_UScriptStruct_FStringAssetReference());
			UProperty* NewProp_WrapperIdentifier = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("WrapperIdentifier"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(WrapperIdentifier, FTutorialContentAnchor), 0x0000000000000001);
			UProperty* NewProp_Type = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Type"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(Type, FTutorialContentAnchor), 0x0000000000000001, Z_Construct_UEnum_IntroTutorials_ETutorialAnchorIdentifier());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/EditorTutorial.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("A way of identifying something to be highlighted by a tutorial"));
			MetaData->SetValue(NewProp_OuterName, TEXT("Category"), TEXT("AnchorMeta|FBlueprintGraphNodeMetaData"));
			MetaData->SetValue(NewProp_OuterName, TEXT("ModuleRelativePath"), TEXT("Public/EditorTutorial.h"));
			MetaData->SetValue(NewProp_OuterName, TEXT("ToolTip"), TEXT("Name of the outer object - should be the blueprint that 'owns' the node"));
			MetaData->SetValue(NewProp_GUIDString, TEXT("Category"), TEXT("AnchorMeta|FBlueprintGraphNodeMetaData"));
			MetaData->SetValue(NewProp_GUIDString, TEXT("ModuleRelativePath"), TEXT("Public/EditorTutorial.h"));
			MetaData->SetValue(NewProp_GUIDString, TEXT("ToolTip"), TEXT("The GUID string"));
			MetaData->SetValue(NewProp_FriendlyName, TEXT("Category"), TEXT("AnchorMeta|FBlueprintGraphNodeMetaData"));
			MetaData->SetValue(NewProp_FriendlyName, TEXT("ModuleRelativePath"), TEXT("Public/EditorTutorial.h"));
			MetaData->SetValue(NewProp_FriendlyName, TEXT("ToolTip"), TEXT("User friendly name to display in the dialog"));
			MetaData->SetValue(NewProp_TabToFocusOrOpen, TEXT("Category"), TEXT("Anchor"));
			MetaData->SetValue(NewProp_TabToFocusOrOpen, TEXT("ModuleRelativePath"), TEXT("Public/EditorTutorial.h"));
			MetaData->SetValue(NewProp_TabToFocusOrOpen, TEXT("ToolTip"), TEXT("Tab on which to focus (EG 'My Blueprint' tab)."));
			MetaData->SetValue(NewProp_bDrawHighlight, TEXT("Category"), TEXT("Anchor"));
			MetaData->SetValue(NewProp_bDrawHighlight, TEXT("ModuleRelativePath"), TEXT("Public/EditorTutorial.h"));
			MetaData->SetValue(NewProp_bDrawHighlight, TEXT("ToolTip"), TEXT("Whether to draw an animated highlight around the widget"));
			MetaData->SetValue(NewProp_Asset, TEXT("Category"), TEXT("Anchor"));
			MetaData->SetValue(NewProp_Asset, TEXT("ModuleRelativePath"), TEXT("Public/EditorTutorial.h"));
			MetaData->SetValue(NewProp_Asset, TEXT("ToolTip"), TEXT("If reference is an asset, we use this to resolve it"));
			MetaData->SetValue(NewProp_WrapperIdentifier, TEXT("Category"), TEXT("Anchor"));
			MetaData->SetValue(NewProp_WrapperIdentifier, TEXT("ModuleRelativePath"), TEXT("Public/EditorTutorial.h"));
			MetaData->SetValue(NewProp_WrapperIdentifier, TEXT("ToolTip"), TEXT("If widget is in a wrapper widget, this is the wrapper widget name"));
			MetaData->SetValue(NewProp_Type, TEXT("Category"), TEXT("Anchor"));
			MetaData->SetValue(NewProp_Type, TEXT("ModuleRelativePath"), TEXT("Public/EditorTutorial.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FTutorialContentAnchor_CRC() { return 2305628848U; }
	UScriptStruct* Z_Construct_UScriptStruct_FTutorialContent()
	{
		UPackage* Outer=Z_Construct_UPackage_IntroTutorials();
		extern uint32 Get_Z_Construct_UScriptStruct_FTutorialContent_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("TutorialContent"), sizeof(FTutorialContent), Get_Z_Construct_UScriptStruct_FTutorialContent_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("TutorialContent"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FTutorialContent>, EStructFlags(0x00000201));
			UProperty* NewProp_Text = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Text"), RF_Public|RF_Transient|RF_Native) UTextProperty(CPP_PROPERTY_BASE(Text, FTutorialContent), 0x0000000000000001);
			UProperty* NewProp_ExcerptName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ExcerptName"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(ExcerptName, FTutorialContent), 0x0000000000000001);
			UProperty* NewProp_Content = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Content"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(Content, FTutorialContent), 0x0000000000000001);
			UProperty* NewProp_Type = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Type"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(Type, FTutorialContent), 0x0000000000000001, Z_Construct_UEnum_IntroTutorials_ETutorialContent());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/EditorTutorial.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Content wrapper"));
			MetaData->SetValue(NewProp_Text, TEXT("Category"), TEXT("Content"));
			MetaData->SetValue(NewProp_Text, TEXT("ModuleRelativePath"), TEXT("Public/EditorTutorial.h"));
			MetaData->SetValue(NewProp_Text, TEXT("MultiLine"), TEXT("TRUE"));
			MetaData->SetValue(NewProp_Text, TEXT("ToolTip"), TEXT("Localized text to use with this content"));
			MetaData->SetValue(NewProp_ExcerptName, TEXT("Category"), TEXT("Content"));
			MetaData->SetValue(NewProp_ExcerptName, TEXT("ModuleRelativePath"), TEXT("Public/EditorTutorial.h"));
			MetaData->SetValue(NewProp_ExcerptName, TEXT("ToolTip"), TEXT("Excerpt name for UDN excerpt"));
			MetaData->SetValue(NewProp_Content, TEXT("Category"), TEXT("Content"));
			MetaData->SetValue(NewProp_Content, TEXT("ModuleRelativePath"), TEXT("Public/EditorTutorial.h"));
			MetaData->SetValue(NewProp_Content, TEXT("ToolTip"), TEXT("Content reference string, path etc."));
			MetaData->SetValue(NewProp_Type, TEXT("Category"), TEXT("Content"));
			MetaData->SetValue(NewProp_Type, TEXT("ModuleRelativePath"), TEXT("Public/EditorTutorial.h"));
			MetaData->SetValue(NewProp_Type, TEXT("ToolTip"), TEXT("The type of this content"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FTutorialContent_CRC() { return 2766464925U; }
	UScriptStruct* Z_Construct_UScriptStruct_FTutorialCategory()
	{
		UPackage* Outer=Z_Construct_UPackage_IntroTutorials();
		extern uint32 Get_Z_Construct_UScriptStruct_FTutorialCategory_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("TutorialCategory"), sizeof(FTutorialCategory), Get_Z_Construct_UScriptStruct_FTutorialCategory_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("TutorialCategory"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FTutorialCategory>, EStructFlags(0x00000201));
			UProperty* NewProp_Texture = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Texture"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Texture, FTutorialCategory), 0x0000000000000001, Z_Construct_UScriptStruct_FStringAssetReference());
			UProperty* NewProp_Icon = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Icon"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(Icon, FTutorialCategory), 0x0000000000000001);
			UProperty* NewProp_Description = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Description"), RF_Public|RF_Transient|RF_Native) UTextProperty(CPP_PROPERTY_BASE(Description, FTutorialCategory), 0x0000000000000001);
			UProperty* NewProp_SortOrder = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("SortOrder"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(SortOrder, FTutorialCategory), 0x0000000000000000);
			UProperty* NewProp_Title = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Title"), RF_Public|RF_Transient|RF_Native) UTextProperty(CPP_PROPERTY_BASE(Title, FTutorialCategory), 0x0000000000000001);
			UProperty* NewProp_Identifier = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Identifier"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(Identifier, FTutorialCategory), 0x0000000000000001);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/EditorTutorial.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Category description"));
			MetaData->SetValue(NewProp_Texture, TEXT("AllowedClasses"), TEXT("Texture2D"));
			MetaData->SetValue(NewProp_Texture, TEXT("Category"), TEXT("Tutorial"));
			MetaData->SetValue(NewProp_Texture, TEXT("ModuleRelativePath"), TEXT("Public/EditorTutorial.h"));
			MetaData->SetValue(NewProp_Texture, TEXT("ToolTip"), TEXT("Texture for this tutorial, used when presented to the user in the tutorial browser."));
			MetaData->SetValue(NewProp_Icon, TEXT("Category"), TEXT("Tutorial"));
			MetaData->SetValue(NewProp_Icon, TEXT("ModuleRelativePath"), TEXT("Public/EditorTutorial.h"));
			MetaData->SetValue(NewProp_Icon, TEXT("ToolTip"), TEXT("Icon for this tutorial, used when presented to the user in the tutorial browser. Only used if there isn't a valid texture to use."));
			MetaData->SetValue(NewProp_Description, TEXT("Category"), TEXT("Content"));
			MetaData->SetValue(NewProp_Description, TEXT("ModuleRelativePath"), TEXT("Public/EditorTutorial.h"));
			MetaData->SetValue(NewProp_Description, TEXT("MultiLine"), TEXT("TRUE"));
			MetaData->SetValue(NewProp_Description, TEXT("ToolTip"), TEXT("Localized text to use to describe this category"));
			MetaData->SetValue(NewProp_SortOrder, TEXT("ModuleRelativePath"), TEXT("Public/EditorTutorial.h"));
			MetaData->SetValue(NewProp_SortOrder, TEXT("ToolTip"), TEXT("Sort order, used by the tutorial browser - set in editor game-agnostic INI file"));
			MetaData->SetValue(NewProp_Title, TEXT("Category"), TEXT("Content"));
			MetaData->SetValue(NewProp_Title, TEXT("ModuleRelativePath"), TEXT("Public/EditorTutorial.h"));
			MetaData->SetValue(NewProp_Title, TEXT("ToolTip"), TEXT("Title of the category"));
			MetaData->SetValue(NewProp_Identifier, TEXT("Category"), TEXT("Content"));
			MetaData->SetValue(NewProp_Identifier, TEXT("ModuleRelativePath"), TEXT("Public/EditorTutorial.h"));
			MetaData->SetValue(NewProp_Identifier, TEXT("ToolTip"), TEXT("Period-separated category name, e.g. \"Editor Quickstart.Level Editor\""));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FTutorialCategory_CRC() { return 846187170U; }
	UFunction* Z_Construct_UFunction_UEditorTutorial_BeginTutorial()
	{
		struct EditorTutorial_eventBeginTutorial_Parms
		{
			UEditorTutorial* TutorialToStart;
			bool bRestart;
		};
		UObject* Outer=Z_Construct_UClass_UEditorTutorial();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("BeginTutorial"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04082401, 65535, sizeof(EditorTutorial_eventBeginTutorial_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bRestart, EditorTutorial_eventBeginTutorial_Parms, bool);
			UProperty* NewProp_bRestart = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("bRestart"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bRestart, EditorTutorial_eventBeginTutorial_Parms), 0x0000000000000080, CPP_BOOL_PROPERTY_BITMASK(bRestart, EditorTutorial_eventBeginTutorial_Parms), sizeof(bool), true);
			UProperty* NewProp_TutorialToStart = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("TutorialToStart"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(TutorialToStart, EditorTutorial_eventBeginTutorial_Parms), 0x0000000000000080, Z_Construct_UClass_UEditorTutorial_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Tutorial"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/EditorTutorial.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Begin a tutorial. Note that this will end the current tutorial that is in progress, if any"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UEditorTutorial_GetActorReference()
	{
		struct EditorTutorial_eventGetActorReference_Parms
		{
			FString PathToActor;
			AActor* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UEditorTutorial();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetActorReference"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x14020401, 65535, sizeof(EditorTutorial_eventGetActorReference_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, EditorTutorial_eventGetActorReference_Parms), 0x0000000000000580, Z_Construct_UClass_AActor_NoRegister());
			UProperty* NewProp_PathToActor = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("PathToActor"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(PathToActor, EditorTutorial_eventGetActorReference_Parms), 0x0000000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Tutorial"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/EditorTutorial.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Attempts to find the actor specified by PathToActor in the current editor world\n@param        PathToActor     The path to the actor (e.g. PersistentLevel.PlayerStart)\n@return       A reference to the actor, or none if it wasn't found"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UEditorTutorial_GetEngineFolderVisibilty()
	{
		struct EditorTutorial_eventGetEngineFolderVisibilty_Parms
		{
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UEditorTutorial();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetEngineFolderVisibilty"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04082401, 65535, sizeof(EditorTutorial_eventGetEngineFolderVisibilty_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, EditorTutorial_eventGetEngineFolderVisibilty_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, EditorTutorial_eventGetEngineFolderVisibilty_Parms), 0x0000000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, EditorTutorial_eventGetEngineFolderVisibilty_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Tutorial"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/EditorTutorial.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Returns the visibility of the engine folder in the content browser"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UEditorTutorial_GoToNextTutorialStage()
	{
		UObject* Outer=Z_Construct_UClass_UEditorTutorial();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GoToNextTutorialStage"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04082401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Tutorial"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/EditorTutorial.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Advance to the next stage of a tutorial"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UEditorTutorial_GoToPreviousTutorialStage()
	{
		UObject* Outer=Z_Construct_UClass_UEditorTutorial();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GoToPreviousTutorialStage"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04082401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Tutorial"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/EditorTutorial.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Advance to the previous stage of a tutorial"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UEditorTutorial_OnTutorialClosed()
	{
		UObject* Outer=Z_Construct_UClass_UEditorTutorial();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnTutorialClosed"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x08080800, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Tutorial"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/EditorTutorial.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Event fired when a tutorial is closed"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UEditorTutorial_OnTutorialLaunched()
	{
		UObject* Outer=Z_Construct_UClass_UEditorTutorial();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnTutorialLaunched"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x08080800, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Tutorial"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/EditorTutorial.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Event fired when a tutorial is launched"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UEditorTutorial_OnTutorialStageEnded()
	{
		UObject* Outer=Z_Construct_UClass_UEditorTutorial();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnTutorialStageEnded"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x08080800, 65535, sizeof(EditorTutorial_eventOnTutorialStageEnded_Parms));
			UProperty* NewProp_StageName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("StageName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(StageName, EditorTutorial_eventOnTutorialStageEnded_Parms), 0x0000000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Tutorial"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/EditorTutorial.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Event fired when a tutorial stage ends"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UEditorTutorial_OnTutorialStageStarted()
	{
		UObject* Outer=Z_Construct_UClass_UEditorTutorial();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnTutorialStageStarted"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x08080800, 65535, sizeof(EditorTutorial_eventOnTutorialStageStarted_Parms));
			UProperty* NewProp_StageName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("StageName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(StageName, EditorTutorial_eventOnTutorialStageStarted_Parms), 0x0000000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Tutorial"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/EditorTutorial.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Event fired when a tutorial stage begins"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UEditorTutorial_OpenAsset()
	{
		struct EditorTutorial_eventOpenAsset_Parms
		{
			UObject* Asset;
		};
		UObject* Outer=Z_Construct_UClass_UEditorTutorial();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OpenAsset"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04082401, 65535, sizeof(EditorTutorial_eventOpenAsset_Parms));
			UProperty* NewProp_Asset = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Asset"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(Asset, EditorTutorial_eventOpenAsset_Parms), 0x0000000000000080, Z_Construct_UClass_UObject_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Tutorial"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/EditorTutorial.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Open an asset for use by a tutorial\n@param       Asset   The asset to open"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UEditorTutorial_SetEngineFolderVisibilty()
	{
		struct EditorTutorial_eventSetEngineFolderVisibilty_Parms
		{
			bool bNewVisibility;
		};
		UObject* Outer=Z_Construct_UClass_UEditorTutorial();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetEngineFolderVisibilty"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04082401, 65535, sizeof(EditorTutorial_eventSetEngineFolderVisibilty_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bNewVisibility, EditorTutorial_eventSetEngineFolderVisibilty_Parms, bool);
			UProperty* NewProp_bNewVisibility = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("bNewVisibility"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bNewVisibility, EditorTutorial_eventSetEngineFolderVisibilty_Parms), 0x0000000000000080, CPP_BOOL_PROPERTY_BITMASK(bNewVisibility, EditorTutorial_eventSetEngineFolderVisibilty_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Tutorial"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/EditorTutorial.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Sets the visibility of the engine folder in the content browser"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UEditorTutorial_NoRegister()
	{
		return UEditorTutorial::StaticClass();
	}
	UClass* Z_Construct_UClass_UEditorTutorial()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage_IntroTutorials();
			OuterClass = UEditorTutorial::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20101080;

				OuterClass->LinkChild(Z_Construct_UFunction_UEditorTutorial_BeginTutorial());
				OuterClass->LinkChild(Z_Construct_UFunction_UEditorTutorial_GetActorReference());
				OuterClass->LinkChild(Z_Construct_UFunction_UEditorTutorial_GetEngineFolderVisibilty());
				OuterClass->LinkChild(Z_Construct_UFunction_UEditorTutorial_GoToNextTutorialStage());
				OuterClass->LinkChild(Z_Construct_UFunction_UEditorTutorial_GoToPreviousTutorialStage());
				OuterClass->LinkChild(Z_Construct_UFunction_UEditorTutorial_OnTutorialClosed());
				OuterClass->LinkChild(Z_Construct_UFunction_UEditorTutorial_OnTutorialLaunched());
				OuterClass->LinkChild(Z_Construct_UFunction_UEditorTutorial_OnTutorialStageEnded());
				OuterClass->LinkChild(Z_Construct_UFunction_UEditorTutorial_OnTutorialStageStarted());
				OuterClass->LinkChild(Z_Construct_UFunction_UEditorTutorial_OpenAsset());
				OuterClass->LinkChild(Z_Construct_UFunction_UEditorTutorial_SetEngineFolderVisibilty());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_SearchTags = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SearchTags"), RF_Public|RF_Transient|RF_Native) UTextProperty(CPP_PROPERTY_BASE(SearchTags, UEditorTutorial), 0x0000010000000001);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bHideInBrowser, UEditorTutorial, bool);
				UProperty* NewProp_bHideInBrowser = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bHideInBrowser"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bHideInBrowser, UEditorTutorial), 0x0000000000000001, CPP_BOOL_PROPERTY_BITMASK(bHideInBrowser, UEditorTutorial), sizeof(bool), true);
				UProperty* NewProp_ImportPath = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ImportPath"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(ImportPath, UEditorTutorial), 0x0000000000000000);
				UProperty* NewProp_AssetToUse = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AssetToUse"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(AssetToUse, UEditorTutorial), 0x0000000000000001, Z_Construct_UScriptStruct_FStringAssetReference());
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bIsStandalone, UEditorTutorial, bool);
				UProperty* NewProp_bIsStandalone = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bIsStandalone"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bIsStandalone, UEditorTutorial), 0x0000000000000001, CPP_BOOL_PROPERTY_BITMASK(bIsStandalone, UEditorTutorial), sizeof(bool), true);
				UProperty* NewProp_NextTutorial = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("NextTutorial"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(NextTutorial, UEditorTutorial), 0x0000000000000001, Z_Construct_UScriptStruct_FStringClassReference());
				UProperty* NewProp_PreviousTutorial = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("PreviousTutorial"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(PreviousTutorial, UEditorTutorial), 0x0000000000000001, Z_Construct_UScriptStruct_FStringClassReference());
				UProperty* NewProp_Stages = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Stages"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(Stages, UEditorTutorial), 0x0000000000000001);
				UProperty* NewProp_Stages_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Stages, TEXT("Stages"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FTutorialStage());
				UProperty* NewProp_SummaryContent = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SummaryContent"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(SummaryContent, UEditorTutorial), 0x0000000000000001, Z_Construct_UScriptStruct_FTutorialContent());
				UProperty* NewProp_Category = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Category"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(Category, UEditorTutorial), 0x0000000000000001);
				UProperty* NewProp_Texture = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Texture"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(Texture, UEditorTutorial), 0x0000000000000001, Z_Construct_UClass_UTexture2D_NoRegister());
				UProperty* NewProp_Icon = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Icon"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(Icon, UEditorTutorial), 0x0000000000000001);
				UProperty* NewProp_SortOrder = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SortOrder"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(SortOrder, UEditorTutorial), 0x0000000000010015);
				UProperty* NewProp_Title = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Title"), RF_Public|RF_Transient|RF_Native) UTextProperty(CPP_PROPERTY_BASE(Title, UEditorTutorial), 0x0000010000000001);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UEditorTutorial_BeginTutorial()); // 122886120
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UEditorTutorial_GetActorReference()); // 942263370
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UEditorTutorial_GetEngineFolderVisibilty()); // 1672895332
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UEditorTutorial_GoToNextTutorialStage()); // 3516098312
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UEditorTutorial_GoToPreviousTutorialStage()); // 1975445945
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UEditorTutorial_OnTutorialClosed()); // 2077484204
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UEditorTutorial_OnTutorialLaunched()); // 696958565
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UEditorTutorial_OnTutorialStageEnded()); // 334414263
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UEditorTutorial_OnTutorialStageStarted()); // 1800564740
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UEditorTutorial_OpenAsset()); // 3576861832
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UEditorTutorial_SetEngineFolderVisibilty()); // 509358445
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("EditorTutorial.h"));
				MetaData->SetValue(OuterClass, TEXT("IsBlueprintBase"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/EditorTutorial.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("An asset used to build a stage-by-stage tutorial in the editor"));
				MetaData->SetValue(NewProp_SearchTags, TEXT("Category"), TEXT("Tutorial"));
				MetaData->SetValue(NewProp_SearchTags, TEXT("ModuleRelativePath"), TEXT("Public/EditorTutorial.h"));
				MetaData->SetValue(NewProp_SearchTags, TEXT("ToolTip"), TEXT("Comma seperated list of tags the search will use to help find this tutorial"));
				MetaData->SetValue(NewProp_bHideInBrowser, TEXT("Category"), TEXT("Tutorial"));
				MetaData->SetValue(NewProp_bHideInBrowser, TEXT("ModuleRelativePath"), TEXT("Public/EditorTutorial.h"));
				MetaData->SetValue(NewProp_bHideInBrowser, TEXT("ToolTip"), TEXT("Hide this tutorial in the tutorials browser"));
				MetaData->SetValue(NewProp_ImportPath, TEXT("ModuleRelativePath"), TEXT("Public/EditorTutorial.h"));
				MetaData->SetValue(NewProp_ImportPath, TEXT("ToolTip"), TEXT("The path this tutorial was imported from, if any."));
				MetaData->SetValue(NewProp_AssetToUse, TEXT("Category"), TEXT("Tutorial"));
				MetaData->SetValue(NewProp_AssetToUse, TEXT("ModuleRelativePath"), TEXT("Public/EditorTutorial.h"));
				MetaData->SetValue(NewProp_AssetToUse, TEXT("ToolTip"), TEXT("Asset to open & attach the tutorial to. Non-widget-bound content will appear in the asset's window"));
				MetaData->SetValue(NewProp_bIsStandalone, TEXT("Category"), TEXT("Tutorial"));
				MetaData->SetValue(NewProp_bIsStandalone, TEXT("ModuleRelativePath"), TEXT("Public/EditorTutorial.h"));
				MetaData->SetValue(NewProp_bIsStandalone, TEXT("ToolTip"), TEXT("A standalone tutorial displays no navigation buttons and each content widget has a close button"));
				MetaData->SetValue(NewProp_NextTutorial, TEXT("Category"), TEXT("Tutorial"));
				MetaData->SetValue(NewProp_NextTutorial, TEXT("MetaClass"), TEXT("EditorTutorial"));
				MetaData->SetValue(NewProp_NextTutorial, TEXT("ModuleRelativePath"), TEXT("Public/EditorTutorial.h"));
				MetaData->SetValue(NewProp_NextTutorial, TEXT("ToolTip"), TEXT("Tutorial to optionally chain onto after this tutorial completes"));
				MetaData->SetValue(NewProp_PreviousTutorial, TEXT("Category"), TEXT("Tutorial"));
				MetaData->SetValue(NewProp_PreviousTutorial, TEXT("MetaClass"), TEXT("EditorTutorial"));
				MetaData->SetValue(NewProp_PreviousTutorial, TEXT("ModuleRelativePath"), TEXT("Public/EditorTutorial.h"));
				MetaData->SetValue(NewProp_PreviousTutorial, TEXT("ToolTip"), TEXT("Tutorial to optionally chain back to if the \"back\" button is clicked on the first stage"));
				MetaData->SetValue(NewProp_Stages, TEXT("Category"), TEXT("Stages"));
				MetaData->SetValue(NewProp_Stages, TEXT("ModuleRelativePath"), TEXT("Public/EditorTutorial.h"));
				MetaData->SetValue(NewProp_Stages, TEXT("ToolTip"), TEXT("The various stages of this tutorial"));
				MetaData->SetValue(NewProp_SummaryContent, TEXT("Category"), TEXT("Tutorial"));
				MetaData->SetValue(NewProp_SummaryContent, TEXT("ModuleRelativePath"), TEXT("Public/EditorTutorial.h"));
				MetaData->SetValue(NewProp_SummaryContent, TEXT("ToolTip"), TEXT("Content to be displayed for this tutorial when presented to the user in summary"));
				MetaData->SetValue(NewProp_Category, TEXT("Category"), TEXT("Tutorial"));
				MetaData->SetValue(NewProp_Category, TEXT("ModuleRelativePath"), TEXT("Public/EditorTutorial.h"));
				MetaData->SetValue(NewProp_Category, TEXT("ToolTip"), TEXT("Category of this tutorial, used to organize tutorials when presented to the user"));
				MetaData->SetValue(NewProp_Texture, TEXT("Category"), TEXT("Tutorial"));
				MetaData->SetValue(NewProp_Texture, TEXT("ModuleRelativePath"), TEXT("Public/EditorTutorial.h"));
				MetaData->SetValue(NewProp_Texture, TEXT("ToolTip"), TEXT("Texture for this tutorial, used when presented to the user in the tutorial browser."));
				MetaData->SetValue(NewProp_Icon, TEXT("Category"), TEXT("Tutorial"));
				MetaData->SetValue(NewProp_Icon, TEXT("ModuleRelativePath"), TEXT("Public/EditorTutorial.h"));
				MetaData->SetValue(NewProp_Icon, TEXT("ToolTip"), TEXT("Icon name for this tutorial, used when presented to the user in the tutorial browser. This is a name for the icon in the Slate editor style. Only used if there isn't a valid texture to use."));
				MetaData->SetValue(NewProp_SortOrder, TEXT("Category"), TEXT("Tutorial"));
				MetaData->SetValue(NewProp_SortOrder, TEXT("ModuleRelativePath"), TEXT("Public/EditorTutorial.h"));
				MetaData->SetValue(NewProp_SortOrder, TEXT("ToolTip"), TEXT("Sorting priority, used by the tutorial browser"));
				MetaData->SetValue(NewProp_Title, TEXT("Category"), TEXT("Tutorial"));
				MetaData->SetValue(NewProp_Title, TEXT("ModuleRelativePath"), TEXT("Public/EditorTutorial.h"));
				MetaData->SetValue(NewProp_Title, TEXT("ToolTip"), TEXT("Title of this tutorial, used when presented to the user"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UEditorTutorial(Z_Construct_UClass_UEditorTutorial, TEXT("UEditorTutorial"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UEditorTutorial);
	UClass* Z_Construct_UClass_UEditorTutorialFactory_NoRegister()
	{
		return UEditorTutorialFactory::StaticClass();
	}
	UClass* Z_Construct_UClass_UEditorTutorialFactory()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UFactory();
			Z_Construct_UPackage_IntroTutorials();
			OuterClass = UEditorTutorialFactory::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20002080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("EditorTutorialFactory.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/EditorTutorialFactory.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UEditorTutorialFactory(Z_Construct_UClass_UEditorTutorialFactory, TEXT("UEditorTutorialFactory"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UEditorTutorialFactory);
	UClass* Z_Construct_UClass_UEditorTutorialImportFactory_NoRegister()
	{
		return UEditorTutorialImportFactory::StaticClass();
	}
	UClass* Z_Construct_UClass_UEditorTutorialImportFactory()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UFactory();
			Z_Construct_UPackage_IntroTutorials();
			OuterClass = UEditorTutorialImportFactory::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20002080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("EditorTutorialImportFactory.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/EditorTutorialImportFactory.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UEditorTutorialImportFactory(Z_Construct_UClass_UEditorTutorialImportFactory, TEXT("UEditorTutorialImportFactory"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UEditorTutorialImportFactory);
	UScriptStruct* Z_Construct_UScriptStruct_FTutorialContext()
	{
		UPackage* Outer=Z_Construct_UPackage_IntroTutorials();
		extern uint32 Get_Z_Construct_UScriptStruct_FTutorialContext_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("TutorialContext"), sizeof(FTutorialContext), Get_Z_Construct_UScriptStruct_FTutorialContext_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("TutorialContext"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FTutorialContext>, EStructFlags(0x00000001));
			UProperty* NewProp_LaunchTutorial = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("LaunchTutorial"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(LaunchTutorial, FTutorialContext), 0x0000000000000001, Z_Construct_UScriptStruct_FStringClassReference());
			UProperty* NewProp_AttractTutorial = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("AttractTutorial"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(AttractTutorial, FTutorialContext), 0x0000000000000001, Z_Construct_UScriptStruct_FStringClassReference());
			UProperty* NewProp_BrowserFilter = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("BrowserFilter"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(BrowserFilter, FTutorialContext), 0x0000000000000001);
			UProperty* NewProp_Context = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Context"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(Context, FTutorialContext), 0x0000000000000001);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/EditorTutorialSettings.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Named context that corresponds to a particular tutorial"));
			MetaData->SetValue(NewProp_LaunchTutorial, TEXT("Category"), TEXT("Tutorials"));
			MetaData->SetValue(NewProp_LaunchTutorial, TEXT("MetaClass"), TEXT("EditorTutorial"));
			MetaData->SetValue(NewProp_LaunchTutorial, TEXT("ModuleRelativePath"), TEXT("Private/EditorTutorialSettings.h"));
			MetaData->SetValue(NewProp_LaunchTutorial, TEXT("ToolTip"), TEXT("The tutorial to use in this context when the user chooses to launch"));
			MetaData->SetValue(NewProp_AttractTutorial, TEXT("Category"), TEXT("Tutorials"));
			MetaData->SetValue(NewProp_AttractTutorial, TEXT("MetaClass"), TEXT("EditorTutorial"));
			MetaData->SetValue(NewProp_AttractTutorial, TEXT("ModuleRelativePath"), TEXT("Private/EditorTutorialSettings.h"));
			MetaData->SetValue(NewProp_AttractTutorial, TEXT("ToolTip"), TEXT("The tutorial to use in this context to let the user know there is a tutorial available"));
			MetaData->SetValue(NewProp_BrowserFilter, TEXT("Category"), TEXT("Tutorials"));
			MetaData->SetValue(NewProp_BrowserFilter, TEXT("ModuleRelativePath"), TEXT("Private/EditorTutorialSettings.h"));
			MetaData->SetValue(NewProp_BrowserFilter, TEXT("ToolTip"), TEXT("The filter string to apply to the tutorials browser when launched from this context"));
			MetaData->SetValue(NewProp_Context, TEXT("Category"), TEXT("Tutorials"));
			MetaData->SetValue(NewProp_Context, TEXT("ModuleRelativePath"), TEXT("Private/EditorTutorialSettings.h"));
			MetaData->SetValue(NewProp_Context, TEXT("ToolTip"), TEXT("The context that this tutorial is used in"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FTutorialContext_CRC() { return 3562905449U; }
	UClass* Z_Construct_UClass_UEditorTutorialSettings_NoRegister()
	{
		return UEditorTutorialSettings::StaticClass();
	}
	UClass* Z_Construct_UClass_UEditorTutorialSettings()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage_IntroTutorials();
			OuterClass = UEditorTutorialSettings::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000084;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_TutorialContexts = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("TutorialContexts"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(TutorialContexts, UEditorTutorialSettings), 0x0000000000004001);
				UProperty* NewProp_TutorialContexts_Inner = new(EC_InternalUseOnlyConstructor, NewProp_TutorialContexts, TEXT("TutorialContexts"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000004000, Z_Construct_UScriptStruct_FTutorialContext());
				UProperty* NewProp_StartupTutorial = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("StartupTutorial"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(StartupTutorial, UEditorTutorialSettings), 0x0000000000004001, Z_Construct_UScriptStruct_FStringClassReference());
				UProperty* NewProp_Categories = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Categories"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(Categories, UEditorTutorialSettings), 0x0000000000004001);
				UProperty* NewProp_Categories_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Categories, TEXT("Categories"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000004000, Z_Construct_UScriptStruct_FTutorialCategory());
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bDisableAllTutorialAlerts, UEditorTutorialSettings, bool);
				UProperty* NewProp_bDisableAllTutorialAlerts = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bDisableAllTutorialAlerts"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bDisableAllTutorialAlerts, UEditorTutorialSettings), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(bDisableAllTutorialAlerts, UEditorTutorialSettings), sizeof(bool), true);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->ClassConfigName = FName(TEXT("EditorSettings"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("EditorTutorialSettings.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/EditorTutorialSettings.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Editor-wide tutorial settings"));
				MetaData->SetValue(NewProp_TutorialContexts, TEXT("Category"), TEXT("Tutorials"));
				MetaData->SetValue(NewProp_TutorialContexts, TEXT("ModuleRelativePath"), TEXT("Private/EditorTutorialSettings.h"));
				MetaData->SetValue(NewProp_TutorialContexts, TEXT("ToolTip"), TEXT("Tutorials used in various contexts - e.g. the various asset editors"));
				MetaData->SetValue(NewProp_StartupTutorial, TEXT("Category"), TEXT("Tutorials"));
				MetaData->SetValue(NewProp_StartupTutorial, TEXT("MetaClass"), TEXT("EditorTutorial"));
				MetaData->SetValue(NewProp_StartupTutorial, TEXT("ModuleRelativePath"), TEXT("Private/EditorTutorialSettings.h"));
				MetaData->SetValue(NewProp_StartupTutorial, TEXT("ToolTip"), TEXT("Tutorial to start on Editor startup"));
				MetaData->SetValue(NewProp_Categories, TEXT("Category"), TEXT("Tutorials"));
				MetaData->SetValue(NewProp_Categories, TEXT("ModuleRelativePath"), TEXT("Private/EditorTutorialSettings.h"));
				MetaData->SetValue(NewProp_Categories, TEXT("ToolTip"), TEXT("Categories for tutorials"));
				MetaData->SetValue(NewProp_bDisableAllTutorialAlerts, TEXT("Category"), TEXT("Tutorials"));
				MetaData->SetValue(NewProp_bDisableAllTutorialAlerts, TEXT("ModuleRelativePath"), TEXT("Private/EditorTutorialSettings.h"));
				MetaData->SetValue(NewProp_bDisableAllTutorialAlerts, TEXT("ToolTip"), TEXT("Disable the pulsing alert that indicates a new tutorial is available."));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UEditorTutorialSettings(Z_Construct_UClass_UEditorTutorialSettings, TEXT("UEditorTutorialSettings"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UEditorTutorialSettings);
	UClass* Z_Construct_UClass_UTutorialSettings_NoRegister()
	{
		return UTutorialSettings::StaticClass();
	}
	UClass* Z_Construct_UClass_UTutorialSettings()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage_IntroTutorials();
			OuterClass = UTutorialSettings::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000084;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_StartupTutorial = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("StartupTutorial"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(StartupTutorial, UTutorialSettings), 0x0000000000004001, Z_Construct_UScriptStruct_FStringClassReference());
				UProperty* NewProp_Categories = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Categories"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(Categories, UTutorialSettings), 0x0000000000004001);
				UProperty* NewProp_Categories_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Categories, TEXT("Categories"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000004000, Z_Construct_UScriptStruct_FTutorialCategory());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->ClassConfigName = FName(TEXT("Editor"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("TutorialSettings.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/TutorialSettings.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Per-project tutorial settings"));
				MetaData->SetValue(NewProp_StartupTutorial, TEXT("Category"), TEXT("Tutorials"));
				MetaData->SetValue(NewProp_StartupTutorial, TEXT("MetaClass"), TEXT("EditorTutorial"));
				MetaData->SetValue(NewProp_StartupTutorial, TEXT("ModuleRelativePath"), TEXT("Private/TutorialSettings.h"));
				MetaData->SetValue(NewProp_StartupTutorial, TEXT("ToolTip"), TEXT("Tutorial to start on project startup"));
				MetaData->SetValue(NewProp_Categories, TEXT("Category"), TEXT("Tutorials"));
				MetaData->SetValue(NewProp_Categories, TEXT("ModuleRelativePath"), TEXT("Private/TutorialSettings.h"));
				MetaData->SetValue(NewProp_Categories, TEXT("ToolTip"), TEXT("Categories for tutorials"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UTutorialSettings(Z_Construct_UClass_UTutorialSettings, TEXT("UTutorialSettings"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UTutorialSettings);
	UScriptStruct* Z_Construct_UScriptStruct_FTutorialProgress()
	{
		UPackage* Outer=Z_Construct_UPackage_IntroTutorials();
		extern uint32 Get_Z_Construct_UScriptStruct_FTutorialProgress_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("TutorialProgress"), sizeof(FTutorialProgress), Get_Z_Construct_UScriptStruct_FTutorialProgress_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("TutorialProgress"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FTutorialProgress>, EStructFlags(0x00000001));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bUserDismissed, FTutorialProgress, bool);
			UProperty* NewProp_bUserDismissed = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bUserDismissed"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bUserDismissed, FTutorialProgress), 0x0000000000000000, CPP_BOOL_PROPERTY_BITMASK(bUserDismissed, FTutorialProgress), sizeof(bool), true);
			UProperty* NewProp_CurrentStage = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("CurrentStage"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(CurrentStage, FTutorialProgress), 0x0000000000000000);
			UProperty* NewProp_Tutorial = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Tutorial"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Tutorial, FTutorialProgress), 0x0000000000000000, Z_Construct_UScriptStruct_FStringClassReference());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/TutorialStateSettings.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Track the progress of an individual tutorial"));
			MetaData->SetValue(NewProp_bUserDismissed, TEXT("ModuleRelativePath"), TEXT("Private/TutorialStateSettings.h"));
			MetaData->SetValue(NewProp_CurrentStage, TEXT("ModuleRelativePath"), TEXT("Private/TutorialStateSettings.h"));
			MetaData->SetValue(NewProp_Tutorial, TEXT("ModuleRelativePath"), TEXT("Private/TutorialStateSettings.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FTutorialProgress_CRC() { return 1447378789U; }
	UClass* Z_Construct_UClass_UTutorialStateSettings_NoRegister()
	{
		return UTutorialStateSettings::StaticClass();
	}
	UClass* Z_Construct_UClass_UTutorialStateSettings()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage_IntroTutorials();
			OuterClass = UTutorialStateSettings::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000084;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bDismissedAllTutorials, UTutorialStateSettings, bool);
				UProperty* NewProp_bDismissedAllTutorials = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bDismissedAllTutorials"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bDismissedAllTutorials, UTutorialStateSettings), 0x0000000000004000, CPP_BOOL_PROPERTY_BITMASK(bDismissedAllTutorials, UTutorialStateSettings), sizeof(bool), true);
				UProperty* NewProp_TutorialsProgress = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("TutorialsProgress"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(TutorialsProgress, UTutorialStateSettings), 0x0000000000004000);
				UProperty* NewProp_TutorialsProgress_Inner = new(EC_InternalUseOnlyConstructor, NewProp_TutorialsProgress, TEXT("TutorialsProgress"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000004000, Z_Construct_UScriptStruct_FTutorialProgress());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->ClassConfigName = FName(TEXT("EditorSettings"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("TutorialStateSettings.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/TutorialStateSettings.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Tutorial settings used to track completion state"));
				MetaData->SetValue(NewProp_bDismissedAllTutorials, TEXT("ModuleRelativePath"), TEXT("Private/TutorialStateSettings.h"));
				MetaData->SetValue(NewProp_bDismissedAllTutorials, TEXT("ToolTip"), TEXT("Record if user has chosen to cancel all tutorials"));
				MetaData->SetValue(NewProp_TutorialsProgress, TEXT("ModuleRelativePath"), TEXT("Private/TutorialStateSettings.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UTutorialStateSettings(Z_Construct_UClass_UTutorialStateSettings, TEXT("UTutorialStateSettings"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UTutorialStateSettings);
	UPackage* Z_Construct_UPackage_IntroTutorials()
	{
		static UPackage* ReturnPackage = NULL;
		if (!ReturnPackage)
		{
			ReturnPackage = CastChecked<UPackage>(StaticFindObjectFast(UPackage::StaticClass(), NULL, FName(TEXT("/Script/IntroTutorials")), false, false));
			ReturnPackage->SetPackageFlags(PKG_CompiledIn | 0x00000000);
			FGuid Guid;
			Guid.A = 0xA2D4DB34;
			Guid.B = 0x4C77D198;
			Guid.C = 0x00000000;
			Guid.D = 0x00000000;
			ReturnPackage->SetGuid(Guid);

		}
		return ReturnPackage;
	}
#endif

PRAGMA_ENABLE_DEPRECATION_WARNINGS
