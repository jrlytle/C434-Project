// Copyright 1998-2015 Epic Games, Inc. All Rights Reserved.
/*===========================================================================
	Boilerplate C++ definitions for a single module.
	This is automatically generated by UnrealHeaderTool.
	DO NOT modify this manually! Edit the corresponding .h files instead!
===========================================================================*/

#include "Private/LocalizationPrivatePCH.h"
#include "Localization.generated.dep.h"
PRAGMA_DISABLE_DEPRECATION_WARNINGS
void EmptyLinkFunctionForGeneratedCodeLocalization() {}
static class UEnum* ELocalizationTargetLoadingPolicy_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern LOCALIZATION_API class UEnum* Z_Construct_UEnum_Localization_ELocalizationTargetLoadingPolicy();
		extern LOCALIZATION_API class UPackage* Z_Construct_UPackage_Localization();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Localization_ELocalizationTargetLoadingPolicy, Z_Construct_UPackage_Localization(), TEXT("ELocalizationTargetLoadingPolicy"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ELocalizationTargetLoadingPolicy(ELocalizationTargetLoadingPolicy_StaticEnum, TEXT("/Script/Localization"));
static class UEnum* ELocalizationTargetConflictStatus_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern LOCALIZATION_API class UEnum* Z_Construct_UEnum_Localization_ELocalizationTargetConflictStatus();
		extern LOCALIZATION_API class UPackage* Z_Construct_UPackage_Localization();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Localization_ELocalizationTargetConflictStatus, Z_Construct_UPackage_Localization(), TEXT("ELocalizationTargetConflictStatus"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ELocalizationTargetConflictStatus(ELocalizationTargetConflictStatus_StaticEnum, TEXT("/Script/Localization"));
class UScriptStruct* FLocalizationTargetSettings::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern LOCALIZATION_API class UScriptStruct* Z_Construct_UScriptStruct_FLocalizationTargetSettings();
		extern LOCALIZATION_API uint32 Get_Z_Construct_UScriptStruct_FLocalizationTargetSettings_CRC();
		extern LOCALIZATION_API class UPackage* Z_Construct_UPackage_Localization();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FLocalizationTargetSettings, Z_Construct_UPackage_Localization(), TEXT("LocalizationTargetSettings"), sizeof(FLocalizationTargetSettings), Get_Z_Construct_UScriptStruct_FLocalizationTargetSettings_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FLocalizationTargetSettings(FLocalizationTargetSettings::StaticStruct, TEXT("/Script/Localization"));
static struct FScriptStruct_Localization_StaticRegisterNativesFLocalizationTargetSettings
{
	FScriptStruct_Localization_StaticRegisterNativesFLocalizationTargetSettings()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("LocalizationTargetSettings")),new UScriptStruct::TCppStructOps<FLocalizationTargetSettings>);
	}
} ScriptStruct_Localization_StaticRegisterNativesFLocalizationTargetSettings;
class UScriptStruct* FCultureStatistics::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern LOCALIZATION_API class UScriptStruct* Z_Construct_UScriptStruct_FCultureStatistics();
		extern LOCALIZATION_API uint32 Get_Z_Construct_UScriptStruct_FCultureStatistics_CRC();
		extern LOCALIZATION_API class UPackage* Z_Construct_UPackage_Localization();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FCultureStatistics, Z_Construct_UPackage_Localization(), TEXT("CultureStatistics"), sizeof(FCultureStatistics), Get_Z_Construct_UScriptStruct_FCultureStatistics_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FCultureStatistics(FCultureStatistics::StaticStruct, TEXT("/Script/Localization"));
static struct FScriptStruct_Localization_StaticRegisterNativesFCultureStatistics
{
	FScriptStruct_Localization_StaticRegisterNativesFCultureStatistics()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("CultureStatistics")),new UScriptStruct::TCppStructOps<FCultureStatistics>);
	}
} ScriptStruct_Localization_StaticRegisterNativesFCultureStatistics;
class UScriptStruct* FGatherTextFromMetaDataConfiguration::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern LOCALIZATION_API class UScriptStruct* Z_Construct_UScriptStruct_FGatherTextFromMetaDataConfiguration();
		extern LOCALIZATION_API uint32 Get_Z_Construct_UScriptStruct_FGatherTextFromMetaDataConfiguration_CRC();
		extern LOCALIZATION_API class UPackage* Z_Construct_UPackage_Localization();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGatherTextFromMetaDataConfiguration, Z_Construct_UPackage_Localization(), TEXT("GatherTextFromMetaDataConfiguration"), sizeof(FGatherTextFromMetaDataConfiguration), Get_Z_Construct_UScriptStruct_FGatherTextFromMetaDataConfiguration_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGatherTextFromMetaDataConfiguration(FGatherTextFromMetaDataConfiguration::StaticStruct, TEXT("/Script/Localization"));
static struct FScriptStruct_Localization_StaticRegisterNativesFGatherTextFromMetaDataConfiguration
{
	FScriptStruct_Localization_StaticRegisterNativesFGatherTextFromMetaDataConfiguration()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GatherTextFromMetaDataConfiguration")),new UScriptStruct::TCppStructOps<FGatherTextFromMetaDataConfiguration>);
	}
} ScriptStruct_Localization_StaticRegisterNativesFGatherTextFromMetaDataConfiguration;
class UScriptStruct* FMetaDataKeyGatherSpecification::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern LOCALIZATION_API class UScriptStruct* Z_Construct_UScriptStruct_FMetaDataKeyGatherSpecification();
		extern LOCALIZATION_API uint32 Get_Z_Construct_UScriptStruct_FMetaDataKeyGatherSpecification_CRC();
		extern LOCALIZATION_API class UPackage* Z_Construct_UPackage_Localization();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMetaDataKeyGatherSpecification, Z_Construct_UPackage_Localization(), TEXT("MetaDataKeyGatherSpecification"), sizeof(FMetaDataKeyGatherSpecification), Get_Z_Construct_UScriptStruct_FMetaDataKeyGatherSpecification_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMetaDataKeyGatherSpecification(FMetaDataKeyGatherSpecification::StaticStruct, TEXT("/Script/Localization"));
static struct FScriptStruct_Localization_StaticRegisterNativesFMetaDataKeyGatherSpecification
{
	FScriptStruct_Localization_StaticRegisterNativesFMetaDataKeyGatherSpecification()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("MetaDataKeyGatherSpecification")),new UScriptStruct::TCppStructOps<FMetaDataKeyGatherSpecification>);
	}
} ScriptStruct_Localization_StaticRegisterNativesFMetaDataKeyGatherSpecification;
class UScriptStruct* FMetaDataKeyName::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern LOCALIZATION_API class UScriptStruct* Z_Construct_UScriptStruct_FMetaDataKeyName();
		extern LOCALIZATION_API uint32 Get_Z_Construct_UScriptStruct_FMetaDataKeyName_CRC();
		extern LOCALIZATION_API class UPackage* Z_Construct_UPackage_Localization();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMetaDataKeyName, Z_Construct_UPackage_Localization(), TEXT("MetaDataKeyName"), sizeof(FMetaDataKeyName), Get_Z_Construct_UScriptStruct_FMetaDataKeyName_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMetaDataKeyName(FMetaDataKeyName::StaticStruct, TEXT("/Script/Localization"));
static struct FScriptStruct_Localization_StaticRegisterNativesFMetaDataKeyName
{
	FScriptStruct_Localization_StaticRegisterNativesFMetaDataKeyName()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("MetaDataKeyName")),new UScriptStruct::TCppStructOps<FMetaDataKeyName>);
	}
} ScriptStruct_Localization_StaticRegisterNativesFMetaDataKeyName;
class UScriptStruct* FMetaDataTextKeyPattern::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern LOCALIZATION_API class UScriptStruct* Z_Construct_UScriptStruct_FMetaDataTextKeyPattern();
		extern LOCALIZATION_API uint32 Get_Z_Construct_UScriptStruct_FMetaDataTextKeyPattern_CRC();
		extern LOCALIZATION_API class UPackage* Z_Construct_UPackage_Localization();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMetaDataTextKeyPattern, Z_Construct_UPackage_Localization(), TEXT("MetaDataTextKeyPattern"), sizeof(FMetaDataTextKeyPattern), Get_Z_Construct_UScriptStruct_FMetaDataTextKeyPattern_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMetaDataTextKeyPattern(FMetaDataTextKeyPattern::StaticStruct, TEXT("/Script/Localization"));
static struct FScriptStruct_Localization_StaticRegisterNativesFMetaDataTextKeyPattern
{
	FScriptStruct_Localization_StaticRegisterNativesFMetaDataTextKeyPattern()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("MetaDataTextKeyPattern")),new UScriptStruct::TCppStructOps<FMetaDataTextKeyPattern>);
	}
} ScriptStruct_Localization_StaticRegisterNativesFMetaDataTextKeyPattern;
class UScriptStruct* FGatherTextFromPackagesConfiguration::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern LOCALIZATION_API class UScriptStruct* Z_Construct_UScriptStruct_FGatherTextFromPackagesConfiguration();
		extern LOCALIZATION_API uint32 Get_Z_Construct_UScriptStruct_FGatherTextFromPackagesConfiguration_CRC();
		extern LOCALIZATION_API class UPackage* Z_Construct_UPackage_Localization();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGatherTextFromPackagesConfiguration, Z_Construct_UPackage_Localization(), TEXT("GatherTextFromPackagesConfiguration"), sizeof(FGatherTextFromPackagesConfiguration), Get_Z_Construct_UScriptStruct_FGatherTextFromPackagesConfiguration_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGatherTextFromPackagesConfiguration(FGatherTextFromPackagesConfiguration::StaticStruct, TEXT("/Script/Localization"));
static struct FScriptStruct_Localization_StaticRegisterNativesFGatherTextFromPackagesConfiguration
{
	FScriptStruct_Localization_StaticRegisterNativesFGatherTextFromPackagesConfiguration()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GatherTextFromPackagesConfiguration")),new UScriptStruct::TCppStructOps<FGatherTextFromPackagesConfiguration>);
	}
} ScriptStruct_Localization_StaticRegisterNativesFGatherTextFromPackagesConfiguration;
class UScriptStruct* FGatherTextFromTextFilesConfiguration::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern LOCALIZATION_API class UScriptStruct* Z_Construct_UScriptStruct_FGatherTextFromTextFilesConfiguration();
		extern LOCALIZATION_API uint32 Get_Z_Construct_UScriptStruct_FGatherTextFromTextFilesConfiguration_CRC();
		extern LOCALIZATION_API class UPackage* Z_Construct_UPackage_Localization();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGatherTextFromTextFilesConfiguration, Z_Construct_UPackage_Localization(), TEXT("GatherTextFromTextFilesConfiguration"), sizeof(FGatherTextFromTextFilesConfiguration), Get_Z_Construct_UScriptStruct_FGatherTextFromTextFilesConfiguration_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGatherTextFromTextFilesConfiguration(FGatherTextFromTextFilesConfiguration::StaticStruct, TEXT("/Script/Localization"));
static struct FScriptStruct_Localization_StaticRegisterNativesFGatherTextFromTextFilesConfiguration
{
	FScriptStruct_Localization_StaticRegisterNativesFGatherTextFromTextFilesConfiguration()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GatherTextFromTextFilesConfiguration")),new UScriptStruct::TCppStructOps<FGatherTextFromTextFilesConfiguration>);
	}
} ScriptStruct_Localization_StaticRegisterNativesFGatherTextFromTextFilesConfiguration;
class UScriptStruct* FGatherTextFileExtension::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern LOCALIZATION_API class UScriptStruct* Z_Construct_UScriptStruct_FGatherTextFileExtension();
		extern LOCALIZATION_API uint32 Get_Z_Construct_UScriptStruct_FGatherTextFileExtension_CRC();
		extern LOCALIZATION_API class UPackage* Z_Construct_UPackage_Localization();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGatherTextFileExtension, Z_Construct_UPackage_Localization(), TEXT("GatherTextFileExtension"), sizeof(FGatherTextFileExtension), Get_Z_Construct_UScriptStruct_FGatherTextFileExtension_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGatherTextFileExtension(FGatherTextFileExtension::StaticStruct, TEXT("/Script/Localization"));
static struct FScriptStruct_Localization_StaticRegisterNativesFGatherTextFileExtension
{
	FScriptStruct_Localization_StaticRegisterNativesFGatherTextFileExtension()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GatherTextFileExtension")),new UScriptStruct::TCppStructOps<FGatherTextFileExtension>);
	}
} ScriptStruct_Localization_StaticRegisterNativesFGatherTextFileExtension;
class UScriptStruct* FGatherTextExcludePath::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern LOCALIZATION_API class UScriptStruct* Z_Construct_UScriptStruct_FGatherTextExcludePath();
		extern LOCALIZATION_API uint32 Get_Z_Construct_UScriptStruct_FGatherTextExcludePath_CRC();
		extern LOCALIZATION_API class UPackage* Z_Construct_UPackage_Localization();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGatherTextExcludePath, Z_Construct_UPackage_Localization(), TEXT("GatherTextExcludePath"), sizeof(FGatherTextExcludePath), Get_Z_Construct_UScriptStruct_FGatherTextExcludePath_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGatherTextExcludePath(FGatherTextExcludePath::StaticStruct, TEXT("/Script/Localization"));
static struct FScriptStruct_Localization_StaticRegisterNativesFGatherTextExcludePath
{
	FScriptStruct_Localization_StaticRegisterNativesFGatherTextExcludePath()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GatherTextExcludePath")),new UScriptStruct::TCppStructOps<FGatherTextExcludePath>);
	}
} ScriptStruct_Localization_StaticRegisterNativesFGatherTextExcludePath;
class UScriptStruct* FGatherTextIncludePath::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern LOCALIZATION_API class UScriptStruct* Z_Construct_UScriptStruct_FGatherTextIncludePath();
		extern LOCALIZATION_API uint32 Get_Z_Construct_UScriptStruct_FGatherTextIncludePath_CRC();
		extern LOCALIZATION_API class UPackage* Z_Construct_UPackage_Localization();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGatherTextIncludePath, Z_Construct_UPackage_Localization(), TEXT("GatherTextIncludePath"), sizeof(FGatherTextIncludePath), Get_Z_Construct_UScriptStruct_FGatherTextIncludePath_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGatherTextIncludePath(FGatherTextIncludePath::StaticStruct, TEXT("/Script/Localization"));
static struct FScriptStruct_Localization_StaticRegisterNativesFGatherTextIncludePath
{
	FScriptStruct_Localization_StaticRegisterNativesFGatherTextIncludePath()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GatherTextIncludePath")),new UScriptStruct::TCppStructOps<FGatherTextIncludePath>);
	}
} ScriptStruct_Localization_StaticRegisterNativesFGatherTextIncludePath;
class UScriptStruct* FGatherTextSearchDirectory::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern LOCALIZATION_API class UScriptStruct* Z_Construct_UScriptStruct_FGatherTextSearchDirectory();
		extern LOCALIZATION_API uint32 Get_Z_Construct_UScriptStruct_FGatherTextSearchDirectory_CRC();
		extern LOCALIZATION_API class UPackage* Z_Construct_UPackage_Localization();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGatherTextSearchDirectory, Z_Construct_UPackage_Localization(), TEXT("GatherTextSearchDirectory"), sizeof(FGatherTextSearchDirectory), Get_Z_Construct_UScriptStruct_FGatherTextSearchDirectory_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGatherTextSearchDirectory(FGatherTextSearchDirectory::StaticStruct, TEXT("/Script/Localization"));
static struct FScriptStruct_Localization_StaticRegisterNativesFGatherTextSearchDirectory
{
	FScriptStruct_Localization_StaticRegisterNativesFGatherTextSearchDirectory()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GatherTextSearchDirectory")),new UScriptStruct::TCppStructOps<FGatherTextSearchDirectory>);
	}
} ScriptStruct_Localization_StaticRegisterNativesFGatherTextSearchDirectory;
	void ULocalizationTarget::StaticRegisterNativesULocalizationTarget()
	{
	}
	IMPLEMENT_CLASS(ULocalizationTarget, 316115354);
	void ULocalizationTargetSet::StaticRegisterNativesULocalizationTargetSet()
	{
	}
	IMPLEMENT_CLASS(ULocalizationTargetSet, 2477733348);
	void ULocalizationSettings::StaticRegisterNativesULocalizationSettings()
	{
	}
	IMPLEMENT_CLASS(ULocalizationSettings, 2280973152);
#if USE_COMPILED_IN_NATIVES
// Cross Module References
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FFilePath();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FGuid();
	COREUOBJECT_API class UClass* Z_Construct_UClass_UObject();

	LOCALIZATION_API class UEnum* Z_Construct_UEnum_Localization_ELocalizationTargetLoadingPolicy();
	LOCALIZATION_API class UEnum* Z_Construct_UEnum_Localization_ELocalizationTargetConflictStatus();
	LOCALIZATION_API class UScriptStruct* Z_Construct_UScriptStruct_FLocalizationTargetSettings();
	LOCALIZATION_API class UScriptStruct* Z_Construct_UScriptStruct_FCultureStatistics();
	LOCALIZATION_API class UScriptStruct* Z_Construct_UScriptStruct_FGatherTextFromMetaDataConfiguration();
	LOCALIZATION_API class UScriptStruct* Z_Construct_UScriptStruct_FMetaDataKeyGatherSpecification();
	LOCALIZATION_API class UScriptStruct* Z_Construct_UScriptStruct_FMetaDataKeyName();
	LOCALIZATION_API class UScriptStruct* Z_Construct_UScriptStruct_FMetaDataTextKeyPattern();
	LOCALIZATION_API class UScriptStruct* Z_Construct_UScriptStruct_FGatherTextFromPackagesConfiguration();
	LOCALIZATION_API class UScriptStruct* Z_Construct_UScriptStruct_FGatherTextFromTextFilesConfiguration();
	LOCALIZATION_API class UScriptStruct* Z_Construct_UScriptStruct_FGatherTextFileExtension();
	LOCALIZATION_API class UScriptStruct* Z_Construct_UScriptStruct_FGatherTextExcludePath();
	LOCALIZATION_API class UScriptStruct* Z_Construct_UScriptStruct_FGatherTextIncludePath();
	LOCALIZATION_API class UScriptStruct* Z_Construct_UScriptStruct_FGatherTextSearchDirectory();
	LOCALIZATION_API class UClass* Z_Construct_UClass_ULocalizationTarget_NoRegister();
	LOCALIZATION_API class UClass* Z_Construct_UClass_ULocalizationTarget();
	LOCALIZATION_API class UClass* Z_Construct_UClass_ULocalizationTargetSet_NoRegister();
	LOCALIZATION_API class UClass* Z_Construct_UClass_ULocalizationTargetSet();
	LOCALIZATION_API class UClass* Z_Construct_UClass_ULocalizationSettings_NoRegister();
	LOCALIZATION_API class UClass* Z_Construct_UClass_ULocalizationSettings();
	LOCALIZATION_API class UPackage* Z_Construct_UPackage_Localization();
	UEnum* Z_Construct_UEnum_Localization_ELocalizationTargetLoadingPolicy()
	{
		UPackage* Outer=Z_Construct_UPackage_Localization();
		extern uint32 Get_Z_Construct_UEnum_Localization_ELocalizationTargetLoadingPolicy_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("ELocalizationTargetLoadingPolicy"), 0, Get_Z_Construct_UEnum_Localization_ELocalizationTargetLoadingPolicy_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ELocalizationTargetLoadingPolicy"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ELocalizationTargetLoadingPolicy::Never")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ELocalizationTargetLoadingPolicy::Always")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ELocalizationTargetLoadingPolicy::Editor")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ELocalizationTargetLoadingPolicy::Game")), 3));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ELocalizationTargetLoadingPolicy::PropertyNames")), 4));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ELocalizationTargetLoadingPolicy::ToolTips")), 5));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ELocalizationTargetLoadingPolicy::ELocalizationTargetLoadingPolicy_MAX")), 6));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::EnumClass);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("Always.ToolTip"), TEXT("This target's localization data will always be loaded automatically."));
			MetaData->SetValue(ReturnEnum, TEXT("Editor.ToolTip"), TEXT("This target's localization data will only be loaded when running the editor. Use if this target localizes the editor."));
			MetaData->SetValue(ReturnEnum, TEXT("Game.ToolTip"), TEXT("This target's localization data will only be loaded when running the game. Use if this target localizes your game."));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Public/LocalizationTargetTypes.h"));
			MetaData->SetValue(ReturnEnum, TEXT("Never.ToolTip"), TEXT("This target's localization data will never be loaded automatically."));
			MetaData->SetValue(ReturnEnum, TEXT("PropertyNames.ToolTip"), TEXT("This target's localization data will only be loaded if the editor is displaying localized property names."));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTips.ToolTip"), TEXT("This target's localization data will only be loaded if the editor is displaying localized tool tips."));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_Localization_ELocalizationTargetLoadingPolicy_CRC() { return 4239750533U; }
	UEnum* Z_Construct_UEnum_Localization_ELocalizationTargetConflictStatus()
	{
		UPackage* Outer=Z_Construct_UPackage_Localization();
		extern uint32 Get_Z_Construct_UEnum_Localization_ELocalizationTargetConflictStatus_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("ELocalizationTargetConflictStatus"), 0, Get_Z_Construct_UEnum_Localization_ELocalizationTargetConflictStatus_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ELocalizationTargetConflictStatus"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ELocalizationTargetConflictStatus::Unknown")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ELocalizationTargetConflictStatus::ConflictsPresent")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ELocalizationTargetConflictStatus::Clear")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ELocalizationTargetConflictStatus::ELocalizationTargetConflictStatus_MAX")), 3));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::EnumClass);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("Clear.ToolTip"), TEXT("The localization target is clear of conflicts."));
			MetaData->SetValue(ReturnEnum, TEXT("ConflictsPresent.ToolTip"), TEXT("The are outstanding conflicts present in this localization target."));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Public/LocalizationTargetTypes.h"));
			MetaData->SetValue(ReturnEnum, TEXT("Unknown.ToolTip"), TEXT("The status of conflicts in this localization target could not be determined."));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_Localization_ELocalizationTargetConflictStatus_CRC() { return 4229637057U; }
	UScriptStruct* Z_Construct_UScriptStruct_FLocalizationTargetSettings()
	{
		UPackage* Outer=Z_Construct_UPackage_Localization();
		extern uint32 Get_Z_Construct_UScriptStruct_FLocalizationTargetSettings_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("LocalizationTargetSettings"), sizeof(FLocalizationTargetSettings), Get_Z_Construct_UScriptStruct_FLocalizationTargetSettings_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("LocalizationTargetSettings"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FLocalizationTargetSettings>, EStructFlags(0x00000001));
			UProperty* NewProp_SupportedCulturesStatistics = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("SupportedCulturesStatistics"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(SupportedCulturesStatistics, FLocalizationTargetSettings), 0x0000000000004001);
			UProperty* NewProp_SupportedCulturesStatistics_Inner = new(EC_InternalUseOnlyConstructor, NewProp_SupportedCulturesStatistics, TEXT("SupportedCulturesStatistics"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000004000, Z_Construct_UScriptStruct_FCultureStatistics());
			UProperty* NewProp_NativeCultureIndex = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("NativeCultureIndex"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(NativeCultureIndex, FLocalizationTargetSettings), 0x0000000000004001);
			UProperty* NewProp_GatherFromMetaData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("GatherFromMetaData"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(GatherFromMetaData, FLocalizationTargetSettings), 0x0000000000004001, Z_Construct_UScriptStruct_FGatherTextFromMetaDataConfiguration());
			UProperty* NewProp_GatherFromPackages = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("GatherFromPackages"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(GatherFromPackages, FLocalizationTargetSettings), 0x0000000000004001, Z_Construct_UScriptStruct_FGatherTextFromPackagesConfiguration());
			UProperty* NewProp_GatherFromTextFiles = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("GatherFromTextFiles"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(GatherFromTextFiles, FLocalizationTargetSettings), 0x0000000000004001, Z_Construct_UScriptStruct_FGatherTextFromTextFilesConfiguration());
			UProperty* NewProp_RequiredModuleNames = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("RequiredModuleNames"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(RequiredModuleNames, FLocalizationTargetSettings), 0x0000040000004001);
			UProperty* NewProp_RequiredModuleNames_Inner = new(EC_InternalUseOnlyConstructor, NewProp_RequiredModuleNames, TEXT("RequiredModuleNames"), RF_Public|RF_Transient|RF_Native) UStrProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000004000);
			UProperty* NewProp_AdditionalManifestDependencies = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("AdditionalManifestDependencies"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(AdditionalManifestDependencies, FLocalizationTargetSettings), 0x0000040000004001);
			UProperty* NewProp_AdditionalManifestDependencies_Inner = new(EC_InternalUseOnlyConstructor, NewProp_AdditionalManifestDependencies, TEXT("AdditionalManifestDependencies"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000004000, Z_Construct_UScriptStruct_FFilePath());
			UProperty* NewProp_TargetDependencies = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("TargetDependencies"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(TargetDependencies, FLocalizationTargetSettings), 0x0000000000004001);
			UProperty* NewProp_TargetDependencies_Inner = new(EC_InternalUseOnlyConstructor, NewProp_TargetDependencies, TEXT("TargetDependencies"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000004000, Z_Construct_UScriptStruct_FGuid());
			UProperty* NewProp_ConflictStatus = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ConflictStatus"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(ConflictStatus, FLocalizationTargetSettings), 0x0000000000002001, Z_Construct_UEnum_Localization_ELocalizationTargetConflictStatus());
			UProperty* NewProp_Guid = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Guid"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Guid, FLocalizationTargetSettings), 0x0000000000004000, Z_Construct_UScriptStruct_FGuid());
			UProperty* NewProp_Name = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Name"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(Name, FLocalizationTargetSettings), 0x0000000000004001);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/LocalizationTargetTypes.h"));
			MetaData->SetValue(NewProp_SupportedCulturesStatistics, TEXT("Category"), TEXT("Cultures"));
			MetaData->SetValue(NewProp_SupportedCulturesStatistics, TEXT("ModuleRelativePath"), TEXT("Public/LocalizationTargetTypes.h"));
			MetaData->SetValue(NewProp_SupportedCulturesStatistics, TEXT("ToolTip"), TEXT("Cultures for which the source text is being localized for."));
			MetaData->SetValue(NewProp_NativeCultureIndex, TEXT("Category"), TEXT("Cultures"));
			MetaData->SetValue(NewProp_NativeCultureIndex, TEXT("ModuleRelativePath"), TEXT("Public/LocalizationTargetTypes.h"));
			MetaData->SetValue(NewProp_NativeCultureIndex, TEXT("ToolTip"), TEXT("The index of the native culture among the supported cultures."));
			MetaData->SetValue(NewProp_GatherFromMetaData, TEXT("Category"), TEXT("Gather"));
			MetaData->SetValue(NewProp_GatherFromMetaData, TEXT("ModuleRelativePath"), TEXT("Public/LocalizationTargetTypes.h"));
			MetaData->SetValue(NewProp_GatherFromMetaData, TEXT("ToolTip"), TEXT("Parameters for defining what text is gathered from metadata and how."));
			MetaData->SetValue(NewProp_GatherFromPackages, TEXT("Category"), TEXT("Gather"));
			MetaData->SetValue(NewProp_GatherFromPackages, TEXT("ModuleRelativePath"), TEXT("Public/LocalizationTargetTypes.h"));
			MetaData->SetValue(NewProp_GatherFromPackages, TEXT("ToolTip"), TEXT("Parameters for defining what text is gathered from packages and how."));
			MetaData->SetValue(NewProp_GatherFromTextFiles, TEXT("Category"), TEXT("Gather"));
			MetaData->SetValue(NewProp_GatherFromTextFiles, TEXT("ModuleRelativePath"), TEXT("Public/LocalizationTargetTypes.h"));
			MetaData->SetValue(NewProp_GatherFromTextFiles, TEXT("ToolTip"), TEXT("Parameters for defining what text is gathered from text files and how."));
			MetaData->SetValue(NewProp_RequiredModuleNames, TEXT("Category"), TEXT("Gather"));
			MetaData->SetValue(NewProp_RequiredModuleNames, TEXT("ModuleRelativePath"), TEXT("Public/LocalizationTargetTypes.h"));
			MetaData->SetValue(NewProp_RequiredModuleNames, TEXT("ToolTip"), TEXT("The names of modules which must be loaded when gathering text. Use to gather from packages or metadata sourced from a module that isn't the primary game module."));
			MetaData->SetValue(NewProp_AdditionalManifestDependencies, TEXT("Category"), TEXT("Gather"));
			MetaData->SetValue(NewProp_AdditionalManifestDependencies, TEXT("FilePathFilter"), TEXT("manifest"));
			MetaData->SetValue(NewProp_AdditionalManifestDependencies, TEXT("ModuleRelativePath"), TEXT("Public/LocalizationTargetTypes.h"));
			MetaData->SetValue(NewProp_AdditionalManifestDependencies, TEXT("ToolTip"), TEXT("Text present in these manifests will not be duplicated in this target."));
			MetaData->SetValue(NewProp_TargetDependencies, TEXT("Category"), TEXT("Gather"));
			MetaData->SetValue(NewProp_TargetDependencies, TEXT("ModuleRelativePath"), TEXT("Public/LocalizationTargetTypes.h"));
			MetaData->SetValue(NewProp_TargetDependencies, TEXT("ToolTip"), TEXT("Text present in these targets will not be duplicated in this target."));
			MetaData->SetValue(NewProp_ConflictStatus, TEXT("Category"), TEXT("Target"));
			MetaData->SetValue(NewProp_ConflictStatus, TEXT("ModuleRelativePath"), TEXT("Public/LocalizationTargetTypes.h"));
			MetaData->SetValue(NewProp_ConflictStatus, TEXT("ToolTip"), TEXT("Whether the target has outstanding conflicts that require resolution."));
			MetaData->SetValue(NewProp_Guid, TEXT("ModuleRelativePath"), TEXT("Public/LocalizationTargetTypes.h"));
			MetaData->SetValue(NewProp_Name, TEXT("Category"), TEXT("Target"));
			MetaData->SetValue(NewProp_Name, TEXT("ModuleRelativePath"), TEXT("Public/LocalizationTargetTypes.h"));
			MetaData->SetValue(NewProp_Name, TEXT("ToolTip"), TEXT("Unique name for the target."));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FLocalizationTargetSettings_CRC() { return 2263096687U; }
	UScriptStruct* Z_Construct_UScriptStruct_FCultureStatistics()
	{
		UPackage* Outer=Z_Construct_UPackage_Localization();
		extern uint32 Get_Z_Construct_UScriptStruct_FCultureStatistics_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("CultureStatistics"), sizeof(FCultureStatistics), Get_Z_Construct_UScriptStruct_FCultureStatistics_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("CultureStatistics"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FCultureStatistics>, EStructFlags(0x00000001));
			UProperty* NewProp_WordCount = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("WordCount"), RF_Public|RF_Transient|RF_Native) UUInt32Property(CPP_PROPERTY_BASE(WordCount, FCultureStatistics), 0x0000000000002001);
			UProperty* NewProp_CultureName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("CultureName"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(CultureName, FCultureStatistics), 0x0000000000004001);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/LocalizationTargetTypes.h"));
			MetaData->SetValue(NewProp_WordCount, TEXT("Category"), TEXT("Statistics"));
			MetaData->SetValue(NewProp_WordCount, TEXT("ModuleRelativePath"), TEXT("Public/LocalizationTargetTypes.h"));
			MetaData->SetValue(NewProp_WordCount, TEXT("ToolTip"), TEXT("The estimated number of words that have been localized for this culture."));
			MetaData->SetValue(NewProp_CultureName, TEXT("Category"), TEXT("Culture"));
			MetaData->SetValue(NewProp_CultureName, TEXT("ModuleRelativePath"), TEXT("Public/LocalizationTargetTypes.h"));
			MetaData->SetValue(NewProp_CultureName, TEXT("ToolTip"), TEXT("The ISO name for this culture."));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FCultureStatistics_CRC() { return 3996015285U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGatherTextFromMetaDataConfiguration()
	{
		UPackage* Outer=Z_Construct_UPackage_Localization();
		extern uint32 Get_Z_Construct_UScriptStruct_FGatherTextFromMetaDataConfiguration_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("GatherTextFromMetaDataConfiguration"), sizeof(FGatherTextFromMetaDataConfiguration), Get_Z_Construct_UScriptStruct_FGatherTextFromMetaDataConfiguration_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GatherTextFromMetaDataConfiguration"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGatherTextFromMetaDataConfiguration>, EStructFlags(0x00000001));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ShouldGatherFromEditorOnlyData, FGatherTextFromMetaDataConfiguration, bool);
			UProperty* NewProp_ShouldGatherFromEditorOnlyData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ShouldGatherFromEditorOnlyData"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ShouldGatherFromEditorOnlyData, FGatherTextFromMetaDataConfiguration), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(ShouldGatherFromEditorOnlyData, FGatherTextFromMetaDataConfiguration), sizeof(bool), true);
			UProperty* NewProp_KeySpecifications = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("KeySpecifications"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(KeySpecifications, FGatherTextFromMetaDataConfiguration), 0x0000000000004001);
			UProperty* NewProp_KeySpecifications_Inner = new(EC_InternalUseOnlyConstructor, NewProp_KeySpecifications, TEXT("KeySpecifications"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000004000, Z_Construct_UScriptStruct_FMetaDataKeyGatherSpecification());
			UProperty* NewProp_ExcludePathWildcards = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ExcludePathWildcards"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(ExcludePathWildcards, FGatherTextFromMetaDataConfiguration), 0x0000000000004001);
			UProperty* NewProp_ExcludePathWildcards_Inner = new(EC_InternalUseOnlyConstructor, NewProp_ExcludePathWildcards, TEXT("ExcludePathWildcards"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000004000, Z_Construct_UScriptStruct_FGatherTextExcludePath());
			UProperty* NewProp_IncludePathWildcards = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("IncludePathWildcards"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(IncludePathWildcards, FGatherTextFromMetaDataConfiguration), 0x0000000000004001);
			UProperty* NewProp_IncludePathWildcards_Inner = new(EC_InternalUseOnlyConstructor, NewProp_IncludePathWildcards, TEXT("IncludePathWildcards"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000004000, Z_Construct_UScriptStruct_FGatherTextIncludePath());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(IsEnabled, FGatherTextFromMetaDataConfiguration, bool);
			UProperty* NewProp_IsEnabled = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("IsEnabled"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(IsEnabled, FGatherTextFromMetaDataConfiguration), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(IsEnabled, FGatherTextFromMetaDataConfiguration), sizeof(bool), true);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/LocalizationTargetTypes.h"));
			MetaData->SetValue(NewProp_ShouldGatherFromEditorOnlyData, TEXT("Category"), TEXT("Filter"));
			MetaData->SetValue(NewProp_ShouldGatherFromEditorOnlyData, TEXT("ModuleRelativePath"), TEXT("Public/LocalizationTargetTypes.h"));
			MetaData->SetValue(NewProp_ShouldGatherFromEditorOnlyData, TEXT("ToolTip"), TEXT("If enable, data that is specified as editor-only may be processed for gathering."));
			MetaData->SetValue(NewProp_KeySpecifications, TEXT("Category"), TEXT("MetaData"));
			MetaData->SetValue(NewProp_KeySpecifications, TEXT("ModuleRelativePath"), TEXT("Public/LocalizationTargetTypes.h"));
			MetaData->SetValue(NewProp_KeySpecifications, TEXT("ToolTip"), TEXT("Specifications for how to gather text from specific metadata keys."));
			MetaData->SetValue(NewProp_ExcludePathWildcards, TEXT("Category"), TEXT("Filter"));
			MetaData->SetValue(NewProp_ExcludePathWildcards, TEXT("ModuleRelativePath"), TEXT("Public/LocalizationTargetTypes.h"));
			MetaData->SetValue(NewProp_ExcludePathWildcards, TEXT("ToolTip"), TEXT("Metadata from source files whose paths match these wildcard patterns will be excluded from gathering."));
			MetaData->SetValue(NewProp_IncludePathWildcards, TEXT("Category"), TEXT("Filter"));
			MetaData->SetValue(NewProp_IncludePathWildcards, TEXT("ModuleRelativePath"), TEXT("Public/LocalizationTargetTypes.h"));
			MetaData->SetValue(NewProp_IncludePathWildcards, TEXT("ToolTip"), TEXT("Metadata from source files whose paths match these wildcard patterns, specified relative to the project's root, may be processed for gathering."));
			MetaData->SetValue(NewProp_IsEnabled, TEXT("Category"), TEXT("Execution"));
			MetaData->SetValue(NewProp_IsEnabled, TEXT("ModuleRelativePath"), TEXT("Public/LocalizationTargetTypes.h"));
			MetaData->SetValue(NewProp_IsEnabled, TEXT("ToolTip"), TEXT("If enabled, metadata will be gathered according to this configuration."));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGatherTextFromMetaDataConfiguration_CRC() { return 690274854U; }
	UScriptStruct* Z_Construct_UScriptStruct_FMetaDataKeyGatherSpecification()
	{
		UPackage* Outer=Z_Construct_UPackage_Localization();
		extern uint32 Get_Z_Construct_UScriptStruct_FMetaDataKeyGatherSpecification_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("MetaDataKeyGatherSpecification"), sizeof(FMetaDataKeyGatherSpecification), Get_Z_Construct_UScriptStruct_FMetaDataKeyGatherSpecification_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("MetaDataKeyGatherSpecification"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FMetaDataKeyGatherSpecification>, EStructFlags(0x00000001));
			UProperty* NewProp_TextKeyPattern = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("TextKeyPattern"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(TextKeyPattern, FMetaDataKeyGatherSpecification), 0x0000000000004001, Z_Construct_UScriptStruct_FMetaDataTextKeyPattern());
			UProperty* NewProp_TextNamespace = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("TextNamespace"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(TextNamespace, FMetaDataKeyGatherSpecification), 0x0000000000004001);
			UProperty* NewProp_MetaDataKey = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("MetaDataKey"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(MetaDataKey, FMetaDataKeyGatherSpecification), 0x0000000000004001, Z_Construct_UScriptStruct_FMetaDataKeyName());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/LocalizationTargetTypes.h"));
			MetaData->SetValue(NewProp_TextKeyPattern, TEXT("Category"), TEXT("Output"));
			MetaData->SetValue(NewProp_TextKeyPattern, TEXT("ModuleRelativePath"), TEXT("Public/LocalizationTargetTypes.h"));
			MetaData->SetValue(NewProp_TextKeyPattern, TEXT("ToolTip"), TEXT("The pattern which will be formatted to form the localization key for the metadata value gathered as text.\n      Placeholder - Description\n      {FieldPath} - The fully qualified name of the object upon which the metadata resides.\n      {MetaDataValue} - The value associated with the metadata key."));
			MetaData->SetValue(NewProp_TextNamespace, TEXT("Category"), TEXT("Output"));
			MetaData->SetValue(NewProp_TextNamespace, TEXT("ModuleRelativePath"), TEXT("Public/LocalizationTargetTypes.h"));
			MetaData->SetValue(NewProp_TextNamespace, TEXT("ToolTip"), TEXT("The localization namespace in which the gathered text will be output."));
			MetaData->SetValue(NewProp_MetaDataKey, TEXT("Category"), TEXT("Input"));
			MetaData->SetValue(NewProp_MetaDataKey, TEXT("ModuleRelativePath"), TEXT("Public/LocalizationTargetTypes.h"));
			MetaData->SetValue(NewProp_MetaDataKey, TEXT("ToolTip"), TEXT("The metadata key for which values will be gathered as text."));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMetaDataKeyGatherSpecification_CRC() { return 3261902781U; }
	UScriptStruct* Z_Construct_UScriptStruct_FMetaDataKeyName()
	{
		UPackage* Outer=Z_Construct_UPackage_Localization();
		extern uint32 Get_Z_Construct_UScriptStruct_FMetaDataKeyName_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("MetaDataKeyName"), sizeof(FMetaDataKeyName), Get_Z_Construct_UScriptStruct_FMetaDataKeyName_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("MetaDataKeyName"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FMetaDataKeyName>, EStructFlags(0x00000001));
			UProperty* NewProp_Name = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Name"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(Name, FMetaDataKeyName), 0x0000000000004001);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/LocalizationTargetTypes.h"));
			MetaData->SetValue(NewProp_Name, TEXT("Category"), TEXT("Name"));
			MetaData->SetValue(NewProp_Name, TEXT("ModuleRelativePath"), TEXT("Public/LocalizationTargetTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMetaDataKeyName_CRC() { return 3785921286U; }
	UScriptStruct* Z_Construct_UScriptStruct_FMetaDataTextKeyPattern()
	{
		UPackage* Outer=Z_Construct_UPackage_Localization();
		extern uint32 Get_Z_Construct_UScriptStruct_FMetaDataTextKeyPattern_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("MetaDataTextKeyPattern"), sizeof(FMetaDataTextKeyPattern), Get_Z_Construct_UScriptStruct_FMetaDataTextKeyPattern_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("MetaDataTextKeyPattern"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FMetaDataTextKeyPattern>, EStructFlags(0x00000001));
			UProperty* NewProp_Pattern = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Pattern"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(Pattern, FMetaDataTextKeyPattern), 0x0000000000004001);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/LocalizationTargetTypes.h"));
			MetaData->SetValue(NewProp_Pattern, TEXT("Category"), TEXT("Pattern"));
			MetaData->SetValue(NewProp_Pattern, TEXT("ModuleRelativePath"), TEXT("Public/LocalizationTargetTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMetaDataTextKeyPattern_CRC() { return 2555654279U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGatherTextFromPackagesConfiguration()
	{
		UPackage* Outer=Z_Construct_UPackage_Localization();
		extern uint32 Get_Z_Construct_UScriptStruct_FGatherTextFromPackagesConfiguration_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("GatherTextFromPackagesConfiguration"), sizeof(FGatherTextFromPackagesConfiguration), Get_Z_Construct_UScriptStruct_FGatherTextFromPackagesConfiguration_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GatherTextFromPackagesConfiguration"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGatherTextFromPackagesConfiguration>, EStructFlags(0x00000001));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ShouldGatherFromEditorOnlyData, FGatherTextFromPackagesConfiguration, bool);
			UProperty* NewProp_ShouldGatherFromEditorOnlyData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ShouldGatherFromEditorOnlyData"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ShouldGatherFromEditorOnlyData, FGatherTextFromPackagesConfiguration), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(ShouldGatherFromEditorOnlyData, FGatherTextFromPackagesConfiguration), sizeof(bool), true);
			UProperty* NewProp_FileExtensions = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("FileExtensions"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(FileExtensions, FGatherTextFromPackagesConfiguration), 0x0000000000004001);
			UProperty* NewProp_FileExtensions_Inner = new(EC_InternalUseOnlyConstructor, NewProp_FileExtensions, TEXT("FileExtensions"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000004000, Z_Construct_UScriptStruct_FGatherTextFileExtension());
			UProperty* NewProp_ExcludePathWildcards = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ExcludePathWildcards"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(ExcludePathWildcards, FGatherTextFromPackagesConfiguration), 0x0000000000004001);
			UProperty* NewProp_ExcludePathWildcards_Inner = new(EC_InternalUseOnlyConstructor, NewProp_ExcludePathWildcards, TEXT("ExcludePathWildcards"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000004000, Z_Construct_UScriptStruct_FGatherTextExcludePath());
			UProperty* NewProp_IncludePathWildcards = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("IncludePathWildcards"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(IncludePathWildcards, FGatherTextFromPackagesConfiguration), 0x0000000000004001);
			UProperty* NewProp_IncludePathWildcards_Inner = new(EC_InternalUseOnlyConstructor, NewProp_IncludePathWildcards, TEXT("IncludePathWildcards"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000004000, Z_Construct_UScriptStruct_FGatherTextIncludePath());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(IsEnabled, FGatherTextFromPackagesConfiguration, bool);
			UProperty* NewProp_IsEnabled = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("IsEnabled"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(IsEnabled, FGatherTextFromPackagesConfiguration), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(IsEnabled, FGatherTextFromPackagesConfiguration), sizeof(bool), true);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/LocalizationTargetTypes.h"));
			MetaData->SetValue(NewProp_ShouldGatherFromEditorOnlyData, TEXT("Category"), TEXT("Filter"));
			MetaData->SetValue(NewProp_ShouldGatherFromEditorOnlyData, TEXT("ModuleRelativePath"), TEXT("Public/LocalizationTargetTypes.h"));
			MetaData->SetValue(NewProp_ShouldGatherFromEditorOnlyData, TEXT("ToolTip"), TEXT("If enable, data that is specified as editor-only may be processed for gathering."));
			MetaData->SetValue(NewProp_FileExtensions, TEXT("Category"), TEXT("Filter"));
			MetaData->SetValue(NewProp_FileExtensions, TEXT("ModuleRelativePath"), TEXT("Public/LocalizationTargetTypes.h"));
			MetaData->SetValue(NewProp_FileExtensions, TEXT("ToolTip"), TEXT("Packages whose names match these wildcard patterns may be processed for text to gather."));
			MetaData->SetValue(NewProp_ExcludePathWildcards, TEXT("Category"), TEXT("Filter"));
			MetaData->SetValue(NewProp_ExcludePathWildcards, TEXT("ModuleRelativePath"), TEXT("Public/LocalizationTargetTypes.h"));
			MetaData->SetValue(NewProp_ExcludePathWildcards, TEXT("ToolTip"), TEXT("Packages whose paths match these wildcard patterns will be excluded from gathering."));
			MetaData->SetValue(NewProp_IncludePathWildcards, TEXT("Category"), TEXT("Filter"));
			MetaData->SetValue(NewProp_IncludePathWildcards, TEXT("ModuleRelativePath"), TEXT("Public/LocalizationTargetTypes.h"));
			MetaData->SetValue(NewProp_IncludePathWildcards, TEXT("ToolTip"), TEXT("Packages whose paths match these wildcard patterns, specified relative to the project's root, may be processed for gathering."));
			MetaData->SetValue(NewProp_IsEnabled, TEXT("Category"), TEXT("Execution"));
			MetaData->SetValue(NewProp_IsEnabled, TEXT("ModuleRelativePath"), TEXT("Public/LocalizationTargetTypes.h"));
			MetaData->SetValue(NewProp_IsEnabled, TEXT("ToolTip"), TEXT("If enabled, text from packages will be gathered according to this configuration."));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGatherTextFromPackagesConfiguration_CRC() { return 2624057453U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGatherTextFromTextFilesConfiguration()
	{
		UPackage* Outer=Z_Construct_UPackage_Localization();
		extern uint32 Get_Z_Construct_UScriptStruct_FGatherTextFromTextFilesConfiguration_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("GatherTextFromTextFilesConfiguration"), sizeof(FGatherTextFromTextFilesConfiguration), Get_Z_Construct_UScriptStruct_FGatherTextFromTextFilesConfiguration_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GatherTextFromTextFilesConfiguration"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGatherTextFromTextFilesConfiguration>, EStructFlags(0x00000001));
			UProperty* NewProp_FileExtensions = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("FileExtensions"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(FileExtensions, FGatherTextFromTextFilesConfiguration), 0x0000000000004001);
			UProperty* NewProp_FileExtensions_Inner = new(EC_InternalUseOnlyConstructor, NewProp_FileExtensions, TEXT("FileExtensions"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000004000, Z_Construct_UScriptStruct_FGatherTextFileExtension());
			UProperty* NewProp_ExcludePathWildcards = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ExcludePathWildcards"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(ExcludePathWildcards, FGatherTextFromTextFilesConfiguration), 0x0000000000004001);
			UProperty* NewProp_ExcludePathWildcards_Inner = new(EC_InternalUseOnlyConstructor, NewProp_ExcludePathWildcards, TEXT("ExcludePathWildcards"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000004000, Z_Construct_UScriptStruct_FGatherTextExcludePath());
			UProperty* NewProp_SearchDirectories = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("SearchDirectories"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(SearchDirectories, FGatherTextFromTextFilesConfiguration), 0x0000000000004001);
			UProperty* NewProp_SearchDirectories_Inner = new(EC_InternalUseOnlyConstructor, NewProp_SearchDirectories, TEXT("SearchDirectories"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000004000, Z_Construct_UScriptStruct_FGatherTextSearchDirectory());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(IsEnabled, FGatherTextFromTextFilesConfiguration, bool);
			UProperty* NewProp_IsEnabled = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("IsEnabled"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(IsEnabled, FGatherTextFromTextFilesConfiguration), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(IsEnabled, FGatherTextFromTextFilesConfiguration), sizeof(bool), true);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/LocalizationTargetTypes.h"));
			MetaData->SetValue(NewProp_FileExtensions, TEXT("Category"), TEXT("Filter"));
			MetaData->SetValue(NewProp_FileExtensions, TEXT("ModuleRelativePath"), TEXT("Public/LocalizationTargetTypes.h"));
			MetaData->SetValue(NewProp_FileExtensions, TEXT("ToolTip"), TEXT("Text files whose names match these wildcard patterns may be parsed for text to gather."));
			MetaData->SetValue(NewProp_ExcludePathWildcards, TEXT("Category"), TEXT("Filter"));
			MetaData->SetValue(NewProp_ExcludePathWildcards, TEXT("ModuleRelativePath"), TEXT("Public/LocalizationTargetTypes.h"));
			MetaData->SetValue(NewProp_ExcludePathWildcards, TEXT("ToolTip"), TEXT("Text files whose paths match these wildcard patterns will be excluded from gathering."));
			MetaData->SetValue(NewProp_SearchDirectories, TEXT("Category"), TEXT("Filter"));
			MetaData->SetValue(NewProp_SearchDirectories, TEXT("ModuleRelativePath"), TEXT("Public/LocalizationTargetTypes.h"));
			MetaData->SetValue(NewProp_SearchDirectories, TEXT("ToolTip"), TEXT("The paths of directories to be searched recursively for text files, specified relative to the project's root, which may be parsed for text to gather."));
			MetaData->SetValue(NewProp_IsEnabled, TEXT("Category"), TEXT("Execution"));
			MetaData->SetValue(NewProp_IsEnabled, TEXT("ModuleRelativePath"), TEXT("Public/LocalizationTargetTypes.h"));
			MetaData->SetValue(NewProp_IsEnabled, TEXT("ToolTip"), TEXT("If enabled, text from text files will be gathered according to this configuration."));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGatherTextFromTextFilesConfiguration_CRC() { return 2842881587U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGatherTextFileExtension()
	{
		UPackage* Outer=Z_Construct_UPackage_Localization();
		extern uint32 Get_Z_Construct_UScriptStruct_FGatherTextFileExtension_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("GatherTextFileExtension"), sizeof(FGatherTextFileExtension), Get_Z_Construct_UScriptStruct_FGatherTextFileExtension_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GatherTextFileExtension"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGatherTextFileExtension>, EStructFlags(0x00000001));
			UProperty* NewProp_Pattern = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Pattern"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(Pattern, FGatherTextFileExtension), 0x0000000000004001);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/LocalizationTargetTypes.h"));
			MetaData->SetValue(NewProp_Pattern, TEXT("Category"), TEXT("Pattern"));
			MetaData->SetValue(NewProp_Pattern, TEXT("ModuleRelativePath"), TEXT("Public/LocalizationTargetTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGatherTextFileExtension_CRC() { return 1470767989U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGatherTextExcludePath()
	{
		UPackage* Outer=Z_Construct_UPackage_Localization();
		extern uint32 Get_Z_Construct_UScriptStruct_FGatherTextExcludePath_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("GatherTextExcludePath"), sizeof(FGatherTextExcludePath), Get_Z_Construct_UScriptStruct_FGatherTextExcludePath_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GatherTextExcludePath"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGatherTextExcludePath>, EStructFlags(0x00000001));
			UProperty* NewProp_Pattern = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Pattern"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(Pattern, FGatherTextExcludePath), 0x0000000000004001);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/LocalizationTargetTypes.h"));
			MetaData->SetValue(NewProp_Pattern, TEXT("Category"), TEXT("Pattern"));
			MetaData->SetValue(NewProp_Pattern, TEXT("ModuleRelativePath"), TEXT("Public/LocalizationTargetTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGatherTextExcludePath_CRC() { return 1790449765U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGatherTextIncludePath()
	{
		UPackage* Outer=Z_Construct_UPackage_Localization();
		extern uint32 Get_Z_Construct_UScriptStruct_FGatherTextIncludePath_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("GatherTextIncludePath"), sizeof(FGatherTextIncludePath), Get_Z_Construct_UScriptStruct_FGatherTextIncludePath_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GatherTextIncludePath"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGatherTextIncludePath>, EStructFlags(0x00000001));
			UProperty* NewProp_Pattern = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Pattern"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(Pattern, FGatherTextIncludePath), 0x0000000000004001);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/LocalizationTargetTypes.h"));
			MetaData->SetValue(NewProp_Pattern, TEXT("Category"), TEXT("Pattern"));
			MetaData->SetValue(NewProp_Pattern, TEXT("ModuleRelativePath"), TEXT("Public/LocalizationTargetTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGatherTextIncludePath_CRC() { return 2683992155U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGatherTextSearchDirectory()
	{
		UPackage* Outer=Z_Construct_UPackage_Localization();
		extern uint32 Get_Z_Construct_UScriptStruct_FGatherTextSearchDirectory_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("GatherTextSearchDirectory"), sizeof(FGatherTextSearchDirectory), Get_Z_Construct_UScriptStruct_FGatherTextSearchDirectory_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GatherTextSearchDirectory"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGatherTextSearchDirectory>, EStructFlags(0x00000001));
			UProperty* NewProp_Path = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Path"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(Path, FGatherTextSearchDirectory), 0x0000000000004001);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/LocalizationTargetTypes.h"));
			MetaData->SetValue(NewProp_Path, TEXT("Category"), TEXT("Path"));
			MetaData->SetValue(NewProp_Path, TEXT("ModuleRelativePath"), TEXT("Public/LocalizationTargetTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGatherTextSearchDirectory_CRC() { return 3013085618U; }
	UClass* Z_Construct_UClass_ULocalizationTarget_NoRegister()
	{
		return ULocalizationTarget::StaticClass();
	}
	UClass* Z_Construct_UClass_ULocalizationTarget()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage_Localization();
			OuterClass = ULocalizationTarget::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_Settings = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Settings"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Settings, ULocalizationTarget), 0x0000000000000001, Z_Construct_UScriptStruct_FLocalizationTargetSettings());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("LocalizationTargetTypes.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/LocalizationTargetTypes.h"));
				MetaData->SetValue(NewProp_Settings, TEXT("Category"), TEXT("Target"));
				MetaData->SetValue(NewProp_Settings, TEXT("ModuleRelativePath"), TEXT("Public/LocalizationTargetTypes.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_ULocalizationTarget(Z_Construct_UClass_ULocalizationTarget, TEXT("ULocalizationTarget"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(ULocalizationTarget);
	UClass* Z_Construct_UClass_ULocalizationTargetSet_NoRegister()
	{
		return ULocalizationTargetSet::StaticClass();
	}
	UClass* Z_Construct_UClass_ULocalizationTargetSet()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage_Localization();
			OuterClass = ULocalizationTargetSet::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_TargetObjects = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("TargetObjects"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(TargetObjects, ULocalizationTargetSet), 0x0000000000000001);
				UProperty* NewProp_TargetObjects_Inner = new(EC_InternalUseOnlyConstructor, NewProp_TargetObjects, TEXT("TargetObjects"), RF_Public|RF_Transient|RF_Native) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UClass_ULocalizationTarget_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("LocalizationTargetTypes.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/LocalizationTargetTypes.h"));
				MetaData->SetValue(NewProp_TargetObjects, TEXT("Category"), TEXT("Targets"));
				MetaData->SetValue(NewProp_TargetObjects, TEXT("ModuleRelativePath"), TEXT("Public/LocalizationTargetTypes.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_ULocalizationTargetSet(Z_Construct_UClass_ULocalizationTargetSet, TEXT("ULocalizationTargetSet"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(ULocalizationTargetSet);
	UClass* Z_Construct_UClass_ULocalizationSettings_NoRegister()
	{
		return ULocalizationSettings::StaticClass();
	}
	UClass* Z_Construct_UClass_ULocalizationSettings()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage_Localization();
			OuterClass = ULocalizationSettings::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100086;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_GameTargetsSettings = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("GameTargetsSettings"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(GameTargetsSettings, ULocalizationSettings), 0x0000000000004000);
				UProperty* NewProp_GameTargetsSettings_Inner = new(EC_InternalUseOnlyConstructor, NewProp_GameTargetsSettings, TEXT("GameTargetsSettings"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000004000, Z_Construct_UScriptStruct_FLocalizationTargetSettings());
				UProperty* NewProp_GameTargetSet = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("GameTargetSet"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(GameTargetSet, ULocalizationSettings), 0x0000000000000000, Z_Construct_UClass_ULocalizationTargetSet_NoRegister());
				UProperty* NewProp_EngineTargetsSettings = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("EngineTargetsSettings"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(EngineTargetsSettings, ULocalizationSettings), 0x0000000000004000);
				UProperty* NewProp_EngineTargetsSettings_Inner = new(EC_InternalUseOnlyConstructor, NewProp_EngineTargetsSettings, TEXT("EngineTargetsSettings"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000004000, Z_Construct_UScriptStruct_FLocalizationTargetSettings());
				UProperty* NewProp_EngineTargetSet = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("EngineTargetSet"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(EngineTargetSet, ULocalizationSettings), 0x0000000000000000, Z_Construct_UClass_ULocalizationTargetSet_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->ClassConfigName = FName(TEXT("Editor"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("LocalizationSettings.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/LocalizationSettings.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Class for loading/saving configuration settings and the details view objects needed for localization dashboard functionality."));
				MetaData->SetValue(NewProp_GameTargetsSettings, TEXT("ModuleRelativePath"), TEXT("Public/LocalizationSettings.h"));
				MetaData->SetValue(NewProp_GameTargetSet, TEXT("ModuleRelativePath"), TEXT("Public/LocalizationSettings.h"));
				MetaData->SetValue(NewProp_EngineTargetsSettings, TEXT("ModuleRelativePath"), TEXT("Public/LocalizationSettings.h"));
				MetaData->SetValue(NewProp_EngineTargetSet, TEXT("ModuleRelativePath"), TEXT("Public/LocalizationSettings.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_ULocalizationSettings(Z_Construct_UClass_ULocalizationSettings, TEXT("ULocalizationSettings"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(ULocalizationSettings);
	UPackage* Z_Construct_UPackage_Localization()
	{
		static UPackage* ReturnPackage = NULL;
		if (!ReturnPackage)
		{
			ReturnPackage = CastChecked<UPackage>(StaticFindObjectFast(UPackage::StaticClass(), NULL, FName(TEXT("/Script/Localization")), false, false));
			ReturnPackage->SetPackageFlags(PKG_CompiledIn | 0x00000000);
			FGuid Guid;
			Guid.A = 0x7A95F548;
			Guid.B = 0xB88B0AF0;
			Guid.C = 0x00000000;
			Guid.D = 0x00000000;
			ReturnPackage->SetGuid(Guid);

		}
		return ReturnPackage;
	}
#endif

PRAGMA_ENABLE_DEPRECATION_WARNINGS
