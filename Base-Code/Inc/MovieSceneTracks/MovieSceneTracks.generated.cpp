// Copyright 1998-2015 Epic Games, Inc. All Rights Reserved.
/*===========================================================================
	Boilerplate C++ definitions for a single module.
	This is automatically generated by UnrealHeaderTool.
	DO NOT modify this manually! Edit the corresponding .h files instead!
===========================================================================*/

#include "Private/MovieSceneTracksPrivatePCH.h"
#include "MovieSceneTracks.generated.dep.h"
PRAGMA_DISABLE_DEPRECATION_WARNINGS
void EmptyLinkFunctionForGeneratedCodeMovieSceneTracks() {}
	void UMovieScene3DConstraintSection::StaticRegisterNativesUMovieScene3DConstraintSection()
	{
	}
	IMPLEMENT_CLASS(UMovieScene3DConstraintSection, 3879452577);
	void UMovieScene3DAttachSection::StaticRegisterNativesUMovieScene3DAttachSection()
	{
	}
	IMPLEMENT_CLASS(UMovieScene3DAttachSection, 988478356);
static class UEnum* MovieScene3DPathSection_Axis_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern MOVIESCENETRACKS_API class UEnum* Z_Construct_UEnum_MovieSceneTracks_MovieScene3DPathSection_Axis();
		extern MOVIESCENETRACKS_API class UPackage* Z_Construct_UPackage_MovieSceneTracks();
		Singleton = GetStaticEnum(Z_Construct_UEnum_MovieSceneTracks_MovieScene3DPathSection_Axis, Z_Construct_UPackage_MovieSceneTracks(), TEXT("MovieScene3DPathSection_Axis"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_MovieScene3DPathSection_Axis(MovieScene3DPathSection_Axis_StaticEnum, TEXT("/Script/MovieSceneTracks"));
	void UMovieScene3DPathSection::StaticRegisterNativesUMovieScene3DPathSection()
	{
	}
	IMPLEMENT_CLASS(UMovieScene3DPathSection, 3068135007);
	void UMovieScene3DConstraintTrack::StaticRegisterNativesUMovieScene3DConstraintTrack()
	{
	}
	IMPLEMENT_CLASS(UMovieScene3DConstraintTrack, 1721905251);
	void UMovieScene3DAttachTrack::StaticRegisterNativesUMovieScene3DAttachTrack()
	{
	}
	IMPLEMENT_CLASS(UMovieScene3DAttachTrack, 2878745794);
	void UMovieScene3DPathTrack::StaticRegisterNativesUMovieScene3DPathTrack()
	{
	}
	IMPLEMENT_CLASS(UMovieScene3DPathTrack, 3093567619);
	void UMovieScene3DTransformSection::StaticRegisterNativesUMovieScene3DTransformSection()
	{
	}
	IMPLEMENT_CLASS(UMovieScene3DTransformSection, 3716376390);
	void UMovieSceneAudioSection::StaticRegisterNativesUMovieSceneAudioSection()
	{
	}
	IMPLEMENT_CLASS(UMovieSceneAudioSection, 2915724221);
	void UMovieSceneAudioTrack::StaticRegisterNativesUMovieSceneAudioTrack()
	{
	}
	IMPLEMENT_CLASS(UMovieSceneAudioTrack, 1290067735);
	void UMovieSceneBoolSection::StaticRegisterNativesUMovieSceneBoolSection()
	{
	}
	IMPLEMENT_CLASS(UMovieSceneBoolSection, 3534201702);
	void UMovieSceneVisibilitySection::StaticRegisterNativesUMovieSceneVisibilitySection()
	{
	}
	IMPLEMENT_CLASS(UMovieSceneVisibilitySection, 1598498350);
	void UMovieSceneByteSection::StaticRegisterNativesUMovieSceneByteSection()
	{
	}
	IMPLEMENT_CLASS(UMovieSceneByteSection, 4041658419);
	void UMovieSceneColorSection::StaticRegisterNativesUMovieSceneColorSection()
	{
	}
	IMPLEMENT_CLASS(UMovieSceneColorSection, 3801203568);
class UScriptStruct* FMovieSceneEventSectionKey::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern MOVIESCENETRACKS_API class UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneEventSectionKey();
		extern MOVIESCENETRACKS_API uint32 Get_Z_Construct_UScriptStruct_FMovieSceneEventSectionKey_CRC();
		extern MOVIESCENETRACKS_API class UPackage* Z_Construct_UPackage_MovieSceneTracks();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMovieSceneEventSectionKey, Z_Construct_UPackage_MovieSceneTracks(), TEXT("MovieSceneEventSectionKey"), sizeof(FMovieSceneEventSectionKey), Get_Z_Construct_UScriptStruct_FMovieSceneEventSectionKey_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMovieSceneEventSectionKey(FMovieSceneEventSectionKey::StaticStruct, TEXT("/Script/MovieSceneTracks"));
static struct FScriptStruct_MovieSceneTracks_StaticRegisterNativesFMovieSceneEventSectionKey
{
	FScriptStruct_MovieSceneTracks_StaticRegisterNativesFMovieSceneEventSectionKey()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("MovieSceneEventSectionKey")),new UScriptStruct::TCppStructOps<FMovieSceneEventSectionKey>);
	}
} ScriptStruct_MovieSceneTracks_StaticRegisterNativesFMovieSceneEventSectionKey;
	void UMovieSceneEventSection::StaticRegisterNativesUMovieSceneEventSection()
	{
	}
	IMPLEMENT_CLASS(UMovieSceneEventSection, 3517821774);
	void UMovieSceneEventTrack::StaticRegisterNativesUMovieSceneEventTrack()
	{
	}
	IMPLEMENT_CLASS(UMovieSceneEventTrack, 2986285592);
	void UMovieSceneFloatSection::StaticRegisterNativesUMovieSceneFloatSection()
	{
	}
	IMPLEMENT_CLASS(UMovieSceneFloatSection, 466560434);
	void UMovieSceneFadeSection::StaticRegisterNativesUMovieSceneFadeSection()
	{
	}
	IMPLEMENT_CLASS(UMovieSceneFadeSection, 1036778499);
	void UMovieSceneSlomoSection::StaticRegisterNativesUMovieSceneSlomoSection()
	{
	}
	IMPLEMENT_CLASS(UMovieSceneSlomoSection, 3994472359);
class UScriptStruct* FVectorParameterNameAndCurves::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern MOVIESCENETRACKS_API class UScriptStruct* Z_Construct_UScriptStruct_FVectorParameterNameAndCurves();
		extern MOVIESCENETRACKS_API uint32 Get_Z_Construct_UScriptStruct_FVectorParameterNameAndCurves_CRC();
		extern MOVIESCENETRACKS_API class UPackage* Z_Construct_UPackage_MovieSceneTracks();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FVectorParameterNameAndCurves, Z_Construct_UPackage_MovieSceneTracks(), TEXT("VectorParameterNameAndCurves"), sizeof(FVectorParameterNameAndCurves), Get_Z_Construct_UScriptStruct_FVectorParameterNameAndCurves_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FVectorParameterNameAndCurves(FVectorParameterNameAndCurves::StaticStruct, TEXT("/Script/MovieSceneTracks"));
static struct FScriptStruct_MovieSceneTracks_StaticRegisterNativesFVectorParameterNameAndCurves
{
	FScriptStruct_MovieSceneTracks_StaticRegisterNativesFVectorParameterNameAndCurves()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("VectorParameterNameAndCurves")),new UScriptStruct::TCppStructOps<FVectorParameterNameAndCurves>);
	}
} ScriptStruct_MovieSceneTracks_StaticRegisterNativesFVectorParameterNameAndCurves;
class UScriptStruct* FScalarParameterNameAndCurve::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern MOVIESCENETRACKS_API class UScriptStruct* Z_Construct_UScriptStruct_FScalarParameterNameAndCurve();
		extern MOVIESCENETRACKS_API uint32 Get_Z_Construct_UScriptStruct_FScalarParameterNameAndCurve_CRC();
		extern MOVIESCENETRACKS_API class UPackage* Z_Construct_UPackage_MovieSceneTracks();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FScalarParameterNameAndCurve, Z_Construct_UPackage_MovieSceneTracks(), TEXT("ScalarParameterNameAndCurve"), sizeof(FScalarParameterNameAndCurve), Get_Z_Construct_UScriptStruct_FScalarParameterNameAndCurve_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FScalarParameterNameAndCurve(FScalarParameterNameAndCurve::StaticStruct, TEXT("/Script/MovieSceneTracks"));
static struct FScriptStruct_MovieSceneTracks_StaticRegisterNativesFScalarParameterNameAndCurve
{
	FScriptStruct_MovieSceneTracks_StaticRegisterNativesFScalarParameterNameAndCurve()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("ScalarParameterNameAndCurve")),new UScriptStruct::TCppStructOps<FScalarParameterNameAndCurve>);
	}
} ScriptStruct_MovieSceneTracks_StaticRegisterNativesFScalarParameterNameAndCurve;
	void UMovieSceneMaterialParameterSection::StaticRegisterNativesUMovieSceneMaterialParameterSection()
	{
	}
	IMPLEMENT_CLASS(UMovieSceneMaterialParameterSection, 3441868002);
	void UMovieSceneMaterialTrack::StaticRegisterNativesUMovieSceneMaterialTrack()
	{
	}
	IMPLEMENT_CLASS(UMovieSceneMaterialTrack, 1891315472);
	void UMovieSceneComponentMaterialTrack::StaticRegisterNativesUMovieSceneComponentMaterialTrack()
	{
	}
	IMPLEMENT_CLASS(UMovieSceneComponentMaterialTrack, 28125898);
static class UEnum* EParticleKey_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern MOVIESCENETRACKS_API class UEnum* Z_Construct_UEnum_MovieSceneTracks_EParticleKey();
		extern MOVIESCENETRACKS_API class UPackage* Z_Construct_UPackage_MovieSceneTracks();
		Singleton = GetStaticEnum(Z_Construct_UEnum_MovieSceneTracks_EParticleKey, Z_Construct_UPackage_MovieSceneTracks(), TEXT("EParticleKey"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EParticleKey(EParticleKey_StaticEnum, TEXT("/Script/MovieSceneTracks"));
	void UMovieSceneParticleSection::StaticRegisterNativesUMovieSceneParticleSection()
	{
	}
	IMPLEMENT_CLASS(UMovieSceneParticleSection, 1466464976);
	void UMovieSceneParticleTrack::StaticRegisterNativesUMovieSceneParticleTrack()
	{
	}
	IMPLEMENT_CLASS(UMovieSceneParticleTrack, 2747545937);
	void UMovieScenePropertyTrack::StaticRegisterNativesUMovieScenePropertyTrack()
	{
	}
	IMPLEMENT_CLASS(UMovieScenePropertyTrack, 4265493596);
	void UMovieScene3DTransformTrack::StaticRegisterNativesUMovieScene3DTransformTrack()
	{
	}
	IMPLEMENT_CLASS(UMovieScene3DTransformTrack, 3348251149);
	void UMovieSceneBoolTrack::StaticRegisterNativesUMovieSceneBoolTrack()
	{
	}
	IMPLEMENT_CLASS(UMovieSceneBoolTrack, 284720047);
	void UMovieSceneVisibilityTrack::StaticRegisterNativesUMovieSceneVisibilityTrack()
	{
	}
	IMPLEMENT_CLASS(UMovieSceneVisibilityTrack, 1951051463);
	void UMovieSceneByteTrack::StaticRegisterNativesUMovieSceneByteTrack()
	{
	}
	IMPLEMENT_CLASS(UMovieSceneByteTrack, 3090073568);
	void UMovieSceneColorTrack::StaticRegisterNativesUMovieSceneColorTrack()
	{
	}
	IMPLEMENT_CLASS(UMovieSceneColorTrack, 4066745332);
	void UMovieSceneFloatTrack::StaticRegisterNativesUMovieSceneFloatTrack()
	{
	}
	IMPLEMENT_CLASS(UMovieSceneFloatTrack, 3386355174);
	void UMovieSceneFadeTrack::StaticRegisterNativesUMovieSceneFadeTrack()
	{
	}
	IMPLEMENT_CLASS(UMovieSceneFadeTrack, 2744470448);
	void UMovieSceneSlomoTrack::StaticRegisterNativesUMovieSceneSlomoTrack()
	{
	}
	IMPLEMENT_CLASS(UMovieSceneSlomoTrack, 336672742);
	void UMovieSceneVectorTrack::StaticRegisterNativesUMovieSceneVectorTrack()
	{
	}
	IMPLEMENT_CLASS(UMovieSceneVectorTrack, 3915277095);
	void UMovieSceneSkeletalAnimationSection::StaticRegisterNativesUMovieSceneSkeletalAnimationSection()
	{
	}
	IMPLEMENT_CLASS(UMovieSceneSkeletalAnimationSection, 2837708627);
	void UMovieSceneSkeletalAnimationTrack::StaticRegisterNativesUMovieSceneSkeletalAnimationTrack()
	{
	}
	IMPLEMENT_CLASS(UMovieSceneSkeletalAnimationTrack, 2460494517);
	void UMovieSceneVectorSection::StaticRegisterNativesUMovieSceneVectorSection()
	{
	}
	IMPLEMENT_CLASS(UMovieSceneVectorSection, 3346154494);
	void USubMovieSceneSection::StaticRegisterNativesUSubMovieSceneSection()
	{
	}
	IMPLEMENT_CLASS(USubMovieSceneSection, 2949267459);
	void UMovieSceneShotSection::StaticRegisterNativesUMovieSceneShotSection()
	{
	}
	IMPLEMENT_CLASS(UMovieSceneShotSection, 3764180145);
	void USubMovieSceneTrack::StaticRegisterNativesUSubMovieSceneTrack()
	{
	}
	IMPLEMENT_CLASS(USubMovieSceneTrack, 3534949977);
	void UMovieSceneShotTrack::StaticRegisterNativesUMovieSceneShotTrack()
	{
	}
	IMPLEMENT_CLASS(UMovieSceneShotTrack, 3405738879);
#if USE_COMPILED_IN_NATIVES
// Cross Module References
	MOVIESCENE_API class UClass* Z_Construct_UClass_UMovieSceneSection();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FGuid();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FRichCurve();
	MOVIESCENE_API class UClass* Z_Construct_UClass_UMovieSceneTrack();
	MOVIESCENE_API class UClass* Z_Construct_UClass_UMovieSceneSection_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USoundBase_NoRegister();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FIntegralCurve();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FNameCurve();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FLinearColor();
	ENGINE_API class UClass* Z_Construct_UClass_UAnimSequence_NoRegister();
	MOVIESCENE_API class UClass* Z_Construct_UClass_UMovieSceneSequence_NoRegister();

	MOVIESCENETRACKS_API class UClass* Z_Construct_UClass_UMovieScene3DConstraintSection_NoRegister();
	MOVIESCENETRACKS_API class UClass* Z_Construct_UClass_UMovieScene3DConstraintSection();
	MOVIESCENETRACKS_API class UClass* Z_Construct_UClass_UMovieScene3DAttachSection_NoRegister();
	MOVIESCENETRACKS_API class UClass* Z_Construct_UClass_UMovieScene3DAttachSection();
	MOVIESCENETRACKS_API class UEnum* Z_Construct_UEnum_MovieSceneTracks_MovieScene3DPathSection_Axis();
	MOVIESCENETRACKS_API class UClass* Z_Construct_UClass_UMovieScene3DPathSection_NoRegister();
	MOVIESCENETRACKS_API class UClass* Z_Construct_UClass_UMovieScene3DPathSection();
	MOVIESCENETRACKS_API class UClass* Z_Construct_UClass_UMovieScene3DConstraintTrack_NoRegister();
	MOVIESCENETRACKS_API class UClass* Z_Construct_UClass_UMovieScene3DConstraintTrack();
	MOVIESCENETRACKS_API class UClass* Z_Construct_UClass_UMovieScene3DAttachTrack_NoRegister();
	MOVIESCENETRACKS_API class UClass* Z_Construct_UClass_UMovieScene3DAttachTrack();
	MOVIESCENETRACKS_API class UClass* Z_Construct_UClass_UMovieScene3DPathTrack_NoRegister();
	MOVIESCENETRACKS_API class UClass* Z_Construct_UClass_UMovieScene3DPathTrack();
	MOVIESCENETRACKS_API class UClass* Z_Construct_UClass_UMovieScene3DTransformSection_NoRegister();
	MOVIESCENETRACKS_API class UClass* Z_Construct_UClass_UMovieScene3DTransformSection();
	MOVIESCENETRACKS_API class UClass* Z_Construct_UClass_UMovieSceneAudioSection_NoRegister();
	MOVIESCENETRACKS_API class UClass* Z_Construct_UClass_UMovieSceneAudioSection();
	MOVIESCENETRACKS_API class UClass* Z_Construct_UClass_UMovieSceneAudioTrack_NoRegister();
	MOVIESCENETRACKS_API class UClass* Z_Construct_UClass_UMovieSceneAudioTrack();
	MOVIESCENETRACKS_API class UClass* Z_Construct_UClass_UMovieSceneBoolSection_NoRegister();
	MOVIESCENETRACKS_API class UClass* Z_Construct_UClass_UMovieSceneBoolSection();
	MOVIESCENETRACKS_API class UClass* Z_Construct_UClass_UMovieSceneVisibilitySection_NoRegister();
	MOVIESCENETRACKS_API class UClass* Z_Construct_UClass_UMovieSceneVisibilitySection();
	MOVIESCENETRACKS_API class UClass* Z_Construct_UClass_UMovieSceneByteSection_NoRegister();
	MOVIESCENETRACKS_API class UClass* Z_Construct_UClass_UMovieSceneByteSection();
	MOVIESCENETRACKS_API class UClass* Z_Construct_UClass_UMovieSceneColorSection_NoRegister();
	MOVIESCENETRACKS_API class UClass* Z_Construct_UClass_UMovieSceneColorSection();
	MOVIESCENETRACKS_API class UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneEventSectionKey();
	MOVIESCENETRACKS_API class UClass* Z_Construct_UClass_UMovieSceneEventSection_NoRegister();
	MOVIESCENETRACKS_API class UClass* Z_Construct_UClass_UMovieSceneEventSection();
	MOVIESCENETRACKS_API class UClass* Z_Construct_UClass_UMovieSceneEventTrack_NoRegister();
	MOVIESCENETRACKS_API class UClass* Z_Construct_UClass_UMovieSceneEventTrack();
	MOVIESCENETRACKS_API class UClass* Z_Construct_UClass_UMovieSceneFloatSection_NoRegister();
	MOVIESCENETRACKS_API class UClass* Z_Construct_UClass_UMovieSceneFloatSection();
	MOVIESCENETRACKS_API class UClass* Z_Construct_UClass_UMovieSceneFadeSection_NoRegister();
	MOVIESCENETRACKS_API class UClass* Z_Construct_UClass_UMovieSceneFadeSection();
	MOVIESCENETRACKS_API class UClass* Z_Construct_UClass_UMovieSceneSlomoSection_NoRegister();
	MOVIESCENETRACKS_API class UClass* Z_Construct_UClass_UMovieSceneSlomoSection();
	MOVIESCENETRACKS_API class UScriptStruct* Z_Construct_UScriptStruct_FVectorParameterNameAndCurves();
	MOVIESCENETRACKS_API class UScriptStruct* Z_Construct_UScriptStruct_FScalarParameterNameAndCurve();
	MOVIESCENETRACKS_API class UClass* Z_Construct_UClass_UMovieSceneMaterialParameterSection_NoRegister();
	MOVIESCENETRACKS_API class UClass* Z_Construct_UClass_UMovieSceneMaterialParameterSection();
	MOVIESCENETRACKS_API class UClass* Z_Construct_UClass_UMovieSceneMaterialTrack_NoRegister();
	MOVIESCENETRACKS_API class UClass* Z_Construct_UClass_UMovieSceneMaterialTrack();
	MOVIESCENETRACKS_API class UClass* Z_Construct_UClass_UMovieSceneComponentMaterialTrack_NoRegister();
	MOVIESCENETRACKS_API class UClass* Z_Construct_UClass_UMovieSceneComponentMaterialTrack();
	MOVIESCENETRACKS_API class UEnum* Z_Construct_UEnum_MovieSceneTracks_EParticleKey();
	MOVIESCENETRACKS_API class UClass* Z_Construct_UClass_UMovieSceneParticleSection_NoRegister();
	MOVIESCENETRACKS_API class UClass* Z_Construct_UClass_UMovieSceneParticleSection();
	MOVIESCENETRACKS_API class UClass* Z_Construct_UClass_UMovieSceneParticleTrack_NoRegister();
	MOVIESCENETRACKS_API class UClass* Z_Construct_UClass_UMovieSceneParticleTrack();
	MOVIESCENETRACKS_API class UClass* Z_Construct_UClass_UMovieScenePropertyTrack_NoRegister();
	MOVIESCENETRACKS_API class UClass* Z_Construct_UClass_UMovieScenePropertyTrack();
	MOVIESCENETRACKS_API class UClass* Z_Construct_UClass_UMovieScene3DTransformTrack_NoRegister();
	MOVIESCENETRACKS_API class UClass* Z_Construct_UClass_UMovieScene3DTransformTrack();
	MOVIESCENETRACKS_API class UClass* Z_Construct_UClass_UMovieSceneBoolTrack_NoRegister();
	MOVIESCENETRACKS_API class UClass* Z_Construct_UClass_UMovieSceneBoolTrack();
	MOVIESCENETRACKS_API class UClass* Z_Construct_UClass_UMovieSceneVisibilityTrack_NoRegister();
	MOVIESCENETRACKS_API class UClass* Z_Construct_UClass_UMovieSceneVisibilityTrack();
	MOVIESCENETRACKS_API class UClass* Z_Construct_UClass_UMovieSceneByteTrack_NoRegister();
	MOVIESCENETRACKS_API class UClass* Z_Construct_UClass_UMovieSceneByteTrack();
	MOVIESCENETRACKS_API class UClass* Z_Construct_UClass_UMovieSceneColorTrack_NoRegister();
	MOVIESCENETRACKS_API class UClass* Z_Construct_UClass_UMovieSceneColorTrack();
	MOVIESCENETRACKS_API class UClass* Z_Construct_UClass_UMovieSceneFloatTrack_NoRegister();
	MOVIESCENETRACKS_API class UClass* Z_Construct_UClass_UMovieSceneFloatTrack();
	MOVIESCENETRACKS_API class UClass* Z_Construct_UClass_UMovieSceneFadeTrack_NoRegister();
	MOVIESCENETRACKS_API class UClass* Z_Construct_UClass_UMovieSceneFadeTrack();
	MOVIESCENETRACKS_API class UClass* Z_Construct_UClass_UMovieSceneSlomoTrack_NoRegister();
	MOVIESCENETRACKS_API class UClass* Z_Construct_UClass_UMovieSceneSlomoTrack();
	MOVIESCENETRACKS_API class UClass* Z_Construct_UClass_UMovieSceneVectorTrack_NoRegister();
	MOVIESCENETRACKS_API class UClass* Z_Construct_UClass_UMovieSceneVectorTrack();
	MOVIESCENETRACKS_API class UClass* Z_Construct_UClass_UMovieSceneSkeletalAnimationSection_NoRegister();
	MOVIESCENETRACKS_API class UClass* Z_Construct_UClass_UMovieSceneSkeletalAnimationSection();
	MOVIESCENETRACKS_API class UClass* Z_Construct_UClass_UMovieSceneSkeletalAnimationTrack_NoRegister();
	MOVIESCENETRACKS_API class UClass* Z_Construct_UClass_UMovieSceneSkeletalAnimationTrack();
	MOVIESCENETRACKS_API class UClass* Z_Construct_UClass_UMovieSceneVectorSection_NoRegister();
	MOVIESCENETRACKS_API class UClass* Z_Construct_UClass_UMovieSceneVectorSection();
	MOVIESCENETRACKS_API class UClass* Z_Construct_UClass_USubMovieSceneSection_NoRegister();
	MOVIESCENETRACKS_API class UClass* Z_Construct_UClass_USubMovieSceneSection();
	MOVIESCENETRACKS_API class UClass* Z_Construct_UClass_UMovieSceneShotSection_NoRegister();
	MOVIESCENETRACKS_API class UClass* Z_Construct_UClass_UMovieSceneShotSection();
	MOVIESCENETRACKS_API class UClass* Z_Construct_UClass_USubMovieSceneTrack_NoRegister();
	MOVIESCENETRACKS_API class UClass* Z_Construct_UClass_USubMovieSceneTrack();
	MOVIESCENETRACKS_API class UClass* Z_Construct_UClass_UMovieSceneShotTrack_NoRegister();
	MOVIESCENETRACKS_API class UClass* Z_Construct_UClass_UMovieSceneShotTrack();
	MOVIESCENETRACKS_API class UPackage* Z_Construct_UPackage_MovieSceneTracks();
	UClass* Z_Construct_UClass_UMovieScene3DConstraintSection_NoRegister()
	{
		return UMovieScene3DConstraintSection::StaticClass();
	}
	UClass* Z_Construct_UClass_UMovieScene3DConstraintSection()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UMovieSceneSection();
			Z_Construct_UPackage_MovieSceneTracks();
			OuterClass = UMovieScene3DConstraintSection::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_ConstraintId = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ConstraintId"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(ConstraintId, UMovieScene3DConstraintSection), 0x0000080000000000, Z_Construct_UScriptStruct_FGuid());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Sections/MovieScene3DConstraintSection.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Sections/MovieScene3DConstraintSection.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Base class for 3D constraint section"));
				MetaData->SetValue(NewProp_ConstraintId, TEXT("ModuleRelativePath"), TEXT("Public/Sections/MovieScene3DConstraintSection.h"));
				MetaData->SetValue(NewProp_ConstraintId, TEXT("ToolTip"), TEXT("The possessable guid that this constraint uses"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UMovieScene3DConstraintSection(Z_Construct_UClass_UMovieScene3DConstraintSection, TEXT("UMovieScene3DConstraintSection"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UMovieScene3DConstraintSection);
	UClass* Z_Construct_UClass_UMovieScene3DAttachSection_NoRegister()
	{
		return UMovieScene3DAttachSection::StaticClass();
	}
	UClass* Z_Construct_UClass_UMovieScene3DAttachSection()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UMovieScene3DConstraintSection();
			Z_Construct_UPackage_MovieSceneTracks();
			OuterClass = UMovieScene3DAttachSection::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bConstrainRz, UMovieScene3DAttachSection, uint8);
				UProperty* NewProp_bConstrainRz = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bConstrainRz"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bConstrainRz, UMovieScene3DAttachSection), 0x0000000000000001, CPP_BOOL_PROPERTY_BITMASK(bConstrainRz, UMovieScene3DAttachSection), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bConstrainRy, UMovieScene3DAttachSection, uint8);
				UProperty* NewProp_bConstrainRy = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bConstrainRy"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bConstrainRy, UMovieScene3DAttachSection), 0x0000000000000001, CPP_BOOL_PROPERTY_BITMASK(bConstrainRy, UMovieScene3DAttachSection), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bConstrainRx, UMovieScene3DAttachSection, uint8);
				UProperty* NewProp_bConstrainRx = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bConstrainRx"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bConstrainRx, UMovieScene3DAttachSection), 0x0000000000000001, CPP_BOOL_PROPERTY_BITMASK(bConstrainRx, UMovieScene3DAttachSection), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bConstrainTz, UMovieScene3DAttachSection, uint8);
				UProperty* NewProp_bConstrainTz = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bConstrainTz"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bConstrainTz, UMovieScene3DAttachSection), 0x0000000000000001, CPP_BOOL_PROPERTY_BITMASK(bConstrainTz, UMovieScene3DAttachSection), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bConstrainTy, UMovieScene3DAttachSection, uint8);
				UProperty* NewProp_bConstrainTy = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bConstrainTy"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bConstrainTy, UMovieScene3DAttachSection), 0x0000000000000001, CPP_BOOL_PROPERTY_BITMASK(bConstrainTy, UMovieScene3DAttachSection), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bConstrainTx, UMovieScene3DAttachSection, uint8);
				UProperty* NewProp_bConstrainTx = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bConstrainTx"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bConstrainTx, UMovieScene3DAttachSection), 0x0000000000000001, CPP_BOOL_PROPERTY_BITMASK(bConstrainTx, UMovieScene3DAttachSection), sizeof(uint8), false);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Sections/MovieScene3DAttachSection.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Sections/MovieScene3DAttachSection.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("A 3D Attach section"));
				MetaData->SetValue(NewProp_bConstrainRz, TEXT("Category"), TEXT("Attach"));
				MetaData->SetValue(NewProp_bConstrainRz, TEXT("ModuleRelativePath"), TEXT("Public/Sections/MovieScene3DAttachSection.h"));
				MetaData->SetValue(NewProp_bConstrainRy, TEXT("Category"), TEXT("Attach"));
				MetaData->SetValue(NewProp_bConstrainRy, TEXT("ModuleRelativePath"), TEXT("Public/Sections/MovieScene3DAttachSection.h"));
				MetaData->SetValue(NewProp_bConstrainRx, TEXT("Category"), TEXT("Attach"));
				MetaData->SetValue(NewProp_bConstrainRx, TEXT("ModuleRelativePath"), TEXT("Public/Sections/MovieScene3DAttachSection.h"));
				MetaData->SetValue(NewProp_bConstrainTz, TEXT("Category"), TEXT("Attach"));
				MetaData->SetValue(NewProp_bConstrainTz, TEXT("ModuleRelativePath"), TEXT("Public/Sections/MovieScene3DAttachSection.h"));
				MetaData->SetValue(NewProp_bConstrainTy, TEXT("Category"), TEXT("Attach"));
				MetaData->SetValue(NewProp_bConstrainTy, TEXT("ModuleRelativePath"), TEXT("Public/Sections/MovieScene3DAttachSection.h"));
				MetaData->SetValue(NewProp_bConstrainTx, TEXT("Category"), TEXT("Attach"));
				MetaData->SetValue(NewProp_bConstrainTx, TEXT("ModuleRelativePath"), TEXT("Public/Sections/MovieScene3DAttachSection.h"));
				MetaData->SetValue(NewProp_bConstrainTx, TEXT("ToolTip"), TEXT("@todo need additional actor component/bone to attach to"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UMovieScene3DAttachSection(Z_Construct_UClass_UMovieScene3DAttachSection, TEXT("UMovieScene3DAttachSection"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UMovieScene3DAttachSection);
	UEnum* Z_Construct_UEnum_MovieSceneTracks_MovieScene3DPathSection_Axis()
	{
		UPackage* Outer=Z_Construct_UPackage_MovieSceneTracks();
		extern uint32 Get_Z_Construct_UEnum_MovieSceneTracks_MovieScene3DPathSection_Axis_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("MovieScene3DPathSection_Axis"), 0, Get_Z_Construct_UEnum_MovieSceneTracks_MovieScene3DPathSection_Axis_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("MovieScene3DPathSection_Axis"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("MovieScene3DPathSection_Axis::X")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("MovieScene3DPathSection_Axis::Y")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("MovieScene3DPathSection_Axis::Z")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("MovieScene3DPathSection_Axis::NEG_X")), 3));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("MovieScene3DPathSection_Axis::NEG_Y")), 4));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("MovieScene3DPathSection_Axis::NEG_Z")), 5));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("MovieScene3DPathSection_Axis::MovieScene3DPathSection_MAX")), 6));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::EnumClass);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Public/Sections/MovieScene3DPathSection.h"));
			MetaData->SetValue(ReturnEnum, TEXT("NEG_X.DisplayName"), TEXT("-X"));
			MetaData->SetValue(ReturnEnum, TEXT("NEG_Y.DisplayName"), TEXT("-Y"));
			MetaData->SetValue(ReturnEnum, TEXT("NEG_Z.DisplayName"), TEXT("-Z"));
			MetaData->SetValue(ReturnEnum, TEXT("X.DisplayName"), TEXT("X"));
			MetaData->SetValue(ReturnEnum, TEXT("Y.DisplayName"), TEXT("Y"));
			MetaData->SetValue(ReturnEnum, TEXT("Z.DisplayName"), TEXT("Z"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_MovieSceneTracks_MovieScene3DPathSection_Axis_CRC() { return 3504122480U; }
	UClass* Z_Construct_UClass_UMovieScene3DPathSection_NoRegister()
	{
		return UMovieScene3DPathSection::StaticClass();
	}
	UClass* Z_Construct_UClass_UMovieScene3DPathSection()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UMovieScene3DConstraintSection();
			Z_Construct_UPackage_MovieSceneTracks();
			OuterClass = UMovieScene3DPathSection::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bForceUpright, UMovieScene3DPathSection, uint8);
				UProperty* NewProp_bForceUpright = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bForceUpright"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bForceUpright, UMovieScene3DPathSection), 0x0000000000000001, CPP_BOOL_PROPERTY_BITMASK(bForceUpright, UMovieScene3DPathSection), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bReverse, UMovieScene3DPathSection, uint8);
				UProperty* NewProp_bReverse = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bReverse"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bReverse, UMovieScene3DPathSection), 0x0000000000000001, CPP_BOOL_PROPERTY_BITMASK(bReverse, UMovieScene3DPathSection), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bFollow, UMovieScene3DPathSection, uint8);
				UProperty* NewProp_bFollow = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bFollow"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bFollow, UMovieScene3DPathSection), 0x0000000000000001, CPP_BOOL_PROPERTY_BITMASK(bFollow, UMovieScene3DPathSection), sizeof(uint8), false);
				UProperty* NewProp_UpAxisEnum = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("UpAxisEnum"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(UpAxisEnum, UMovieScene3DPathSection), 0x0000000000000001, Z_Construct_UEnum_MovieSceneTracks_MovieScene3DPathSection_Axis());
				UProperty* NewProp_FrontAxisEnum = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("FrontAxisEnum"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(FrontAxisEnum, UMovieScene3DPathSection), 0x0000000000000001, Z_Construct_UEnum_MovieSceneTracks_MovieScene3DPathSection_Axis());
				UProperty* NewProp_TimingCurve = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("TimingCurve"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(TimingCurve, UMovieScene3DPathSection), 0x0000000000000001, Z_Construct_UScriptStruct_FRichCurve());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Sections/MovieScene3DPathSection.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Sections/MovieScene3DPathSection.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("A 3D Path section"));
				MetaData->SetValue(NewProp_bForceUpright, TEXT("Category"), TEXT("Path"));
				MetaData->SetValue(NewProp_bForceUpright, TEXT("ModuleRelativePath"), TEXT("Public/Sections/MovieScene3DPathSection.h"));
				MetaData->SetValue(NewProp_bForceUpright, TEXT("ToolTip"), TEXT("Force Upright"));
				MetaData->SetValue(NewProp_bReverse, TEXT("Category"), TEXT("Path"));
				MetaData->SetValue(NewProp_bReverse, TEXT("ModuleRelativePath"), TEXT("Public/Sections/MovieScene3DPathSection.h"));
				MetaData->SetValue(NewProp_bReverse, TEXT("ToolTip"), TEXT("Reverse Timing"));
				MetaData->SetValue(NewProp_bFollow, TEXT("Category"), TEXT("Path"));
				MetaData->SetValue(NewProp_bFollow, TEXT("ModuleRelativePath"), TEXT("Public/Sections/MovieScene3DPathSection.h"));
				MetaData->SetValue(NewProp_bFollow, TEXT("ToolTip"), TEXT("Follow Curve"));
				MetaData->SetValue(NewProp_UpAxisEnum, TEXT("Category"), TEXT("Path"));
				MetaData->SetValue(NewProp_UpAxisEnum, TEXT("ModuleRelativePath"), TEXT("Public/Sections/MovieScene3DPathSection.h"));
				MetaData->SetValue(NewProp_UpAxisEnum, TEXT("ToolTip"), TEXT("Up Axis"));
				MetaData->SetValue(NewProp_FrontAxisEnum, TEXT("Category"), TEXT("Path"));
				MetaData->SetValue(NewProp_FrontAxisEnum, TEXT("ModuleRelativePath"), TEXT("Public/Sections/MovieScene3DPathSection.h"));
				MetaData->SetValue(NewProp_FrontAxisEnum, TEXT("ToolTip"), TEXT("Front Axis"));
				MetaData->SetValue(NewProp_TimingCurve, TEXT("Category"), TEXT("Path"));
				MetaData->SetValue(NewProp_TimingCurve, TEXT("ModuleRelativePath"), TEXT("Public/Sections/MovieScene3DPathSection.h"));
				MetaData->SetValue(NewProp_TimingCurve, TEXT("ToolTip"), TEXT("Timing Curve"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UMovieScene3DPathSection(Z_Construct_UClass_UMovieScene3DPathSection, TEXT("UMovieScene3DPathSection"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UMovieScene3DPathSection);
	UClass* Z_Construct_UClass_UMovieScene3DConstraintTrack_NoRegister()
	{
		return UMovieScene3DConstraintTrack::StaticClass();
	}
	UClass* Z_Construct_UClass_UMovieScene3DConstraintTrack()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UMovieSceneTrack();
			Z_Construct_UPackage_MovieSceneTracks();
			OuterClass = UMovieScene3DConstraintTrack::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_ConstraintSections = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ConstraintSections"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(ConstraintSections, UMovieScene3DConstraintTrack), 0x0000080000000000);
				UProperty* NewProp_ConstraintSections_Inner = new(EC_InternalUseOnlyConstructor, NewProp_ConstraintSections, TEXT("ConstraintSections"), RF_Public|RF_Transient|RF_Native) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UClass_UMovieSceneSection_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Tracks/MovieScene3DConstraintTrack.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Tracks/MovieScene3DConstraintTrack.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Base class for constraint tracks - tracks that are dependent upon other objects"));
				MetaData->SetValue(NewProp_ConstraintSections, TEXT("ModuleRelativePath"), TEXT("Public/Tracks/MovieScene3DConstraintTrack.h"));
				MetaData->SetValue(NewProp_ConstraintSections, TEXT("ToolTip"), TEXT("List of all constraint sections"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UMovieScene3DConstraintTrack(Z_Construct_UClass_UMovieScene3DConstraintTrack, TEXT("UMovieScene3DConstraintTrack"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UMovieScene3DConstraintTrack);
	UClass* Z_Construct_UClass_UMovieScene3DAttachTrack_NoRegister()
	{
		return UMovieScene3DAttachTrack::StaticClass();
	}
	UClass* Z_Construct_UClass_UMovieScene3DAttachTrack()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UMovieScene3DConstraintTrack();
			Z_Construct_UPackage_MovieSceneTracks();
			OuterClass = UMovieScene3DAttachTrack::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Tracks/MovieScene3DAttachTrack.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Tracks/MovieScene3DAttachTrack.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Handles manipulation of path tracks in a movie scene"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UMovieScene3DAttachTrack(Z_Construct_UClass_UMovieScene3DAttachTrack, TEXT("UMovieScene3DAttachTrack"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UMovieScene3DAttachTrack);
	UClass* Z_Construct_UClass_UMovieScene3DPathTrack_NoRegister()
	{
		return UMovieScene3DPathTrack::StaticClass();
	}
	UClass* Z_Construct_UClass_UMovieScene3DPathTrack()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UMovieScene3DConstraintTrack();
			Z_Construct_UPackage_MovieSceneTracks();
			OuterClass = UMovieScene3DPathTrack::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Tracks/MovieScene3DPathTrack.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Tracks/MovieScene3DPathTrack.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Handles manipulation of path tracks in a movie scene"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UMovieScene3DPathTrack(Z_Construct_UClass_UMovieScene3DPathTrack, TEXT("UMovieScene3DPathTrack"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UMovieScene3DPathTrack);
	UClass* Z_Construct_UClass_UMovieScene3DTransformSection_NoRegister()
	{
		return UMovieScene3DTransformSection::StaticClass();
	}
	UClass* Z_Construct_UClass_UMovieScene3DTransformSection()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UMovieSceneSection();
			Z_Construct_UPackage_MovieSceneTracks();
			OuterClass = UMovieScene3DTransformSection::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_Scale = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Scale"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Scale, UMovieScene3DTransformSection), 0x0000000000000000, Z_Construct_UScriptStruct_FRichCurve());
				NewProp_Scale->ArrayDim = CPP_ARRAY_DIM(Scale, UMovieScene3DTransformSection);
				UProperty* NewProp_Rotation = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Rotation"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Rotation, UMovieScene3DTransformSection), 0x0000000000000000, Z_Construct_UScriptStruct_FRichCurve());
				NewProp_Rotation->ArrayDim = CPP_ARRAY_DIM(Rotation, UMovieScene3DTransformSection);
				UProperty* NewProp_Translation = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Translation"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Translation, UMovieScene3DTransformSection), 0x0000000000000000, Z_Construct_UScriptStruct_FRichCurve());
				NewProp_Translation->ArrayDim = CPP_ARRAY_DIM(Translation, UMovieScene3DTransformSection);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Sections/MovieScene3DTransformSection.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Sections/MovieScene3DTransformSection.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("A 3D transform section"));
				MetaData->SetValue(NewProp_Scale, TEXT("ModuleRelativePath"), TEXT("Public/Sections/MovieScene3DTransformSection.h"));
				MetaData->SetValue(NewProp_Scale, TEXT("ToolTip"), TEXT("Scale curves"));
				MetaData->SetValue(NewProp_Rotation, TEXT("ModuleRelativePath"), TEXT("Public/Sections/MovieScene3DTransformSection.h"));
				MetaData->SetValue(NewProp_Rotation, TEXT("ToolTip"), TEXT("Rotation curves"));
				MetaData->SetValue(NewProp_Translation, TEXT("ModuleRelativePath"), TEXT("Public/Sections/MovieScene3DTransformSection.h"));
				MetaData->SetValue(NewProp_Translation, TEXT("ToolTip"), TEXT("Translation curves"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UMovieScene3DTransformSection(Z_Construct_UClass_UMovieScene3DTransformSection, TEXT("UMovieScene3DTransformSection"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UMovieScene3DTransformSection);
	UClass* Z_Construct_UClass_UMovieSceneAudioSection_NoRegister()
	{
		return UMovieSceneAudioSection::StaticClass();
	}
	UClass* Z_Construct_UClass_UMovieSceneAudioSection()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UMovieSceneSection();
			Z_Construct_UPackage_MovieSceneTracks();
			OuterClass = UMovieSceneAudioSection::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_AudioDilationFactor = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AudioDilationFactor"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(AudioDilationFactor, UMovieSceneAudioSection), 0x0000000000000001);
				UProperty* NewProp_AudioStartTime = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AudioStartTime"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(AudioStartTime, UMovieSceneAudioSection), 0x0000000000000001);
				UProperty* NewProp_Sound = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Sound"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(Sound, UMovieSceneAudioSection), 0x0000000000000001, Z_Construct_UClass_USoundBase_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Sections/MovieSceneAudioSection.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Sections/MovieSceneAudioSection.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Audio section, for use in the master audio, or by attached audio objects"));
				MetaData->SetValue(NewProp_AudioDilationFactor, TEXT("Category"), TEXT("Audio"));
				MetaData->SetValue(NewProp_AudioDilationFactor, TEXT("ModuleRelativePath"), TEXT("Public/Sections/MovieSceneAudioSection.h"));
				MetaData->SetValue(NewProp_AudioDilationFactor, TEXT("ToolTip"), TEXT("The amount which this audio is time dilated by"));
				MetaData->SetValue(NewProp_AudioStartTime, TEXT("Category"), TEXT("Audio"));
				MetaData->SetValue(NewProp_AudioStartTime, TEXT("ModuleRelativePath"), TEXT("Public/Sections/MovieSceneAudioSection.h"));
				MetaData->SetValue(NewProp_AudioStartTime, TEXT("ToolTip"), TEXT("The absolute time that the sound starts playing at"));
				MetaData->SetValue(NewProp_Sound, TEXT("Category"), TEXT("Audio"));
				MetaData->SetValue(NewProp_Sound, TEXT("ModuleRelativePath"), TEXT("Public/Sections/MovieSceneAudioSection.h"));
				MetaData->SetValue(NewProp_Sound, TEXT("ToolTip"), TEXT("The sound cue or wave that this section plays"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UMovieSceneAudioSection(Z_Construct_UClass_UMovieSceneAudioSection, TEXT("UMovieSceneAudioSection"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UMovieSceneAudioSection);
	UClass* Z_Construct_UClass_UMovieSceneAudioTrack_NoRegister()
	{
		return UMovieSceneAudioTrack::StaticClass();
	}
	UClass* Z_Construct_UClass_UMovieSceneAudioTrack()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UMovieSceneTrack();
			Z_Construct_UPackage_MovieSceneTracks();
			OuterClass = UMovieSceneAudioTrack::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_AudioSections = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AudioSections"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(AudioSections, UMovieSceneAudioTrack), 0x0000000000000000);
				UProperty* NewProp_AudioSections_Inner = new(EC_InternalUseOnlyConstructor, NewProp_AudioSections, TEXT("AudioSections"), RF_Public|RF_Transient|RF_Native) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UClass_UMovieSceneSection_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Tracks/MovieSceneAudioTrack.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Tracks/MovieSceneAudioTrack.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Handles manipulation of audio"));
				MetaData->SetValue(NewProp_AudioSections, TEXT("ModuleRelativePath"), TEXT("Public/Tracks/MovieSceneAudioTrack.h"));
				MetaData->SetValue(NewProp_AudioSections, TEXT("ToolTip"), TEXT("List of all master audio sections"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UMovieSceneAudioTrack(Z_Construct_UClass_UMovieSceneAudioTrack, TEXT("UMovieSceneAudioTrack"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UMovieSceneAudioTrack);
	UClass* Z_Construct_UClass_UMovieSceneBoolSection_NoRegister()
	{
		return UMovieSceneBoolSection::StaticClass();
	}
	UClass* Z_Construct_UClass_UMovieSceneBoolSection()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UMovieSceneSection();
			Z_Construct_UPackage_MovieSceneTracks();
			OuterClass = UMovieSceneBoolSection::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_BoolCurve = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("BoolCurve"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(BoolCurve, UMovieSceneBoolSection), 0x0000000000000001, Z_Construct_UScriptStruct_FIntegralCurve());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Sections/MovieSceneBoolSection.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Sections/MovieSceneBoolSection.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("A single bool section"));
				MetaData->SetValue(NewProp_BoolCurve, TEXT("Category"), TEXT("Curve"));
				MetaData->SetValue(NewProp_BoolCurve, TEXT("ModuleRelativePath"), TEXT("Public/Sections/MovieSceneBoolSection.h"));
				MetaData->SetValue(NewProp_BoolCurve, TEXT("ToolTip"), TEXT("Ordered curve data // @todo Sequencer This could be optimized by packing the bools separately\n// but that may not be worth the effort"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UMovieSceneBoolSection(Z_Construct_UClass_UMovieSceneBoolSection, TEXT("UMovieSceneBoolSection"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UMovieSceneBoolSection);
	UClass* Z_Construct_UClass_UMovieSceneVisibilitySection_NoRegister()
	{
		return UMovieSceneVisibilitySection::StaticClass();
	}
	UClass* Z_Construct_UClass_UMovieSceneVisibilitySection()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UMovieSceneBoolSection();
			Z_Construct_UPackage_MovieSceneTracks();
			OuterClass = UMovieSceneVisibilitySection::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Sections/MovieSceneVisibilitySection.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Sections/MovieSceneVisibilitySection.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("A single visibility section.\n\nThe property that's being tracked by this section is bHiddenInGame.\nThis custom bool track stores the inverse keys to display visibility (A green section bar means visible)."));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UMovieSceneVisibilitySection(Z_Construct_UClass_UMovieSceneVisibilitySection, TEXT("UMovieSceneVisibilitySection"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UMovieSceneVisibilitySection);
	UClass* Z_Construct_UClass_UMovieSceneByteSection_NoRegister()
	{
		return UMovieSceneByteSection::StaticClass();
	}
	UClass* Z_Construct_UClass_UMovieSceneByteSection()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UMovieSceneSection();
			Z_Construct_UPackage_MovieSceneTracks();
			OuterClass = UMovieSceneByteSection::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_ByteCurve = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ByteCurve"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(ByteCurve, UMovieSceneByteSection), 0x0000000000000001, Z_Construct_UScriptStruct_FIntegralCurve());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Sections/MovieSceneByteSection.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Sections/MovieSceneByteSection.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("A single byte section"));
				MetaData->SetValue(NewProp_ByteCurve, TEXT("Category"), TEXT("Curve"));
				MetaData->SetValue(NewProp_ByteCurve, TEXT("ModuleRelativePath"), TEXT("Public/Sections/MovieSceneByteSection.h"));
				MetaData->SetValue(NewProp_ByteCurve, TEXT("ToolTip"), TEXT("Ordered curve data // @todo Sequencer This could be optimized by packing the bytes separately\n// but that may not be worth the effort"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UMovieSceneByteSection(Z_Construct_UClass_UMovieSceneByteSection, TEXT("UMovieSceneByteSection"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UMovieSceneByteSection);
	UClass* Z_Construct_UClass_UMovieSceneColorSection_NoRegister()
	{
		return UMovieSceneColorSection::StaticClass();
	}
	UClass* Z_Construct_UClass_UMovieSceneColorSection()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UMovieSceneSection();
			Z_Construct_UPackage_MovieSceneTracks();
			OuterClass = UMovieSceneColorSection::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_AlphaCurve = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AlphaCurve"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(AlphaCurve, UMovieSceneColorSection), 0x0000000000000000, Z_Construct_UScriptStruct_FRichCurve());
				UProperty* NewProp_BlueCurve = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("BlueCurve"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(BlueCurve, UMovieSceneColorSection), 0x0000000000000000, Z_Construct_UScriptStruct_FRichCurve());
				UProperty* NewProp_GreenCurve = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("GreenCurve"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(GreenCurve, UMovieSceneColorSection), 0x0000000000000000, Z_Construct_UScriptStruct_FRichCurve());
				UProperty* NewProp_RedCurve = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("RedCurve"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(RedCurve, UMovieSceneColorSection), 0x0000000000000000, Z_Construct_UScriptStruct_FRichCurve());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Sections/MovieSceneColorSection.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Sections/MovieSceneColorSection.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("A single floating point section"));
				MetaData->SetValue(NewProp_AlphaCurve, TEXT("ModuleRelativePath"), TEXT("Public/Sections/MovieSceneColorSection.h"));
				MetaData->SetValue(NewProp_AlphaCurve, TEXT("ToolTip"), TEXT("Alpha curve data"));
				MetaData->SetValue(NewProp_BlueCurve, TEXT("ModuleRelativePath"), TEXT("Public/Sections/MovieSceneColorSection.h"));
				MetaData->SetValue(NewProp_BlueCurve, TEXT("ToolTip"), TEXT("Blue curve data"));
				MetaData->SetValue(NewProp_GreenCurve, TEXT("ModuleRelativePath"), TEXT("Public/Sections/MovieSceneColorSection.h"));
				MetaData->SetValue(NewProp_GreenCurve, TEXT("ToolTip"), TEXT("Green curve data"));
				MetaData->SetValue(NewProp_RedCurve, TEXT("ModuleRelativePath"), TEXT("Public/Sections/MovieSceneColorSection.h"));
				MetaData->SetValue(NewProp_RedCurve, TEXT("ToolTip"), TEXT("Red curve data"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UMovieSceneColorSection(Z_Construct_UClass_UMovieSceneColorSection, TEXT("UMovieSceneColorSection"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UMovieSceneColorSection);
	UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneEventSectionKey()
	{
		UPackage* Outer=Z_Construct_UPackage_MovieSceneTracks();
		extern uint32 Get_Z_Construct_UScriptStruct_FMovieSceneEventSectionKey_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("MovieSceneEventSectionKey"), sizeof(FMovieSceneEventSectionKey), Get_Z_Construct_UScriptStruct_FMovieSceneEventSectionKey_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("MovieSceneEventSectionKey"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FMovieSceneEventSectionKey>, EStructFlags(0x00000001));
			UProperty* NewProp_Time = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Time"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(Time, FMovieSceneEventSectionKey), 0x0000000000000000);
			UProperty* NewProp_EventNames = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("EventNames"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(EventNames, FMovieSceneEventSectionKey), 0x0000000000000001);
			UProperty* NewProp_EventNames_Inner = new(EC_InternalUseOnlyConstructor, NewProp_EventNames, TEXT("EventNames"), RF_Public|RF_Transient|RF_Native) UNameProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Sections/MovieSceneEventSection.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Structure for event section keys."));
			MetaData->SetValue(NewProp_Time, TEXT("ModuleRelativePath"), TEXT("Public/Sections/MovieSceneEventSection.h"));
			MetaData->SetValue(NewProp_Time, TEXT("ToolTip"), TEXT("The time at which the event should be triggered."));
			MetaData->SetValue(NewProp_EventNames, TEXT("Category"), TEXT("EventTrackKey"));
			MetaData->SetValue(NewProp_EventNames, TEXT("ModuleRelativePath"), TEXT("Public/Sections/MovieSceneEventSection.h"));
			MetaData->SetValue(NewProp_EventNames, TEXT("ToolTip"), TEXT("The names of the events to be triggered."));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMovieSceneEventSectionKey_CRC() { return 1383980972U; }
	UClass* Z_Construct_UClass_UMovieSceneEventSection_NoRegister()
	{
		return UMovieSceneEventSection::StaticClass();
	}
	UClass* Z_Construct_UClass_UMovieSceneEventSection()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UMovieSceneSection();
			Z_Construct_UPackage_MovieSceneTracks();
			OuterClass = UMovieSceneEventSection::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_Events = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Events"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Events, UMovieSceneEventSection), 0x0000000000000001, Z_Construct_UScriptStruct_FNameCurve());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Sections/MovieSceneEventSection.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Sections/MovieSceneEventSection.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Implements a section in movie scene event tracks."));
				MetaData->SetValue(NewProp_Events, TEXT("Category"), TEXT("Events"));
				MetaData->SetValue(NewProp_Events, TEXT("ModuleRelativePath"), TEXT("Public/Sections/MovieSceneEventSection.h"));
				MetaData->SetValue(NewProp_Events, TEXT("ToolTip"), TEXT("The section's keys."));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UMovieSceneEventSection(Z_Construct_UClass_UMovieSceneEventSection, TEXT("UMovieSceneEventSection"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UMovieSceneEventSection);
	UClass* Z_Construct_UClass_UMovieSceneEventTrack_NoRegister()
	{
		return UMovieSceneEventTrack::StaticClass();
	}
	UClass* Z_Construct_UClass_UMovieSceneEventTrack()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UMovieSceneTrack();
			Z_Construct_UPackage_MovieSceneTracks();
			OuterClass = UMovieSceneEventTrack::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_TrackName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("TrackName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(TrackName, UMovieSceneEventTrack), 0x0000000000000000);
				UProperty* NewProp_Sections = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Sections"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(Sections, UMovieSceneEventTrack), 0x0000000000000000);
				UProperty* NewProp_Sections_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Sections, TEXT("Sections"), RF_Public|RF_Transient|RF_Native) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UClass_UMovieSceneSection_NoRegister());
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bFireEventsWhenBackwards, UMovieSceneEventTrack, uint8);
				UProperty* NewProp_bFireEventsWhenBackwards = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bFireEventsWhenBackwards"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bFireEventsWhenBackwards, UMovieSceneEventTrack), 0x0000000000000001, CPP_BOOL_PROPERTY_BITMASK(bFireEventsWhenBackwards, UMovieSceneEventTrack), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bFireEventsWhenForwards, UMovieSceneEventTrack, uint8);
				UProperty* NewProp_bFireEventsWhenForwards = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bFireEventsWhenForwards"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bFireEventsWhenForwards, UMovieSceneEventTrack), 0x0000000000000001, CPP_BOOL_PROPERTY_BITMASK(bFireEventsWhenForwards, UMovieSceneEventTrack), sizeof(uint8), false);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Tracks/MovieSceneEventTrack.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Tracks/MovieSceneEventTrack.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Implements a movie scene track that triggers discrete events during playback."));
				MetaData->SetValue(NewProp_TrackName, TEXT("ModuleRelativePath"), TEXT("Public/Tracks/MovieSceneEventTrack.h"));
				MetaData->SetValue(NewProp_TrackName, TEXT("ToolTip"), TEXT("Name of this track."));
				MetaData->SetValue(NewProp_Sections, TEXT("ModuleRelativePath"), TEXT("Public/Tracks/MovieSceneEventTrack.h"));
				MetaData->SetValue(NewProp_Sections, TEXT("ToolTip"), TEXT("The track's sections."));
				MetaData->SetValue(NewProp_bFireEventsWhenBackwards, TEXT("Category"), TEXT("TrackEvent"));
				MetaData->SetValue(NewProp_bFireEventsWhenBackwards, TEXT("ModuleRelativePath"), TEXT("Public/Tracks/MovieSceneEventTrack.h"));
				MetaData->SetValue(NewProp_bFireEventsWhenBackwards, TEXT("ToolTip"), TEXT("If events should be fired when passed playing the sequence backwards."));
				MetaData->SetValue(NewProp_bFireEventsWhenForwards, TEXT("Category"), TEXT("TrackEvent"));
				MetaData->SetValue(NewProp_bFireEventsWhenForwards, TEXT("ModuleRelativePath"), TEXT("Public/Tracks/MovieSceneEventTrack.h"));
				MetaData->SetValue(NewProp_bFireEventsWhenForwards, TEXT("ToolTip"), TEXT("If events should be fired when passed playing the sequence forwards."));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UMovieSceneEventTrack(Z_Construct_UClass_UMovieSceneEventTrack, TEXT("UMovieSceneEventTrack"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UMovieSceneEventTrack);
	UClass* Z_Construct_UClass_UMovieSceneFloatSection_NoRegister()
	{
		return UMovieSceneFloatSection::StaticClass();
	}
	UClass* Z_Construct_UClass_UMovieSceneFloatSection()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UMovieSceneSection();
			Z_Construct_UPackage_MovieSceneTracks();
			OuterClass = UMovieSceneFloatSection::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_FloatCurve = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("FloatCurve"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(FloatCurve, UMovieSceneFloatSection), 0x0000000000000001, Z_Construct_UScriptStruct_FRichCurve());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Sections/MovieSceneFloatSection.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Sections/MovieSceneFloatSection.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("A single floating point section"));
				MetaData->SetValue(NewProp_FloatCurve, TEXT("Category"), TEXT("Curve"));
				MetaData->SetValue(NewProp_FloatCurve, TEXT("ModuleRelativePath"), TEXT("Public/Sections/MovieSceneFloatSection.h"));
				MetaData->SetValue(NewProp_FloatCurve, TEXT("ToolTip"), TEXT("Curve data"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UMovieSceneFloatSection(Z_Construct_UClass_UMovieSceneFloatSection, TEXT("UMovieSceneFloatSection"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UMovieSceneFloatSection);
	UClass* Z_Construct_UClass_UMovieSceneFadeSection_NoRegister()
	{
		return UMovieSceneFadeSection::StaticClass();
	}
	UClass* Z_Construct_UClass_UMovieSceneFadeSection()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UMovieSceneFloatSection();
			Z_Construct_UPackage_MovieSceneTracks();
			OuterClass = UMovieSceneFadeSection::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bFadeAudio, UMovieSceneFadeSection, uint8);
				UProperty* NewProp_bFadeAudio = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bFadeAudio"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bFadeAudio, UMovieSceneFadeSection), 0x0000000000000001, CPP_BOOL_PROPERTY_BITMASK(bFadeAudio, UMovieSceneFadeSection), sizeof(uint8), false);
				UProperty* NewProp_FadeColor = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("FadeColor"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(FadeColor, UMovieSceneFadeSection), 0x0000000000000001, Z_Construct_UScriptStruct_FLinearColor());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Sections/MovieSceneFadeSection.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Sections/MovieSceneFadeSection.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("A single floating point section"));
				MetaData->SetValue(NewProp_bFadeAudio, TEXT("Category"), TEXT("Fade"));
				MetaData->SetValue(NewProp_bFadeAudio, TEXT("ModuleRelativePath"), TEXT("Public/Sections/MovieSceneFadeSection.h"));
				MetaData->SetValue(NewProp_bFadeAudio, TEXT("ToolTip"), TEXT("Fade audio"));
				MetaData->SetValue(NewProp_FadeColor, TEXT("Category"), TEXT("Fade"));
				MetaData->SetValue(NewProp_FadeColor, TEXT("ModuleRelativePath"), TEXT("Public/Sections/MovieSceneFadeSection.h"));
				MetaData->SetValue(NewProp_FadeColor, TEXT("ToolTip"), TEXT("Fade color"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UMovieSceneFadeSection(Z_Construct_UClass_UMovieSceneFadeSection, TEXT("UMovieSceneFadeSection"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UMovieSceneFadeSection);
	UClass* Z_Construct_UClass_UMovieSceneSlomoSection_NoRegister()
	{
		return UMovieSceneSlomoSection::StaticClass();
	}
	UClass* Z_Construct_UClass_UMovieSceneSlomoSection()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UMovieSceneFloatSection();
			Z_Construct_UPackage_MovieSceneTracks();
			OuterClass = UMovieSceneSlomoSection::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Sections/MovieSceneSlomoSection.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Sections/MovieSceneSlomoSection.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("A single floating point section"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UMovieSceneSlomoSection(Z_Construct_UClass_UMovieSceneSlomoSection, TEXT("UMovieSceneSlomoSection"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UMovieSceneSlomoSection);
	UScriptStruct* Z_Construct_UScriptStruct_FVectorParameterNameAndCurves()
	{
		UPackage* Outer=Z_Construct_UPackage_MovieSceneTracks();
		extern uint32 Get_Z_Construct_UScriptStruct_FVectorParameterNameAndCurves_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("VectorParameterNameAndCurves"), sizeof(FVectorParameterNameAndCurves), Get_Z_Construct_UScriptStruct_FVectorParameterNameAndCurves_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("VectorParameterNameAndCurves"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FVectorParameterNameAndCurves>, EStructFlags(0x00000001));
			UProperty* NewProp_AlphaCurve = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("AlphaCurve"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(AlphaCurve, FVectorParameterNameAndCurves), 0x0000000000000000, Z_Construct_UScriptStruct_FRichCurve());
			UProperty* NewProp_BlueCurve = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("BlueCurve"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(BlueCurve, FVectorParameterNameAndCurves), 0x0000000000000000, Z_Construct_UScriptStruct_FRichCurve());
			UProperty* NewProp_GreenCurve = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("GreenCurve"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(GreenCurve, FVectorParameterNameAndCurves), 0x0000000000000000, Z_Construct_UScriptStruct_FRichCurve());
			UProperty* NewProp_RedCurve = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("RedCurve"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(RedCurve, FVectorParameterNameAndCurves), 0x0000000000000000, Z_Construct_UScriptStruct_FRichCurve());
			UProperty* NewProp_Index = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Index"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(Index, FVectorParameterNameAndCurves), 0x0000000000000000);
			UProperty* NewProp_ParameterName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ParameterName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(ParameterName, FVectorParameterNameAndCurves), 0x0000000000000000);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Sections/MovieSceneMaterialParameterSection.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Structure representing an animated vector parameter and it's associated animation curve."));
			MetaData->SetValue(NewProp_AlphaCurve, TEXT("ModuleRelativePath"), TEXT("Public/Sections/MovieSceneMaterialParameterSection.h"));
			MetaData->SetValue(NewProp_AlphaCurve, TEXT("ToolTip"), TEXT("The curve which contains the animation data for the alpha component of the vector parameter."));
			MetaData->SetValue(NewProp_BlueCurve, TEXT("ModuleRelativePath"), TEXT("Public/Sections/MovieSceneMaterialParameterSection.h"));
			MetaData->SetValue(NewProp_BlueCurve, TEXT("ToolTip"), TEXT("The curve which contains the animation data for the blue component of the vector parameter."));
			MetaData->SetValue(NewProp_GreenCurve, TEXT("ModuleRelativePath"), TEXT("Public/Sections/MovieSceneMaterialParameterSection.h"));
			MetaData->SetValue(NewProp_GreenCurve, TEXT("ToolTip"), TEXT("The curve which contains the animation data for the green component of the vector parameter."));
			MetaData->SetValue(NewProp_RedCurve, TEXT("ModuleRelativePath"), TEXT("Public/Sections/MovieSceneMaterialParameterSection.h"));
			MetaData->SetValue(NewProp_RedCurve, TEXT("ToolTip"), TEXT("The curve which contains the animation data for the red component of the vector parameter."));
			MetaData->SetValue(NewProp_Index, TEXT("ModuleRelativePath"), TEXT("Public/Sections/MovieSceneMaterialParameterSection.h"));
			MetaData->SetValue(NewProp_ParameterName, TEXT("ModuleRelativePath"), TEXT("Public/Sections/MovieSceneMaterialParameterSection.h"));
			MetaData->SetValue(NewProp_ParameterName, TEXT("ToolTip"), TEXT("The name of the vector parameter which is being animated."));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FVectorParameterNameAndCurves_CRC() { return 3870711607U; }
	UScriptStruct* Z_Construct_UScriptStruct_FScalarParameterNameAndCurve()
	{
		UPackage* Outer=Z_Construct_UPackage_MovieSceneTracks();
		extern uint32 Get_Z_Construct_UScriptStruct_FScalarParameterNameAndCurve_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("ScalarParameterNameAndCurve"), sizeof(FScalarParameterNameAndCurve), Get_Z_Construct_UScriptStruct_FScalarParameterNameAndCurve_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ScalarParameterNameAndCurve"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FScalarParameterNameAndCurve>, EStructFlags(0x00000001));
			UProperty* NewProp_ParameterCurve = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ParameterCurve"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(ParameterCurve, FScalarParameterNameAndCurve), 0x0000000000000000, Z_Construct_UScriptStruct_FRichCurve());
			UProperty* NewProp_Index = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Index"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(Index, FScalarParameterNameAndCurve), 0x0000000000000000);
			UProperty* NewProp_ParameterName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ParameterName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(ParameterName, FScalarParameterNameAndCurve), 0x0000000000000000);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Sections/MovieSceneMaterialParameterSection.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Structure representing an animated scalar parameter and it's associated animation curve."));
			MetaData->SetValue(NewProp_ParameterCurve, TEXT("ModuleRelativePath"), TEXT("Public/Sections/MovieSceneMaterialParameterSection.h"));
			MetaData->SetValue(NewProp_ParameterCurve, TEXT("ToolTip"), TEXT("The curve which contains the animation data for the scalar parameter."));
			MetaData->SetValue(NewProp_Index, TEXT("ModuleRelativePath"), TEXT("Public/Sections/MovieSceneMaterialParameterSection.h"));
			MetaData->SetValue(NewProp_ParameterName, TEXT("ModuleRelativePath"), TEXT("Public/Sections/MovieSceneMaterialParameterSection.h"));
			MetaData->SetValue(NewProp_ParameterName, TEXT("ToolTip"), TEXT("The name of the scalar parameter which is being animated."));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FScalarParameterNameAndCurve_CRC() { return 872645394U; }
	UClass* Z_Construct_UClass_UMovieSceneMaterialParameterSection_NoRegister()
	{
		return UMovieSceneMaterialParameterSection::StaticClass();
	}
	UClass* Z_Construct_UClass_UMovieSceneMaterialParameterSection()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UMovieSceneSection();
			Z_Construct_UPackage_MovieSceneTracks();
			OuterClass = UMovieSceneMaterialParameterSection::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_VectorParameterNamesAndCurves = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("VectorParameterNamesAndCurves"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(VectorParameterNamesAndCurves, UMovieSceneMaterialParameterSection), 0x0000000000000000);
				UProperty* NewProp_VectorParameterNamesAndCurves_Inner = new(EC_InternalUseOnlyConstructor, NewProp_VectorParameterNamesAndCurves, TEXT("VectorParameterNamesAndCurves"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FVectorParameterNameAndCurves());
				UProperty* NewProp_ScalarParameterNamesAndCurves = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ScalarParameterNamesAndCurves"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(ScalarParameterNamesAndCurves, UMovieSceneMaterialParameterSection), 0x0000000000000000);
				UProperty* NewProp_ScalarParameterNamesAndCurves_Inner = new(EC_InternalUseOnlyConstructor, NewProp_ScalarParameterNamesAndCurves, TEXT("ScalarParameterNamesAndCurves"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FScalarParameterNameAndCurve());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Sections/MovieSceneMaterialParameterSection.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Sections/MovieSceneMaterialParameterSection.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("A movie scene section representing animation data for material parameters."));
				MetaData->SetValue(NewProp_VectorParameterNamesAndCurves, TEXT("ModuleRelativePath"), TEXT("Public/Sections/MovieSceneMaterialParameterSection.h"));
				MetaData->SetValue(NewProp_VectorParameterNamesAndCurves, TEXT("ToolTip"), TEXT("The vector parameter names and their associated curves."));
				MetaData->SetValue(NewProp_ScalarParameterNamesAndCurves, TEXT("ModuleRelativePath"), TEXT("Public/Sections/MovieSceneMaterialParameterSection.h"));
				MetaData->SetValue(NewProp_ScalarParameterNamesAndCurves, TEXT("ToolTip"), TEXT("The scalar parameter names and their associated curves."));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UMovieSceneMaterialParameterSection(Z_Construct_UClass_UMovieSceneMaterialParameterSection, TEXT("UMovieSceneMaterialParameterSection"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UMovieSceneMaterialParameterSection);
	UClass* Z_Construct_UClass_UMovieSceneMaterialTrack_NoRegister()
	{
		return UMovieSceneMaterialTrack::StaticClass();
	}
	UClass* Z_Construct_UClass_UMovieSceneMaterialTrack()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UMovieSceneTrack();
			Z_Construct_UPackage_MovieSceneTracks();
			OuterClass = UMovieSceneMaterialTrack::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_Sections = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Sections"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(Sections, UMovieSceneMaterialTrack), 0x0000000000000000);
				UProperty* NewProp_Sections_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Sections, TEXT("Sections"), RF_Public|RF_Transient|RF_Native) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UClass_UMovieSceneSection_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Tracks/MovieSceneMaterialTrack.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Tracks/MovieSceneMaterialTrack.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Handles manipulation of material parameters in a movie scene."));
				MetaData->SetValue(NewProp_Sections, TEXT("ModuleRelativePath"), TEXT("Public/Tracks/MovieSceneMaterialTrack.h"));
				MetaData->SetValue(NewProp_Sections, TEXT("ToolTip"), TEXT("The sections owned by this track ."));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UMovieSceneMaterialTrack(Z_Construct_UClass_UMovieSceneMaterialTrack, TEXT("UMovieSceneMaterialTrack"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UMovieSceneMaterialTrack);
	UClass* Z_Construct_UClass_UMovieSceneComponentMaterialTrack_NoRegister()
	{
		return UMovieSceneComponentMaterialTrack::StaticClass();
	}
	UClass* Z_Construct_UClass_UMovieSceneComponentMaterialTrack()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UMovieSceneMaterialTrack();
			Z_Construct_UPackage_MovieSceneTracks();
			OuterClass = UMovieSceneComponentMaterialTrack::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_MaterialIndex = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MaterialIndex"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(MaterialIndex, UMovieSceneComponentMaterialTrack), 0x0000000000000000);
				UProperty* NewProp_TrackName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("TrackName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(TrackName, UMovieSceneComponentMaterialTrack), 0x0000000000000000);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Tracks/MovieSceneMaterialTrack.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Tracks/MovieSceneMaterialTrack.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("A material track which is specialized for animation materials which are owned by actor components."));
				MetaData->SetValue(NewProp_MaterialIndex, TEXT("ModuleRelativePath"), TEXT("Public/Tracks/MovieSceneMaterialTrack.h"));
				MetaData->SetValue(NewProp_MaterialIndex, TEXT("ToolTip"), TEXT("The index of this material this track is animating."));
				MetaData->SetValue(NewProp_TrackName, TEXT("ModuleRelativePath"), TEXT("Public/Tracks/MovieSceneMaterialTrack.h"));
				MetaData->SetValue(NewProp_TrackName, TEXT("ToolTip"), TEXT("The name of this track ."));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UMovieSceneComponentMaterialTrack(Z_Construct_UClass_UMovieSceneComponentMaterialTrack, TEXT("UMovieSceneComponentMaterialTrack"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UMovieSceneComponentMaterialTrack);
	UEnum* Z_Construct_UEnum_MovieSceneTracks_EParticleKey()
	{
		UPackage* Outer=Z_Construct_UPackage_MovieSceneTracks();
		extern uint32 Get_Z_Construct_UEnum_MovieSceneTracks_EParticleKey_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("EParticleKey"), 0, Get_Z_Construct_UEnum_MovieSceneTracks_EParticleKey_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EParticleKey"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EParticleKey::Active")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EParticleKey::Inactive")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EParticleKey::EParticleKey_MAX")), 2));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Public/Sections/MovieSceneParticleSection.h"));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("Defines the types of particle keys."));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_MovieSceneTracks_EParticleKey_CRC() { return 362624064U; }
	UClass* Z_Construct_UClass_UMovieSceneParticleSection_NoRegister()
	{
		return UMovieSceneParticleSection::StaticClass();
	}
	UClass* Z_Construct_UClass_UMovieSceneParticleSection()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UMovieSceneSection();
			Z_Construct_UPackage_MovieSceneTracks();
			OuterClass = UMovieSceneParticleSection::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_ParticleKeys = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ParticleKeys"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(ParticleKeys, UMovieSceneParticleSection), 0x0000000000000001, Z_Construct_UScriptStruct_FIntegralCurve());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Sections/MovieSceneParticleSection.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Sections/MovieSceneParticleSection.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Particle section, for particle toggling and triggering."));
				MetaData->SetValue(NewProp_ParticleKeys, TEXT("Category"), TEXT("Particles"));
				MetaData->SetValue(NewProp_ParticleKeys, TEXT("ModuleRelativePath"), TEXT("Public/Sections/MovieSceneParticleSection.h"));
				MetaData->SetValue(NewProp_ParticleKeys, TEXT("ToolTip"), TEXT("Curve containing the particle keys."));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UMovieSceneParticleSection(Z_Construct_UClass_UMovieSceneParticleSection, TEXT("UMovieSceneParticleSection"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UMovieSceneParticleSection);
	UClass* Z_Construct_UClass_UMovieSceneParticleTrack_NoRegister()
	{
		return UMovieSceneParticleTrack::StaticClass();
	}
	UClass* Z_Construct_UClass_UMovieSceneParticleTrack()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UMovieSceneTrack();
			Z_Construct_UPackage_MovieSceneTracks();
			OuterClass = UMovieSceneParticleTrack::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_ParticleSections = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ParticleSections"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(ParticleSections, UMovieSceneParticleTrack), 0x0000000000000000);
				UProperty* NewProp_ParticleSections_Inner = new(EC_InternalUseOnlyConstructor, NewProp_ParticleSections, TEXT("ParticleSections"), RF_Public|RF_Transient|RF_Native) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UClass_UMovieSceneSection_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Tracks/MovieSceneParticleTrack.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Tracks/MovieSceneParticleTrack.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Handles triggering of particle emitters"));
				MetaData->SetValue(NewProp_ParticleSections, TEXT("ModuleRelativePath"), TEXT("Public/Tracks/MovieSceneParticleTrack.h"));
				MetaData->SetValue(NewProp_ParticleSections, TEXT("ToolTip"), TEXT("List of all particle sections"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UMovieSceneParticleTrack(Z_Construct_UClass_UMovieSceneParticleTrack, TEXT("UMovieSceneParticleTrack"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UMovieSceneParticleTrack);
	UClass* Z_Construct_UClass_UMovieScenePropertyTrack_NoRegister()
	{
		return UMovieScenePropertyTrack::StaticClass();
	}
	UClass* Z_Construct_UClass_UMovieScenePropertyTrack()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UMovieSceneTrack();
			Z_Construct_UPackage_MovieSceneTracks();
			OuterClass = UMovieScenePropertyTrack::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100081;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bSectionsAreShowable, UMovieScenePropertyTrack, bool);
				UProperty* NewProp_bSectionsAreShowable = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bSectionsAreShowable"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bSectionsAreShowable, UMovieScenePropertyTrack), 0x0000080000000000, CPP_BOOL_PROPERTY_BITMASK(bSectionsAreShowable, UMovieScenePropertyTrack), sizeof(bool), true);
				UProperty* NewProp_Sections = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Sections"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(Sections, UMovieScenePropertyTrack), 0x0000080000000000);
				UProperty* NewProp_Sections_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Sections, TEXT("Sections"), RF_Public|RF_Transient|RF_Native) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UClass_UMovieSceneSection_NoRegister());
				UProperty* NewProp_PropertyPath = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("PropertyPath"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(PropertyPath, UMovieScenePropertyTrack), 0x0000080000000000);
				UProperty* NewProp_PropertyName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("PropertyName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(PropertyName, UMovieScenePropertyTrack), 0x0000080000000000);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Tracks/MovieScenePropertyTrack.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Tracks/MovieScenePropertyTrack.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Base class for tracks that animate an object property"));
				MetaData->SetValue(NewProp_bSectionsAreShowable, TEXT("ModuleRelativePath"), TEXT("Public/Tracks/MovieScenePropertyTrack.h"));
				MetaData->SetValue(NewProp_bSectionsAreShowable, TEXT("ToolTip"), TEXT("True if this should generate a display node in Sequencer"));
				MetaData->SetValue(NewProp_Sections, TEXT("ModuleRelativePath"), TEXT("Public/Tracks/MovieScenePropertyTrack.h"));
				MetaData->SetValue(NewProp_Sections, TEXT("ToolTip"), TEXT("All the sections in this list"));
				MetaData->SetValue(NewProp_PropertyPath, TEXT("ModuleRelativePath"), TEXT("Public/Tracks/MovieScenePropertyTrack.h"));
				MetaData->SetValue(NewProp_PropertyPath, TEXT("ToolTip"), TEXT("Path to the property from the source object being changed"));
				MetaData->SetValue(NewProp_PropertyName, TEXT("ModuleRelativePath"), TEXT("Public/Tracks/MovieScenePropertyTrack.h"));
				MetaData->SetValue(NewProp_PropertyName, TEXT("ToolTip"), TEXT("Name of the property being changed"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UMovieScenePropertyTrack(Z_Construct_UClass_UMovieScenePropertyTrack, TEXT("UMovieScenePropertyTrack"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UMovieScenePropertyTrack);
	UClass* Z_Construct_UClass_UMovieScene3DTransformTrack_NoRegister()
	{
		return UMovieScene3DTransformTrack::StaticClass();
	}
	UClass* Z_Construct_UClass_UMovieScene3DTransformTrack()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UMovieScenePropertyTrack();
			Z_Construct_UPackage_MovieSceneTracks();
			OuterClass = UMovieScene3DTransformTrack::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Tracks/MovieScene3DTransformTrack.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Tracks/MovieScene3DTransformTrack.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Handles manipulation of component transforms in a movie scene"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UMovieScene3DTransformTrack(Z_Construct_UClass_UMovieScene3DTransformTrack, TEXT("UMovieScene3DTransformTrack"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UMovieScene3DTransformTrack);
	UClass* Z_Construct_UClass_UMovieSceneBoolTrack_NoRegister()
	{
		return UMovieSceneBoolTrack::StaticClass();
	}
	UClass* Z_Construct_UClass_UMovieSceneBoolTrack()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UMovieScenePropertyTrack();
			Z_Construct_UPackage_MovieSceneTracks();
			OuterClass = UMovieSceneBoolTrack::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Tracks/MovieSceneBoolTrack.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Tracks/MovieSceneBoolTrack.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Handles manipulation of float properties in a movie scene"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UMovieSceneBoolTrack(Z_Construct_UClass_UMovieSceneBoolTrack, TEXT("UMovieSceneBoolTrack"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UMovieSceneBoolTrack);
	UClass* Z_Construct_UClass_UMovieSceneVisibilityTrack_NoRegister()
	{
		return UMovieSceneVisibilityTrack::StaticClass();
	}
	UClass* Z_Construct_UClass_UMovieSceneVisibilityTrack()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UMovieSceneBoolTrack();
			Z_Construct_UPackage_MovieSceneTracks();
			OuterClass = UMovieSceneVisibilityTrack::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Tracks/MovieSceneVisibilityTrack.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Tracks/MovieSceneVisibilityTrack.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Handles manipulation of visibility properties in a movie scene"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UMovieSceneVisibilityTrack(Z_Construct_UClass_UMovieSceneVisibilityTrack, TEXT("UMovieSceneVisibilityTrack"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UMovieSceneVisibilityTrack);
	UClass* Z_Construct_UClass_UMovieSceneByteTrack_NoRegister()
	{
		return UMovieSceneByteTrack::StaticClass();
	}
	UClass* Z_Construct_UClass_UMovieSceneByteTrack()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UMovieScenePropertyTrack();
			Z_Construct_UPackage_MovieSceneTracks();
			OuterClass = UMovieSceneByteTrack::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_Enum = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Enum"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(Enum, UMovieSceneByteTrack), 0x0000080000000000, UEnum::StaticClass());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Tracks/MovieSceneByteTrack.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Tracks/MovieSceneByteTrack.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Handles manipulation of byte properties in a movie scene"));
				MetaData->SetValue(NewProp_Enum, TEXT("ModuleRelativePath"), TEXT("Public/Tracks/MovieSceneByteTrack.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UMovieSceneByteTrack(Z_Construct_UClass_UMovieSceneByteTrack, TEXT("UMovieSceneByteTrack"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UMovieSceneByteTrack);
	UClass* Z_Construct_UClass_UMovieSceneColorTrack_NoRegister()
	{
		return UMovieSceneColorTrack::StaticClass();
	}
	UClass* Z_Construct_UClass_UMovieSceneColorTrack()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UMovieScenePropertyTrack();
			Z_Construct_UPackage_MovieSceneTracks();
			OuterClass = UMovieSceneColorTrack::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bIsSlateColor_DEPRECATED, UMovieSceneColorTrack, bool);
				UProperty* NewProp_bIsSlateColor = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bIsSlateColor"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bIsSlateColor_DEPRECATED, UMovieSceneColorTrack), 0x0000000020000000, CPP_BOOL_PROPERTY_BITMASK(bIsSlateColor_DEPRECATED, UMovieSceneColorTrack), sizeof(bool), true);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Tracks/MovieSceneColorTrack.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Tracks/MovieSceneColorTrack.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Handles manipulation of float properties in a movie scene"));
				MetaData->SetValue(NewProp_bIsSlateColor, TEXT("ModuleRelativePath"), TEXT("Public/Tracks/MovieSceneColorTrack.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UMovieSceneColorTrack(Z_Construct_UClass_UMovieSceneColorTrack, TEXT("UMovieSceneColorTrack"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UMovieSceneColorTrack);
	UClass* Z_Construct_UClass_UMovieSceneFloatTrack_NoRegister()
	{
		return UMovieSceneFloatTrack::StaticClass();
	}
	UClass* Z_Construct_UClass_UMovieSceneFloatTrack()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UMovieScenePropertyTrack();
			Z_Construct_UPackage_MovieSceneTracks();
			OuterClass = UMovieSceneFloatTrack::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Tracks/MovieSceneFloatTrack.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Tracks/MovieSceneFloatTrack.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Handles manipulation of float properties in a movie scene"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UMovieSceneFloatTrack(Z_Construct_UClass_UMovieSceneFloatTrack, TEXT("UMovieSceneFloatTrack"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UMovieSceneFloatTrack);
	UClass* Z_Construct_UClass_UMovieSceneFadeTrack_NoRegister()
	{
		return UMovieSceneFadeTrack::StaticClass();
	}
	UClass* Z_Construct_UClass_UMovieSceneFadeTrack()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UMovieSceneFloatTrack();
			Z_Construct_UPackage_MovieSceneTracks();
			OuterClass = UMovieSceneFadeTrack::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Tracks/MovieSceneFadeTrack.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Tracks/MovieSceneFadeTrack.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Implements a movie scene track that controls a fade."));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UMovieSceneFadeTrack(Z_Construct_UClass_UMovieSceneFadeTrack, TEXT("UMovieSceneFadeTrack"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UMovieSceneFadeTrack);
	UClass* Z_Construct_UClass_UMovieSceneSlomoTrack_NoRegister()
	{
		return UMovieSceneSlomoTrack::StaticClass();
	}
	UClass* Z_Construct_UClass_UMovieSceneSlomoTrack()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UMovieSceneFloatTrack();
			Z_Construct_UPackage_MovieSceneTracks();
			OuterClass = UMovieSceneSlomoTrack::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Tracks/MovieSceneSlomoTrack.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Tracks/MovieSceneSlomoTrack.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Implements a movie scene track that controls a movie scene's playback speed."));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UMovieSceneSlomoTrack(Z_Construct_UClass_UMovieSceneSlomoTrack, TEXT("UMovieSceneSlomoTrack"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UMovieSceneSlomoTrack);
	UClass* Z_Construct_UClass_UMovieSceneVectorTrack_NoRegister()
	{
		return UMovieSceneVectorTrack::StaticClass();
	}
	UClass* Z_Construct_UClass_UMovieSceneVectorTrack()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UMovieScenePropertyTrack();
			Z_Construct_UPackage_MovieSceneTracks();
			OuterClass = UMovieSceneVectorTrack::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_NumChannelsUsed = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("NumChannelsUsed"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(NumChannelsUsed, UMovieSceneVectorTrack), 0x0000000000000000);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Tracks/MovieSceneVectorTrack.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Tracks/MovieSceneVectorTrack.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Handles manipulation of component transforms in a movie scene"));
				MetaData->SetValue(NewProp_NumChannelsUsed, TEXT("ModuleRelativePath"), TEXT("Public/Tracks/MovieSceneVectorTrack.h"));
				MetaData->SetValue(NewProp_NumChannelsUsed, TEXT("ToolTip"), TEXT("The number of channels used by the vector (2,3, or 4)"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UMovieSceneVectorTrack(Z_Construct_UClass_UMovieSceneVectorTrack, TEXT("UMovieSceneVectorTrack"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UMovieSceneVectorTrack);
	UClass* Z_Construct_UClass_UMovieSceneSkeletalAnimationSection_NoRegister()
	{
		return UMovieSceneSkeletalAnimationSection::StaticClass();
	}
	UClass* Z_Construct_UClass_UMovieSceneSkeletalAnimationSection()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UMovieSceneSection();
			Z_Construct_UPackage_MovieSceneTracks();
			OuterClass = UMovieSceneSkeletalAnimationSection::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_AnimationDilationFactor = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AnimationDilationFactor"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(AnimationDilationFactor, UMovieSceneSkeletalAnimationSection), 0x0000000000000001);
				UProperty* NewProp_AnimationStartTime = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AnimationStartTime"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(AnimationStartTime, UMovieSceneSkeletalAnimationSection), 0x0000000000000001);
				UProperty* NewProp_AnimSequence = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AnimSequence"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(AnimSequence, UMovieSceneSkeletalAnimationSection), 0x0000000000000001, Z_Construct_UClass_UAnimSequence_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Sections/MovieSceneSkeletalAnimationSection.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Sections/MovieSceneSkeletalAnimationSection.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Audio section, for use in the master audio, or by attached audio objects"));
				MetaData->SetValue(NewProp_AnimationDilationFactor, TEXT("Category"), TEXT("Animation"));
				MetaData->SetValue(NewProp_AnimationDilationFactor, TEXT("ModuleRelativePath"), TEXT("Public/Sections/MovieSceneSkeletalAnimationSection.h"));
				MetaData->SetValue(NewProp_AnimationDilationFactor, TEXT("ToolTip"), TEXT("The amount which this animation is time dilated by"));
				MetaData->SetValue(NewProp_AnimationStartTime, TEXT("Category"), TEXT("Animation"));
				MetaData->SetValue(NewProp_AnimationStartTime, TEXT("ModuleRelativePath"), TEXT("Public/Sections/MovieSceneSkeletalAnimationSection.h"));
				MetaData->SetValue(NewProp_AnimationStartTime, TEXT("ToolTip"), TEXT("The absolute time that the animation starts playing at"));
				MetaData->SetValue(NewProp_AnimSequence, TEXT("Category"), TEXT("Animation"));
				MetaData->SetValue(NewProp_AnimSequence, TEXT("ModuleRelativePath"), TEXT("Public/Sections/MovieSceneSkeletalAnimationSection.h"));
				MetaData->SetValue(NewProp_AnimSequence, TEXT("ToolTip"), TEXT("The animation sequence this section has"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UMovieSceneSkeletalAnimationSection(Z_Construct_UClass_UMovieSceneSkeletalAnimationSection, TEXT("UMovieSceneSkeletalAnimationSection"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UMovieSceneSkeletalAnimationSection);
	UClass* Z_Construct_UClass_UMovieSceneSkeletalAnimationTrack_NoRegister()
	{
		return UMovieSceneSkeletalAnimationTrack::StaticClass();
	}
	UClass* Z_Construct_UClass_UMovieSceneSkeletalAnimationTrack()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UMovieSceneTrack();
			Z_Construct_UPackage_MovieSceneTracks();
			OuterClass = UMovieSceneSkeletalAnimationTrack::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_AnimationSections = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AnimationSections"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(AnimationSections, UMovieSceneSkeletalAnimationTrack), 0x0000000000000000);
				UProperty* NewProp_AnimationSections_Inner = new(EC_InternalUseOnlyConstructor, NewProp_AnimationSections, TEXT("AnimationSections"), RF_Public|RF_Transient|RF_Native) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UClass_UMovieSceneSection_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Tracks/MovieSceneSkeletalAnimationTrack.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Tracks/MovieSceneSkeletalAnimationTrack.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Handles animation of skeletal mesh actors"));
				MetaData->SetValue(NewProp_AnimationSections, TEXT("ModuleRelativePath"), TEXT("Public/Tracks/MovieSceneSkeletalAnimationTrack.h"));
				MetaData->SetValue(NewProp_AnimationSections, TEXT("ToolTip"), TEXT("List of all animation sections"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UMovieSceneSkeletalAnimationTrack(Z_Construct_UClass_UMovieSceneSkeletalAnimationTrack, TEXT("UMovieSceneSkeletalAnimationTrack"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UMovieSceneSkeletalAnimationTrack);
	UClass* Z_Construct_UClass_UMovieSceneVectorSection_NoRegister()
	{
		return UMovieSceneVectorSection::StaticClass();
	}
	UClass* Z_Construct_UClass_UMovieSceneVectorSection()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UMovieSceneSection();
			Z_Construct_UPackage_MovieSceneTracks();
			OuterClass = UMovieSceneVectorSection::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_ChannelsUsed = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ChannelsUsed"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(ChannelsUsed, UMovieSceneVectorSection), 0x0000000000000000);
				UProperty* NewProp_Curves = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Curves"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Curves, UMovieSceneVectorSection), 0x0000000000000000, Z_Construct_UScriptStruct_FRichCurve());
				NewProp_Curves->ArrayDim = CPP_ARRAY_DIM(Curves, UMovieSceneVectorSection);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Sections/MovieSceneVectorSection.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Sections/MovieSceneVectorSection.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("A vector section"));
				MetaData->SetValue(NewProp_ChannelsUsed, TEXT("ModuleRelativePath"), TEXT("Public/Sections/MovieSceneVectorSection.h"));
				MetaData->SetValue(NewProp_ChannelsUsed, TEXT("ToolTip"), TEXT("How many curves are actually used"));
				MetaData->SetValue(NewProp_Curves, TEXT("ModuleRelativePath"), TEXT("Public/Sections/MovieSceneVectorSection.h"));
				MetaData->SetValue(NewProp_Curves, TEXT("ToolTip"), TEXT("Vector t"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UMovieSceneVectorSection(Z_Construct_UClass_UMovieSceneVectorSection, TEXT("UMovieSceneVectorSection"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UMovieSceneVectorSection);
	UClass* Z_Construct_UClass_USubMovieSceneSection_NoRegister()
	{
		return USubMovieSceneSection::StaticClass();
	}
	UClass* Z_Construct_UClass_USubMovieSceneSection()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UMovieSceneSection();
			Z_Construct_UPackage_MovieSceneTracks();
			OuterClass = USubMovieSceneSection::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_Sequence = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Sequence"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(Sequence, USubMovieSceneSection), 0x0000000000000000, Z_Construct_UClass_UMovieSceneSequence_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Sections/SubMovieSceneSection.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Sections/SubMovieSceneSection.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("A container for a movie scene within a movie scene"));
				MetaData->SetValue(NewProp_Sequence, TEXT("ModuleRelativePath"), TEXT("Public/Sections/SubMovieSceneSection.h"));
				MetaData->SetValue(NewProp_Sequence, TEXT("ToolTip"), TEXT("@todo Sequencer: Should this be lazy loaded?"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_USubMovieSceneSection(Z_Construct_UClass_USubMovieSceneSection, TEXT("USubMovieSceneSection"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(USubMovieSceneSection);
	UClass* Z_Construct_UClass_UMovieSceneShotSection_NoRegister()
	{
		return UMovieSceneShotSection::StaticClass();
	}
	UClass* Z_Construct_UClass_UMovieSceneShotSection()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_USubMovieSceneSection();
			Z_Construct_UPackage_MovieSceneTracks();
			OuterClass = UMovieSceneShotSection::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_ShotNumber = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ShotNumber"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(ShotNumber, UMovieSceneShotSection), 0x0000000000000000);
				UProperty* NewProp_DisplayName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("DisplayName"), RF_Public|RF_Transient|RF_Native) UTextProperty(CPP_PROPERTY_BASE(DisplayName, UMovieSceneShotSection), 0x0000000000000000);
				UProperty* NewProp_CameraGuid = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CameraGuid"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(CameraGuid, UMovieSceneShotSection), 0x0000000000000000, Z_Construct_UScriptStruct_FGuid());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Sections/MovieSceneShotSection.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Sections/MovieSceneShotSection.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Movie shots are sections on the shots track, that show what the viewer \"sees\""));
				MetaData->SetValue(NewProp_ShotNumber, TEXT("ModuleRelativePath"), TEXT("Public/Sections/MovieSceneShotSection.h"));
				MetaData->SetValue(NewProp_ShotNumber, TEXT("ToolTip"), TEXT("The Shot number.  Shot numbers are generally part of the display name but is stored seperatley so we can use it to generate subsequent shot numbers"));
				MetaData->SetValue(NewProp_DisplayName, TEXT("ModuleRelativePath"), TEXT("Public/Sections/MovieSceneShotSection.h"));
				MetaData->SetValue(NewProp_DisplayName, TEXT("ToolTip"), TEXT("The shot's display name"));
				MetaData->SetValue(NewProp_CameraGuid, TEXT("ModuleRelativePath"), TEXT("Public/Sections/MovieSceneShotSection.h"));
				MetaData->SetValue(NewProp_CameraGuid, TEXT("ToolTip"), TEXT("The camera possessable or spawnable that this movie shot uses"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UMovieSceneShotSection(Z_Construct_UClass_UMovieSceneShotSection, TEXT("UMovieSceneShotSection"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UMovieSceneShotSection);
	UClass* Z_Construct_UClass_USubMovieSceneTrack_NoRegister()
	{
		return USubMovieSceneTrack::StaticClass();
	}
	UClass* Z_Construct_UClass_USubMovieSceneTrack()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UMovieSceneTrack();
			Z_Construct_UPackage_MovieSceneTracks();
			OuterClass = USubMovieSceneTrack::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_SubMovieSceneSections = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SubMovieSceneSections"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(SubMovieSceneSections, USubMovieSceneTrack), 0x0000080000000000);
				UProperty* NewProp_SubMovieSceneSections_Inner = new(EC_InternalUseOnlyConstructor, NewProp_SubMovieSceneSections, TEXT("SubMovieSceneSections"), RF_Public|RF_Transient|RF_Native) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UClass_UMovieSceneSection_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Tracks/SubMovieSceneTrack.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Tracks/SubMovieSceneTrack.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("A track that holds a sub-sequence within a larger sequence"));
				MetaData->SetValue(NewProp_SubMovieSceneSections, TEXT("ModuleRelativePath"), TEXT("Public/Tracks/SubMovieSceneTrack.h"));
				MetaData->SetValue(NewProp_SubMovieSceneSections, TEXT("ToolTip"), TEXT("All movie scene sections."));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_USubMovieSceneTrack(Z_Construct_UClass_USubMovieSceneTrack, TEXT("USubMovieSceneTrack"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(USubMovieSceneTrack);
	UClass* Z_Construct_UClass_UMovieSceneShotTrack_NoRegister()
	{
		return UMovieSceneShotTrack::StaticClass();
	}
	UClass* Z_Construct_UClass_UMovieSceneShotTrack()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_USubMovieSceneTrack();
			Z_Construct_UPackage_MovieSceneTracks();
			OuterClass = UMovieSceneShotTrack::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Tracks/MovieSceneShotTrack.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Tracks/MovieSceneShotTrack.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Handles manipulation of shot properties in a movie scene"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UMovieSceneShotTrack(Z_Construct_UClass_UMovieSceneShotTrack, TEXT("UMovieSceneShotTrack"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UMovieSceneShotTrack);
	UPackage* Z_Construct_UPackage_MovieSceneTracks()
	{
		static UPackage* ReturnPackage = NULL;
		if (!ReturnPackage)
		{
			ReturnPackage = CastChecked<UPackage>(StaticFindObjectFast(UPackage::StaticClass(), NULL, FName(TEXT("/Script/MovieSceneTracks")), false, false));
			ReturnPackage->SetPackageFlags(PKG_CompiledIn | 0x00000000);
			FGuid Guid;
			Guid.A = 0x287FA8B3;
			Guid.B = 0x20FFA8C7;
			Guid.C = 0x00000000;
			Guid.D = 0x00000000;
			ReturnPackage->SetGuid(Guid);

		}
		return ReturnPackage;
	}
#endif

PRAGMA_ENABLE_DEPRECATION_WARNINGS
