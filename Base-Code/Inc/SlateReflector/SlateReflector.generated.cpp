// Copyright 1998-2015 Epic Games, Inc. All Rights Reserved.
/*===========================================================================
	Boilerplate C++ definitions for a single module.
	This is automatically generated by UnrealHeaderTool.
	DO NOT modify this manually! Edit the corresponding .h files instead!
===========================================================================*/

#include "Private/SlateReflectorPrivatePCH.h"
#include "SlateReflector.generated.dep.h"
PRAGMA_DISABLE_DEPRECATION_WARNINGS
void EmptyLinkFunctionForGeneratedCodeSlateReflector() {}
	void UWidgetReflectorNodeBase::StaticRegisterNativesUWidgetReflectorNodeBase()
	{
	}
	IMPLEMENT_CLASS(UWidgetReflectorNodeBase, 2062446535);
	void ULiveWidgetReflectorNode::StaticRegisterNativesULiveWidgetReflectorNode()
	{
	}
	IMPLEMENT_CLASS(ULiveWidgetReflectorNode, 1480924573);
	void USnapshotWidgetReflectorNode::StaticRegisterNativesUSnapshotWidgetReflectorNode()
	{
	}
	IMPLEMENT_CLASS(USnapshotWidgetReflectorNode, 3115401034);
#if USE_COMPILED_IN_NATIVES
// Cross Module References
	COREUOBJECT_API class UClass* Z_Construct_UClass_UObject();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FLinearColor();
	SLATECORE_API class UScriptStruct* Z_Construct_UScriptStruct_FGeometry();
	SLATECORE_API class UScriptStruct* Z_Construct_UScriptStruct_FSlateColor();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FVector2D();

	SLATEREFLECTOR_API class UClass* Z_Construct_UClass_UWidgetReflectorNodeBase_NoRegister();
	SLATEREFLECTOR_API class UClass* Z_Construct_UClass_UWidgetReflectorNodeBase();
	SLATEREFLECTOR_API class UClass* Z_Construct_UClass_ULiveWidgetReflectorNode_NoRegister();
	SLATEREFLECTOR_API class UClass* Z_Construct_UClass_ULiveWidgetReflectorNode();
	SLATEREFLECTOR_API class UClass* Z_Construct_UClass_USnapshotWidgetReflectorNode_NoRegister();
	SLATEREFLECTOR_API class UClass* Z_Construct_UClass_USnapshotWidgetReflectorNode();
	SLATEREFLECTOR_API class UPackage* Z_Construct_UPackage_SlateReflector();
	UClass* Z_Construct_UClass_UWidgetReflectorNodeBase_NoRegister()
	{
		return UWidgetReflectorNodeBase::StaticClass();
	}
	UClass* Z_Construct_UClass_UWidgetReflectorNodeBase()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage_SlateReflector();
			OuterClass = UWidgetReflectorNodeBase::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_Tint = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Tint"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Tint, UWidgetReflectorNodeBase), 0x0000080000000000, Z_Construct_UScriptStruct_FLinearColor());
				UProperty* NewProp_ChildNodes = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ChildNodes"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(ChildNodes, UWidgetReflectorNodeBase), 0x0000080000000000);
				UProperty* NewProp_ChildNodes_Inner = new(EC_InternalUseOnlyConstructor, NewProp_ChildNodes, TEXT("ChildNodes"), RF_Public|RF_Transient|RF_Native) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UClass_UWidgetReflectorNodeBase_NoRegister());
				UProperty* NewProp_Geometry = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Geometry"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Geometry, UWidgetReflectorNodeBase), 0x0000080000000000, Z_Construct_UScriptStruct_FGeometry());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Models/WidgetReflectorNode.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/Models/WidgetReflectorNode.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("A widget reflector node that contains the interface and basic data required by both live and snapshot nodes"));
				MetaData->SetValue(NewProp_Tint, TEXT("ModuleRelativePath"), TEXT("Private/Models/WidgetReflectorNode.h"));
				MetaData->SetValue(NewProp_Tint, TEXT("ToolTip"), TEXT("A tint that is applied to text in order to provide visual hints"));
				MetaData->SetValue(NewProp_ChildNodes, TEXT("ModuleRelativePath"), TEXT("Private/Models/WidgetReflectorNode.h"));
				MetaData->SetValue(NewProp_ChildNodes, TEXT("ToolTip"), TEXT("Node entries for the widget's children"));
				MetaData->SetValue(NewProp_Geometry, TEXT("ModuleRelativePath"), TEXT("Private/Models/WidgetReflectorNode.h"));
				MetaData->SetValue(NewProp_Geometry, TEXT("ToolTip"), TEXT("The geometry of the widget"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UWidgetReflectorNodeBase(Z_Construct_UClass_UWidgetReflectorNodeBase, TEXT("UWidgetReflectorNodeBase"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UWidgetReflectorNodeBase);
	UClass* Z_Construct_UClass_ULiveWidgetReflectorNode_NoRegister()
	{
		return ULiveWidgetReflectorNode::StaticClass();
	}
	UClass* Z_Construct_UClass_ULiveWidgetReflectorNode()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UWidgetReflectorNodeBase();
			Z_Construct_UPackage_SlateReflector();
			OuterClass = ULiveWidgetReflectorNode::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Models/WidgetReflectorNode.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/Models/WidgetReflectorNode.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("A widget reflector node that holds on to the widget it references so that certain properties can be updated live"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_ULiveWidgetReflectorNode(Z_Construct_UClass_ULiveWidgetReflectorNode, TEXT("ULiveWidgetReflectorNode"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(ULiveWidgetReflectorNode);
	UClass* Z_Construct_UClass_USnapshotWidgetReflectorNode_NoRegister()
	{
		return USnapshotWidgetReflectorNode::StaticClass();
	}
	UClass* Z_Construct_UClass_USnapshotWidgetReflectorNode()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UWidgetReflectorNodeBase();
			Z_Construct_UPackage_SlateReflector();
			OuterClass = USnapshotWidgetReflectorNode::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(CachedWidgetEnabled, USnapshotWidgetReflectorNode, bool);
				UProperty* NewProp_CachedWidgetEnabled = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CachedWidgetEnabled"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(CachedWidgetEnabled, USnapshotWidgetReflectorNode), 0x0000000000000000, CPP_BOOL_PROPERTY_BITMASK(CachedWidgetEnabled, USnapshotWidgetReflectorNode), sizeof(bool), true);
				UProperty* NewProp_CachedWidgetAddress = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CachedWidgetAddress"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(CachedWidgetAddress, USnapshotWidgetReflectorNode), 0x0000000000000000);
				UProperty* NewProp_CachedWidgetForegroundColor = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CachedWidgetForegroundColor"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(CachedWidgetForegroundColor, USnapshotWidgetReflectorNode), 0x0000000000000000, Z_Construct_UScriptStruct_FSlateColor());
				UProperty* NewProp_CachedWidgetDesiredSize = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CachedWidgetDesiredSize"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(CachedWidgetDesiredSize, USnapshotWidgetReflectorNode), 0x0000000000000000, Z_Construct_UScriptStruct_FVector2D());
				UProperty* NewProp_CachedWidgetAssetName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CachedWidgetAssetName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(CachedWidgetAssetName, USnapshotWidgetReflectorNode), 0x0000000000000000);
				UProperty* NewProp_CachedWidgetLineNumber = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CachedWidgetLineNumber"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(CachedWidgetLineNumber, USnapshotWidgetReflectorNode), 0x0000000000000000);
				UProperty* NewProp_CachedWidgetFile = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CachedWidgetFile"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(CachedWidgetFile, USnapshotWidgetReflectorNode), 0x0000000000000000);
				UProperty* NewProp_CachedWidgetReadableLocation = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CachedWidgetReadableLocation"), RF_Public|RF_Transient|RF_Native) UTextProperty(CPP_PROPERTY_BASE(CachedWidgetReadableLocation, USnapshotWidgetReflectorNode), 0x0000000000000000);
				UProperty* NewProp_CachedWidgetVisibilityText = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CachedWidgetVisibilityText"), RF_Public|RF_Transient|RF_Native) UTextProperty(CPP_PROPERTY_BASE(CachedWidgetVisibilityText, USnapshotWidgetReflectorNode), 0x0000000000000000);
				UProperty* NewProp_CachedWidgetType = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CachedWidgetType"), RF_Public|RF_Transient|RF_Native) UTextProperty(CPP_PROPERTY_BASE(CachedWidgetType, USnapshotWidgetReflectorNode), 0x0000000000000000);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Models/WidgetReflectorNode.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/Models/WidgetReflectorNode.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("A widget reflector node that holds the widget information from a snapshot at a given point in time"));
				MetaData->SetValue(NewProp_CachedWidgetEnabled, TEXT("ModuleRelativePath"), TEXT("Private/Models/WidgetReflectorNode.h"));
				MetaData->SetValue(NewProp_CachedWidgetEnabled, TEXT("ToolTip"), TEXT("The enabled state of the widget at the point it was passed to Initialize"));
				MetaData->SetValue(NewProp_CachedWidgetAddress, TEXT("ModuleRelativePath"), TEXT("Private/Models/WidgetReflectorNode.h"));
				MetaData->SetValue(NewProp_CachedWidgetAddress, TEXT("ToolTip"), TEXT("The in-memory address of the widget at the point it was passed to Initialize"));
				MetaData->SetValue(NewProp_CachedWidgetForegroundColor, TEXT("ModuleRelativePath"), TEXT("Private/Models/WidgetReflectorNode.h"));
				MetaData->SetValue(NewProp_CachedWidgetForegroundColor, TEXT("ToolTip"), TEXT("The foreground color of the widget at the point it was passed to Initialize"));
				MetaData->SetValue(NewProp_CachedWidgetDesiredSize, TEXT("ModuleRelativePath"), TEXT("Private/Models/WidgetReflectorNode.h"));
				MetaData->SetValue(NewProp_CachedWidgetDesiredSize, TEXT("ToolTip"), TEXT("The desired size of the widget at the point it was passed to Initialize"));
				MetaData->SetValue(NewProp_CachedWidgetAssetName, TEXT("ModuleRelativePath"), TEXT("Private/Models/WidgetReflectorNode.h"));
				MetaData->SetValue(NewProp_CachedWidgetAssetName, TEXT("ToolTip"), TEXT("The name of the asset that the widget was created from at the point it was passed to Initialize (for UMG widgets)"));
				MetaData->SetValue(NewProp_CachedWidgetLineNumber, TEXT("ModuleRelativePath"), TEXT("Private/Models/WidgetReflectorNode.h"));
				MetaData->SetValue(NewProp_CachedWidgetLineNumber, TEXT("ToolTip"), TEXT("The line number of the file that the widget was created from at the point it was passed to Initialize (for C++ widgets)"));
				MetaData->SetValue(NewProp_CachedWidgetFile, TEXT("ModuleRelativePath"), TEXT("Private/Models/WidgetReflectorNode.h"));
				MetaData->SetValue(NewProp_CachedWidgetFile, TEXT("ToolTip"), TEXT("The name of the file that the widget was created from at the point it was passed to Initialize (for C++ widgets)"));
				MetaData->SetValue(NewProp_CachedWidgetReadableLocation, TEXT("ModuleRelativePath"), TEXT("Private/Models/WidgetReflectorNode.h"));
				MetaData->SetValue(NewProp_CachedWidgetReadableLocation, TEXT("ToolTip"), TEXT("The human readable location (source file for C++ widgets, asset name for UMG widgets) of the widget at the point it was passed to Initialize"));
				MetaData->SetValue(NewProp_CachedWidgetVisibilityText, TEXT("ModuleRelativePath"), TEXT("Private/Models/WidgetReflectorNode.h"));
				MetaData->SetValue(NewProp_CachedWidgetVisibilityText, TEXT("ToolTip"), TEXT("The visibility string of the widget at the point it was passed to Initialize"));
				MetaData->SetValue(NewProp_CachedWidgetType, TEXT("ModuleRelativePath"), TEXT("Private/Models/WidgetReflectorNode.h"));
				MetaData->SetValue(NewProp_CachedWidgetType, TEXT("ToolTip"), TEXT("The type string of the widget at the point it was passed to Initialize"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_USnapshotWidgetReflectorNode(Z_Construct_UClass_USnapshotWidgetReflectorNode, TEXT("USnapshotWidgetReflectorNode"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(USnapshotWidgetReflectorNode);
	UPackage* Z_Construct_UPackage_SlateReflector()
	{
		static UPackage* ReturnPackage = NULL;
		if (!ReturnPackage)
		{
			ReturnPackage = CastChecked<UPackage>(StaticFindObjectFast(UPackage::StaticClass(), NULL, FName(TEXT("/Script/SlateReflector")), false, false));
			ReturnPackage->SetPackageFlags(PKG_CompiledIn | 0x00000000);
			FGuid Guid;
			Guid.A = 0x273A2863;
			Guid.B = 0xE0D14D3B;
			Guid.C = 0x00000000;
			Guid.D = 0x00000000;
			ReturnPackage->SetGuid(Guid);

		}
		return ReturnPackage;
	}
#endif

PRAGMA_ENABLE_DEPRECATION_WARNINGS
