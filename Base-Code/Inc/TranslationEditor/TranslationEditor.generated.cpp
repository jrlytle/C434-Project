// Copyright 1998-2015 Epic Games, Inc. All Rights Reserved.
/*===========================================================================
	Boilerplate C++ definitions for a single module.
	This is automatically generated by UnrealHeaderTool.
	DO NOT modify this manually! Edit the corresponding .h files instead!
===========================================================================*/

#include "Private/TranslationEditorPrivatePCH.h"
#include "TranslationEditor.generated.dep.h"
PRAGMA_DISABLE_DEPRECATION_WARNINGS
void EmptyLinkFunctionForGeneratedCodeTranslationEditor() {}
	void UInternationalizationExportSettings::StaticRegisterNativesUInternationalizationExportSettings()
	{
	}
	IMPLEMENT_CLASS(UInternationalizationExportSettings, 2507030904);
	void UTranslationPickerSettings::StaticRegisterNativesUTranslationPickerSettings()
	{
	}
	IMPLEMENT_CLASS(UTranslationPickerSettings, 986496089);
class UScriptStruct* FTranslationContextInfo::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern TRANSLATIONEDITOR_API class UScriptStruct* Z_Construct_UScriptStruct_FTranslationContextInfo();
		extern TRANSLATIONEDITOR_API uint32 Get_Z_Construct_UScriptStruct_FTranslationContextInfo_CRC();
		extern TRANSLATIONEDITOR_API class UPackage* Z_Construct_UPackage_TranslationEditor();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FTranslationContextInfo, Z_Construct_UPackage_TranslationEditor(), TEXT("TranslationContextInfo"), sizeof(FTranslationContextInfo), Get_Z_Construct_UScriptStruct_FTranslationContextInfo_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FTranslationContextInfo(FTranslationContextInfo::StaticStruct, TEXT("/Script/TranslationEditor"));
static struct FScriptStruct_TranslationEditor_StaticRegisterNativesFTranslationContextInfo
{
	FScriptStruct_TranslationEditor_StaticRegisterNativesFTranslationContextInfo()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("TranslationContextInfo")),new UScriptStruct::TCppStructOps<FTranslationContextInfo>);
	}
} ScriptStruct_TranslationEditor_StaticRegisterNativesFTranslationContextInfo;
class UScriptStruct* FTranslationChange::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern TRANSLATIONEDITOR_API class UScriptStruct* Z_Construct_UScriptStruct_FTranslationChange();
		extern TRANSLATIONEDITOR_API uint32 Get_Z_Construct_UScriptStruct_FTranslationChange_CRC();
		extern TRANSLATIONEDITOR_API class UPackage* Z_Construct_UPackage_TranslationEditor();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FTranslationChange, Z_Construct_UPackage_TranslationEditor(), TEXT("TranslationChange"), sizeof(FTranslationChange), Get_Z_Construct_UScriptStruct_FTranslationChange_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FTranslationChange(FTranslationChange::StaticStruct, TEXT("/Script/TranslationEditor"));
static struct FScriptStruct_TranslationEditor_StaticRegisterNativesFTranslationChange
{
	FScriptStruct_TranslationEditor_StaticRegisterNativesFTranslationChange()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("TranslationChange")),new UScriptStruct::TCppStructOps<FTranslationChange>);
	}
} ScriptStruct_TranslationEditor_StaticRegisterNativesFTranslationChange;
	void UTranslationUnit::StaticRegisterNativesUTranslationUnit()
	{
	}
	IMPLEMENT_CLASS(UTranslationUnit, 1996939951);
#if USE_COMPILED_IN_NATIVES
// Cross Module References
	COREUOBJECT_API class UClass* Z_Construct_UClass_UObject();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FDateTime();

	TRANSLATIONEDITOR_API class UClass* Z_Construct_UClass_UInternationalizationExportSettings_NoRegister();
	TRANSLATIONEDITOR_API class UClass* Z_Construct_UClass_UInternationalizationExportSettings();
	TRANSLATIONEDITOR_API class UClass* Z_Construct_UClass_UTranslationPickerSettings_NoRegister();
	TRANSLATIONEDITOR_API class UClass* Z_Construct_UClass_UTranslationPickerSettings();
	TRANSLATIONEDITOR_API class UScriptStruct* Z_Construct_UScriptStruct_FTranslationContextInfo();
	TRANSLATIONEDITOR_API class UScriptStruct* Z_Construct_UScriptStruct_FTranslationChange();
	TRANSLATIONEDITOR_API class UClass* Z_Construct_UClass_UTranslationUnit_NoRegister();
	TRANSLATIONEDITOR_API class UClass* Z_Construct_UClass_UTranslationUnit();
	TRANSLATIONEDITOR_API class UPackage* Z_Construct_UPackage_TranslationEditor();
	UClass* Z_Construct_UClass_UInternationalizationExportSettings_NoRegister()
	{
		return UInternationalizationExportSettings::StaticClass();
	}
	UClass* Z_Construct_UClass_UInternationalizationExportSettings()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage_TranslationEditor();
			OuterClass = UInternationalizationExportSettings::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080084;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bUseCultureDirectory, UInternationalizationExportSettings, bool);
				UProperty* NewProp_bUseCultureDirectory = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bUseCultureDirectory"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bUseCultureDirectory, UInternationalizationExportSettings), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(bUseCultureDirectory, UInternationalizationExportSettings), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bImportLoc, UInternationalizationExportSettings, bool);
				UProperty* NewProp_bImportLoc = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bImportLoc"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bImportLoc, UInternationalizationExportSettings), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(bImportLoc, UInternationalizationExportSettings), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bExportLoc, UInternationalizationExportSettings, bool);
				UProperty* NewProp_bExportLoc = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bExportLoc"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bExportLoc, UInternationalizationExportSettings), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(bExportLoc, UInternationalizationExportSettings), sizeof(bool), true);
				UProperty* NewProp_ArchiveName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ArchiveName"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(ArchiveName, UInternationalizationExportSettings), 0x0000000000004001);
				UProperty* NewProp_ManifestName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ManifestName"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(ManifestName, UInternationalizationExportSettings), 0x0000000000004001);
				UProperty* NewProp_PortableObjectName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("PortableObjectName"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(PortableObjectName, UInternationalizationExportSettings), 0x0000000000004001);
				UProperty* NewProp_DestinationPath = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("DestinationPath"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(DestinationPath, UInternationalizationExportSettings), 0x0000000000004001);
				UProperty* NewProp_SourcePath = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SourcePath"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(SourcePath, UInternationalizationExportSettings), 0x0000000000004001);
				UProperty* NewProp_CommandletClass = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CommandletClass"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(CommandletClass, UInternationalizationExportSettings), 0x0000000000004001);
				UProperty* NewProp_CulturesToGenerate = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CulturesToGenerate"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(CulturesToGenerate, UInternationalizationExportSettings), 0x0000000000004001);
				UProperty* NewProp_CulturesToGenerate_Inner = new(EC_InternalUseOnlyConstructor, NewProp_CulturesToGenerate, TEXT("CulturesToGenerate"), RF_Public|RF_Transient|RF_Native) UStrProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000004000);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->ClassConfigName = FName(TEXT("InternationalizationExport"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("InternationalizationExportSettings.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/InternationalizationExportSettings.h"));
				MetaData->SetValue(NewProp_bUseCultureDirectory, TEXT("Category"), TEXT("GatherTextStep"));
				MetaData->SetValue(NewProp_bUseCultureDirectory, TEXT("ModuleRelativePath"), TEXT("Private/InternationalizationExportSettings.h"));
				MetaData->SetValue(NewProp_bUseCultureDirectory, TEXT("ToolTip"), TEXT("Whether or not to use culture path"));
				MetaData->SetValue(NewProp_bImportLoc, TEXT("Category"), TEXT("GatherTextStep"));
				MetaData->SetValue(NewProp_bImportLoc, TEXT("ModuleRelativePath"), TEXT("Private/InternationalizationExportSettings.h"));
				MetaData->SetValue(NewProp_bImportLoc, TEXT("ToolTip"), TEXT("Whether or not to import localization data"));
				MetaData->SetValue(NewProp_bExportLoc, TEXT("Category"), TEXT("GatherTextStep"));
				MetaData->SetValue(NewProp_bExportLoc, TEXT("ModuleRelativePath"), TEXT("Private/InternationalizationExportSettings.h"));
				MetaData->SetValue(NewProp_bExportLoc, TEXT("ToolTip"), TEXT("Whether or not to export localization data"));
				MetaData->SetValue(NewProp_ArchiveName, TEXT("Category"), TEXT("GatherTextStep"));
				MetaData->SetValue(NewProp_ArchiveName, TEXT("ModuleRelativePath"), TEXT("Private/InternationalizationExportSettings.h"));
				MetaData->SetValue(NewProp_ArchiveName, TEXT("ToolTip"), TEXT("Name of the archive file"));
				MetaData->SetValue(NewProp_ManifestName, TEXT("Category"), TEXT("GatherTextStep"));
				MetaData->SetValue(NewProp_ManifestName, TEXT("ModuleRelativePath"), TEXT("Private/InternationalizationExportSettings.h"));
				MetaData->SetValue(NewProp_ManifestName, TEXT("ToolTip"), TEXT("Name of the manifest file"));
				MetaData->SetValue(NewProp_PortableObjectName, TEXT("Category"), TEXT("GatherTextStep"));
				MetaData->SetValue(NewProp_PortableObjectName, TEXT("ModuleRelativePath"), TEXT("Private/InternationalizationExportSettings.h"));
				MetaData->SetValue(NewProp_PortableObjectName, TEXT("ToolTip"), TEXT("Filename for the Portable Object format file"));
				MetaData->SetValue(NewProp_DestinationPath, TEXT("Category"), TEXT("GatherTextStep"));
				MetaData->SetValue(NewProp_DestinationPath, TEXT("ModuleRelativePath"), TEXT("Private/InternationalizationExportSettings.h"));
				MetaData->SetValue(NewProp_DestinationPath, TEXT("ToolTip"), TEXT("Destination for the localization data"));
				MetaData->SetValue(NewProp_SourcePath, TEXT("Category"), TEXT("GatherTextStep"));
				MetaData->SetValue(NewProp_SourcePath, TEXT("ModuleRelativePath"), TEXT("Private/InternationalizationExportSettings.h"));
				MetaData->SetValue(NewProp_SourcePath, TEXT("ToolTip"), TEXT("Source for the localization data"));
				MetaData->SetValue(NewProp_CommandletClass, TEXT("Category"), TEXT("GatherTextStep"));
				MetaData->SetValue(NewProp_CommandletClass, TEXT("ModuleRelativePath"), TEXT("Private/InternationalizationExportSettings.h"));
				MetaData->SetValue(NewProp_CommandletClass, TEXT("ToolTip"), TEXT("The commandlet to run"));
				MetaData->SetValue(NewProp_CulturesToGenerate, TEXT("Category"), TEXT("CommonSettings"));
				MetaData->SetValue(NewProp_CulturesToGenerate, TEXT("ModuleRelativePath"), TEXT("Private/InternationalizationExportSettings.h"));
				MetaData->SetValue(NewProp_CulturesToGenerate, TEXT("ToolTip"), TEXT("Which cultures should be exported"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UInternationalizationExportSettings(Z_Construct_UClass_UInternationalizationExportSettings, TEXT("UInternationalizationExportSettings"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UInternationalizationExportSettings);
	UClass* Z_Construct_UClass_UTranslationPickerSettings_NoRegister()
	{
		return UTranslationPickerSettings::StaticClass();
	}
	UClass* Z_Construct_UClass_UTranslationPickerSettings()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage_TranslationEditor();
			OuterClass = UTranslationPickerSettings::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000084;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bSubmitTranslationPickerChangesToLocalizationService, UTranslationPickerSettings, bool);
				UProperty* NewProp_bSubmitTranslationPickerChangesToLocalizationService = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bSubmitTranslationPickerChangesToLocalizationService"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bSubmitTranslationPickerChangesToLocalizationService, UTranslationPickerSettings), 0x0000000000004000, CPP_BOOL_PROPERTY_BITMASK(bSubmitTranslationPickerChangesToLocalizationService, UTranslationPickerSettings), sizeof(bool), true);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->ClassConfigName = FName(TEXT("TranslationPickerSettings"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("TranslationPickerEditWindow.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/TranslationPickerEditWindow.h"));
				MetaData->SetValue(NewProp_bSubmitTranslationPickerChangesToLocalizationService, TEXT("ModuleRelativePath"), TEXT("Private/TranslationPickerEditWindow.h"));
				MetaData->SetValue(NewProp_bSubmitTranslationPickerChangesToLocalizationService, TEXT("ToolTip"), TEXT("Bool submit translation picker changes to Localization Service"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UTranslationPickerSettings(Z_Construct_UClass_UTranslationPickerSettings, TEXT("UTranslationPickerSettings"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UTranslationPickerSettings);
	UScriptStruct* Z_Construct_UScriptStruct_FTranslationContextInfo()
	{
		UPackage* Outer=Z_Construct_UPackage_TranslationEditor();
		extern uint32 Get_Z_Construct_UScriptStruct_FTranslationContextInfo_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("TranslationContextInfo"), sizeof(FTranslationContextInfo), Get_Z_Construct_UScriptStruct_FTranslationContextInfo_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("TranslationContextInfo"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FTranslationContextInfo>, EStructFlags(0x00000001));
			UProperty* NewProp_Changes = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Changes"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(Changes, FTranslationContextInfo), 0x0000000000020001);
			UProperty* NewProp_Changes_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Changes, TEXT("Changes"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000020000, Z_Construct_UScriptStruct_FTranslationChange());
			UProperty* NewProp_Context = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Context"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(Context, FTranslationContextInfo), 0x0000000000020001);
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Key"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(Key, FTranslationContextInfo), 0x0000000000020001);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/TranslationUnit.h"));
			MetaData->SetValue(NewProp_Changes, TEXT("Category"), TEXT("Translation"));
			MetaData->SetValue(NewProp_Changes, TEXT("ModuleRelativePath"), TEXT("Private/TranslationUnit.h"));
			MetaData->SetValue(NewProp_Changes, TEXT("ToolTip"), TEXT("List of previous versions of the source text for this context"));
			MetaData->SetValue(NewProp_Context, TEXT("Category"), TEXT("Translation"));
			MetaData->SetValue(NewProp_Context, TEXT("ModuleRelativePath"), TEXT("Private/TranslationUnit.h"));
			MetaData->SetValue(NewProp_Context, TEXT("ToolTip"), TEXT("What file and line this translation is from"));
			MetaData->SetValue(NewProp_Key, TEXT("Category"), TEXT("Translation"));
			MetaData->SetValue(NewProp_Key, TEXT("ModuleRelativePath"), TEXT("Private/TranslationUnit.h"));
			MetaData->SetValue(NewProp_Key, TEXT("ToolTip"), TEXT("The key specified in LOCTEXT"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FTranslationContextInfo_CRC() { return 250563307U; }
	UScriptStruct* Z_Construct_UScriptStruct_FTranslationChange()
	{
		UPackage* Outer=Z_Construct_UPackage_TranslationEditor();
		extern uint32 Get_Z_Construct_UScriptStruct_FTranslationChange_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("TranslationChange"), sizeof(FTranslationChange), Get_Z_Construct_UScriptStruct_FTranslationChange_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("TranslationChange"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FTranslationChange>, EStructFlags(0x00000001));
			UProperty* NewProp_Translation = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Translation"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(Translation, FTranslationChange), 0x0000000000020001);
			UProperty* NewProp_Source = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Source"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(Source, FTranslationChange), 0x0000000000020001);
			UProperty* NewProp_DateAndTime = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("DateAndTime"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(DateAndTime, FTranslationChange), 0x0000000000020001, Z_Construct_UScriptStruct_FDateTime());
			UProperty* NewProp_Version = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Version"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(Version, FTranslationChange), 0x0000000000020001);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/TranslationUnit.h"));
			MetaData->SetValue(NewProp_Translation, TEXT("Category"), TEXT("Translation"));
			MetaData->SetValue(NewProp_Translation, TEXT("ModuleRelativePath"), TEXT("Private/TranslationUnit.h"));
			MetaData->SetValue(NewProp_Translation, TEXT("ToolTip"), TEXT("Translation at time of this change"));
			MetaData->SetValue(NewProp_Source, TEXT("Category"), TEXT("Translation"));
			MetaData->SetValue(NewProp_Source, TEXT("ModuleRelativePath"), TEXT("Private/TranslationUnit.h"));
			MetaData->SetValue(NewProp_Source, TEXT("ToolTip"), TEXT("Source at time of this change"));
			MetaData->SetValue(NewProp_DateAndTime, TEXT("Category"), TEXT("Translation"));
			MetaData->SetValue(NewProp_DateAndTime, TEXT("ModuleRelativePath"), TEXT("Private/TranslationUnit.h"));
			MetaData->SetValue(NewProp_DateAndTime, TEXT("ToolTip"), TEXT("Date of this change //, meta=(DisplayName = \"Date & Time\"))"));
			MetaData->SetValue(NewProp_Version, TEXT("Category"), TEXT("Translation"));
			MetaData->SetValue(NewProp_Version, TEXT("ModuleRelativePath"), TEXT("Private/TranslationUnit.h"));
			MetaData->SetValue(NewProp_Version, TEXT("ToolTip"), TEXT("The changelist of this change"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FTranslationChange_CRC() { return 3927605057U; }
	UClass* Z_Construct_UClass_UTranslationUnit_NoRegister()
	{
		return UTranslationUnit::StaticClass();
	}
	UClass* Z_Construct_UClass_UTranslationUnit()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage_TranslationEditor();
			OuterClass = UTranslationUnit::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_LocresPath = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("LocresPath"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(LocresPath, UTranslationUnit), 0x0000000000000001);
				UProperty* NewProp_TranslationBeforeImport = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("TranslationBeforeImport"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(TranslationBeforeImport, UTranslationUnit), 0x0000000000000001);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasBeenReviewed, UTranslationUnit, bool);
				UProperty* NewProp_HasBeenReviewed = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("HasBeenReviewed"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasBeenReviewed, UTranslationUnit), 0x0000000000000001, CPP_BOOL_PROPERTY_BITMASK(HasBeenReviewed, UTranslationUnit), sizeof(bool), true);
				UProperty* NewProp_Contexts = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Contexts"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(Contexts, UTranslationUnit), 0x0000000000020001);
				UProperty* NewProp_Contexts_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Contexts, TEXT("Contexts"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000020000, Z_Construct_UScriptStruct_FTranslationContextInfo());
				UProperty* NewProp_Translation = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Translation"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(Translation, UTranslationUnit), 0x0000000000000001);
				UProperty* NewProp_Source = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Source"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(Source, UTranslationUnit), 0x0000000000020001);
				UProperty* NewProp_Namespace = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Namespace"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(Namespace, UTranslationUnit), 0x0000000000020001);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("TranslationUnit.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/TranslationUnit.h"));
				MetaData->SetValue(NewProp_LocresPath, TEXT("Category"), TEXT("Translation"));
				MetaData->SetValue(NewProp_LocresPath, TEXT("ModuleRelativePath"), TEXT("Private/TranslationUnit.h"));
				MetaData->SetValue(NewProp_LocresPath, TEXT("ToolTip"), TEXT("Optional: Which Locres File this translation is in"));
				MetaData->SetValue(NewProp_TranslationBeforeImport, TEXT("Category"), TEXT("Translation"));
				MetaData->SetValue(NewProp_TranslationBeforeImport, TEXT("ModuleRelativePath"), TEXT("Private/TranslationUnit.h"));
				MetaData->SetValue(NewProp_TranslationBeforeImport, TEXT("ToolTip"), TEXT("If this Translation Unit had a different translation before import, it will be stored here"));
				MetaData->SetValue(NewProp_HasBeenReviewed, TEXT("Category"), TEXT("Translation"));
				MetaData->SetValue(NewProp_HasBeenReviewed, TEXT("ModuleRelativePath"), TEXT("Private/TranslationUnit.h"));
				MetaData->SetValue(NewProp_HasBeenReviewed, TEXT("ToolTip"), TEXT("Whether the changes have been reviewed"));
				MetaData->SetValue(NewProp_Contexts, TEXT("Category"), TEXT("Translation"));
				MetaData->SetValue(NewProp_Contexts, TEXT("ModuleRelativePath"), TEXT("Private/TranslationUnit.h"));
				MetaData->SetValue(NewProp_Contexts, TEXT("ToolTip"), TEXT("Contexts the source was found in"));
				MetaData->SetValue(NewProp_Translation, TEXT("Category"), TEXT("Translation"));
				MetaData->SetValue(NewProp_Translation, TEXT("ModuleRelativePath"), TEXT("Private/TranslationUnit.h"));
				MetaData->SetValue(NewProp_Translation, TEXT("ToolTip"), TEXT("Translations"));
				MetaData->SetValue(NewProp_Source, TEXT("Category"), TEXT("Translation"));
				MetaData->SetValue(NewProp_Source, TEXT("ModuleRelativePath"), TEXT("Private/TranslationUnit.h"));
				MetaData->SetValue(NewProp_Source, TEXT("ToolTip"), TEXT("Original text from the source language"));
				MetaData->SetValue(NewProp_Namespace, TEXT("Category"), TEXT("Translation"));
				MetaData->SetValue(NewProp_Namespace, TEXT("ModuleRelativePath"), TEXT("Private/TranslationUnit.h"));
				MetaData->SetValue(NewProp_Namespace, TEXT("ToolTip"), TEXT("The localization namespace for this translation"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UTranslationUnit(Z_Construct_UClass_UTranslationUnit, TEXT("UTranslationUnit"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UTranslationUnit);
	UPackage* Z_Construct_UPackage_TranslationEditor()
	{
		static UPackage* ReturnPackage = NULL;
		if (!ReturnPackage)
		{
			ReturnPackage = CastChecked<UPackage>(StaticFindObjectFast(UPackage::StaticClass(), NULL, FName(TEXT("/Script/TranslationEditor")), false, false));
			ReturnPackage->SetPackageFlags(PKG_CompiledIn | 0x00000000);
			FGuid Guid;
			Guid.A = 0x5FE03A8E;
			Guid.B = 0x00776E71;
			Guid.C = 0x00000000;
			Guid.D = 0x00000000;
			ReturnPackage->SetGuid(Guid);

		}
		return ReturnPackage;
	}
#endif

PRAGMA_ENABLE_DEPRECATION_WARNINGS
