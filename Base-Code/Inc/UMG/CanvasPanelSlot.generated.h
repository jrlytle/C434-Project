// Copyright 1998-2015 Epic Games, Inc. All Rights Reserved.
/*===========================================================================
	C++ class header boilerplate exported from UnrealHeaderTool.
	This is automatically generated by the tools.
	DO NOT modify this manually! Edit the corresponding .h files instead!
===========================================================================*/

#include "ObjectBase.h"

PRAGMA_DISABLE_DEPRECATION_WARNINGS
struct FVector2D;
struct FAnchors;
struct FMargin;
struct FAnchorData;
#ifdef UMG_CanvasPanelSlot_generated_h
#error "CanvasPanelSlot.generated.h already included, missing '#pragma once' in CanvasPanelSlot.h"
#endif
#define UMG_CanvasPanelSlot_generated_h

#define Engine_Source_Runtime_UMG_Public_Components_CanvasPanelSlot_h_15_GENERATED_BODY \
	friend UMG_API class UScriptStruct* Z_Construct_UScriptStruct_FAnchorData(); \
	UMG_API static class UScriptStruct* StaticStruct();


#define Engine_Source_Runtime_UMG_Public_Components_CanvasPanelSlot_h_39_RPC_WRAPPERS \
 \
	DECLARE_FUNCTION(execSetMaximum) \
	{ \
		P_GET_STRUCT(FVector2D,Z_Param_InMaximumAnchors); \
		P_FINISH; \
		this->SetMaximum(Z_Param_InMaximumAnchors); \
	} \
 \
	DECLARE_FUNCTION(execSetMinimum) \
	{ \
		P_GET_STRUCT(FVector2D,Z_Param_InMinimumAnchors); \
		P_FINISH; \
		this->SetMinimum(Z_Param_InMinimumAnchors); \
	} \
 \
	DECLARE_FUNCTION(execGetZOrder) \
	{ \
		P_FINISH; \
		*(int32*)Z_Param__Result=this->GetZOrder(); \
	} \
 \
	DECLARE_FUNCTION(execSetZOrder) \
	{ \
		P_GET_PROPERTY(UIntProperty,Z_Param_InZOrder); \
		P_FINISH; \
		this->SetZOrder(Z_Param_InZOrder); \
	} \
 \
	DECLARE_FUNCTION(execGetAutoSize) \
	{ \
		P_FINISH; \
		*(bool*)Z_Param__Result=this->GetAutoSize(); \
	} \
 \
	DECLARE_FUNCTION(execSetAutoSize) \
	{ \
		P_GET_UBOOL(Z_Param_InbAutoSize); \
		P_FINISH; \
		this->SetAutoSize(Z_Param_InbAutoSize); \
	} \
 \
	DECLARE_FUNCTION(execGetAlignment) \
	{ \
		P_FINISH; \
		*(FVector2D*)Z_Param__Result=this->GetAlignment(); \
	} \
 \
	DECLARE_FUNCTION(execSetAlignment) \
	{ \
		P_GET_STRUCT(FVector2D,Z_Param_InAlignment); \
		P_FINISH; \
		this->SetAlignment(Z_Param_InAlignment); \
	} \
 \
	DECLARE_FUNCTION(execGetAnchors) \
	{ \
		P_FINISH; \
		*(FAnchors*)Z_Param__Result=this->GetAnchors(); \
	} \
 \
	DECLARE_FUNCTION(execSetAnchors) \
	{ \
		P_GET_STRUCT(FAnchors,Z_Param_InAnchors); \
		P_FINISH; \
		this->SetAnchors(Z_Param_InAnchors); \
	} \
 \
	DECLARE_FUNCTION(execGetOffsets) \
	{ \
		P_FINISH; \
		*(FMargin*)Z_Param__Result=this->GetOffsets(); \
	} \
 \
	DECLARE_FUNCTION(execSetOffsets) \
	{ \
		P_GET_STRUCT(FMargin,Z_Param_InOffset); \
		P_FINISH; \
		this->SetOffsets(Z_Param_InOffset); \
	} \
 \
	DECLARE_FUNCTION(execGetSize) \
	{ \
		P_FINISH; \
		*(FVector2D*)Z_Param__Result=this->GetSize(); \
	} \
 \
	DECLARE_FUNCTION(execSetSize) \
	{ \
		P_GET_STRUCT(FVector2D,Z_Param_InSize); \
		P_FINISH; \
		this->SetSize(Z_Param_InSize); \
	} \
 \
	DECLARE_FUNCTION(execGetPosition) \
	{ \
		P_FINISH; \
		*(FVector2D*)Z_Param__Result=this->GetPosition(); \
	} \
 \
	DECLARE_FUNCTION(execSetPosition) \
	{ \
		P_GET_STRUCT(FVector2D,Z_Param_InPosition); \
		P_FINISH; \
		this->SetPosition(Z_Param_InPosition); \
	} \
 \
	DECLARE_FUNCTION(execGetLayout) \
	{ \
		P_FINISH; \
		*(FAnchorData*)Z_Param__Result=this->GetLayout(); \
	} \
 \
	DECLARE_FUNCTION(execSetLayout) \
	{ \
		P_GET_STRUCT_REF(FAnchorData,Z_Param_Out_InLayoutData); \
		P_FINISH; \
		this->SetLayout(Z_Param_Out_InLayoutData); \
	}


#define Engine_Source_Runtime_UMG_Public_Components_CanvasPanelSlot_h_39_RPC_WRAPPERS_NO_PURE_DECLS \
 \
	DECLARE_FUNCTION(execSetMaximum) \
	{ \
		P_GET_STRUCT(FVector2D,Z_Param_InMaximumAnchors); \
		P_FINISH; \
		this->SetMaximum(Z_Param_InMaximumAnchors); \
	} \
 \
	DECLARE_FUNCTION(execSetMinimum) \
	{ \
		P_GET_STRUCT(FVector2D,Z_Param_InMinimumAnchors); \
		P_FINISH; \
		this->SetMinimum(Z_Param_InMinimumAnchors); \
	} \
 \
	DECLARE_FUNCTION(execGetZOrder) \
	{ \
		P_FINISH; \
		*(int32*)Z_Param__Result=this->GetZOrder(); \
	} \
 \
	DECLARE_FUNCTION(execSetZOrder) \
	{ \
		P_GET_PROPERTY(UIntProperty,Z_Param_InZOrder); \
		P_FINISH; \
		this->SetZOrder(Z_Param_InZOrder); \
	} \
 \
	DECLARE_FUNCTION(execGetAutoSize) \
	{ \
		P_FINISH; \
		*(bool*)Z_Param__Result=this->GetAutoSize(); \
	} \
 \
	DECLARE_FUNCTION(execSetAutoSize) \
	{ \
		P_GET_UBOOL(Z_Param_InbAutoSize); \
		P_FINISH; \
		this->SetAutoSize(Z_Param_InbAutoSize); \
	} \
 \
	DECLARE_FUNCTION(execGetAlignment) \
	{ \
		P_FINISH; \
		*(FVector2D*)Z_Param__Result=this->GetAlignment(); \
	} \
 \
	DECLARE_FUNCTION(execSetAlignment) \
	{ \
		P_GET_STRUCT(FVector2D,Z_Param_InAlignment); \
		P_FINISH; \
		this->SetAlignment(Z_Param_InAlignment); \
	} \
 \
	DECLARE_FUNCTION(execGetAnchors) \
	{ \
		P_FINISH; \
		*(FAnchors*)Z_Param__Result=this->GetAnchors(); \
	} \
 \
	DECLARE_FUNCTION(execSetAnchors) \
	{ \
		P_GET_STRUCT(FAnchors,Z_Param_InAnchors); \
		P_FINISH; \
		this->SetAnchors(Z_Param_InAnchors); \
	} \
 \
	DECLARE_FUNCTION(execGetOffsets) \
	{ \
		P_FINISH; \
		*(FMargin*)Z_Param__Result=this->GetOffsets(); \
	} \
 \
	DECLARE_FUNCTION(execSetOffsets) \
	{ \
		P_GET_STRUCT(FMargin,Z_Param_InOffset); \
		P_FINISH; \
		this->SetOffsets(Z_Param_InOffset); \
	} \
 \
	DECLARE_FUNCTION(execGetSize) \
	{ \
		P_FINISH; \
		*(FVector2D*)Z_Param__Result=this->GetSize(); \
	} \
 \
	DECLARE_FUNCTION(execSetSize) \
	{ \
		P_GET_STRUCT(FVector2D,Z_Param_InSize); \
		P_FINISH; \
		this->SetSize(Z_Param_InSize); \
	} \
 \
	DECLARE_FUNCTION(execGetPosition) \
	{ \
		P_FINISH; \
		*(FVector2D*)Z_Param__Result=this->GetPosition(); \
	} \
 \
	DECLARE_FUNCTION(execSetPosition) \
	{ \
		P_GET_STRUCT(FVector2D,Z_Param_InPosition); \
		P_FINISH; \
		this->SetPosition(Z_Param_InPosition); \
	} \
 \
	DECLARE_FUNCTION(execGetLayout) \
	{ \
		P_FINISH; \
		*(FAnchorData*)Z_Param__Result=this->GetLayout(); \
	} \
 \
	DECLARE_FUNCTION(execSetLayout) \
	{ \
		P_GET_STRUCT_REF(FAnchorData,Z_Param_Out_InLayoutData); \
		P_FINISH; \
		this->SetLayout(Z_Param_Out_InLayoutData); \
	}


#define Engine_Source_Runtime_UMG_Public_Components_CanvasPanelSlot_h_39_INCLASS_NO_PURE_DECLS \
	private: \
	static void StaticRegisterNativesUCanvasPanelSlot(); \
	friend UMG_API class UClass* Z_Construct_UClass_UCanvasPanelSlot(); \
	public: \
	DECLARE_CLASS(UCanvasPanelSlot, UPanelSlot, COMPILED_IN_FLAGS(0), 0, UMG, NO_API) \
	DECLARE_SERIALIZER(UCanvasPanelSlot) \
	/** Indicates whether the class is compiled into the engine */    enum {IsIntrinsic=COMPILED_IN_INTRINSIC}; \
	virtual UObject* _getUObject() const override { return const_cast<UCanvasPanelSlot*>(this); }


#define Engine_Source_Runtime_UMG_Public_Components_CanvasPanelSlot_h_39_INCLASS \
	private: \
	static void StaticRegisterNativesUCanvasPanelSlot(); \
	friend UMG_API class UClass* Z_Construct_UClass_UCanvasPanelSlot(); \
	public: \
	DECLARE_CLASS(UCanvasPanelSlot, UPanelSlot, COMPILED_IN_FLAGS(0), 0, UMG, NO_API) \
	DECLARE_SERIALIZER(UCanvasPanelSlot) \
	/** Indicates whether the class is compiled into the engine */    enum {IsIntrinsic=COMPILED_IN_INTRINSIC}; \
	virtual UObject* _getUObject() const override { return const_cast<UCanvasPanelSlot*>(this); }


#define Engine_Source_Runtime_UMG_Public_Components_CanvasPanelSlot_h_39_STANDARD_CONSTRUCTORS \
	/** Standard constructor, called after all reflected properties have been initialized */ \
	NO_API UCanvasPanelSlot(const FObjectInitializer& ObjectInitializer = FObjectInitializer::Get()); \
	DEFINE_DEFAULT_OBJECT_INITIALIZER_CONSTRUCTOR_CALL(UCanvasPanelSlot) \
	DECLARE_VTABLE_PTR_HELPER_CTOR(NO_API, UCanvasPanelSlot); \
DEFINE_VTABLE_PTR_HELPER_CTOR_CALLER(UCanvasPanelSlot); \
private: \
	/** Private copy-constructor, should never be used */ \
	NO_API UCanvasPanelSlot(const UCanvasPanelSlot& InCopy); \
public:


#define Engine_Source_Runtime_UMG_Public_Components_CanvasPanelSlot_h_39_ENHANCED_CONSTRUCTORS \
	/** Standard constructor, called after all reflected properties have been initialized */ \
	NO_API UCanvasPanelSlot(const FObjectInitializer& ObjectInitializer = FObjectInitializer::Get()) : Super(ObjectInitializer) { }; \
private: \
	/** Private copy-constructor, should never be used */ \
	NO_API UCanvasPanelSlot(const UCanvasPanelSlot& InCopy); \
public: \
	DECLARE_VTABLE_PTR_HELPER_CTOR(NO_API, UCanvasPanelSlot); \
DEFINE_VTABLE_PTR_HELPER_CTOR_CALLER(UCanvasPanelSlot); \
	DEFINE_DEFAULT_OBJECT_INITIALIZER_CONSTRUCTOR_CALL(UCanvasPanelSlot)


#define Engine_Source_Runtime_UMG_Public_Components_CanvasPanelSlot_h_36_PROLOG
#define Engine_Source_Runtime_UMG_Public_Components_CanvasPanelSlot_h_39_GENERATED_BODY_LEGACY \
PRAGMA_DISABLE_DEPRECATION_WARNINGS \
public: \
	Engine_Source_Runtime_UMG_Public_Components_CanvasPanelSlot_h_39_RPC_WRAPPERS \
	Engine_Source_Runtime_UMG_Public_Components_CanvasPanelSlot_h_39_INCLASS \
	Engine_Source_Runtime_UMG_Public_Components_CanvasPanelSlot_h_39_STANDARD_CONSTRUCTORS \
public: \
PRAGMA_ENABLE_DEPRECATION_WARNINGS


#define Engine_Source_Runtime_UMG_Public_Components_CanvasPanelSlot_h_39_GENERATED_BODY \
PRAGMA_DISABLE_DEPRECATION_WARNINGS \
public: \
	Engine_Source_Runtime_UMG_Public_Components_CanvasPanelSlot_h_39_RPC_WRAPPERS_NO_PURE_DECLS \
	Engine_Source_Runtime_UMG_Public_Components_CanvasPanelSlot_h_39_INCLASS_NO_PURE_DECLS \
	Engine_Source_Runtime_UMG_Public_Components_CanvasPanelSlot_h_39_ENHANCED_CONSTRUCTORS \
static_assert(false, "Unknown access specifier for GENERATED_BODY() macro in class CanvasPanelSlot."); \
PRAGMA_ENABLE_DEPRECATION_WARNINGS


#undef CURRENT_FILE_ID
#define CURRENT_FILE_ID Engine_Source_Runtime_UMG_Public_Components_CanvasPanelSlot_h


PRAGMA_ENABLE_DEPRECATION_WARNINGS
