// Copyright 1998-2015 Epic Games, Inc. All Rights Reserved.
/*===========================================================================
	Boilerplate C++ definitions for a single module.
	This is automatically generated by UnrealHeaderTool.
	DO NOT modify this manually! Edit the corresponding .h files instead!
===========================================================================*/

#include "Public/UnrealEd.h"
#include "UnrealEd.generated.dep.h"
PRAGMA_DISABLE_DEPRECATION_WARNINGS
void EmptyLinkFunctionForGeneratedCodeUnrealEd() {}
	void UActorFactory::StaticRegisterNativesUActorFactory()
	{
	}
	IMPLEMENT_CLASS(UActorFactory, 2421326485);
	void UActorFactoryAmbientSound::StaticRegisterNativesUActorFactoryAmbientSound()
	{
	}
	IMPLEMENT_CLASS(UActorFactoryAmbientSound, 440906872);
	void UActorFactoryAtmosphericFog::StaticRegisterNativesUActorFactoryAtmosphericFog()
	{
	}
	IMPLEMENT_CLASS(UActorFactoryAtmosphericFog, 3219766404);
	void UActorFactoryBlueprint::StaticRegisterNativesUActorFactoryBlueprint()
	{
	}
	IMPLEMENT_CLASS(UActorFactoryBlueprint, 3046946103);
	void UActorFactoryBoxReflectionCapture::StaticRegisterNativesUActorFactoryBoxReflectionCapture()
	{
	}
	IMPLEMENT_CLASS(UActorFactoryBoxReflectionCapture, 1893455880);
	void UActorFactoryBoxVolume::StaticRegisterNativesUActorFactoryBoxVolume()
	{
	}
	IMPLEMENT_CLASS(UActorFactoryBoxVolume, 1039277373);
	void UActorFactoryCameraActor::StaticRegisterNativesUActorFactoryCameraActor()
	{
	}
	IMPLEMENT_CLASS(UActorFactoryCameraActor, 1537636191);
	void UActorFactoryCharacter::StaticRegisterNativesUActorFactoryCharacter()
	{
	}
	IMPLEMENT_CLASS(UActorFactoryCharacter, 11246523);
	void UActorFactoryClass::StaticRegisterNativesUActorFactoryClass()
	{
	}
	IMPLEMENT_CLASS(UActorFactoryClass, 466330218);
	void UActorFactoryCylinderVolume::StaticRegisterNativesUActorFactoryCylinderVolume()
	{
	}
	IMPLEMENT_CLASS(UActorFactoryCylinderVolume, 1528155722);
	void UActorFactoryDeferredDecal::StaticRegisterNativesUActorFactoryDeferredDecal()
	{
	}
	IMPLEMENT_CLASS(UActorFactoryDeferredDecal, 1900630082);
	void UActorFactoryDestructible::StaticRegisterNativesUActorFactoryDestructible()
	{
	}
	IMPLEMENT_CLASS(UActorFactoryDestructible, 2700134969);
	void UActorFactoryDirectionalLight::StaticRegisterNativesUActorFactoryDirectionalLight()
	{
	}
	IMPLEMENT_CLASS(UActorFactoryDirectionalLight, 1136623824);
	void UActorFactoryEmitter::StaticRegisterNativesUActorFactoryEmitter()
	{
	}
	IMPLEMENT_CLASS(UActorFactoryEmitter, 4068602316);
	void UActorFactoryEmptyActor::StaticRegisterNativesUActorFactoryEmptyActor()
	{
	}
	IMPLEMENT_CLASS(UActorFactoryEmptyActor, 3218730400);
	void UActorFactoryPawn::StaticRegisterNativesUActorFactoryPawn()
	{
	}
	IMPLEMENT_CLASS(UActorFactoryPawn, 866987784);
	void UActorFactoryExponentialHeightFog::StaticRegisterNativesUActorFactoryExponentialHeightFog()
	{
	}
	IMPLEMENT_CLASS(UActorFactoryExponentialHeightFog, 2472431676);
	void UActorFactoryMatineeActor::StaticRegisterNativesUActorFactoryMatineeActor()
	{
	}
	IMPLEMENT_CLASS(UActorFactoryMatineeActor, 1808106945);
	void UActorFactoryMovieScene::StaticRegisterNativesUActorFactoryMovieScene()
	{
	}
	IMPLEMENT_CLASS(UActorFactoryMovieScene, 3898064834);
	void UActorFactoryNiagara::StaticRegisterNativesUActorFactoryNiagara()
	{
	}
	IMPLEMENT_CLASS(UActorFactoryNiagara, 2222911922);
	void UActorFactoryNote::StaticRegisterNativesUActorFactoryNote()
	{
	}
	IMPLEMENT_CLASS(UActorFactoryNote, 2958470711);
	void UActorFactoryPhysicsAsset::StaticRegisterNativesUActorFactoryPhysicsAsset()
	{
	}
	IMPLEMENT_CLASS(UActorFactoryPhysicsAsset, 345202354);
	void UActorFactoryPlaneReflectionCapture::StaticRegisterNativesUActorFactoryPlaneReflectionCapture()
	{
	}
	IMPLEMENT_CLASS(UActorFactoryPlaneReflectionCapture, 970107330);
	void UActorFactoryPlayerStart::StaticRegisterNativesUActorFactoryPlayerStart()
	{
	}
	IMPLEMENT_CLASS(UActorFactoryPlayerStart, 4284704058);
	void UActorFactoryPointLight::StaticRegisterNativesUActorFactoryPointLight()
	{
	}
	IMPLEMENT_CLASS(UActorFactoryPointLight, 3003453394);
	void UActorFactorySkeletalMesh::StaticRegisterNativesUActorFactorySkeletalMesh()
	{
	}
	IMPLEMENT_CLASS(UActorFactorySkeletalMesh, 13846252);
	void UActorFactoryAnimationAsset::StaticRegisterNativesUActorFactoryAnimationAsset()
	{
	}
	IMPLEMENT_CLASS(UActorFactoryAnimationAsset, 443055053);
	void UActorFactorySkyLight::StaticRegisterNativesUActorFactorySkyLight()
	{
	}
	IMPLEMENT_CLASS(UActorFactorySkyLight, 933753609);
	void UActorFactorySphereReflectionCapture::StaticRegisterNativesUActorFactorySphereReflectionCapture()
	{
	}
	IMPLEMENT_CLASS(UActorFactorySphereReflectionCapture, 721295110);
	void UActorFactorySphereVolume::StaticRegisterNativesUActorFactorySphereVolume()
	{
	}
	IMPLEMENT_CLASS(UActorFactorySphereVolume, 469952667);
	void UActorFactorySpotLight::StaticRegisterNativesUActorFactorySpotLight()
	{
	}
	IMPLEMENT_CLASS(UActorFactorySpotLight, 497843427);
	void UActorFactoryStaticMesh::StaticRegisterNativesUActorFactoryStaticMesh()
	{
	}
	IMPLEMENT_CLASS(UActorFactoryStaticMesh, 2426580702);
	void UActorFactoryBasicShape::StaticRegisterNativesUActorFactoryBasicShape()
	{
	}
	IMPLEMENT_CLASS(UActorFactoryBasicShape, 2381355342);
	void UActorFactoryInteractiveFoliage::StaticRegisterNativesUActorFactoryInteractiveFoliage()
	{
	}
	IMPLEMENT_CLASS(UActorFactoryInteractiveFoliage, 3673032661);
	void UActorFactoryTargetPoint::StaticRegisterNativesUActorFactoryTargetPoint()
	{
	}
	IMPLEMENT_CLASS(UActorFactoryTargetPoint, 1178639000);
	void UActorFactoryTextRender::StaticRegisterNativesUActorFactoryTextRender()
	{
	}
	IMPLEMENT_CLASS(UActorFactoryTextRender, 1680589532);
	void UActorFactoryTriggerBox::StaticRegisterNativesUActorFactoryTriggerBox()
	{
	}
	IMPLEMENT_CLASS(UActorFactoryTriggerBox, 1574626728);
	void UActorFactoryTriggerCapsule::StaticRegisterNativesUActorFactoryTriggerCapsule()
	{
	}
	IMPLEMENT_CLASS(UActorFactoryTriggerCapsule, 282551011);
	void UActorFactoryTriggerSphere::StaticRegisterNativesUActorFactoryTriggerSphere()
	{
	}
	IMPLEMENT_CLASS(UActorFactoryTriggerSphere, 3212843831);
	void UActorFactoryVectorFieldVolume::StaticRegisterNativesUActorFactoryVectorFieldVolume()
	{
	}
	IMPLEMENT_CLASS(UActorFactoryVectorFieldVolume, 2113723530);
	void UAnalyticsPrivacySettings::StaticRegisterNativesUAnalyticsPrivacySettings()
	{
	}
	IMPLEMENT_CLASS(UAnalyticsPrivacySettings, 578224358);
	void UAnimSequenceExporterFBX::StaticRegisterNativesUAnimSequenceExporterFBX()
	{
	}
	IMPLEMENT_CLASS(UAnimSequenceExporterFBX, 3338632298);
	void UAudioTestCommandlet::StaticRegisterNativesUAudioTestCommandlet()
	{
	}
	IMPLEMENT_CLASS(UAudioTestCommandlet, 1009474625);
	void UAutoReimportManager::StaticRegisterNativesUAutoReimportManager()
	{
	}
	IMPLEMENT_CLASS(UAutoReimportManager, 879705348);
	void UCascadeOptions::StaticRegisterNativesUCascadeOptions()
	{
	}
	IMPLEMENT_CLASS(UCascadeOptions, 2498089636);
class UScriptStruct* FChunkDependency::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern UNREALED_API class UScriptStruct* Z_Construct_UScriptStruct_FChunkDependency();
		extern UNREALED_API uint32 Get_Z_Construct_UScriptStruct_FChunkDependency_CRC();
		extern UNREALED_API class UPackage* Z_Construct_UPackage_UnrealEd();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FChunkDependency, Z_Construct_UPackage_UnrealEd(), TEXT("ChunkDependency"), sizeof(FChunkDependency), Get_Z_Construct_UScriptStruct_FChunkDependency_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FChunkDependency(FChunkDependency::StaticStruct, TEXT("/Script/UnrealEd"));
static struct FScriptStruct_UnrealEd_StaticRegisterNativesFChunkDependency
{
	FScriptStruct_UnrealEd_StaticRegisterNativesFChunkDependency()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("ChunkDependency")),new UScriptStruct::TCppStructOps<FChunkDependency>);
	}
} ScriptStruct_UnrealEd_StaticRegisterNativesFChunkDependency;
	void UChunkDependencyInfo::StaticRegisterNativesUChunkDependencyInfo()
	{
	}
	IMPLEMENT_CLASS(UChunkDependencyInfo, 2504560557);
class UScriptStruct* FCollisionPerfTest::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern UNREALED_API class UScriptStruct* Z_Construct_UScriptStruct_FCollisionPerfTest();
		extern UNREALED_API uint32 Get_Z_Construct_UScriptStruct_FCollisionPerfTest_CRC();
		extern UNREALED_API class UPackage* Z_Construct_UPackage_UnrealEd();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FCollisionPerfTest, Z_Construct_UPackage_UnrealEd(), TEXT("CollisionPerfTest"), sizeof(FCollisionPerfTest), Get_Z_Construct_UScriptStruct_FCollisionPerfTest_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FCollisionPerfTest(FCollisionPerfTest::StaticStruct, TEXT("/Script/UnrealEd"));
static struct FScriptStruct_UnrealEd_StaticRegisterNativesFCollisionPerfTest
{
	FScriptStruct_UnrealEd_StaticRegisterNativesFCollisionPerfTest()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("CollisionPerfTest")),new UScriptStruct::TCppStructOps<FCollisionPerfTest>);
	}
} ScriptStruct_UnrealEd_StaticRegisterNativesFCollisionPerfTest;
class UScriptStruct* FCollisionTestEntry::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern UNREALED_API class UScriptStruct* Z_Construct_UScriptStruct_FCollisionTestEntry();
		extern UNREALED_API uint32 Get_Z_Construct_UScriptStruct_FCollisionTestEntry_CRC();
		extern UNREALED_API class UPackage* Z_Construct_UPackage_UnrealEd();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FCollisionTestEntry, Z_Construct_UPackage_UnrealEd(), TEXT("CollisionTestEntry"), sizeof(FCollisionTestEntry), Get_Z_Construct_UScriptStruct_FCollisionTestEntry_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FCollisionTestEntry(FCollisionTestEntry::StaticStruct, TEXT("/Script/UnrealEd"));
static struct FScriptStruct_UnrealEd_StaticRegisterNativesFCollisionTestEntry
{
	FScriptStruct_UnrealEd_StaticRegisterNativesFCollisionTestEntry()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("CollisionTestEntry")),new UScriptStruct::TCppStructOps<FCollisionTestEntry>);
	}
} ScriptStruct_UnrealEd_StaticRegisterNativesFCollisionTestEntry;
	void UCollisionAutomationTestConfigData::StaticRegisterNativesUCollisionAutomationTestConfigData()
	{
	}
	IMPLEMENT_CLASS(UCollisionAutomationTestConfigData, 1274374820);
	void UCompressAnimationsCommandlet::StaticRegisterNativesUCompressAnimationsCommandlet()
	{
	}
	IMPLEMENT_CLASS(UCompressAnimationsCommandlet, 657262164);
	void UContentBrowserSettings::StaticRegisterNativesUContentBrowserSettings()
	{
	}
	IMPLEMENT_CLASS(UContentBrowserSettings, 2201267170);
	void UCookCommandlet::StaticRegisterNativesUCookCommandlet()
	{
	}
	IMPLEMENT_CLASS(UCookCommandlet, 2926812171);
	void UCookerSettings::StaticRegisterNativesUCookerSettings()
	{
	}
	IMPLEMENT_CLASS(UCookerSettings, 111969288);
static class UEnum* ECookMode_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern UNREALED_API class UEnum* Z_Construct_UEnum_UnrealEd_ECookMode();
		extern UNREALED_API class UPackage* Z_Construct_UPackage_UnrealEd();
		Singleton = GetStaticEnum(Z_Construct_UEnum_UnrealEd_ECookMode, Z_Construct_UPackage_UnrealEd(), TEXT("ECookMode"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ECookMode(ECookMode_StaticEnum, TEXT("/Script/UnrealEd"));
	void UCookOnTheFlyServer::StaticRegisterNativesUCookOnTheFlyServer()
	{
	}
	IMPLEMENT_CLASS(UCookOnTheFlyServer, 1348002926);
static class UEnum* ECurveEditorTangentVisibility_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern UNREALED_API class UEnum* Z_Construct_UEnum_UnrealEd_ECurveEditorTangentVisibility();
		extern UNREALED_API class UPackage* Z_Construct_UPackage_UnrealEd();
		Singleton = GetStaticEnum(Z_Construct_UEnum_UnrealEd_ECurveEditorTangentVisibility, Z_Construct_UPackage_UnrealEd(), TEXT("ECurveEditorTangentVisibility"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ECurveEditorTangentVisibility(ECurveEditorTangentVisibility_StaticEnum, TEXT("/Script/UnrealEd"));
static class UEnum* ECurveEditorCurveVisibility_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern UNREALED_API class UEnum* Z_Construct_UEnum_UnrealEd_ECurveEditorCurveVisibility();
		extern UNREALED_API class UPackage* Z_Construct_UPackage_UnrealEd();
		Singleton = GetStaticEnum(Z_Construct_UEnum_UnrealEd_ECurveEditorCurveVisibility, Z_Construct_UPackage_UnrealEd(), TEXT("ECurveEditorCurveVisibility"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ECurveEditorCurveVisibility(ECurveEditorCurveVisibility_StaticEnum, TEXT("/Script/UnrealEd"));
	void UCurveEditorSettings::StaticRegisterNativesUCurveEditorSettings()
	{
	}
	IMPLEMENT_CLASS(UCurveEditorSettings, 381846664);
	void UCurveEdOptions::StaticRegisterNativesUCurveEdOptions()
	{
	}
	IMPLEMENT_CLASS(UCurveEdOptions, 4173133168);
class UScriptStruct* FSelectedSocketInfo::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern UNREALED_API class UScriptStruct* Z_Construct_UScriptStruct_FSelectedSocketInfo();
		extern UNREALED_API uint32 Get_Z_Construct_UScriptStruct_FSelectedSocketInfo_CRC();
		extern UNREALED_API class UPackage* Z_Construct_UPackage_UnrealEd();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FSelectedSocketInfo, Z_Construct_UPackage_UnrealEd(), TEXT("SelectedSocketInfo"), sizeof(FSelectedSocketInfo), Get_Z_Construct_UScriptStruct_FSelectedSocketInfo_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FSelectedSocketInfo(FSelectedSocketInfo::StaticStruct, TEXT("/Script/UnrealEd"));
static struct FScriptStruct_UnrealEd_StaticRegisterNativesFSelectedSocketInfo
{
	FScriptStruct_UnrealEd_StaticRegisterNativesFSelectedSocketInfo()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("SelectedSocketInfo")),new UScriptStruct::TCppStructOps<FSelectedSocketInfo>);
	}
} ScriptStruct_UnrealEd_StaticRegisterNativesFSelectedSocketInfo;
	void UDebugSkelMeshComponent::StaticRegisterNativesUDebugSkelMeshComponent()
	{
	}
	IMPLEMENT_CLASS(UDebugSkelMeshComponent, 2031823291);
static class UEnum* ELevelViewportType_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern UNREALED_API class UEnum* Z_Construct_UEnum_UnrealEd_ELevelViewportType();
		extern UNREALED_API class UPackage* Z_Construct_UPackage_UnrealEd();
		Singleton = GetStaticEnum(Z_Construct_UEnum_UnrealEd_ELevelViewportType, Z_Construct_UPackage_UnrealEd(), TEXT("ELevelViewportType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ELevelViewportType(ELevelViewportType_StaticEnum, TEXT("/Script/UnrealEd"));
class UScriptStruct* FLightmassParameterizedMaterialSettings::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern UNREALED_API class UScriptStruct* Z_Construct_UScriptStruct_FLightmassParameterizedMaterialSettings();
		extern UNREALED_API uint32 Get_Z_Construct_UScriptStruct_FLightmassParameterizedMaterialSettings_CRC();
		extern UNREALED_API class UPackage* Z_Construct_UPackage_UnrealEd();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FLightmassParameterizedMaterialSettings, Z_Construct_UPackage_UnrealEd(), TEXT("LightmassParameterizedMaterialSettings"), sizeof(FLightmassParameterizedMaterialSettings), Get_Z_Construct_UScriptStruct_FLightmassParameterizedMaterialSettings_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FLightmassParameterizedMaterialSettings(FLightmassParameterizedMaterialSettings::StaticStruct, TEXT("/Script/UnrealEd"));
static struct FScriptStruct_UnrealEd_StaticRegisterNativesFLightmassParameterizedMaterialSettings
{
	FScriptStruct_UnrealEd_StaticRegisterNativesFLightmassParameterizedMaterialSettings()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("LightmassParameterizedMaterialSettings")),new UScriptStruct::TCppStructOps<FLightmassParameterizedMaterialSettings>);
	}
} ScriptStruct_UnrealEd_StaticRegisterNativesFLightmassParameterizedMaterialSettings;
class UScriptStruct* FLightmassScalarParameterValue::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern UNREALED_API class UScriptStruct* Z_Construct_UScriptStruct_FLightmassScalarParameterValue();
		extern UNREALED_API uint32 Get_Z_Construct_UScriptStruct_FLightmassScalarParameterValue_CRC();
		extern UNREALED_API class UPackage* Z_Construct_UPackage_UnrealEd();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FLightmassScalarParameterValue, Z_Construct_UPackage_UnrealEd(), TEXT("LightmassScalarParameterValue"), sizeof(FLightmassScalarParameterValue), Get_Z_Construct_UScriptStruct_FLightmassScalarParameterValue_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FLightmassScalarParameterValue(FLightmassScalarParameterValue::StaticStruct, TEXT("/Script/UnrealEd"));
static struct FScriptStruct_UnrealEd_StaticRegisterNativesFLightmassScalarParameterValue
{
	FScriptStruct_UnrealEd_StaticRegisterNativesFLightmassScalarParameterValue()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("LightmassScalarParameterValue")),new UScriptStruct::TCppStructOps<FLightmassScalarParameterValue>);
	}
} ScriptStruct_UnrealEd_StaticRegisterNativesFLightmassScalarParameterValue;
class UScriptStruct* FLightmassBooleanParameterValue::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern UNREALED_API class UScriptStruct* Z_Construct_UScriptStruct_FLightmassBooleanParameterValue();
		extern UNREALED_API uint32 Get_Z_Construct_UScriptStruct_FLightmassBooleanParameterValue_CRC();
		extern UNREALED_API class UPackage* Z_Construct_UPackage_UnrealEd();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FLightmassBooleanParameterValue, Z_Construct_UPackage_UnrealEd(), TEXT("LightmassBooleanParameterValue"), sizeof(FLightmassBooleanParameterValue), Get_Z_Construct_UScriptStruct_FLightmassBooleanParameterValue_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FLightmassBooleanParameterValue(FLightmassBooleanParameterValue::StaticStruct, TEXT("/Script/UnrealEd"));
static struct FScriptStruct_UnrealEd_StaticRegisterNativesFLightmassBooleanParameterValue
{
	FScriptStruct_UnrealEd_StaticRegisterNativesFLightmassBooleanParameterValue()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("LightmassBooleanParameterValue")),new UScriptStruct::TCppStructOps<FLightmassBooleanParameterValue>);
	}
} ScriptStruct_UnrealEd_StaticRegisterNativesFLightmassBooleanParameterValue;
class UScriptStruct* FLightmassParameterValue::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern UNREALED_API class UScriptStruct* Z_Construct_UScriptStruct_FLightmassParameterValue();
		extern UNREALED_API uint32 Get_Z_Construct_UScriptStruct_FLightmassParameterValue_CRC();
		extern UNREALED_API class UPackage* Z_Construct_UPackage_UnrealEd();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FLightmassParameterValue, Z_Construct_UPackage_UnrealEd(), TEXT("LightmassParameterValue"), sizeof(FLightmassParameterValue), Get_Z_Construct_UScriptStruct_FLightmassParameterValue_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FLightmassParameterValue(FLightmassParameterValue::StaticStruct, TEXT("/Script/UnrealEd"));
static struct FScriptStruct_UnrealEd_StaticRegisterNativesFLightmassParameterValue
{
	FScriptStruct_UnrealEd_StaticRegisterNativesFLightmassParameterValue()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("LightmassParameterValue")),new UScriptStruct::TCppStructOps<FLightmassParameterValue>);
	}
} ScriptStruct_UnrealEd_StaticRegisterNativesFLightmassParameterValue;
	void UUnrealEdTypes::StaticRegisterNativesUUnrealEdTypes()
	{
	}
	IMPLEMENT_CLASS(UUnrealEdTypes, 1656203774);
	void UDEditorParameterValue::StaticRegisterNativesUDEditorParameterValue()
	{
	}
	IMPLEMENT_CLASS(UDEditorParameterValue, 3263719840);
class UScriptStruct* FDFontParameters::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern UNREALED_API class UScriptStruct* Z_Construct_UScriptStruct_FDFontParameters();
		extern UNREALED_API uint32 Get_Z_Construct_UScriptStruct_FDFontParameters_CRC();
		extern UNREALED_API class UPackage* Z_Construct_UPackage_UnrealEd();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FDFontParameters, Z_Construct_UPackage_UnrealEd(), TEXT("DFontParameters"), sizeof(FDFontParameters), Get_Z_Construct_UScriptStruct_FDFontParameters_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FDFontParameters(FDFontParameters::StaticStruct, TEXT("/Script/UnrealEd"));
static struct FScriptStruct_UnrealEd_StaticRegisterNativesFDFontParameters
{
	FScriptStruct_UnrealEd_StaticRegisterNativesFDFontParameters()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("DFontParameters")),new UScriptStruct::TCppStructOps<FDFontParameters>);
	}
} ScriptStruct_UnrealEd_StaticRegisterNativesFDFontParameters;
	void UDEditorFontParameterValue::StaticRegisterNativesUDEditorFontParameterValue()
	{
	}
	IMPLEMENT_CLASS(UDEditorFontParameterValue, 930817557);
	void UDEditorScalarParameterValue::StaticRegisterNativesUDEditorScalarParameterValue()
	{
	}
	IMPLEMENT_CLASS(UDEditorScalarParameterValue, 2706722600);
class UScriptStruct* FDComponentMaskParameter::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern UNREALED_API class UScriptStruct* Z_Construct_UScriptStruct_FDComponentMaskParameter();
		extern UNREALED_API uint32 Get_Z_Construct_UScriptStruct_FDComponentMaskParameter_CRC();
		extern UNREALED_API class UPackage* Z_Construct_UPackage_UnrealEd();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FDComponentMaskParameter, Z_Construct_UPackage_UnrealEd(), TEXT("DComponentMaskParameter"), sizeof(FDComponentMaskParameter), Get_Z_Construct_UScriptStruct_FDComponentMaskParameter_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FDComponentMaskParameter(FDComponentMaskParameter::StaticStruct, TEXT("/Script/UnrealEd"));
static struct FScriptStruct_UnrealEd_StaticRegisterNativesFDComponentMaskParameter
{
	FScriptStruct_UnrealEd_StaticRegisterNativesFDComponentMaskParameter()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("DComponentMaskParameter")),new UScriptStruct::TCppStructOps<FDComponentMaskParameter>);
	}
} ScriptStruct_UnrealEd_StaticRegisterNativesFDComponentMaskParameter;
	void UDEditorStaticComponentMaskParameterValue::StaticRegisterNativesUDEditorStaticComponentMaskParameterValue()
	{
	}
	IMPLEMENT_CLASS(UDEditorStaticComponentMaskParameterValue, 2374724150);
	void UDEditorStaticSwitchParameterValue::StaticRegisterNativesUDEditorStaticSwitchParameterValue()
	{
	}
	IMPLEMENT_CLASS(UDEditorStaticSwitchParameterValue, 1714815177);
	void UDEditorTextureParameterValue::StaticRegisterNativesUDEditorTextureParameterValue()
	{
	}
	IMPLEMENT_CLASS(UDEditorTextureParameterValue, 1574499443);
	void UDEditorVectorParameterValue::StaticRegisterNativesUDEditorVectorParameterValue()
	{
	}
	IMPLEMENT_CLASS(UDEditorVectorParameterValue, 2666409337);
	void UDerivedDataCacheCommandlet::StaticRegisterNativesUDerivedDataCacheCommandlet()
	{
	}
	IMPLEMENT_CLASS(UDerivedDataCacheCommandlet, 3146881729);
	void UDestructableMeshEditorSettings::StaticRegisterNativesUDestructableMeshEditorSettings()
	{
	}
	IMPLEMENT_CLASS(UDestructableMeshEditorSettings, 2876572417);
	void UDiffAssetsCommandlet::StaticRegisterNativesUDiffAssetsCommandlet()
	{
	}
	IMPLEMENT_CLASS(UDiffAssetsCommandlet, 1692833598);
	void UDiffPackagesCommandlet::StaticRegisterNativesUDiffPackagesCommandlet()
	{
	}
	IMPLEMENT_CLASS(UDiffPackagesCommandlet, 4030650270);
	void UDumpBlueprintsInfoCommandlet::StaticRegisterNativesUDumpBlueprintsInfoCommandlet()
	{
	}
	IMPLEMENT_CLASS(UDumpBlueprintsInfoCommandlet, 4190273674);
	void UDumpHiddenCategoriesCommandlet::StaticRegisterNativesUDumpHiddenCategoriesCommandlet()
	{
	}
	IMPLEMENT_CLASS(UDumpHiddenCategoriesCommandlet, 3411390378);
static class UEnum* ECommentBoxMode_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern UNREALED_API class UEnum* Z_Construct_UEnum_UnrealEd_ECommentBoxMode();
		extern UNREALED_API class UPackage* Z_Construct_UPackage_UnrealEd();
		Singleton = GetStaticEnum(Z_Construct_UEnum_UnrealEd_ECommentBoxMode, Z_Construct_UPackage_UnrealEd(), TEXT("ECommentBoxMode"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ECommentBoxMode(ECommentBoxMode_StaticEnum, TEXT("/Script/UnrealEd"));
	void UEdGraphNode_Comment::StaticRegisterNativesUEdGraphNode_Comment()
	{
	}
	IMPLEMENT_CLASS(UEdGraphNode_Comment, 2637443479);
	void UMaterialGraph::StaticRegisterNativesUMaterialGraph()
	{
	}
	IMPLEMENT_CLASS(UMaterialGraph, 3770333152);
	void UMaterialGraphNode_Comment::StaticRegisterNativesUMaterialGraphNode_Comment()
	{
	}
	IMPLEMENT_CLASS(UMaterialGraphNode_Comment, 2729159747);
class UScriptStruct* FNiagaraSchemaAction_NewNode::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern UNREALED_API class UScriptStruct* Z_Construct_UScriptStruct_FNiagaraSchemaAction_NewNode();
		extern UNREALED_API uint32 Get_Z_Construct_UScriptStruct_FNiagaraSchemaAction_NewNode_CRC();
		extern UNREALED_API class UPackage* Z_Construct_UPackage_UnrealEd();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FNiagaraSchemaAction_NewNode, Z_Construct_UPackage_UnrealEd(), TEXT("NiagaraSchemaAction_NewNode"), sizeof(FNiagaraSchemaAction_NewNode), Get_Z_Construct_UScriptStruct_FNiagaraSchemaAction_NewNode_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FNiagaraSchemaAction_NewNode(FNiagaraSchemaAction_NewNode::StaticStruct, TEXT("/Script/UnrealEd"));
static struct FScriptStruct_UnrealEd_StaticRegisterNativesFNiagaraSchemaAction_NewNode
{
	FScriptStruct_UnrealEd_StaticRegisterNativesFNiagaraSchemaAction_NewNode()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("NiagaraSchemaAction_NewNode")),new UScriptStruct::TCppStructOps<FNiagaraSchemaAction_NewNode>);
	}
} ScriptStruct_UnrealEd_StaticRegisterNativesFNiagaraSchemaAction_NewNode;
	void UEdGraphSchema_Niagara::StaticRegisterNativesUEdGraphSchema_Niagara()
	{
	}
	IMPLEMENT_CLASS(UEdGraphSchema_Niagara, 316543188);
class UScriptStruct* FActorFolderProps::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern UNREALED_API class UScriptStruct* Z_Construct_UScriptStruct_FActorFolderProps();
		extern UNREALED_API uint32 Get_Z_Construct_UScriptStruct_FActorFolderProps_CRC();
		extern UNREALED_API class UPackage* Z_Construct_UPackage_UnrealEd();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FActorFolderProps, Z_Construct_UPackage_UnrealEd(), TEXT("ActorFolderProps"), sizeof(FActorFolderProps), Get_Z_Construct_UScriptStruct_FActorFolderProps_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FActorFolderProps(FActorFolderProps::StaticStruct, TEXT("/Script/UnrealEd"));
static struct FScriptStruct_UnrealEd_StaticRegisterNativesFActorFolderProps
{
	FScriptStruct_UnrealEd_StaticRegisterNativesFActorFolderProps()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("ActorFolderProps")),new UScriptStruct::TCppStructOps<FActorFolderProps>);
	}
} ScriptStruct_UnrealEd_StaticRegisterNativesFActorFolderProps;
	void UEditorActorFolders::StaticRegisterNativesUEditorActorFolders()
	{
	}
	IMPLEMENT_CLASS(UEditorActorFolders, 3103244282);
	void UEditorAnimBaseObj::StaticRegisterNativesUEditorAnimBaseObj()
	{
	}
	IMPLEMENT_CLASS(UEditorAnimBaseObj, 802731840);
	void UEditorAnimCompositeSegment::StaticRegisterNativesUEditorAnimCompositeSegment()
	{
	}
	IMPLEMENT_CLASS(UEditorAnimCompositeSegment, 2404525386);
	void UEditorAnimSegment::StaticRegisterNativesUEditorAnimSegment()
	{
	}
	IMPLEMENT_CLASS(UEditorAnimSegment, 1036775470);
	void UEditorCompositeSection::StaticRegisterNativesUEditorCompositeSection()
	{
	}
	IMPLEMENT_CLASS(UEditorCompositeSection, 1021604084);
	void UEditorNotifyObject::StaticRegisterNativesUEditorNotifyObject()
	{
	}
	IMPLEMENT_CLASS(UEditorNotifyObject, 3442498980);
	void UEditorBrushBuilder::StaticRegisterNativesUEditorBrushBuilder()
	{
	}
	IMPLEMENT_CLASS(UEditorBrushBuilder, 3169338608);
	void UConeBuilder::StaticRegisterNativesUConeBuilder()
	{
	}
	IMPLEMENT_CLASS(UConeBuilder, 1965421253);
	void UCubeBuilder::StaticRegisterNativesUCubeBuilder()
	{
	}
	IMPLEMENT_CLASS(UCubeBuilder, 1368741894);
	void UCurvedStairBuilder::StaticRegisterNativesUCurvedStairBuilder()
	{
	}
	IMPLEMENT_CLASS(UCurvedStairBuilder, 1285944450);
	void UCylinderBuilder::StaticRegisterNativesUCylinderBuilder()
	{
	}
	IMPLEMENT_CLASS(UCylinderBuilder, 3669416550);
	void ULinearStairBuilder::StaticRegisterNativesULinearStairBuilder()
	{
	}
	IMPLEMENT_CLASS(ULinearStairBuilder, 3481746131);
static class UEnum* ESheetAxis_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern UNREALED_API class UEnum* Z_Construct_UEnum_UnrealEd_ESheetAxis();
		extern UNREALED_API class UPackage* Z_Construct_UPackage_UnrealEd();
		Singleton = GetStaticEnum(Z_Construct_UEnum_UnrealEd_ESheetAxis, Z_Construct_UPackage_UnrealEd(), TEXT("ESheetAxis"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ESheetAxis(ESheetAxis_StaticEnum, TEXT("/Script/UnrealEd"));
	void USheetBuilder::StaticRegisterNativesUSheetBuilder()
	{
	}
	IMPLEMENT_CLASS(USheetBuilder, 3301542586);
	void USpiralStairBuilder::StaticRegisterNativesUSpiralStairBuilder()
	{
	}
	IMPLEMENT_CLASS(USpiralStairBuilder, 3957147218);
	void UTetrahedronBuilder::StaticRegisterNativesUTetrahedronBuilder()
	{
	}
	IMPLEMENT_CLASS(UTetrahedronBuilder, 1163750430);
	void UVolumetricBuilder::StaticRegisterNativesUVolumetricBuilder()
	{
	}
	IMPLEMENT_CLASS(UVolumetricBuilder, 2334831869);
	void UEditorPerProjectUserSettings::StaticRegisterNativesUEditorPerProjectUserSettings()
	{
	}
	IMPLEMENT_CLASS(UEditorPerProjectUserSettings, 3033501577);
	void UTransactor::StaticRegisterNativesUTransactor()
	{
	}
	IMPLEMENT_CLASS(UTransactor, 1482903094);
static class UEnum* EPlayOnLaunchConfiguration_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern UNREALED_API class UEnum* Z_Construct_UEnum_UnrealEd_EPlayOnLaunchConfiguration();
		extern UNREALED_API class UPackage* Z_Construct_UPackage_UnrealEd();
		Singleton = GetStaticEnum(Z_Construct_UEnum_UnrealEd_EPlayOnLaunchConfiguration, Z_Construct_UPackage_UnrealEd(), TEXT("EPlayOnLaunchConfiguration"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EPlayOnLaunchConfiguration(EPlayOnLaunchConfiguration_StaticEnum, TEXT("/Script/UnrealEd"));
static class UEnum* EPlayOnBuildMode_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern UNREALED_API class UEnum* Z_Construct_UEnum_UnrealEd_EPlayOnBuildMode();
		extern UNREALED_API class UPackage* Z_Construct_UPackage_UnrealEd();
		Singleton = GetStaticEnum(Z_Construct_UEnum_UnrealEd_EPlayOnBuildMode, Z_Construct_UPackage_UnrealEd(), TEXT("EPlayOnBuildMode"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EPlayOnBuildMode(EPlayOnBuildMode_StaticEnum, TEXT("/Script/UnrealEd"));
static class UEnum* EPlayNetMode_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern UNREALED_API class UEnum* Z_Construct_UEnum_UnrealEd_EPlayNetMode();
		extern UNREALED_API class UPackage* Z_Construct_UPackage_UnrealEd();
		Singleton = GetStaticEnum(Z_Construct_UEnum_UnrealEd_EPlayNetMode, Z_Construct_UPackage_UnrealEd(), TEXT("EPlayNetMode"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EPlayNetMode(EPlayNetMode_StaticEnum, TEXT("/Script/UnrealEd"));
static class UEnum* EPlayModeType_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern UNREALED_API class UEnum* Z_Construct_UEnum_UnrealEd_EPlayModeType();
		extern UNREALED_API class UPackage* Z_Construct_UPackage_UnrealEd();
		Singleton = GetStaticEnum(Z_Construct_UEnum_UnrealEd_EPlayModeType, Z_Construct_UPackage_UnrealEd(), TEXT("EPlayModeType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EPlayModeType(EPlayModeType_StaticEnum, TEXT("/Script/UnrealEd"));
static class UEnum* EPlayModeLocations_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern UNREALED_API class UEnum* Z_Construct_UEnum_UnrealEd_EPlayModeLocations();
		extern UNREALED_API class UPackage* Z_Construct_UPackage_UnrealEd();
		Singleton = GetStaticEnum(Z_Construct_UEnum_UnrealEd_EPlayModeLocations, Z_Construct_UPackage_UnrealEd(), TEXT("EPlayModeLocations"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EPlayModeLocations(EPlayModeLocations_StaticEnum, TEXT("/Script/UnrealEd"));
static class UEnum* ELaunchModeType_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern UNREALED_API class UEnum* Z_Construct_UEnum_UnrealEd_ELaunchModeType();
		extern UNREALED_API class UPackage* Z_Construct_UPackage_UnrealEd();
		Singleton = GetStaticEnum(Z_Construct_UEnum_UnrealEd_ELaunchModeType, Z_Construct_UPackage_UnrealEd(), TEXT("ELaunchModeType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ELaunchModeType(ELaunchModeType_StaticEnum, TEXT("/Script/UnrealEd"));
static class UEnum* ELabelAnchorMode_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern UNREALED_API class UEnum* Z_Construct_UEnum_UnrealEd_ELabelAnchorMode();
		extern UNREALED_API class UPackage* Z_Construct_UPackage_UnrealEd();
		Singleton = GetStaticEnum(Z_Construct_UEnum_UnrealEd_ELabelAnchorMode, Z_Construct_UPackage_UnrealEd(), TEXT("ELabelAnchorMode"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ELabelAnchorMode(ELabelAnchorMode_StaticEnum, TEXT("/Script/UnrealEd"));
class UScriptStruct* FPlayScreenResolution::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern UNREALED_API class UScriptStruct* Z_Construct_UScriptStruct_FPlayScreenResolution();
		extern UNREALED_API uint32 Get_Z_Construct_UScriptStruct_FPlayScreenResolution_CRC();
		extern UNREALED_API class UPackage* Z_Construct_UPackage_UnrealEd();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FPlayScreenResolution, Z_Construct_UPackage_UnrealEd(), TEXT("PlayScreenResolution"), sizeof(FPlayScreenResolution), Get_Z_Construct_UScriptStruct_FPlayScreenResolution_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FPlayScreenResolution(FPlayScreenResolution::StaticStruct, TEXT("/Script/UnrealEd"));
static struct FScriptStruct_UnrealEd_StaticRegisterNativesFPlayScreenResolution
{
	FScriptStruct_UnrealEd_StaticRegisterNativesFPlayScreenResolution()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("PlayScreenResolution")),new UScriptStruct::TCppStructOps<FPlayScreenResolution>);
	}
} ScriptStruct_UnrealEd_StaticRegisterNativesFPlayScreenResolution;
	void ULevelEditorPlaySettings::StaticRegisterNativesULevelEditorPlaySettings()
	{
	}
	IMPLEMENT_CLASS(ULevelEditorPlaySettings, 2368334116);
static class UEnum* EMeasuringToolUnits_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern UNREALED_API class UEnum* Z_Construct_UEnum_UnrealEd_EMeasuringToolUnits();
		extern UNREALED_API class UPackage* Z_Construct_UPackage_UnrealEd();
		Singleton = GetStaticEnum(Z_Construct_UEnum_UnrealEd_EMeasuringToolUnits, Z_Construct_UPackage_UnrealEd(), TEXT("EMeasuringToolUnits"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EMeasuringToolUnits(EMeasuringToolUnits_StaticEnum, TEXT("/Script/UnrealEd"));
static class UEnum* ELandscapeFoliageEditorControlType_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern UNREALED_API class UEnum* Z_Construct_UEnum_UnrealEd_ELandscapeFoliageEditorControlType();
		extern UNREALED_API class UPackage* Z_Construct_UPackage_UnrealEd();
		Singleton = GetStaticEnum(Z_Construct_UEnum_UnrealEd_ELandscapeFoliageEditorControlType, Z_Construct_UPackage_UnrealEd(), TEXT("ELandscapeFoliageEditorControlType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ELandscapeFoliageEditorControlType(ELandscapeFoliageEditorControlType_StaticEnum, TEXT("/Script/UnrealEd"));
static class UEnum* EWASDType_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern UNREALED_API class UEnum* Z_Construct_UEnum_UnrealEd_EWASDType();
		extern UNREALED_API class UPackage* Z_Construct_UPackage_UnrealEd();
		Singleton = GetStaticEnum(Z_Construct_UEnum_UnrealEd_EWASDType, Z_Construct_UPackage_UnrealEd(), TEXT("EWASDType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EWASDType(EWASDType_StaticEnum, TEXT("/Script/UnrealEd"));
static class UEnum* ERotationGridMode_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern UNREALED_API class UEnum* Z_Construct_UEnum_UnrealEd_ERotationGridMode();
		extern UNREALED_API class UPackage* Z_Construct_UPackage_UnrealEd();
		Singleton = GetStaticEnum(Z_Construct_UEnum_UnrealEd_ERotationGridMode, Z_Construct_UPackage_UnrealEd(), TEXT("ERotationGridMode"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ERotationGridMode(ERotationGridMode_StaticEnum, TEXT("/Script/UnrealEd"));
class UScriptStruct* FSnapToSurfaceSettings::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern UNREALED_API class UScriptStruct* Z_Construct_UScriptStruct_FSnapToSurfaceSettings();
		extern UNREALED_API uint32 Get_Z_Construct_UScriptStruct_FSnapToSurfaceSettings_CRC();
		extern UNREALED_API class UPackage* Z_Construct_UPackage_UnrealEd();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FSnapToSurfaceSettings, Z_Construct_UPackage_UnrealEd(), TEXT("SnapToSurfaceSettings"), sizeof(FSnapToSurfaceSettings), Get_Z_Construct_UScriptStruct_FSnapToSurfaceSettings_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FSnapToSurfaceSettings(FSnapToSurfaceSettings::StaticStruct, TEXT("/Script/UnrealEd"));
static struct FScriptStruct_UnrealEd_StaticRegisterNativesFSnapToSurfaceSettings
{
	FScriptStruct_UnrealEd_StaticRegisterNativesFSnapToSurfaceSettings()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("SnapToSurfaceSettings")),new UScriptStruct::TCppStructOps<FSnapToSurfaceSettings>);
	}
} ScriptStruct_UnrealEd_StaticRegisterNativesFSnapToSurfaceSettings;
class UScriptStruct* FLevelEditorViewportInstanceSettingsKeyValuePair::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern UNREALED_API class UScriptStruct* Z_Construct_UScriptStruct_FLevelEditorViewportInstanceSettingsKeyValuePair();
		extern UNREALED_API uint32 Get_Z_Construct_UScriptStruct_FLevelEditorViewportInstanceSettingsKeyValuePair_CRC();
		extern UNREALED_API class UPackage* Z_Construct_UPackage_UnrealEd();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FLevelEditorViewportInstanceSettingsKeyValuePair, Z_Construct_UPackage_UnrealEd(), TEXT("LevelEditorViewportInstanceSettingsKeyValuePair"), sizeof(FLevelEditorViewportInstanceSettingsKeyValuePair), Get_Z_Construct_UScriptStruct_FLevelEditorViewportInstanceSettingsKeyValuePair_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FLevelEditorViewportInstanceSettingsKeyValuePair(FLevelEditorViewportInstanceSettingsKeyValuePair::StaticStruct, TEXT("/Script/UnrealEd"));
static struct FScriptStruct_UnrealEd_StaticRegisterNativesFLevelEditorViewportInstanceSettingsKeyValuePair
{
	FScriptStruct_UnrealEd_StaticRegisterNativesFLevelEditorViewportInstanceSettingsKeyValuePair()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("LevelEditorViewportInstanceSettingsKeyValuePair")),new UScriptStruct::TCppStructOps<FLevelEditorViewportInstanceSettingsKeyValuePair>);
	}
} ScriptStruct_UnrealEd_StaticRegisterNativesFLevelEditorViewportInstanceSettingsKeyValuePair;
class UScriptStruct* FLevelEditorViewportInstanceSettings::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern UNREALED_API class UScriptStruct* Z_Construct_UScriptStruct_FLevelEditorViewportInstanceSettings();
		extern UNREALED_API uint32 Get_Z_Construct_UScriptStruct_FLevelEditorViewportInstanceSettings_CRC();
		extern UNREALED_API class UPackage* Z_Construct_UPackage_UnrealEd();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FLevelEditorViewportInstanceSettings, Z_Construct_UPackage_UnrealEd(), TEXT("LevelEditorViewportInstanceSettings"), sizeof(FLevelEditorViewportInstanceSettings), Get_Z_Construct_UScriptStruct_FLevelEditorViewportInstanceSettings_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FLevelEditorViewportInstanceSettings(FLevelEditorViewportInstanceSettings::StaticStruct, TEXT("/Script/UnrealEd"));
static struct FScriptStruct_UnrealEd_StaticRegisterNativesFLevelEditorViewportInstanceSettings
{
	FScriptStruct_UnrealEd_StaticRegisterNativesFLevelEditorViewportInstanceSettings()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("LevelEditorViewportInstanceSettings")),new UScriptStruct::TCppStructOps<FLevelEditorViewportInstanceSettings>);
	}
} ScriptStruct_UnrealEd_StaticRegisterNativesFLevelEditorViewportInstanceSettings;
	void ULevelEditorViewportSettings::StaticRegisterNativesULevelEditorViewportSettings()
	{
	}
	IMPLEMENT_CLASS(ULevelEditorViewportSettings, 1133219859);
static class UEnum* EPasteTo_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern UNREALED_API class UEnum* Z_Construct_UEnum_UnrealEd_EPasteTo();
		extern UNREALED_API class UPackage* Z_Construct_UPackage_UnrealEd();
		Singleton = GetStaticEnum(Z_Construct_UEnum_UnrealEd_EPasteTo, Z_Construct_UPackage_UnrealEd(), TEXT("EPasteTo"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EPasteTo(EPasteTo_StaticEnum, TEXT("/Script/UnrealEd"));
static class UEnum* EMapSetBrushFlags_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern UNREALED_API class UEnum* Z_Construct_UEnum_UnrealEd_EMapSetBrushFlags();
		extern UNREALED_API class UPackage* Z_Construct_UPackage_UnrealEd();
		Singleton = GetStaticEnum(Z_Construct_UEnum_UnrealEd_EMapSetBrushFlags, Z_Construct_UPackage_UnrealEd(), TEXT("EMapSetBrushFlags"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EMapSetBrushFlags(EMapSetBrushFlags_StaticEnum, TEXT("/Script/UnrealEd"));
class UScriptStruct* FCopySelectedInfo::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern UNREALED_API class UScriptStruct* Z_Construct_UScriptStruct_FCopySelectedInfo();
		extern UNREALED_API uint32 Get_Z_Construct_UScriptStruct_FCopySelectedInfo_CRC();
		extern UNREALED_API class UPackage* Z_Construct_UPackage_UnrealEd();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FCopySelectedInfo, Z_Construct_UPackage_UnrealEd(), TEXT("CopySelectedInfo"), sizeof(FCopySelectedInfo), Get_Z_Construct_UScriptStruct_FCopySelectedInfo_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FCopySelectedInfo(FCopySelectedInfo::StaticStruct, TEXT("/Script/UnrealEd"));
static struct FScriptStruct_UnrealEd_StaticRegisterNativesFCopySelectedInfo
{
	FScriptStruct_UnrealEd_StaticRegisterNativesFCopySelectedInfo()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("CopySelectedInfo")),new UScriptStruct::TCppStructOps<FCopySelectedInfo>);
	}
} ScriptStruct_UnrealEd_StaticRegisterNativesFCopySelectedInfo;
class UScriptStruct* FPIELoginInfo::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern UNREALED_API class UScriptStruct* Z_Construct_UScriptStruct_FPIELoginInfo();
		extern UNREALED_API uint32 Get_Z_Construct_UScriptStruct_FPIELoginInfo_CRC();
		extern UNREALED_API class UPackage* Z_Construct_UPackage_UnrealEd();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FPIELoginInfo, Z_Construct_UPackage_UnrealEd(), TEXT("PIELoginInfo"), sizeof(FPIELoginInfo), Get_Z_Construct_UScriptStruct_FPIELoginInfo_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FPIELoginInfo(FPIELoginInfo::StaticStruct, TEXT("/Script/UnrealEd"));
static struct FScriptStruct_UnrealEd_StaticRegisterNativesFPIELoginInfo
{
	FScriptStruct_UnrealEd_StaticRegisterNativesFPIELoginInfo()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("PIELoginInfo")),new UScriptStruct::TCppStructOps<FPIELoginInfo>);
	}
} ScriptStruct_UnrealEd_StaticRegisterNativesFPIELoginInfo;
class UScriptStruct* FSlatePlayInEditorInfo::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern UNREALED_API class UScriptStruct* Z_Construct_UScriptStruct_FSlatePlayInEditorInfo();
		extern UNREALED_API uint32 Get_Z_Construct_UScriptStruct_FSlatePlayInEditorInfo_CRC();
		extern UNREALED_API class UPackage* Z_Construct_UPackage_UnrealEd();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FSlatePlayInEditorInfo, Z_Construct_UPackage_UnrealEd(), TEXT("SlatePlayInEditorInfo"), sizeof(FSlatePlayInEditorInfo), Get_Z_Construct_UScriptStruct_FSlatePlayInEditorInfo_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FSlatePlayInEditorInfo(FSlatePlayInEditorInfo::StaticStruct, TEXT("/Script/UnrealEd"));
static struct FScriptStruct_UnrealEd_StaticRegisterNativesFSlatePlayInEditorInfo
{
	FScriptStruct_UnrealEd_StaticRegisterNativesFSlatePlayInEditorInfo()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("SlatePlayInEditorInfo")),new UScriptStruct::TCppStructOps<FSlatePlayInEditorInfo>);
	}
} ScriptStruct_UnrealEd_StaticRegisterNativesFSlatePlayInEditorInfo;
	void UEditorEngine::StaticRegisterNativesUEditorEngine()
	{
	}
	IMPLEMENT_CLASS(UEditorEngine, 1264814450);
static class UEnum* EWriteDisallowedWarningState_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern UNREALED_API class UEnum* Z_Construct_UEnum_UnrealEd_EWriteDisallowedWarningState();
		extern UNREALED_API class UPackage* Z_Construct_UPackage_UnrealEd();
		Singleton = GetStaticEnum(Z_Construct_UEnum_UnrealEd_EWriteDisallowedWarningState, Z_Construct_UPackage_UnrealEd(), TEXT("EWriteDisallowedWarningState"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EWriteDisallowedWarningState(EWriteDisallowedWarningState_StaticEnum, TEXT("/Script/UnrealEd"));
static class UEnum* EPackageNotifyState_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern UNREALED_API class UEnum* Z_Construct_UEnum_UnrealEd_EPackageNotifyState();
		extern UNREALED_API class UPackage* Z_Construct_UPackage_UnrealEd();
		Singleton = GetStaticEnum(Z_Construct_UEnum_UnrealEd_EPackageNotifyState, Z_Construct_UPackage_UnrealEd(), TEXT("EPackageNotifyState"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EPackageNotifyState(EPackageNotifyState_StaticEnum, TEXT("/Script/UnrealEd"));
class UScriptStruct* FTemplateMapInfo::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern UNREALED_API class UScriptStruct* Z_Construct_UScriptStruct_FTemplateMapInfo();
		extern UNREALED_API uint32 Get_Z_Construct_UScriptStruct_FTemplateMapInfo_CRC();
		extern UNREALED_API class UPackage* Z_Construct_UPackage_UnrealEd();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FTemplateMapInfo, Z_Construct_UPackage_UnrealEd(), TEXT("TemplateMapInfo"), sizeof(FTemplateMapInfo), Get_Z_Construct_UScriptStruct_FTemplateMapInfo_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FTemplateMapInfo(FTemplateMapInfo::StaticStruct, TEXT("/Script/UnrealEd"));
static struct FScriptStruct_UnrealEd_StaticRegisterNativesFTemplateMapInfo
{
	FScriptStruct_UnrealEd_StaticRegisterNativesFTemplateMapInfo()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("TemplateMapInfo")),new UScriptStruct::TCppStructOps<FTemplateMapInfo>);
	}
} ScriptStruct_UnrealEd_StaticRegisterNativesFTemplateMapInfo;
class UScriptStruct* FClassMoveInfo::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern UNREALED_API class UScriptStruct* Z_Construct_UScriptStruct_FClassMoveInfo();
		extern UNREALED_API uint32 Get_Z_Construct_UScriptStruct_FClassMoveInfo_CRC();
		extern UNREALED_API class UPackage* Z_Construct_UPackage_UnrealEd();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FClassMoveInfo, Z_Construct_UPackage_UnrealEd(), TEXT("ClassMoveInfo"), sizeof(FClassMoveInfo), Get_Z_Construct_UScriptStruct_FClassMoveInfo_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FClassMoveInfo(FClassMoveInfo::StaticStruct, TEXT("/Script/UnrealEd"));
static struct FScriptStruct_UnrealEd_StaticRegisterNativesFClassMoveInfo
{
	FScriptStruct_UnrealEd_StaticRegisterNativesFClassMoveInfo()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("ClassMoveInfo")),new UScriptStruct::TCppStructOps<FClassMoveInfo>);
	}
} ScriptStruct_UnrealEd_StaticRegisterNativesFClassMoveInfo;
	void UUnrealEdEngine::StaticRegisterNativesUUnrealEdEngine()
	{
	}
	IMPLEMENT_CLASS(UUnrealEdEngine, 1716595060);
	void UEditorExperimentalSettings::StaticRegisterNativesUEditorExperimentalSettings()
	{
	}
	IMPLEMENT_CLASS(UEditorExperimentalSettings, 1861143701);
static class UEnum* ELoadLevelAtStartup_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern UNREALED_API class UEnum* Z_Construct_UEnum_UnrealEd_ELoadLevelAtStartup();
		extern UNREALED_API class UPackage* Z_Construct_UPackage_UnrealEd();
		Singleton = GetStaticEnum(Z_Construct_UEnum_UnrealEd_ELoadLevelAtStartup, Z_Construct_UPackage_UnrealEd(), TEXT("ELoadLevelAtStartup"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ELoadLevelAtStartup(ELoadLevelAtStartup_StaticEnum, TEXT("/Script/UnrealEd"));
class UScriptStruct* FAutoReimportDirectoryConfig::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern UNREALED_API class UScriptStruct* Z_Construct_UScriptStruct_FAutoReimportDirectoryConfig();
		extern UNREALED_API uint32 Get_Z_Construct_UScriptStruct_FAutoReimportDirectoryConfig_CRC();
		extern UNREALED_API class UPackage* Z_Construct_UPackage_UnrealEd();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FAutoReimportDirectoryConfig, Z_Construct_UPackage_UnrealEd(), TEXT("AutoReimportDirectoryConfig"), sizeof(FAutoReimportDirectoryConfig), Get_Z_Construct_UScriptStruct_FAutoReimportDirectoryConfig_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FAutoReimportDirectoryConfig(FAutoReimportDirectoryConfig::StaticStruct, TEXT("/Script/UnrealEd"));
static struct FScriptStruct_UnrealEd_StaticRegisterNativesFAutoReimportDirectoryConfig
{
	FScriptStruct_UnrealEd_StaticRegisterNativesFAutoReimportDirectoryConfig()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("AutoReimportDirectoryConfig")),new UScriptStruct::TCppStructOps<FAutoReimportDirectoryConfig>);
	}
} ScriptStruct_UnrealEd_StaticRegisterNativesFAutoReimportDirectoryConfig;
class UScriptStruct* FAutoReimportWildcard::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern UNREALED_API class UScriptStruct* Z_Construct_UScriptStruct_FAutoReimportWildcard();
		extern UNREALED_API uint32 Get_Z_Construct_UScriptStruct_FAutoReimportWildcard_CRC();
		extern UNREALED_API class UPackage* Z_Construct_UPackage_UnrealEd();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FAutoReimportWildcard, Z_Construct_UPackage_UnrealEd(), TEXT("AutoReimportWildcard"), sizeof(FAutoReimportWildcard), Get_Z_Construct_UScriptStruct_FAutoReimportWildcard_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FAutoReimportWildcard(FAutoReimportWildcard::StaticStruct, TEXT("/Script/UnrealEd"));
static struct FScriptStruct_UnrealEd_StaticRegisterNativesFAutoReimportWildcard
{
	FScriptStruct_UnrealEd_StaticRegisterNativesFAutoReimportWildcard()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("AutoReimportWildcard")),new UScriptStruct::TCppStructOps<FAutoReimportWildcard>);
	}
} ScriptStruct_UnrealEd_StaticRegisterNativesFAutoReimportWildcard;
	void UEditorLoadingSavingSettings::StaticRegisterNativesUEditorLoadingSavingSettings()
	{
	}
	IMPLEMENT_CLASS(UEditorLoadingSavingSettings, 2750403396);
	void UEditorMiscSettings::StaticRegisterNativesUEditorMiscSettings()
	{
	}
	IMPLEMENT_CLASS(UEditorMiscSettings, 3028446848);
	void UEditorParentPlayerListObj::StaticRegisterNativesUEditorParentPlayerListObj()
	{
	}
	IMPLEMENT_CLASS(UEditorParentPlayerListObj, 3218140314);
static class UEnum* ELevelEditor2DAxis_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern UNREALED_API class UEnum* Z_Construct_UEnum_UnrealEd_ELevelEditor2DAxis();
		extern UNREALED_API class UPackage* Z_Construct_UPackage_UnrealEd();
		Singleton = GetStaticEnum(Z_Construct_UEnum_UnrealEd_ELevelEditor2DAxis, Z_Construct_UPackage_UnrealEd(), TEXT("ELevelEditor2DAxis"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ELevelEditor2DAxis(ELevelEditor2DAxis_StaticEnum, TEXT("/Script/UnrealEd"));
static class UEnum* EDefaultLocationUnit_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern UNREALED_API class UEnum* Z_Construct_UEnum_UnrealEd_EDefaultLocationUnit();
		extern UNREALED_API class UPackage* Z_Construct_UPackage_UnrealEd();
		Singleton = GetStaticEnum(Z_Construct_UEnum_UnrealEd_EDefaultLocationUnit, Z_Construct_UPackage_UnrealEd(), TEXT("EDefaultLocationUnit"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EDefaultLocationUnit(EDefaultLocationUnit_StaticEnum, TEXT("/Script/UnrealEd"));
static class UEnum* EUnitDisplay_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern UNREALED_API class UEnum* Z_Construct_UEnum_UnrealEd_EUnitDisplay();
		extern UNREALED_API class UPackage* Z_Construct_UPackage_UnrealEd();
		Singleton = GetStaticEnum(Z_Construct_UEnum_UnrealEd_EUnitDisplay, Z_Construct_UPackage_UnrealEd(), TEXT("EUnitDisplay"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EUnitDisplay(EUnitDisplay_StaticEnum, TEXT("/Script/UnrealEd"));
class UScriptStruct* FMode2DLayer::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern UNREALED_API class UScriptStruct* Z_Construct_UScriptStruct_FMode2DLayer();
		extern UNREALED_API uint32 Get_Z_Construct_UScriptStruct_FMode2DLayer_CRC();
		extern UNREALED_API class UPackage* Z_Construct_UPackage_UnrealEd();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMode2DLayer, Z_Construct_UPackage_UnrealEd(), TEXT("Mode2DLayer"), sizeof(FMode2DLayer), Get_Z_Construct_UScriptStruct_FMode2DLayer_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMode2DLayer(FMode2DLayer::StaticStruct, TEXT("/Script/UnrealEd"));
static struct FScriptStruct_UnrealEd_StaticRegisterNativesFMode2DLayer
{
	FScriptStruct_UnrealEd_StaticRegisterNativesFMode2DLayer()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("Mode2DLayer")),new UScriptStruct::TCppStructOps<FMode2DLayer>);
	}
} ScriptStruct_UnrealEd_StaticRegisterNativesFMode2DLayer;
	void UEditorProjectAppearanceSettings::StaticRegisterNativesUEditorProjectAppearanceSettings()
	{
	}
	IMPLEMENT_CLASS(UEditorProjectAppearanceSettings, 809742568);
	void ULevelEditor2DSettings::StaticRegisterNativesULevelEditor2DSettings()
	{
	}
	IMPLEMENT_CLASS(ULevelEditor2DSettings, 474430755);
	void UEditorSettings::StaticRegisterNativesUEditorSettings()
	{
	}
	IMPLEMENT_CLASS(UEditorSettings, 3376565729);
class UScriptStruct* FSkeletonNotifyDependentAnimations::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern UNREALED_API class UScriptStruct* Z_Construct_UScriptStruct_FSkeletonNotifyDependentAnimations();
		extern UNREALED_API uint32 Get_Z_Construct_UScriptStruct_FSkeletonNotifyDependentAnimations_CRC();
		extern UNREALED_API class UPackage* Z_Construct_UPackage_UnrealEd();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FSkeletonNotifyDependentAnimations, Z_Construct_UPackage_UnrealEd(), TEXT("SkeletonNotifyDependentAnimations"), sizeof(FSkeletonNotifyDependentAnimations), Get_Z_Construct_UScriptStruct_FSkeletonNotifyDependentAnimations_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FSkeletonNotifyDependentAnimations(FSkeletonNotifyDependentAnimations::StaticStruct, TEXT("/Script/UnrealEd"));
static struct FScriptStruct_UnrealEd_StaticRegisterNativesFSkeletonNotifyDependentAnimations
{
	FScriptStruct_UnrealEd_StaticRegisterNativesFSkeletonNotifyDependentAnimations()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("SkeletonNotifyDependentAnimations")),new UScriptStruct::TCppStructOps<FSkeletonNotifyDependentAnimations>);
	}
} ScriptStruct_UnrealEd_StaticRegisterNativesFSkeletonNotifyDependentAnimations;
	void UEditorSkeletonNotifyObj::StaticRegisterNativesUEditorSkeletonNotifyObj()
	{
	}
	IMPLEMENT_CLASS(UEditorSkeletonNotifyObj, 3865410404);
	void UExportTextContainer::StaticRegisterNativesUExportTextContainer()
	{
	}
	IMPLEMENT_CLASS(UExportTextContainer, 2766338583);
	void UFactory::StaticRegisterNativesUFactory()
	{
	}
	IMPLEMENT_CLASS(UFactory, 165808399);
	void UAnimBlueprintFactory::StaticRegisterNativesUAnimBlueprintFactory()
	{
	}
	IMPLEMENT_CLASS(UAnimBlueprintFactory, 912204852);
	void UAnimCompositeFactory::StaticRegisterNativesUAnimCompositeFactory()
	{
	}
	IMPLEMENT_CLASS(UAnimCompositeFactory, 3004501296);
	void UAnimMontageFactory::StaticRegisterNativesUAnimMontageFactory()
	{
	}
	IMPLEMENT_CLASS(UAnimMontageFactory, 4017147696);
	void UAnimSequenceFactory::StaticRegisterNativesUAnimSequenceFactory()
	{
	}
	IMPLEMENT_CLASS(UAnimSequenceFactory, 2285797166);
	void UBlendSpaceFactory1D::StaticRegisterNativesUBlendSpaceFactory1D()
	{
	}
	IMPLEMENT_CLASS(UBlendSpaceFactory1D, 3801892849);
	void UAimOffsetBlendSpaceFactory1D::StaticRegisterNativesUAimOffsetBlendSpaceFactory1D()
	{
	}
	IMPLEMENT_CLASS(UAimOffsetBlendSpaceFactory1D, 3706683942);
	void UBlendSpaceFactoryNew::StaticRegisterNativesUBlendSpaceFactoryNew()
	{
	}
	IMPLEMENT_CLASS(UBlendSpaceFactoryNew, 3195696468);
	void UAimOffsetBlendSpaceFactoryNew::StaticRegisterNativesUAimOffsetBlendSpaceFactoryNew()
	{
	}
	IMPLEMENT_CLASS(UAimOffsetBlendSpaceFactoryNew, 1401091967);
	void UBlueprintFactory::StaticRegisterNativesUBlueprintFactory()
	{
	}
	IMPLEMENT_CLASS(UBlueprintFactory, 380698351);
	void UBlueprintFunctionLibraryFactory::StaticRegisterNativesUBlueprintFunctionLibraryFactory()
	{
	}
	IMPLEMENT_CLASS(UBlueprintFunctionLibraryFactory, 3301054445);
	void UBlueprintMacroFactory::StaticRegisterNativesUBlueprintMacroFactory()
	{
	}
	IMPLEMENT_CLASS(UBlueprintMacroFactory, 3015647670);
	void UBlueprintInterfaceFactory::StaticRegisterNativesUBlueprintInterfaceFactory()
	{
	}
	IMPLEMENT_CLASS(UBlueprintInterfaceFactory, 3364422141);
	void UCameraAnimFactory::StaticRegisterNativesUCameraAnimFactory()
	{
	}
	IMPLEMENT_CLASS(UCameraAnimFactory, 3157721768);
	void UCSVImportFactory::StaticRegisterNativesUCSVImportFactory()
	{
	}
	IMPLEMENT_CLASS(UCSVImportFactory, 2471997643);
	void UReimportCurveFactory::StaticRegisterNativesUReimportCurveFactory()
	{
	}
	IMPLEMENT_CLASS(UReimportCurveFactory, 1605197173);
	void UReimportCurveTableFactory::StaticRegisterNativesUReimportCurveTableFactory()
	{
	}
	IMPLEMENT_CLASS(UReimportCurveTableFactory, 2166548915);
	void UReimportDataTableFactory::StaticRegisterNativesUReimportDataTableFactory()
	{
	}
	IMPLEMENT_CLASS(UReimportDataTableFactory, 3541754812);
	void UCurveFactory::StaticRegisterNativesUCurveFactory()
	{
	}
	IMPLEMENT_CLASS(UCurveFactory, 3809384234);
	void UCurveFloatFactory::StaticRegisterNativesUCurveFloatFactory()
	{
	}
	IMPLEMENT_CLASS(UCurveFloatFactory, 3110065713);
	void UCurveImportFactory::StaticRegisterNativesUCurveImportFactory()
	{
	}
	IMPLEMENT_CLASS(UCurveImportFactory, 473840346);
	void UDataAssetFactory::StaticRegisterNativesUDataAssetFactory()
	{
	}
	IMPLEMENT_CLASS(UDataAssetFactory, 882298788);
	void UDataTableFactory::StaticRegisterNativesUDataTableFactory()
	{
	}
	IMPLEMENT_CLASS(UDataTableFactory, 326508743);
	void UDestructibleMeshFactory::StaticRegisterNativesUDestructibleMeshFactory()
	{
	}
	IMPLEMENT_CLASS(UDestructibleMeshFactory, 2566097613);
	void UReimportDestructibleMeshFactory::StaticRegisterNativesUReimportDestructibleMeshFactory()
	{
	}
	IMPLEMENT_CLASS(UReimportDestructibleMeshFactory, 4277841004);
	void UDialogueVoiceFactory::StaticRegisterNativesUDialogueVoiceFactory()
	{
	}
	IMPLEMENT_CLASS(UDialogueVoiceFactory, 2492997972);
	void UDialogueWaveFactory::StaticRegisterNativesUDialogueWaveFactory()
	{
	}
	IMPLEMENT_CLASS(UDialogueWaveFactory, 1432254744);
	void UEnumFactory::StaticRegisterNativesUEnumFactory()
	{
	}
	IMPLEMENT_CLASS(UEnumFactory, 2660289046);
	void UFbxFactory::StaticRegisterNativesUFbxFactory()
	{
	}
	IMPLEMENT_CLASS(UFbxFactory, 3469474108);
	void UReimportFbxAnimSequenceFactory::StaticRegisterNativesUReimportFbxAnimSequenceFactory()
	{
	}
	IMPLEMENT_CLASS(UReimportFbxAnimSequenceFactory, 1893827569);
	void UReimportFbxSkeletalMeshFactory::StaticRegisterNativesUReimportFbxSkeletalMeshFactory()
	{
	}
	IMPLEMENT_CLASS(UReimportFbxSkeletalMeshFactory, 719642841);
	void UReimportFbxStaticMeshFactory::StaticRegisterNativesUReimportFbxStaticMeshFactory()
	{
	}
	IMPLEMENT_CLASS(UReimportFbxStaticMeshFactory, 3959682636);
	void UFontFactory::StaticRegisterNativesUFontFactory()
	{
	}
	IMPLEMENT_CLASS(UFontFactory, 3061097531);
	void UFontFileImportFactory::StaticRegisterNativesUFontFileImportFactory()
	{
	}
	IMPLEMENT_CLASS(UFontFileImportFactory, 2476026504);
	void UForceFeedbackEffectFactory::StaticRegisterNativesUForceFeedbackEffectFactory()
	{
	}
	IMPLEMENT_CLASS(UForceFeedbackEffectFactory, 2925722973);
	void UHapticFeedbackEffectFactory::StaticRegisterNativesUHapticFeedbackEffectFactory()
	{
	}
	IMPLEMENT_CLASS(UHapticFeedbackEffectFactory, 3736117532);
	void UInterpDataFactoryNew::StaticRegisterNativesUInterpDataFactoryNew()
	{
	}
	IMPLEMENT_CLASS(UInterpDataFactoryNew, 1138733116);
	void ULevelFactory::StaticRegisterNativesULevelFactory()
	{
	}
	IMPLEMENT_CLASS(ULevelFactory, 39735338);
	void UMaterialFactoryNew::StaticRegisterNativesUMaterialFactoryNew()
	{
	}
	IMPLEMENT_CLASS(UMaterialFactoryNew, 2045702958);
	void UMaterialFunctionFactoryNew::StaticRegisterNativesUMaterialFunctionFactoryNew()
	{
	}
	IMPLEMENT_CLASS(UMaterialFunctionFactoryNew, 31459064);
	void UMaterialInstanceConstantFactoryNew::StaticRegisterNativesUMaterialInstanceConstantFactoryNew()
	{
	}
	IMPLEMENT_CLASS(UMaterialInstanceConstantFactoryNew, 1461760371);
	void UMaterialParameterCollectionFactoryNew::StaticRegisterNativesUMaterialParameterCollectionFactoryNew()
	{
	}
	IMPLEMENT_CLASS(UMaterialParameterCollectionFactoryNew, 917264965);
	void UModelFactory::StaticRegisterNativesUModelFactory()
	{
	}
	IMPLEMENT_CLASS(UModelFactory, 228473721);
	void UNiagaraEffectFactoryNew::StaticRegisterNativesUNiagaraEffectFactoryNew()
	{
	}
	IMPLEMENT_CLASS(UNiagaraEffectFactoryNew, 2051945256);
	void UNiagaraScriptFactoryNew::StaticRegisterNativesUNiagaraScriptFactoryNew()
	{
	}
	IMPLEMENT_CLASS(UNiagaraScriptFactoryNew, 672431828);
	void UObjectLibraryFactory::StaticRegisterNativesUObjectLibraryFactory()
	{
	}
	IMPLEMENT_CLASS(UObjectLibraryFactory, 3230225877);
	void UPackageFactory::StaticRegisterNativesUPackageFactory()
	{
	}
	IMPLEMENT_CLASS(UPackageFactory, 1632364099);
	void UPackFactory::StaticRegisterNativesUPackFactory()
	{
	}
	IMPLEMENT_CLASS(UPackFactory, 2088206766);
	void UParticleSystemFactoryNew::StaticRegisterNativesUParticleSystemFactoryNew()
	{
	}
	IMPLEMENT_CLASS(UParticleSystemFactoryNew, 2118029984);
	void UPhysicalMaterialFactoryNew::StaticRegisterNativesUPhysicalMaterialFactoryNew()
	{
	}
	IMPLEMENT_CLASS(UPhysicalMaterialFactoryNew, 2803550831);
	void UPolysFactory::StaticRegisterNativesUPolysFactory()
	{
	}
	IMPLEMENT_CLASS(UPolysFactory, 2223285383);
	void UReverbEffectFactory::StaticRegisterNativesUReverbEffectFactory()
	{
	}
	IMPLEMENT_CLASS(UReverbEffectFactory, 1795163293);
	void USkeletonFactory::StaticRegisterNativesUSkeletonFactory()
	{
	}
	IMPLEMENT_CLASS(USkeletonFactory, 2850998726);
	void USlateBrushAssetFactory::StaticRegisterNativesUSlateBrushAssetFactory()
	{
	}
	IMPLEMENT_CLASS(USlateBrushAssetFactory, 3869372067);
	void USlateWidgetStyleAssetFactory::StaticRegisterNativesUSlateWidgetStyleAssetFactory()
	{
	}
	IMPLEMENT_CLASS(USlateWidgetStyleAssetFactory, 2099183147);
	void USoundAttenuationFactory::StaticRegisterNativesUSoundAttenuationFactory()
	{
	}
	IMPLEMENT_CLASS(USoundAttenuationFactory, 614147202);
	void USoundClassFactory::StaticRegisterNativesUSoundClassFactory()
	{
	}
	IMPLEMENT_CLASS(USoundClassFactory, 694366984);
	void USoundCueFactoryNew::StaticRegisterNativesUSoundCueFactoryNew()
	{
	}
	IMPLEMENT_CLASS(USoundCueFactoryNew, 1485665950);
	void USoundFactory::StaticRegisterNativesUSoundFactory()
	{
	}
	IMPLEMENT_CLASS(USoundFactory, 1640931731);
	void UReimportSoundFactory::StaticRegisterNativesUReimportSoundFactory()
	{
	}
	IMPLEMENT_CLASS(UReimportSoundFactory, 968447010);
	void USoundMixFactory::StaticRegisterNativesUSoundMixFactory()
	{
	}
	IMPLEMENT_CLASS(USoundMixFactory, 339640338);
	void USoundSurroundFactory::StaticRegisterNativesUSoundSurroundFactory()
	{
	}
	IMPLEMENT_CLASS(USoundSurroundFactory, 2001744341);
	void UReimportSoundSurroundFactory::StaticRegisterNativesUReimportSoundSurroundFactory()
	{
	}
	IMPLEMENT_CLASS(UReimportSoundSurroundFactory, 3624279605);
	void UStructureFactory::StaticRegisterNativesUStructureFactory()
	{
	}
	IMPLEMENT_CLASS(UStructureFactory, 2174250151);
	void USubsurfaceProfileFactory::StaticRegisterNativesUSubsurfaceProfileFactory()
	{
	}
	IMPLEMENT_CLASS(USubsurfaceProfileFactory, 3364457037);
	void UTexture2DFactoryNew::StaticRegisterNativesUTexture2DFactoryNew()
	{
	}
	IMPLEMENT_CLASS(UTexture2DFactoryNew, 84192012);
	void UTextureFactory::StaticRegisterNativesUTextureFactory()
	{
	}
	IMPLEMENT_CLASS(UTextureFactory, 1932675305);
	void UReimportTextureFactory::StaticRegisterNativesUReimportTextureFactory()
	{
	}
	IMPLEMENT_CLASS(UReimportTextureFactory, 3901367340);
	void UTrueTypeFontFactory::StaticRegisterNativesUTrueTypeFontFactory()
	{
	}
	IMPLEMENT_CLASS(UTrueTypeFontFactory, 279056893);
	void UTextureRenderTargetCubeFactoryNew::StaticRegisterNativesUTextureRenderTargetCubeFactoryNew()
	{
	}
	IMPLEMENT_CLASS(UTextureRenderTargetCubeFactoryNew, 1736501906);
	void UTextureRenderTargetFactoryNew::StaticRegisterNativesUTextureRenderTargetFactoryNew()
	{
	}
	IMPLEMENT_CLASS(UTextureRenderTargetFactoryNew, 3465803541);
	void UTouchInterfaceFactory::StaticRegisterNativesUTouchInterfaceFactory()
	{
	}
	IMPLEMENT_CLASS(UTouchInterfaceFactory, 1198717118);
	void UVectorFieldStaticFactory::StaticRegisterNativesUVectorFieldStaticFactory()
	{
	}
	IMPLEMENT_CLASS(UVectorFieldStaticFactory, 1098727797);
	void UReimportVectorFieldStaticFactory::StaticRegisterNativesUReimportVectorFieldStaticFactory()
	{
	}
	IMPLEMENT_CLASS(UReimportVectorFieldStaticFactory, 1880286668);
	void UWorldFactory::StaticRegisterNativesUWorldFactory()
	{
	}
	IMPLEMENT_CLASS(UWorldFactory, 2380100437);
	void UFbxAssetImportData::StaticRegisterNativesUFbxAssetImportData()
	{
	}
	IMPLEMENT_CLASS(UFbxAssetImportData, 1909460742);
static class UEnum* EFBXAnimationLengthImportType_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern UNREALED_API class UEnum* Z_Construct_UEnum_UnrealEd_EFBXAnimationLengthImportType();
		extern UNREALED_API class UPackage* Z_Construct_UPackage_UnrealEd();
		Singleton = GetStaticEnum(Z_Construct_UEnum_UnrealEd_EFBXAnimationLengthImportType, Z_Construct_UPackage_UnrealEd(), TEXT("EFBXAnimationLengthImportType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EFBXAnimationLengthImportType(EFBXAnimationLengthImportType_StaticEnum, TEXT("/Script/UnrealEd"));
	void UFbxAnimSequenceImportData::StaticRegisterNativesUFbxAnimSequenceImportData()
	{
	}
	IMPLEMENT_CLASS(UFbxAnimSequenceImportData, 181622559);
static class UEnum* EFBXNormalGenerationMethod_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern UNREALED_API class UEnum* Z_Construct_UEnum_UnrealEd_EFBXNormalGenerationMethod();
		extern UNREALED_API class UPackage* Z_Construct_UPackage_UnrealEd();
		Singleton = GetStaticEnum(Z_Construct_UEnum_UnrealEd_EFBXNormalGenerationMethod, Z_Construct_UPackage_UnrealEd(), TEXT("EFBXNormalGenerationMethod"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EFBXNormalGenerationMethod(EFBXNormalGenerationMethod_StaticEnum, TEXT("/Script/UnrealEd"));
static class UEnum* EFBXNormalImportMethod_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern UNREALED_API class UEnum* Z_Construct_UEnum_UnrealEd_EFBXNormalImportMethod();
		extern UNREALED_API class UPackage* Z_Construct_UPackage_UnrealEd();
		Singleton = GetStaticEnum(Z_Construct_UEnum_UnrealEd_EFBXNormalImportMethod, Z_Construct_UPackage_UnrealEd(), TEXT("EFBXNormalImportMethod"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EFBXNormalImportMethod(EFBXNormalImportMethod_StaticEnum, TEXT("/Script/UnrealEd"));
	void UFbxMeshImportData::StaticRegisterNativesUFbxMeshImportData()
	{
	}
	IMPLEMENT_CLASS(UFbxMeshImportData, 3556540076);
	void UFbxSkeletalMeshImportData::StaticRegisterNativesUFbxSkeletalMeshImportData()
	{
	}
	IMPLEMENT_CLASS(UFbxSkeletalMeshImportData, 3199895553);
static class UEnum* EVertexColorImportOption_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern UNREALED_API class UEnum* Z_Construct_UEnum_UnrealEd_EVertexColorImportOption();
		extern UNREALED_API class UPackage* Z_Construct_UPackage_UnrealEd();
		Singleton = GetStaticEnum(Z_Construct_UEnum_UnrealEd_EVertexColorImportOption, Z_Construct_UPackage_UnrealEd(), TEXT("EVertexColorImportOption"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EVertexColorImportOption(EVertexColorImportOption_StaticEnum, TEXT("/Script/UnrealEd"));
	void UFbxStaticMeshImportData::StaticRegisterNativesUFbxStaticMeshImportData()
	{
	}
	IMPLEMENT_CLASS(UFbxStaticMeshImportData, 2342817406);
	void UFbxTextureImportData::StaticRegisterNativesUFbxTextureImportData()
	{
	}
	IMPLEMENT_CLASS(UFbxTextureImportData, 410622546);
static class UEnum* EFBXImportType_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern UNREALED_API class UEnum* Z_Construct_UEnum_UnrealEd_EFBXImportType();
		extern UNREALED_API class UPackage* Z_Construct_UPackage_UnrealEd();
		Singleton = GetStaticEnum(Z_Construct_UEnum_UnrealEd_EFBXImportType, Z_Construct_UPackage_UnrealEd(), TEXT("EFBXImportType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EFBXImportType(EFBXImportType_StaticEnum, TEXT("/Script/UnrealEd"));
	void UFbxImportUI::StaticRegisterNativesUFbxImportUI()
	{
	}
	IMPLEMENT_CLASS(UFbxImportUI, 230838851);
	void UFileServerCommandlet::StaticRegisterNativesUFileServerCommandlet()
	{
	}
	IMPLEMENT_CLASS(UFileServerCommandlet, 2815745957);
	void UFixupRedirectsCommandlet::StaticRegisterNativesUFixupRedirectsCommandlet()
	{
	}
	IMPLEMENT_CLASS(UFixupRedirectsCommandlet, 2241451800);
	void UGatherTextCommandletBase::StaticRegisterNativesUGatherTextCommandletBase()
	{
	}
	IMPLEMENT_CLASS(UGatherTextCommandletBase, 891334643);
	void UGatherTextCommandlet::StaticRegisterNativesUGatherTextCommandlet()
	{
	}
	IMPLEMENT_CLASS(UGatherTextCommandlet, 2203398238);
	void UGatherTextFromAssetsCommandlet::StaticRegisterNativesUGatherTextFromAssetsCommandlet()
	{
	}
	IMPLEMENT_CLASS(UGatherTextFromAssetsCommandlet, 858045139);
	void UGatherTextFromMetaDataCommandlet::StaticRegisterNativesUGatherTextFromMetaDataCommandlet()
	{
	}
	IMPLEMENT_CLASS(UGatherTextFromMetaDataCommandlet, 2228253564);
	void UGatherTextFromSourceCommandlet::StaticRegisterNativesUGatherTextFromSourceCommandlet()
	{
	}
	IMPLEMENT_CLASS(UGatherTextFromSourceCommandlet, 1245188679);
	void UGenerateGatherArchiveCommandlet::StaticRegisterNativesUGenerateGatherArchiveCommandlet()
	{
	}
	IMPLEMENT_CLASS(UGenerateGatherArchiveCommandlet, 2581439789);
	void UGenerateGatherManifestCommandlet::StaticRegisterNativesUGenerateGatherManifestCommandlet()
	{
	}
	IMPLEMENT_CLASS(UGenerateGatherManifestCommandlet, 1884430603);
	void UGenerateTextLocalizationReportCommandlet::StaticRegisterNativesUGenerateTextLocalizationReportCommandlet()
	{
	}
	IMPLEMENT_CLASS(UGenerateTextLocalizationReportCommandlet, 187098507);
	void UGenerateTextLocalizationResourceCommandlet::StaticRegisterNativesUGenerateTextLocalizationResourceCommandlet()
	{
	}
	IMPLEMENT_CLASS(UGenerateTextLocalizationResourceCommandlet, 1479947621);
	void UInternationalizationConditioningCommandlet::StaticRegisterNativesUInternationalizationConditioningCommandlet()
	{
	}
	IMPLEMENT_CLASS(UInternationalizationConditioningCommandlet, 2530403618);
	void UInternationalizationExportCommandlet::StaticRegisterNativesUInternationalizationExportCommandlet()
	{
	}
	IMPLEMENT_CLASS(UInternationalizationExportCommandlet, 3225929361);
	void URepairLocalizationDataCommandlet::StaticRegisterNativesURepairLocalizationDataCommandlet()
	{
	}
	IMPLEMENT_CLASS(URepairLocalizationDataCommandlet, 2696390927);
	void UGenerateBlueprintAPICommandlet::StaticRegisterNativesUGenerateBlueprintAPICommandlet()
	{
	}
	IMPLEMENT_CLASS(UGenerateBlueprintAPICommandlet, 1232617991);
	void UGenerateDistillFileSetsCommandlet::StaticRegisterNativesUGenerateDistillFileSetsCommandlet()
	{
	}
	IMPLEMENT_CLASS(UGenerateDistillFileSetsCommandlet, 2111565469);
	void AGroupActor::StaticRegisterNativesAGroupActor()
	{
	}
	IMPLEMENT_CLASS(AGroupActor, 358931923);
	void AHierarchicalLODVolume::StaticRegisterNativesAHierarchicalLODVolume()
	{
	}
	IMPLEMENT_CLASS(AHierarchicalLODVolume, 759070226);
	void ULevelEditorMiscSettings::StaticRegisterNativesULevelEditorMiscSettings()
	{
	}
	IMPLEMENT_CLASS(ULevelEditorMiscSettings, 133481481);
	void ULevelExporterFBX::StaticRegisterNativesULevelExporterFBX()
	{
	}
	IMPLEMENT_CLASS(ULevelExporterFBX, 2860351218);
	void ULevelExporterLOD::StaticRegisterNativesULevelExporterLOD()
	{
	}
	IMPLEMENT_CLASS(ULevelExporterLOD, 690617778);
	void ULevelExporterOBJ::StaticRegisterNativesULevelExporterOBJ()
	{
	}
	IMPLEMENT_CLASS(ULevelExporterOBJ, 1439587703);
	void ULevelExporterSTL::StaticRegisterNativesULevelExporterSTL()
	{
	}
	IMPLEMENT_CLASS(ULevelExporterSTL, 77031038);
	void ULevelExporterT3D::StaticRegisterNativesULevelExporterT3D()
	{
	}
	IMPLEMENT_CLASS(ULevelExporterT3D, 1522356603);
	void ULightmassOptionsObject::StaticRegisterNativesULightmassOptionsObject()
	{
	}
	IMPLEMENT_CLASS(ULightmassOptionsObject, 3531078728);
	void UListMaterialsUsedWithMeshEmittersCommandlet::StaticRegisterNativesUListMaterialsUsedWithMeshEmittersCommandlet()
	{
	}
	IMPLEMENT_CLASS(UListMaterialsUsedWithMeshEmittersCommandlet, 1857824116);
	void UListStaticMeshesImportedFromSpeedTreesCommandlet::StaticRegisterNativesUListStaticMeshesImportedFromSpeedTreesCommandlet()
	{
	}
	IMPLEMENT_CLASS(UListStaticMeshesImportedFromSpeedTreesCommandlet, 2252912399);
	void ULoadPackageCommandlet::StaticRegisterNativesULoadPackageCommandlet()
	{
	}
	IMPLEMENT_CLASS(ULoadPackageCommandlet, 724109154);
class UScriptStruct* FEditorStaticComponentMaskParameterValue::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern UNREALED_API class UScriptStruct* Z_Construct_UScriptStruct_FEditorStaticComponentMaskParameterValue();
		extern UNREALED_API uint32 Get_Z_Construct_UScriptStruct_FEditorStaticComponentMaskParameterValue_CRC();
		extern UNREALED_API class UPackage* Z_Construct_UPackage_UnrealEd();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FEditorStaticComponentMaskParameterValue, Z_Construct_UPackage_UnrealEd(), TEXT("EditorStaticComponentMaskParameterValue"), sizeof(FEditorStaticComponentMaskParameterValue), Get_Z_Construct_UScriptStruct_FEditorStaticComponentMaskParameterValue_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FEditorStaticComponentMaskParameterValue(FEditorStaticComponentMaskParameterValue::StaticStruct, TEXT("/Script/UnrealEd"));
static struct FScriptStruct_UnrealEd_StaticRegisterNativesFEditorStaticComponentMaskParameterValue
{
	FScriptStruct_UnrealEd_StaticRegisterNativesFEditorStaticComponentMaskParameterValue()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("EditorStaticComponentMaskParameterValue")),new UScriptStruct::TCppStructOps<FEditorStaticComponentMaskParameterValue>);
	}
} ScriptStruct_UnrealEd_StaticRegisterNativesFEditorStaticComponentMaskParameterValue;
class UScriptStruct* FComponentMaskParameter::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern UNREALED_API class UScriptStruct* Z_Construct_UScriptStruct_FComponentMaskParameter();
		extern UNREALED_API uint32 Get_Z_Construct_UScriptStruct_FComponentMaskParameter_CRC();
		extern UNREALED_API class UPackage* Z_Construct_UPackage_UnrealEd();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FComponentMaskParameter, Z_Construct_UPackage_UnrealEd(), TEXT("ComponentMaskParameter"), sizeof(FComponentMaskParameter), Get_Z_Construct_UScriptStruct_FComponentMaskParameter_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FComponentMaskParameter(FComponentMaskParameter::StaticStruct, TEXT("/Script/UnrealEd"));
static struct FScriptStruct_UnrealEd_StaticRegisterNativesFComponentMaskParameter
{
	FScriptStruct_UnrealEd_StaticRegisterNativesFComponentMaskParameter()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("ComponentMaskParameter")),new UScriptStruct::TCppStructOps<FComponentMaskParameter>);
	}
} ScriptStruct_UnrealEd_StaticRegisterNativesFComponentMaskParameter;
class UScriptStruct* FEditorStaticSwitchParameterValue::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern UNREALED_API class UScriptStruct* Z_Construct_UScriptStruct_FEditorStaticSwitchParameterValue();
		extern UNREALED_API uint32 Get_Z_Construct_UScriptStruct_FEditorStaticSwitchParameterValue_CRC();
		extern UNREALED_API class UPackage* Z_Construct_UPackage_UnrealEd();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FEditorStaticSwitchParameterValue, Z_Construct_UPackage_UnrealEd(), TEXT("EditorStaticSwitchParameterValue"), sizeof(FEditorStaticSwitchParameterValue), Get_Z_Construct_UScriptStruct_FEditorStaticSwitchParameterValue_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FEditorStaticSwitchParameterValue(FEditorStaticSwitchParameterValue::StaticStruct, TEXT("/Script/UnrealEd"));
static struct FScriptStruct_UnrealEd_StaticRegisterNativesFEditorStaticSwitchParameterValue
{
	FScriptStruct_UnrealEd_StaticRegisterNativesFEditorStaticSwitchParameterValue()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("EditorStaticSwitchParameterValue")),new UScriptStruct::TCppStructOps<FEditorStaticSwitchParameterValue>);
	}
} ScriptStruct_UnrealEd_StaticRegisterNativesFEditorStaticSwitchParameterValue;
class UScriptStruct* FEditorFontParameterValue::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern UNREALED_API class UScriptStruct* Z_Construct_UScriptStruct_FEditorFontParameterValue();
		extern UNREALED_API uint32 Get_Z_Construct_UScriptStruct_FEditorFontParameterValue_CRC();
		extern UNREALED_API class UPackage* Z_Construct_UPackage_UnrealEd();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FEditorFontParameterValue, Z_Construct_UPackage_UnrealEd(), TEXT("EditorFontParameterValue"), sizeof(FEditorFontParameterValue), Get_Z_Construct_UScriptStruct_FEditorFontParameterValue_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FEditorFontParameterValue(FEditorFontParameterValue::StaticStruct, TEXT("/Script/UnrealEd"));
static struct FScriptStruct_UnrealEd_StaticRegisterNativesFEditorFontParameterValue
{
	FScriptStruct_UnrealEd_StaticRegisterNativesFEditorFontParameterValue()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("EditorFontParameterValue")),new UScriptStruct::TCppStructOps<FEditorFontParameterValue>);
	}
} ScriptStruct_UnrealEd_StaticRegisterNativesFEditorFontParameterValue;
class UScriptStruct* FEditorTextureParameterValue::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern UNREALED_API class UScriptStruct* Z_Construct_UScriptStruct_FEditorTextureParameterValue();
		extern UNREALED_API uint32 Get_Z_Construct_UScriptStruct_FEditorTextureParameterValue_CRC();
		extern UNREALED_API class UPackage* Z_Construct_UPackage_UnrealEd();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FEditorTextureParameterValue, Z_Construct_UPackage_UnrealEd(), TEXT("EditorTextureParameterValue"), sizeof(FEditorTextureParameterValue), Get_Z_Construct_UScriptStruct_FEditorTextureParameterValue_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FEditorTextureParameterValue(FEditorTextureParameterValue::StaticStruct, TEXT("/Script/UnrealEd"));
static struct FScriptStruct_UnrealEd_StaticRegisterNativesFEditorTextureParameterValue
{
	FScriptStruct_UnrealEd_StaticRegisterNativesFEditorTextureParameterValue()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("EditorTextureParameterValue")),new UScriptStruct::TCppStructOps<FEditorTextureParameterValue>);
	}
} ScriptStruct_UnrealEd_StaticRegisterNativesFEditorTextureParameterValue;
class UScriptStruct* FEditorScalarParameterValue::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern UNREALED_API class UScriptStruct* Z_Construct_UScriptStruct_FEditorScalarParameterValue();
		extern UNREALED_API uint32 Get_Z_Construct_UScriptStruct_FEditorScalarParameterValue_CRC();
		extern UNREALED_API class UPackage* Z_Construct_UPackage_UnrealEd();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FEditorScalarParameterValue, Z_Construct_UPackage_UnrealEd(), TEXT("EditorScalarParameterValue"), sizeof(FEditorScalarParameterValue), Get_Z_Construct_UScriptStruct_FEditorScalarParameterValue_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FEditorScalarParameterValue(FEditorScalarParameterValue::StaticStruct, TEXT("/Script/UnrealEd"));
static struct FScriptStruct_UnrealEd_StaticRegisterNativesFEditorScalarParameterValue
{
	FScriptStruct_UnrealEd_StaticRegisterNativesFEditorScalarParameterValue()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("EditorScalarParameterValue")),new UScriptStruct::TCppStructOps<FEditorScalarParameterValue>);
	}
} ScriptStruct_UnrealEd_StaticRegisterNativesFEditorScalarParameterValue;
class UScriptStruct* FEditorVectorParameterValue::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern UNREALED_API class UScriptStruct* Z_Construct_UScriptStruct_FEditorVectorParameterValue();
		extern UNREALED_API uint32 Get_Z_Construct_UScriptStruct_FEditorVectorParameterValue_CRC();
		extern UNREALED_API class UPackage* Z_Construct_UPackage_UnrealEd();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FEditorVectorParameterValue, Z_Construct_UPackage_UnrealEd(), TEXT("EditorVectorParameterValue"), sizeof(FEditorVectorParameterValue), Get_Z_Construct_UScriptStruct_FEditorVectorParameterValue_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FEditorVectorParameterValue(FEditorVectorParameterValue::StaticStruct, TEXT("/Script/UnrealEd"));
static struct FScriptStruct_UnrealEd_StaticRegisterNativesFEditorVectorParameterValue
{
	FScriptStruct_UnrealEd_StaticRegisterNativesFEditorVectorParameterValue()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("EditorVectorParameterValue")),new UScriptStruct::TCppStructOps<FEditorVectorParameterValue>);
	}
} ScriptStruct_UnrealEd_StaticRegisterNativesFEditorVectorParameterValue;
class UScriptStruct* FEditorParameterValue::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern UNREALED_API class UScriptStruct* Z_Construct_UScriptStruct_FEditorParameterValue();
		extern UNREALED_API uint32 Get_Z_Construct_UScriptStruct_FEditorParameterValue_CRC();
		extern UNREALED_API class UPackage* Z_Construct_UPackage_UnrealEd();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FEditorParameterValue, Z_Construct_UPackage_UnrealEd(), TEXT("EditorParameterValue"), sizeof(FEditorParameterValue), Get_Z_Construct_UScriptStruct_FEditorParameterValue_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FEditorParameterValue(FEditorParameterValue::StaticStruct, TEXT("/Script/UnrealEd"));
static struct FScriptStruct_UnrealEd_StaticRegisterNativesFEditorParameterValue
{
	FScriptStruct_UnrealEd_StaticRegisterNativesFEditorParameterValue()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("EditorParameterValue")),new UScriptStruct::TCppStructOps<FEditorParameterValue>);
	}
} ScriptStruct_UnrealEd_StaticRegisterNativesFEditorParameterValue;
class UScriptStruct* FEditorParameterGroup::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern UNREALED_API class UScriptStruct* Z_Construct_UScriptStruct_FEditorParameterGroup();
		extern UNREALED_API uint32 Get_Z_Construct_UScriptStruct_FEditorParameterGroup_CRC();
		extern UNREALED_API class UPackage* Z_Construct_UPackage_UnrealEd();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FEditorParameterGroup, Z_Construct_UPackage_UnrealEd(), TEXT("EditorParameterGroup"), sizeof(FEditorParameterGroup), Get_Z_Construct_UScriptStruct_FEditorParameterGroup_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FEditorParameterGroup(FEditorParameterGroup::StaticStruct, TEXT("/Script/UnrealEd"));
static struct FScriptStruct_UnrealEd_StaticRegisterNativesFEditorParameterGroup
{
	FScriptStruct_UnrealEd_StaticRegisterNativesFEditorParameterGroup()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("EditorParameterGroup")),new UScriptStruct::TCppStructOps<FEditorParameterGroup>);
	}
} ScriptStruct_UnrealEd_StaticRegisterNativesFEditorParameterGroup;
	void UMaterialEditorInstanceConstant::StaticRegisterNativesUMaterialEditorInstanceConstant()
	{
	}
	IMPLEMENT_CLASS(UMaterialEditorInstanceConstant, 88093059);
	void UMaterialEditorMeshComponent::StaticRegisterNativesUMaterialEditorMeshComponent()
	{
	}
	IMPLEMENT_CLASS(UMaterialEditorMeshComponent, 3716214305);
	void UMaterialEditorOptions::StaticRegisterNativesUMaterialEditorOptions()
	{
	}
	IMPLEMENT_CLASS(UMaterialEditorOptions, 4211326016);
	void UMaterialGraphNode_Base::StaticRegisterNativesUMaterialGraphNode_Base()
	{
	}
	IMPLEMENT_CLASS(UMaterialGraphNode_Base, 1561952896);
	void UMaterialGraphNode::StaticRegisterNativesUMaterialGraphNode()
	{
	}
	IMPLEMENT_CLASS(UMaterialGraphNode, 2735456270);
	void UMaterialGraphNode_Root::StaticRegisterNativesUMaterialGraphNode_Root()
	{
	}
	IMPLEMENT_CLASS(UMaterialGraphNode_Root, 872929530);
class UScriptStruct* FMaterialGraphSchemaAction_Paste::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern UNREALED_API class UScriptStruct* Z_Construct_UScriptStruct_FMaterialGraphSchemaAction_Paste();
		extern UNREALED_API uint32 Get_Z_Construct_UScriptStruct_FMaterialGraphSchemaAction_Paste_CRC();
		extern UNREALED_API class UPackage* Z_Construct_UPackage_UnrealEd();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMaterialGraphSchemaAction_Paste, Z_Construct_UPackage_UnrealEd(), TEXT("MaterialGraphSchemaAction_Paste"), sizeof(FMaterialGraphSchemaAction_Paste), Get_Z_Construct_UScriptStruct_FMaterialGraphSchemaAction_Paste_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMaterialGraphSchemaAction_Paste(FMaterialGraphSchemaAction_Paste::StaticStruct, TEXT("/Script/UnrealEd"));
static struct FScriptStruct_UnrealEd_StaticRegisterNativesFMaterialGraphSchemaAction_Paste
{
	FScriptStruct_UnrealEd_StaticRegisterNativesFMaterialGraphSchemaAction_Paste()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("MaterialGraphSchemaAction_Paste")),new UScriptStruct::TCppStructOps<FMaterialGraphSchemaAction_Paste>);
	}
} ScriptStruct_UnrealEd_StaticRegisterNativesFMaterialGraphSchemaAction_Paste;
class UScriptStruct* FMaterialGraphSchemaAction_NewComment::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern UNREALED_API class UScriptStruct* Z_Construct_UScriptStruct_FMaterialGraphSchemaAction_NewComment();
		extern UNREALED_API uint32 Get_Z_Construct_UScriptStruct_FMaterialGraphSchemaAction_NewComment_CRC();
		extern UNREALED_API class UPackage* Z_Construct_UPackage_UnrealEd();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMaterialGraphSchemaAction_NewComment, Z_Construct_UPackage_UnrealEd(), TEXT("MaterialGraphSchemaAction_NewComment"), sizeof(FMaterialGraphSchemaAction_NewComment), Get_Z_Construct_UScriptStruct_FMaterialGraphSchemaAction_NewComment_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMaterialGraphSchemaAction_NewComment(FMaterialGraphSchemaAction_NewComment::StaticStruct, TEXT("/Script/UnrealEd"));
static struct FScriptStruct_UnrealEd_StaticRegisterNativesFMaterialGraphSchemaAction_NewComment
{
	FScriptStruct_UnrealEd_StaticRegisterNativesFMaterialGraphSchemaAction_NewComment()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("MaterialGraphSchemaAction_NewComment")),new UScriptStruct::TCppStructOps<FMaterialGraphSchemaAction_NewComment>);
	}
} ScriptStruct_UnrealEd_StaticRegisterNativesFMaterialGraphSchemaAction_NewComment;
class UScriptStruct* FMaterialGraphSchemaAction_NewFunctionCall::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern UNREALED_API class UScriptStruct* Z_Construct_UScriptStruct_FMaterialGraphSchemaAction_NewFunctionCall();
		extern UNREALED_API uint32 Get_Z_Construct_UScriptStruct_FMaterialGraphSchemaAction_NewFunctionCall_CRC();
		extern UNREALED_API class UPackage* Z_Construct_UPackage_UnrealEd();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMaterialGraphSchemaAction_NewFunctionCall, Z_Construct_UPackage_UnrealEd(), TEXT("MaterialGraphSchemaAction_NewFunctionCall"), sizeof(FMaterialGraphSchemaAction_NewFunctionCall), Get_Z_Construct_UScriptStruct_FMaterialGraphSchemaAction_NewFunctionCall_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMaterialGraphSchemaAction_NewFunctionCall(FMaterialGraphSchemaAction_NewFunctionCall::StaticStruct, TEXT("/Script/UnrealEd"));
static struct FScriptStruct_UnrealEd_StaticRegisterNativesFMaterialGraphSchemaAction_NewFunctionCall
{
	FScriptStruct_UnrealEd_StaticRegisterNativesFMaterialGraphSchemaAction_NewFunctionCall()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("MaterialGraphSchemaAction_NewFunctionCall")),new UScriptStruct::TCppStructOps<FMaterialGraphSchemaAction_NewFunctionCall>);
	}
} ScriptStruct_UnrealEd_StaticRegisterNativesFMaterialGraphSchemaAction_NewFunctionCall;
class UScriptStruct* FMaterialGraphSchemaAction_NewNode::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern UNREALED_API class UScriptStruct* Z_Construct_UScriptStruct_FMaterialGraphSchemaAction_NewNode();
		extern UNREALED_API uint32 Get_Z_Construct_UScriptStruct_FMaterialGraphSchemaAction_NewNode_CRC();
		extern UNREALED_API class UPackage* Z_Construct_UPackage_UnrealEd();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMaterialGraphSchemaAction_NewNode, Z_Construct_UPackage_UnrealEd(), TEXT("MaterialGraphSchemaAction_NewNode"), sizeof(FMaterialGraphSchemaAction_NewNode), Get_Z_Construct_UScriptStruct_FMaterialGraphSchemaAction_NewNode_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMaterialGraphSchemaAction_NewNode(FMaterialGraphSchemaAction_NewNode::StaticStruct, TEXT("/Script/UnrealEd"));
static struct FScriptStruct_UnrealEd_StaticRegisterNativesFMaterialGraphSchemaAction_NewNode
{
	FScriptStruct_UnrealEd_StaticRegisterNativesFMaterialGraphSchemaAction_NewNode()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("MaterialGraphSchemaAction_NewNode")),new UScriptStruct::TCppStructOps<FMaterialGraphSchemaAction_NewNode>);
	}
} ScriptStruct_UnrealEd_StaticRegisterNativesFMaterialGraphSchemaAction_NewNode;
	void UMaterialGraphSchema::StaticRegisterNativesUMaterialGraphSchema()
	{
	}
	IMPLEMENT_CLASS(UMaterialGraphSchema, 2603258057);
	void UModelExporterT3D::StaticRegisterNativesUModelExporterT3D()
	{
	}
	IMPLEMENT_CLASS(UModelExporterT3D, 486490465);
	void UNiagaraGraph::StaticRegisterNativesUNiagaraGraph()
	{
	}
	IMPLEMENT_CLASS(UNiagaraGraph, 1052985826);
	void UNiagaraNode::StaticRegisterNativesUNiagaraNode()
	{
	}
	IMPLEMENT_CLASS(UNiagaraNode, 560371003);
	void UDEPRECATED_NiagaraNodeConstant::StaticRegisterNativesUDEPRECATED_NiagaraNodeConstant()
	{
	}
	IMPLEMENT_CLASS(UDEPRECATED_NiagaraNodeConstant, 437679827);
	void UNiagaraNodeFunctionCall::StaticRegisterNativesUNiagaraNodeFunctionCall()
	{
	}
	IMPLEMENT_CLASS(UNiagaraNodeFunctionCall, 1590905925);
	void UDEPRECATED_NiagaraNodeGetAttr::StaticRegisterNativesUDEPRECATED_NiagaraNodeGetAttr()
	{
	}
	IMPLEMENT_CLASS(UDEPRECATED_NiagaraNodeGetAttr, 622869984);
	void UNiagaraNodeInput::StaticRegisterNativesUNiagaraNodeInput()
	{
	}
	IMPLEMENT_CLASS(UNiagaraNodeInput, 4245133752);
	void UNiagaraNodeOp::StaticRegisterNativesUNiagaraNodeOp()
	{
	}
	IMPLEMENT_CLASS(UNiagaraNodeOp, 3332393187);
	void UNiagaraNodeOutput::StaticRegisterNativesUNiagaraNodeOutput()
	{
	}
	IMPLEMENT_CLASS(UNiagaraNodeOutput, 3050221968);
	void UDEPRECATED_NiagaraNodeOutputUpdate::StaticRegisterNativesUDEPRECATED_NiagaraNodeOutputUpdate()
	{
	}
	IMPLEMENT_CLASS(UDEPRECATED_NiagaraNodeOutputUpdate, 3758300992);
	void UNiagaraScriptSource::StaticRegisterNativesUNiagaraScriptSource()
	{
	}
	IMPLEMENT_CLASS(UNiagaraScriptSource, 1297914835);
	void UObjectExporterT3D::StaticRegisterNativesUObjectExporterT3D()
	{
	}
	IMPLEMENT_CLASS(UObjectExporterT3D, 4269864875);
	void UParticleSystemAuditCommandlet::StaticRegisterNativesUParticleSystemAuditCommandlet()
	{
	}
	IMPLEMENT_CLASS(UParticleSystemAuditCommandlet, 2128496710);
	void UPersonaOptions::StaticRegisterNativesUPersonaOptions()
	{
	}
	IMPLEMENT_CLASS(UPersonaOptions, 2014570569);
	void UPhATSimOptions::StaticRegisterNativesUPhATSimOptions()
	{
	}
	IMPLEMENT_CLASS(UPhATSimOptions, 350626891);
	void UPkgInfoCommandlet::StaticRegisterNativesUPkgInfoCommandlet()
	{
	}
	IMPLEMENT_CLASS(UPkgInfoCommandlet, 3789554044);
	void UPolysExporterOBJ::StaticRegisterNativesUPolysExporterOBJ()
	{
	}
	IMPLEMENT_CLASS(UPolysExporterOBJ, 3458751210);
	void UPolysExporterT3D::StaticRegisterNativesUPolysExporterT3D()
	{
	}
	IMPLEMENT_CLASS(UPolysExporterT3D, 3243988710);
	void UPreviewMaterial::StaticRegisterNativesUPreviewMaterial()
	{
	}
	IMPLEMENT_CLASS(UPreviewMaterial, 4097996185);
static class UEnum* EProjectPackagingInternationalizationPresets_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern UNREALED_API class UEnum* Z_Construct_UEnum_UnrealEd_EProjectPackagingInternationalizationPresets();
		extern UNREALED_API class UPackage* Z_Construct_UPackage_UnrealEd();
		Singleton = GetStaticEnum(Z_Construct_UEnum_UnrealEd_EProjectPackagingInternationalizationPresets, Z_Construct_UPackage_UnrealEd(), TEXT("EProjectPackagingInternationalizationPresets"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EProjectPackagingInternationalizationPresets(EProjectPackagingInternationalizationPresets_StaticEnum, TEXT("/Script/UnrealEd"));
static class UEnum* EProjectPackagingBuildConfigurations_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern UNREALED_API class UEnum* Z_Construct_UEnum_UnrealEd_EProjectPackagingBuildConfigurations();
		extern UNREALED_API class UPackage* Z_Construct_UPackage_UnrealEd();
		Singleton = GetStaticEnum(Z_Construct_UEnum_UnrealEd_EProjectPackagingBuildConfigurations, Z_Construct_UPackage_UnrealEd(), TEXT("EProjectPackagingBuildConfigurations"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EProjectPackagingBuildConfigurations(EProjectPackagingBuildConfigurations_StaticEnum, TEXT("/Script/UnrealEd"));
	void UProjectPackagingSettings::StaticRegisterNativesUProjectPackagingSettings()
	{
	}
	IMPLEMENT_CLASS(UProjectPackagingSettings, 875208622);
static class UEnum* ArrayLabelEnum_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern UNREALED_API class UEnum* Z_Construct_UEnum_UnrealEd_ArrayLabelEnum();
		extern UNREALED_API class UPackage* Z_Construct_UPackage_UnrealEd();
		Singleton = GetStaticEnum(Z_Construct_UEnum_UnrealEd_ArrayLabelEnum, Z_Construct_UPackage_UnrealEd(), TEXT("ArrayLabelEnum"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ArrayLabelEnum(ArrayLabelEnum_StaticEnum, TEXT("/Script/UnrealEd"));
static class UEnum* PropertEditorTestEnum_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern UNREALED_API class UEnum* Z_Construct_UEnum_UnrealEd_PropertEditorTestEnum();
		extern UNREALED_API class UPackage* Z_Construct_UPackage_UnrealEd();
		Singleton = GetStaticEnum(Z_Construct_UEnum_UnrealEd_PropertEditorTestEnum, Z_Construct_UPackage_UnrealEd(), TEXT("PropertEditorTestEnum"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_PropertEditorTestEnum(PropertEditorTestEnum_StaticEnum, TEXT("/Script/UnrealEd"));
class UScriptStruct* FPropertyEditorTestBasicStruct::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern UNREALED_API class UScriptStruct* Z_Construct_UScriptStruct_FPropertyEditorTestBasicStruct();
		extern UNREALED_API uint32 Get_Z_Construct_UScriptStruct_FPropertyEditorTestBasicStruct_CRC();
		extern UNREALED_API class UPackage* Z_Construct_UPackage_UnrealEd();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FPropertyEditorTestBasicStruct, Z_Construct_UPackage_UnrealEd(), TEXT("PropertyEditorTestBasicStruct"), sizeof(FPropertyEditorTestBasicStruct), Get_Z_Construct_UScriptStruct_FPropertyEditorTestBasicStruct_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FPropertyEditorTestBasicStruct(FPropertyEditorTestBasicStruct::StaticStruct, TEXT("/Script/UnrealEd"));
static struct FScriptStruct_UnrealEd_StaticRegisterNativesFPropertyEditorTestBasicStruct
{
	FScriptStruct_UnrealEd_StaticRegisterNativesFPropertyEditorTestBasicStruct()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("PropertyEditorTestBasicStruct")),new UScriptStruct::TCppStructOps<FPropertyEditorTestBasicStruct>);
	}
} ScriptStruct_UnrealEd_StaticRegisterNativesFPropertyEditorTestBasicStruct;
class UScriptStruct* FPropertyEditorTestSubStruct::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern UNREALED_API class UScriptStruct* Z_Construct_UScriptStruct_FPropertyEditorTestSubStruct();
		extern UNREALED_API uint32 Get_Z_Construct_UScriptStruct_FPropertyEditorTestSubStruct_CRC();
		extern UNREALED_API class UPackage* Z_Construct_UPackage_UnrealEd();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FPropertyEditorTestSubStruct, Z_Construct_UPackage_UnrealEd(), TEXT("PropertyEditorTestSubStruct"), sizeof(FPropertyEditorTestSubStruct), Get_Z_Construct_UScriptStruct_FPropertyEditorTestSubStruct_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FPropertyEditorTestSubStruct(FPropertyEditorTestSubStruct::StaticStruct, TEXT("/Script/UnrealEd"));
static struct FScriptStruct_UnrealEd_StaticRegisterNativesFPropertyEditorTestSubStruct
{
	FScriptStruct_UnrealEd_StaticRegisterNativesFPropertyEditorTestSubStruct()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("PropertyEditorTestSubStruct")),new UScriptStruct::TCppStructOps<FPropertyEditorTestSubStruct>);
	}
} ScriptStruct_UnrealEd_StaticRegisterNativesFPropertyEditorTestSubStruct;
	void UPropertyEditorTestObject::StaticRegisterNativesUPropertyEditorTestObject()
	{
	}
	IMPLEMENT_CLASS(UPropertyEditorTestObject, 4249776049);
	void UReplaceActorCommandlet::StaticRegisterNativesUReplaceActorCommandlet()
	{
	}
	IMPLEMENT_CLASS(UReplaceActorCommandlet, 3373982295);
	void UResavePackagesCommandlet::StaticRegisterNativesUResavePackagesCommandlet()
	{
	}
	IMPLEMENT_CLASS(UResavePackagesCommandlet, 2199354656);
	void USceneThumbnailInfo::StaticRegisterNativesUSceneThumbnailInfo()
	{
	}
	IMPLEMENT_CLASS(USceneThumbnailInfo, 3617907814);
static class UEnum* EThumbnailPrimType_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern UNREALED_API class UEnum* Z_Construct_UEnum_UnrealEd_EThumbnailPrimType();
		extern UNREALED_API class UPackage* Z_Construct_UPackage_UnrealEd();
		Singleton = GetStaticEnum(Z_Construct_UEnum_UnrealEd_EThumbnailPrimType, Z_Construct_UPackage_UnrealEd(), TEXT("EThumbnailPrimType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EThumbnailPrimType(EThumbnailPrimType_StaticEnum, TEXT("/Script/UnrealEd"));
class UScriptStruct* FThumbnailRenderingInfo::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern UNREALED_API class UScriptStruct* Z_Construct_UScriptStruct_FThumbnailRenderingInfo();
		extern UNREALED_API uint32 Get_Z_Construct_UScriptStruct_FThumbnailRenderingInfo_CRC();
		extern UNREALED_API class UPackage* Z_Construct_UPackage_UnrealEd();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FThumbnailRenderingInfo, Z_Construct_UPackage_UnrealEd(), TEXT("ThumbnailRenderingInfo"), sizeof(FThumbnailRenderingInfo), Get_Z_Construct_UScriptStruct_FThumbnailRenderingInfo_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FThumbnailRenderingInfo(FThumbnailRenderingInfo::StaticStruct, TEXT("/Script/UnrealEd"));
static struct FScriptStruct_UnrealEd_StaticRegisterNativesFThumbnailRenderingInfo
{
	FScriptStruct_UnrealEd_StaticRegisterNativesFThumbnailRenderingInfo()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("ThumbnailRenderingInfo")),new UScriptStruct::TCppStructOps<FThumbnailRenderingInfo>);
	}
} ScriptStruct_UnrealEd_StaticRegisterNativesFThumbnailRenderingInfo;
	void UThumbnailManager::StaticRegisterNativesUThumbnailManager()
	{
	}
	IMPLEMENT_CLASS(UThumbnailManager, 1656473058);
	void USceneThumbnailInfoWithPrimitive::StaticRegisterNativesUSceneThumbnailInfoWithPrimitive()
	{
	}
	IMPLEMENT_CLASS(USceneThumbnailInfoWithPrimitive, 1472000298);
static class UEnum* EOrthoThumbnailDirection_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern UNREALED_API class UEnum* Z_Construct_UEnum_UnrealEd_EOrthoThumbnailDirection();
		extern UNREALED_API class UPackage* Z_Construct_UPackage_UnrealEd();
		Singleton = GetStaticEnum(Z_Construct_UEnum_UnrealEd_EOrthoThumbnailDirection, Z_Construct_UPackage_UnrealEd(), TEXT("EOrthoThumbnailDirection"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EOrthoThumbnailDirection(EOrthoThumbnailDirection_StaticEnum, TEXT("/Script/UnrealEd"));
	void UWorldThumbnailInfo::StaticRegisterNativesUWorldThumbnailInfo()
	{
	}
	IMPLEMENT_CLASS(UWorldThumbnailInfo, 1887310750);
	void USequenceExporterT3D::StaticRegisterNativesUSequenceExporterT3D()
	{
	}
	IMPLEMENT_CLASS(USequenceExporterT3D, 557693201);
	void USkeletalMeshExporterFBX::StaticRegisterNativesUSkeletalMeshExporterFBX()
	{
	}
	IMPLEMENT_CLASS(USkeletalMeshExporterFBX, 3744640128);
	void USoundClassGraph::StaticRegisterNativesUSoundClassGraph()
	{
	}
	IMPLEMENT_CLASS(USoundClassGraph, 3826170832);
	void USoundClassGraphNode::StaticRegisterNativesUSoundClassGraphNode()
	{
	}
	IMPLEMENT_CLASS(USoundClassGraphNode, 3502416485);
class UScriptStruct* FSoundClassGraphSchemaAction_NewNode::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern UNREALED_API class UScriptStruct* Z_Construct_UScriptStruct_FSoundClassGraphSchemaAction_NewNode();
		extern UNREALED_API uint32 Get_Z_Construct_UScriptStruct_FSoundClassGraphSchemaAction_NewNode_CRC();
		extern UNREALED_API class UPackage* Z_Construct_UPackage_UnrealEd();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FSoundClassGraphSchemaAction_NewNode, Z_Construct_UPackage_UnrealEd(), TEXT("SoundClassGraphSchemaAction_NewNode"), sizeof(FSoundClassGraphSchemaAction_NewNode), Get_Z_Construct_UScriptStruct_FSoundClassGraphSchemaAction_NewNode_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FSoundClassGraphSchemaAction_NewNode(FSoundClassGraphSchemaAction_NewNode::StaticStruct, TEXT("/Script/UnrealEd"));
static struct FScriptStruct_UnrealEd_StaticRegisterNativesFSoundClassGraphSchemaAction_NewNode
{
	FScriptStruct_UnrealEd_StaticRegisterNativesFSoundClassGraphSchemaAction_NewNode()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("SoundClassGraphSchemaAction_NewNode")),new UScriptStruct::TCppStructOps<FSoundClassGraphSchemaAction_NewNode>);
	}
} ScriptStruct_UnrealEd_StaticRegisterNativesFSoundClassGraphSchemaAction_NewNode;
	void USoundClassGraphSchema::StaticRegisterNativesUSoundClassGraphSchema()
	{
	}
	IMPLEMENT_CLASS(USoundClassGraphSchema, 597980482);
	void USoundCueGraph::StaticRegisterNativesUSoundCueGraph()
	{
	}
	IMPLEMENT_CLASS(USoundCueGraph, 2821658528);
	void USoundCueGraphNode_Base::StaticRegisterNativesUSoundCueGraphNode_Base()
	{
	}
	IMPLEMENT_CLASS(USoundCueGraphNode_Base, 1242433254);
	void USoundCueGraphNode::StaticRegisterNativesUSoundCueGraphNode()
	{
	}
	IMPLEMENT_CLASS(USoundCueGraphNode, 1032800501);
	void USoundCueGraphNode_Root::StaticRegisterNativesUSoundCueGraphNode_Root()
	{
	}
	IMPLEMENT_CLASS(USoundCueGraphNode_Root, 681379434);
class UScriptStruct* FSoundCueGraphSchemaAction_Paste::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern UNREALED_API class UScriptStruct* Z_Construct_UScriptStruct_FSoundCueGraphSchemaAction_Paste();
		extern UNREALED_API uint32 Get_Z_Construct_UScriptStruct_FSoundCueGraphSchemaAction_Paste_CRC();
		extern UNREALED_API class UPackage* Z_Construct_UPackage_UnrealEd();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FSoundCueGraphSchemaAction_Paste, Z_Construct_UPackage_UnrealEd(), TEXT("SoundCueGraphSchemaAction_Paste"), sizeof(FSoundCueGraphSchemaAction_Paste), Get_Z_Construct_UScriptStruct_FSoundCueGraphSchemaAction_Paste_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FSoundCueGraphSchemaAction_Paste(FSoundCueGraphSchemaAction_Paste::StaticStruct, TEXT("/Script/UnrealEd"));
static struct FScriptStruct_UnrealEd_StaticRegisterNativesFSoundCueGraphSchemaAction_Paste
{
	FScriptStruct_UnrealEd_StaticRegisterNativesFSoundCueGraphSchemaAction_Paste()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("SoundCueGraphSchemaAction_Paste")),new UScriptStruct::TCppStructOps<FSoundCueGraphSchemaAction_Paste>);
	}
} ScriptStruct_UnrealEd_StaticRegisterNativesFSoundCueGraphSchemaAction_Paste;
class UScriptStruct* FSoundCueGraphSchemaAction_NewComment::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern UNREALED_API class UScriptStruct* Z_Construct_UScriptStruct_FSoundCueGraphSchemaAction_NewComment();
		extern UNREALED_API uint32 Get_Z_Construct_UScriptStruct_FSoundCueGraphSchemaAction_NewComment_CRC();
		extern UNREALED_API class UPackage* Z_Construct_UPackage_UnrealEd();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FSoundCueGraphSchemaAction_NewComment, Z_Construct_UPackage_UnrealEd(), TEXT("SoundCueGraphSchemaAction_NewComment"), sizeof(FSoundCueGraphSchemaAction_NewComment), Get_Z_Construct_UScriptStruct_FSoundCueGraphSchemaAction_NewComment_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FSoundCueGraphSchemaAction_NewComment(FSoundCueGraphSchemaAction_NewComment::StaticStruct, TEXT("/Script/UnrealEd"));
static struct FScriptStruct_UnrealEd_StaticRegisterNativesFSoundCueGraphSchemaAction_NewComment
{
	FScriptStruct_UnrealEd_StaticRegisterNativesFSoundCueGraphSchemaAction_NewComment()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("SoundCueGraphSchemaAction_NewComment")),new UScriptStruct::TCppStructOps<FSoundCueGraphSchemaAction_NewComment>);
	}
} ScriptStruct_UnrealEd_StaticRegisterNativesFSoundCueGraphSchemaAction_NewComment;
class UScriptStruct* FSoundCueGraphSchemaAction_NewFromSelected::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern UNREALED_API class UScriptStruct* Z_Construct_UScriptStruct_FSoundCueGraphSchemaAction_NewFromSelected();
		extern UNREALED_API uint32 Get_Z_Construct_UScriptStruct_FSoundCueGraphSchemaAction_NewFromSelected_CRC();
		extern UNREALED_API class UPackage* Z_Construct_UPackage_UnrealEd();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FSoundCueGraphSchemaAction_NewFromSelected, Z_Construct_UPackage_UnrealEd(), TEXT("SoundCueGraphSchemaAction_NewFromSelected"), sizeof(FSoundCueGraphSchemaAction_NewFromSelected), Get_Z_Construct_UScriptStruct_FSoundCueGraphSchemaAction_NewFromSelected_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FSoundCueGraphSchemaAction_NewFromSelected(FSoundCueGraphSchemaAction_NewFromSelected::StaticStruct, TEXT("/Script/UnrealEd"));
static struct FScriptStruct_UnrealEd_StaticRegisterNativesFSoundCueGraphSchemaAction_NewFromSelected
{
	FScriptStruct_UnrealEd_StaticRegisterNativesFSoundCueGraphSchemaAction_NewFromSelected()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("SoundCueGraphSchemaAction_NewFromSelected")),new UScriptStruct::TCppStructOps<FSoundCueGraphSchemaAction_NewFromSelected>);
	}
} ScriptStruct_UnrealEd_StaticRegisterNativesFSoundCueGraphSchemaAction_NewFromSelected;
class UScriptStruct* FSoundCueGraphSchemaAction_NewNode::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern UNREALED_API class UScriptStruct* Z_Construct_UScriptStruct_FSoundCueGraphSchemaAction_NewNode();
		extern UNREALED_API uint32 Get_Z_Construct_UScriptStruct_FSoundCueGraphSchemaAction_NewNode_CRC();
		extern UNREALED_API class UPackage* Z_Construct_UPackage_UnrealEd();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FSoundCueGraphSchemaAction_NewNode, Z_Construct_UPackage_UnrealEd(), TEXT("SoundCueGraphSchemaAction_NewNode"), sizeof(FSoundCueGraphSchemaAction_NewNode), Get_Z_Construct_UScriptStruct_FSoundCueGraphSchemaAction_NewNode_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FSoundCueGraphSchemaAction_NewNode(FSoundCueGraphSchemaAction_NewNode::StaticStruct, TEXT("/Script/UnrealEd"));
static struct FScriptStruct_UnrealEd_StaticRegisterNativesFSoundCueGraphSchemaAction_NewNode
{
	FScriptStruct_UnrealEd_StaticRegisterNativesFSoundCueGraphSchemaAction_NewNode()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("SoundCueGraphSchemaAction_NewNode")),new UScriptStruct::TCppStructOps<FSoundCueGraphSchemaAction_NewNode>);
	}
} ScriptStruct_UnrealEd_StaticRegisterNativesFSoundCueGraphSchemaAction_NewNode;
	void USoundCueGraphSchema::StaticRegisterNativesUSoundCueGraphSchema()
	{
	}
	IMPLEMENT_CLASS(USoundCueGraphSchema, 814682423);
	void USoundExporterOGG::StaticRegisterNativesUSoundExporterOGG()
	{
	}
	IMPLEMENT_CLASS(USoundExporterOGG, 1348777925);
	void USoundExporterWAV::StaticRegisterNativesUSoundExporterWAV()
	{
	}
	IMPLEMENT_CLASS(USoundExporterWAV, 3111971545);
	void USoundSurroundExporterWAV::StaticRegisterNativesUSoundSurroundExporterWAV()
	{
	}
	IMPLEMENT_CLASS(USoundSurroundExporterWAV, 2045579951);
	void UStaticMeshExporterFBX::StaticRegisterNativesUStaticMeshExporterFBX()
	{
	}
	IMPLEMENT_CLASS(UStaticMeshExporterFBX, 903364630);
	void UStaticMeshExporterOBJ::StaticRegisterNativesUStaticMeshExporterOBJ()
	{
	}
	IMPLEMENT_CLASS(UStaticMeshExporterOBJ, 102371640);
	void UDEPRECATED_TemplateMapMetadata::StaticRegisterNativesUDEPRECATED_TemplateMapMetadata()
	{
	}
	IMPLEMENT_CLASS(UDEPRECATED_TemplateMapMetadata, 1012076153);
static class UEnum* ETexAlign_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern UNREALED_API class UEnum* Z_Construct_UEnum_UnrealEd_ETexAlign();
		extern UNREALED_API class UPackage* Z_Construct_UPackage_UnrealEd();
		Singleton = GetStaticEnum(Z_Construct_UEnum_UnrealEd_ETexAlign, Z_Construct_UPackage_UnrealEd(), TEXT("ETexAlign"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ETexAlign(ETexAlign_StaticEnum, TEXT("/Script/UnrealEd"));
	void UTexAligner::StaticRegisterNativesUTexAligner()
	{
	}
	IMPLEMENT_CLASS(UTexAligner, 392994234);
	void UTexAlignerBox::StaticRegisterNativesUTexAlignerBox()
	{
	}
	IMPLEMENT_CLASS(UTexAlignerBox, 913462068);
	void UTexAlignerDefault::StaticRegisterNativesUTexAlignerDefault()
	{
	}
	IMPLEMENT_CLASS(UTexAlignerDefault, 2950075490);
	void UTexAlignerFit::StaticRegisterNativesUTexAlignerFit()
	{
	}
	IMPLEMENT_CLASS(UTexAlignerFit, 112652479);
	void UTexAlignerPlanar::StaticRegisterNativesUTexAlignerPlanar()
	{
	}
	IMPLEMENT_CLASS(UTexAlignerPlanar, 2924449131);
	void UTextBufferExporterTXT::StaticRegisterNativesUTextBufferExporterTXT()
	{
	}
	IMPLEMENT_CLASS(UTextBufferExporterTXT, 4216407038);
	void UTextureCubeExporterHDR::StaticRegisterNativesUTextureCubeExporterHDR()
	{
	}
	IMPLEMENT_CLASS(UTextureCubeExporterHDR, 2272977052);
	void UTextureExporterBMP::StaticRegisterNativesUTextureExporterBMP()
	{
	}
	IMPLEMENT_CLASS(UTextureExporterBMP, 3674722143);
	void UTextureExporterHDR::StaticRegisterNativesUTextureExporterHDR()
	{
	}
	IMPLEMENT_CLASS(UTextureExporterHDR, 1028749881);
	void UTextureExporterPCX::StaticRegisterNativesUTextureExporterPCX()
	{
	}
	IMPLEMENT_CLASS(UTextureExporterPCX, 303134728);
	void UTextureExporterTGA::StaticRegisterNativesUTextureExporterTGA()
	{
	}
	IMPLEMENT_CLASS(UTextureExporterTGA, 1276856313);
	void UThumbnailRenderer::StaticRegisterNativesUThumbnailRenderer()
	{
	}
	IMPLEMENT_CLASS(UThumbnailRenderer, 286652566);
	void UDefaultSizedThumbnailRenderer::StaticRegisterNativesUDefaultSizedThumbnailRenderer()
	{
	}
	IMPLEMENT_CLASS(UDefaultSizedThumbnailRenderer, 3273387468);
	void UAnimBlueprintThumbnailRenderer::StaticRegisterNativesUAnimBlueprintThumbnailRenderer()
	{
	}
	IMPLEMENT_CLASS(UAnimBlueprintThumbnailRenderer, 1717217349);
	void UAnimSequenceThumbnailRenderer::StaticRegisterNativesUAnimSequenceThumbnailRenderer()
	{
	}
	IMPLEMENT_CLASS(UAnimSequenceThumbnailRenderer, 1065784373);
	void UBlendSpaceThumbnailRenderer::StaticRegisterNativesUBlendSpaceThumbnailRenderer()
	{
	}
	IMPLEMENT_CLASS(UBlendSpaceThumbnailRenderer, 1961866737);
	void UBlueprintThumbnailRenderer::StaticRegisterNativesUBlueprintThumbnailRenderer()
	{
	}
	IMPLEMENT_CLASS(UBlueprintThumbnailRenderer, 1384737229);
	void UClassThumbnailRenderer::StaticRegisterNativesUClassThumbnailRenderer()
	{
	}
	IMPLEMENT_CLASS(UClassThumbnailRenderer, 996256627);
	void UDestructibleMeshThumbnailRenderer::StaticRegisterNativesUDestructibleMeshThumbnailRenderer()
	{
	}
	IMPLEMENT_CLASS(UDestructibleMeshThumbnailRenderer, 270651959);
	void ULevelThumbnailRenderer::StaticRegisterNativesULevelThumbnailRenderer()
	{
	}
	IMPLEMENT_CLASS(ULevelThumbnailRenderer, 3636196916);
	void UMaterialFunctionThumbnailRenderer::StaticRegisterNativesUMaterialFunctionThumbnailRenderer()
	{
	}
	IMPLEMENT_CLASS(UMaterialFunctionThumbnailRenderer, 1485195596);
	void UMaterialInstanceThumbnailRenderer::StaticRegisterNativesUMaterialInstanceThumbnailRenderer()
	{
	}
	IMPLEMENT_CLASS(UMaterialInstanceThumbnailRenderer, 322850376);
	void USkeletalMeshThumbnailRenderer::StaticRegisterNativesUSkeletalMeshThumbnailRenderer()
	{
	}
	IMPLEMENT_CLASS(USkeletalMeshThumbnailRenderer, 1538326319);
	void USlateBrushThumbnailRenderer::StaticRegisterNativesUSlateBrushThumbnailRenderer()
	{
	}
	IMPLEMENT_CLASS(USlateBrushThumbnailRenderer, 4095535991);
	void UStaticMeshThumbnailRenderer::StaticRegisterNativesUStaticMeshThumbnailRenderer()
	{
	}
	IMPLEMENT_CLASS(UStaticMeshThumbnailRenderer, 1386126546);
	void UWorldThumbnailRenderer::StaticRegisterNativesUWorldThumbnailRenderer()
	{
	}
	IMPLEMENT_CLASS(UWorldThumbnailRenderer, 2622652004);
	void USoundWaveThumbnailRenderer::StaticRegisterNativesUSoundWaveThumbnailRenderer()
	{
	}
	IMPLEMENT_CLASS(USoundWaveThumbnailRenderer, 4152332536);
	void UTextureThumbnailRenderer::StaticRegisterNativesUTextureThumbnailRenderer()
	{
	}
	IMPLEMENT_CLASS(UTextureThumbnailRenderer, 2239521931);
	void UFontThumbnailRenderer::StaticRegisterNativesUFontThumbnailRenderer()
	{
	}
	IMPLEMENT_CLASS(UFontThumbnailRenderer, 1557683071);
	void UParticleSystemThumbnailRenderer::StaticRegisterNativesUParticleSystemThumbnailRenderer()
	{
	}
	IMPLEMENT_CLASS(UParticleSystemThumbnailRenderer, 1521329990);
	void USubsurfaceProfileRenderer::StaticRegisterNativesUSubsurfaceProfileRenderer()
	{
	}
	IMPLEMENT_CLASS(USubsurfaceProfileRenderer, 1841480632);
	void UTextureCubeThumbnailRenderer::StaticRegisterNativesUTextureCubeThumbnailRenderer()
	{
	}
	IMPLEMENT_CLASS(UTextureCubeThumbnailRenderer, 353924104);
	void UTransBuffer::StaticRegisterNativesUTransBuffer()
	{
	}
	IMPLEMENT_CLASS(UTransBuffer, 2804737426);
class UScriptStruct* FEditorKeyBinding::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern UNREALED_API class UScriptStruct* Z_Construct_UScriptStruct_FEditorKeyBinding();
		extern UNREALED_API uint32 Get_Z_Construct_UScriptStruct_FEditorKeyBinding_CRC();
		extern UNREALED_API class UPackage* Z_Construct_UPackage_UnrealEd();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FEditorKeyBinding, Z_Construct_UPackage_UnrealEd(), TEXT("EditorKeyBinding"), sizeof(FEditorKeyBinding), Get_Z_Construct_UScriptStruct_FEditorKeyBinding_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FEditorKeyBinding(FEditorKeyBinding::StaticStruct, TEXT("/Script/UnrealEd"));
static struct FScriptStruct_UnrealEd_StaticRegisterNativesFEditorKeyBinding
{
	FScriptStruct_UnrealEd_StaticRegisterNativesFEditorKeyBinding()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("EditorKeyBinding")),new UScriptStruct::TCppStructOps<FEditorKeyBinding>);
	}
} ScriptStruct_UnrealEd_StaticRegisterNativesFEditorKeyBinding;
	void UUnrealEdKeyBindings::StaticRegisterNativesUUnrealEdKeyBindings()
	{
	}
	IMPLEMENT_CLASS(UUnrealEdKeyBindings, 1898916821);
class UScriptStruct* FClassPickerDefaults::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern UNREALED_API class UScriptStruct* Z_Construct_UScriptStruct_FClassPickerDefaults();
		extern UNREALED_API uint32 Get_Z_Construct_UScriptStruct_FClassPickerDefaults_CRC();
		extern UNREALED_API class UPackage* Z_Construct_UPackage_UnrealEd();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FClassPickerDefaults, Z_Construct_UPackage_UnrealEd(), TEXT("ClassPickerDefaults"), sizeof(FClassPickerDefaults), Get_Z_Construct_UScriptStruct_FClassPickerDefaults_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FClassPickerDefaults(FClassPickerDefaults::StaticStruct, TEXT("/Script/UnrealEd"));
static struct FScriptStruct_UnrealEd_StaticRegisterNativesFClassPickerDefaults
{
	FScriptStruct_UnrealEd_StaticRegisterNativesFClassPickerDefaults()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("ClassPickerDefaults")),new UScriptStruct::TCppStructOps<FClassPickerDefaults>);
	}
} ScriptStruct_UnrealEd_StaticRegisterNativesFClassPickerDefaults;
class UScriptStruct* FEditorCommand::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern UNREALED_API class UScriptStruct* Z_Construct_UScriptStruct_FEditorCommand();
		extern UNREALED_API uint32 Get_Z_Construct_UScriptStruct_FEditorCommand_CRC();
		extern UNREALED_API class UPackage* Z_Construct_UPackage_UnrealEd();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FEditorCommand, Z_Construct_UPackage_UnrealEd(), TEXT("EditorCommand"), sizeof(FEditorCommand), Get_Z_Construct_UScriptStruct_FEditorCommand_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FEditorCommand(FEditorCommand::StaticStruct, TEXT("/Script/UnrealEd"));
static struct FScriptStruct_UnrealEd_StaticRegisterNativesFEditorCommand
{
	FScriptStruct_UnrealEd_StaticRegisterNativesFEditorCommand()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("EditorCommand")),new UScriptStruct::TCppStructOps<FEditorCommand>);
	}
} ScriptStruct_UnrealEd_StaticRegisterNativesFEditorCommand;
class UScriptStruct* FEditorCommandCategory::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern UNREALED_API class UScriptStruct* Z_Construct_UScriptStruct_FEditorCommandCategory();
		extern UNREALED_API uint32 Get_Z_Construct_UScriptStruct_FEditorCommandCategory_CRC();
		extern UNREALED_API class UPackage* Z_Construct_UPackage_UnrealEd();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FEditorCommandCategory, Z_Construct_UPackage_UnrealEd(), TEXT("EditorCommandCategory"), sizeof(FEditorCommandCategory), Get_Z_Construct_UScriptStruct_FEditorCommandCategory_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FEditorCommandCategory(FEditorCommandCategory::StaticStruct, TEXT("/Script/UnrealEd"));
static struct FScriptStruct_UnrealEd_StaticRegisterNativesFEditorCommandCategory
{
	FScriptStruct_UnrealEd_StaticRegisterNativesFEditorCommandCategory()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("EditorCommandCategory")),new UScriptStruct::TCppStructOps<FEditorCommandCategory>);
	}
} ScriptStruct_UnrealEd_StaticRegisterNativesFEditorCommandCategory;
	void UUnrealEdOptions::StaticRegisterNativesUUnrealEdOptions()
	{
	}
	IMPLEMENT_CLASS(UUnrealEdOptions, 1850993197);
	void UUpdateGameProjectCommandlet::StaticRegisterNativesUUpdateGameProjectCommandlet()
	{
	}
	IMPLEMENT_CLASS(UUpdateGameProjectCommandlet, 1585437269);
class UScriptStruct* FStructVariableDescription::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern UNREALED_API class UScriptStruct* Z_Construct_UScriptStruct_FStructVariableDescription();
		extern UNREALED_API uint32 Get_Z_Construct_UScriptStruct_FStructVariableDescription_CRC();
		extern UNREALED_API class UPackage* Z_Construct_UPackage_UnrealEd();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FStructVariableDescription, Z_Construct_UPackage_UnrealEd(), TEXT("StructVariableDescription"), sizeof(FStructVariableDescription), Get_Z_Construct_UScriptStruct_FStructVariableDescription_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FStructVariableDescription(FStructVariableDescription::StaticStruct, TEXT("/Script/UnrealEd"));
static struct FScriptStruct_UnrealEd_StaticRegisterNativesFStructVariableDescription
{
	FScriptStruct_UnrealEd_StaticRegisterNativesFStructVariableDescription()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("StructVariableDescription")),new UScriptStruct::TCppStructOps<FStructVariableDescription>);
	}
} ScriptStruct_UnrealEd_StaticRegisterNativesFStructVariableDescription;
	void UUserDefinedStructEditorData::StaticRegisterNativesUUserDefinedStructEditorData()
	{
	}
	IMPLEMENT_CLASS(UUserDefinedStructEditorData, 2809033296);
	void UWrangleContentCommandlet::StaticRegisterNativesUWrangleContentCommandlet()
	{
	}
	IMPLEMENT_CLASS(UWrangleContentCommandlet, 3490048401);
#if USE_COMPILED_IN_NATIVES
// Cross Module References
	COREUOBJECT_API class UClass* Z_Construct_UClass_UObject();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FVector();
	ENGINE_API class UClass* Z_Construct_UClass_AActor_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UImportantToggleSettingInterface_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UExporter();
	ENGINE_API class UClass* Z_Construct_UClass_UCommandlet();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FRotator();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FColor();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FHitResult();
	ENGINE_API class UClass* Z_Construct_UClass_UDeveloperSettings();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FLinearColor();
	ENGINE_API class UClass* Z_Construct_UClass_USkeletalMeshComponent();
	ENGINE_API class UClass* Z_Construct_UClass_UAnimInstance_NoRegister();
	ANIMGRAPH_API class UClass* Z_Construct_UClass_UAnimPreviewInstance_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialInterface_NoRegister();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FGuid();
	ENGINE_API class UClass* Z_Construct_UClass_UFont_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UTexture_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UEdGraphNode();
	ENGINE_API class UClass* Z_Construct_UClass_UEdGraph();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialFunction_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterial_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionComment_NoRegister();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FEdGraphSchemaAction();
	ENGINE_API class UClass* Z_Construct_UClass_UEdGraphSchema();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimSegment();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FCompositeSection();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimNotifyEvent();
	ENGINE_API class UClass* Z_Construct_UClass_UBrushBuilder();
	KISMET_API class UClass* Z_Construct_UClass_UBlueprintPaletteFavorites_NoRegister();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FIntPoint();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FExposureSettings();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EViewModeIndex();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FStringAssetReference();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EAspectRatioAxisConstraint();
	ENGINE_API class UClass* Z_Construct_UClass_UEngine();
	ENGINE_API class UClass* Z_Construct_UClass_UBrushBuilder_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UStaticMeshComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UTextureRenderTarget2D_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UWorld_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_ANavigationObjectBase_NoRegister();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EDetailMode();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FPlane();
	ENGINE_API class UClass* Z_Construct_UClass_UStaticMesh_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UAudioComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USoundCue_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UTexture2D_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UAnimCompress_NoRegister();
	COREUOBJECT_API class UClass* Z_Construct_UClass_UObject_NoRegister();
	INPUTCORE_API class UEnum* Z_Construct_UEnum_InputCore_EConsoleForGamepadLabels();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FFilePath();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimParentNodeAssetOverride();
	COREUOBJECT_API class UEnum* Z_Construct_UEnum_CoreUObject_EUnit();
	ENGINE_API class UClass* Z_Construct_UClass_UAnimSequenceBase_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USkeleton_NoRegister();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EBlueprintType();
	ENGINE_API class UClass* Z_Construct_UClass_UAnimSequence_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UCurveBase_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UDataAsset_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USkeletalMesh_NoRegister();
	SLATECORE_API class UClass* Z_Construct_UClass_USlateWidgetStyleContainerBase_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USoundWave_NoRegister();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_TextureGroup();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_TextureMipGenSettings();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EMaterialShadingModel();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EBlendMode();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_TextureCompressionSettings();
	ENGINE_API class UClass* Z_Construct_UClass_UFontImportOptions_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UAssetImportData();
	ENGINE_API class UClass* Z_Construct_UClass_UPhysicsAsset_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_AActor();
	ENGINE_API class UClass* Z_Construct_UClass_AVolume();
	ENGINE_API class UClass* Z_Construct_UClass_ULevelStreaming_NoRegister();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FSwarmDebugOptions();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FLightmassDebugOptions();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialInstanceConstant_NoRegister();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FMaterialInstanceBasePropertyOverrides();
	ENGINE_API class UClass* Z_Construct_UClass_USubsurfaceProfile_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UPhysicalMaterial_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UStaticMeshComponent();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpression_NoRegister();
	NIAGARA_API class UEnum* Z_Construct_UEnum_Niagara_ENiagaraDataType();
	NIAGARA_API class UClass* Z_Construct_UClass_UNiagaraScript_NoRegister();
	VECTORVM_API class UClass* Z_Construct_UClass_UNiagaraDataObject_NoRegister();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FMatrix();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FVector4();
	NIAGARA_API class UScriptStruct* Z_Construct_UScriptStruct_FNiagaraVariableInfo();
	NIAGARA_API class UClass* Z_Construct_UClass_UNiagaraScriptSourceBase();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterial();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FDirectoryPath();
	ENGINE_API class UClass* Z_Construct_UClass_UPrimitiveComponent_NoRegister();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FVector2D();
	ENGINE_API class UClass* Z_Construct_UClass_UThumbnailInfo();
	ENGINE_API class UClass* Z_Construct_UClass_UTextureCube_NoRegister();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ECameraProjectionMode();
	ENGINE_API class UClass* Z_Construct_UClass_USoundClass_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USoundNode_NoRegister();
	INPUTCORE_API class UScriptStruct* Z_Construct_UScriptStruct_FKey();

	UNREALED_API class UClass* Z_Construct_UClass_UActorFactory_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UActorFactory();
	UNREALED_API class UClass* Z_Construct_UClass_UActorFactoryAmbientSound_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UActorFactoryAmbientSound();
	UNREALED_API class UClass* Z_Construct_UClass_UActorFactoryAtmosphericFog_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UActorFactoryAtmosphericFog();
	UNREALED_API class UClass* Z_Construct_UClass_UActorFactoryBlueprint_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UActorFactoryBlueprint();
	UNREALED_API class UClass* Z_Construct_UClass_UActorFactoryBoxReflectionCapture_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UActorFactoryBoxReflectionCapture();
	UNREALED_API class UClass* Z_Construct_UClass_UActorFactoryBoxVolume_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UActorFactoryBoxVolume();
	UNREALED_API class UClass* Z_Construct_UClass_UActorFactoryCameraActor_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UActorFactoryCameraActor();
	UNREALED_API class UClass* Z_Construct_UClass_UActorFactoryCharacter_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UActorFactoryCharacter();
	UNREALED_API class UClass* Z_Construct_UClass_UActorFactoryClass_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UActorFactoryClass();
	UNREALED_API class UClass* Z_Construct_UClass_UActorFactoryCylinderVolume_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UActorFactoryCylinderVolume();
	UNREALED_API class UClass* Z_Construct_UClass_UActorFactoryDeferredDecal_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UActorFactoryDeferredDecal();
	UNREALED_API class UClass* Z_Construct_UClass_UActorFactoryDestructible_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UActorFactoryDestructible();
	UNREALED_API class UClass* Z_Construct_UClass_UActorFactoryDirectionalLight_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UActorFactoryDirectionalLight();
	UNREALED_API class UClass* Z_Construct_UClass_UActorFactoryEmitter_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UActorFactoryEmitter();
	UNREALED_API class UClass* Z_Construct_UClass_UActorFactoryEmptyActor_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UActorFactoryEmptyActor();
	UNREALED_API class UClass* Z_Construct_UClass_UActorFactoryPawn_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UActorFactoryPawn();
	UNREALED_API class UClass* Z_Construct_UClass_UActorFactoryExponentialHeightFog_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UActorFactoryExponentialHeightFog();
	UNREALED_API class UClass* Z_Construct_UClass_UActorFactoryMatineeActor_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UActorFactoryMatineeActor();
	UNREALED_API class UClass* Z_Construct_UClass_UActorFactoryMovieScene_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UActorFactoryMovieScene();
	UNREALED_API class UClass* Z_Construct_UClass_UActorFactoryNiagara_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UActorFactoryNiagara();
	UNREALED_API class UClass* Z_Construct_UClass_UActorFactoryNote_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UActorFactoryNote();
	UNREALED_API class UClass* Z_Construct_UClass_UActorFactoryPhysicsAsset_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UActorFactoryPhysicsAsset();
	UNREALED_API class UClass* Z_Construct_UClass_UActorFactoryPlaneReflectionCapture_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UActorFactoryPlaneReflectionCapture();
	UNREALED_API class UClass* Z_Construct_UClass_UActorFactoryPlayerStart_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UActorFactoryPlayerStart();
	UNREALED_API class UClass* Z_Construct_UClass_UActorFactoryPointLight_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UActorFactoryPointLight();
	UNREALED_API class UClass* Z_Construct_UClass_UActorFactorySkeletalMesh_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UActorFactorySkeletalMesh();
	UNREALED_API class UClass* Z_Construct_UClass_UActorFactoryAnimationAsset_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UActorFactoryAnimationAsset();
	UNREALED_API class UClass* Z_Construct_UClass_UActorFactorySkyLight_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UActorFactorySkyLight();
	UNREALED_API class UClass* Z_Construct_UClass_UActorFactorySphereReflectionCapture_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UActorFactorySphereReflectionCapture();
	UNREALED_API class UClass* Z_Construct_UClass_UActorFactorySphereVolume_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UActorFactorySphereVolume();
	UNREALED_API class UClass* Z_Construct_UClass_UActorFactorySpotLight_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UActorFactorySpotLight();
	UNREALED_API class UClass* Z_Construct_UClass_UActorFactoryStaticMesh_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UActorFactoryStaticMesh();
	UNREALED_API class UClass* Z_Construct_UClass_UActorFactoryBasicShape_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UActorFactoryBasicShape();
	UNREALED_API class UClass* Z_Construct_UClass_UActorFactoryInteractiveFoliage_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UActorFactoryInteractiveFoliage();
	UNREALED_API class UClass* Z_Construct_UClass_UActorFactoryTargetPoint_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UActorFactoryTargetPoint();
	UNREALED_API class UClass* Z_Construct_UClass_UActorFactoryTextRender_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UActorFactoryTextRender();
	UNREALED_API class UClass* Z_Construct_UClass_UActorFactoryTriggerBox_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UActorFactoryTriggerBox();
	UNREALED_API class UClass* Z_Construct_UClass_UActorFactoryTriggerCapsule_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UActorFactoryTriggerCapsule();
	UNREALED_API class UClass* Z_Construct_UClass_UActorFactoryTriggerSphere_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UActorFactoryTriggerSphere();
	UNREALED_API class UClass* Z_Construct_UClass_UActorFactoryVectorFieldVolume_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UActorFactoryVectorFieldVolume();
	UNREALED_API class UClass* Z_Construct_UClass_UAnalyticsPrivacySettings_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UAnalyticsPrivacySettings();
	UNREALED_API class UClass* Z_Construct_UClass_UAnimSequenceExporterFBX_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UAnimSequenceExporterFBX();
	UNREALED_API class UClass* Z_Construct_UClass_UAudioTestCommandlet_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UAudioTestCommandlet();
	UNREALED_API class UClass* Z_Construct_UClass_UAutoReimportManager_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UAutoReimportManager();
	UNREALED_API class UClass* Z_Construct_UClass_UCascadeOptions_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UCascadeOptions();
	UNREALED_API class UScriptStruct* Z_Construct_UScriptStruct_FChunkDependency();
	UNREALED_API class UClass* Z_Construct_UClass_UChunkDependencyInfo_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UChunkDependencyInfo();
	UNREALED_API class UScriptStruct* Z_Construct_UScriptStruct_FCollisionPerfTest();
	UNREALED_API class UScriptStruct* Z_Construct_UScriptStruct_FCollisionTestEntry();
	UNREALED_API class UClass* Z_Construct_UClass_UCollisionAutomationTestConfigData_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UCollisionAutomationTestConfigData();
	UNREALED_API class UClass* Z_Construct_UClass_UCompressAnimationsCommandlet_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UCompressAnimationsCommandlet();
	UNREALED_API class UClass* Z_Construct_UClass_UContentBrowserSettings_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UContentBrowserSettings();
	UNREALED_API class UClass* Z_Construct_UClass_UCookCommandlet_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UCookCommandlet();
	UNREALED_API class UClass* Z_Construct_UClass_UCookerSettings_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UCookerSettings();
	UNREALED_API class UEnum* Z_Construct_UEnum_UnrealEd_ECookMode();
	UNREALED_API class UClass* Z_Construct_UClass_UCookOnTheFlyServer_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UCookOnTheFlyServer();
	UNREALED_API class UEnum* Z_Construct_UEnum_UnrealEd_ECurveEditorTangentVisibility();
	UNREALED_API class UEnum* Z_Construct_UEnum_UnrealEd_ECurveEditorCurveVisibility();
	UNREALED_API class UClass* Z_Construct_UClass_UCurveEditorSettings_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UCurveEditorSettings();
	UNREALED_API class UClass* Z_Construct_UClass_UCurveEdOptions_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UCurveEdOptions();
	UNREALED_API class UScriptStruct* Z_Construct_UScriptStruct_FSelectedSocketInfo();
	UNREALED_API class UClass* Z_Construct_UClass_UDebugSkelMeshComponent_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UDebugSkelMeshComponent();
	UNREALED_API class UEnum* Z_Construct_UEnum_UnrealEd_ELevelViewportType();
	UNREALED_API class UScriptStruct* Z_Construct_UScriptStruct_FLightmassParameterizedMaterialSettings();
	UNREALED_API class UScriptStruct* Z_Construct_UScriptStruct_FLightmassScalarParameterValue();
	UNREALED_API class UScriptStruct* Z_Construct_UScriptStruct_FLightmassBooleanParameterValue();
	UNREALED_API class UScriptStruct* Z_Construct_UScriptStruct_FLightmassParameterValue();
	UNREALED_API class UClass* Z_Construct_UClass_UUnrealEdTypes_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UUnrealEdTypes();
	UNREALED_API class UClass* Z_Construct_UClass_UDEditorParameterValue_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UDEditorParameterValue();
	UNREALED_API class UScriptStruct* Z_Construct_UScriptStruct_FDFontParameters();
	UNREALED_API class UClass* Z_Construct_UClass_UDEditorFontParameterValue_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UDEditorFontParameterValue();
	UNREALED_API class UClass* Z_Construct_UClass_UDEditorScalarParameterValue_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UDEditorScalarParameterValue();
	UNREALED_API class UScriptStruct* Z_Construct_UScriptStruct_FDComponentMaskParameter();
	UNREALED_API class UClass* Z_Construct_UClass_UDEditorStaticComponentMaskParameterValue_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UDEditorStaticComponentMaskParameterValue();
	UNREALED_API class UClass* Z_Construct_UClass_UDEditorStaticSwitchParameterValue_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UDEditorStaticSwitchParameterValue();
	UNREALED_API class UClass* Z_Construct_UClass_UDEditorTextureParameterValue_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UDEditorTextureParameterValue();
	UNREALED_API class UClass* Z_Construct_UClass_UDEditorVectorParameterValue_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UDEditorVectorParameterValue();
	UNREALED_API class UClass* Z_Construct_UClass_UDerivedDataCacheCommandlet_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UDerivedDataCacheCommandlet();
	UNREALED_API class UClass* Z_Construct_UClass_UDestructableMeshEditorSettings_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UDestructableMeshEditorSettings();
	UNREALED_API class UClass* Z_Construct_UClass_UDiffAssetsCommandlet_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UDiffAssetsCommandlet();
	UNREALED_API class UClass* Z_Construct_UClass_UDiffPackagesCommandlet_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UDiffPackagesCommandlet();
	UNREALED_API class UClass* Z_Construct_UClass_UDumpBlueprintsInfoCommandlet_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UDumpBlueprintsInfoCommandlet();
	UNREALED_API class UClass* Z_Construct_UClass_UDumpHiddenCategoriesCommandlet_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UDumpHiddenCategoriesCommandlet();
	UNREALED_API class UEnum* Z_Construct_UEnum_UnrealEd_ECommentBoxMode();
	UNREALED_API class UClass* Z_Construct_UClass_UEdGraphNode_Comment_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UEdGraphNode_Comment();
	UNREALED_API class UClass* Z_Construct_UClass_UMaterialGraph_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UMaterialGraph();
	UNREALED_API class UClass* Z_Construct_UClass_UMaterialGraphNode_Comment_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UMaterialGraphNode_Comment();
	UNREALED_API class UScriptStruct* Z_Construct_UScriptStruct_FNiagaraSchemaAction_NewNode();
	UNREALED_API class UClass* Z_Construct_UClass_UEdGraphSchema_Niagara_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UEdGraphSchema_Niagara();
	UNREALED_API class UScriptStruct* Z_Construct_UScriptStruct_FActorFolderProps();
	UNREALED_API class UClass* Z_Construct_UClass_UEditorActorFolders_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UEditorActorFolders();
	UNREALED_API class UClass* Z_Construct_UClass_UEditorAnimBaseObj_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UEditorAnimBaseObj();
	UNREALED_API class UClass* Z_Construct_UClass_UEditorAnimCompositeSegment_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UEditorAnimCompositeSegment();
	UNREALED_API class UClass* Z_Construct_UClass_UEditorAnimSegment_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UEditorAnimSegment();
	UNREALED_API class UClass* Z_Construct_UClass_UEditorCompositeSection_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UEditorCompositeSection();
	UNREALED_API class UClass* Z_Construct_UClass_UEditorNotifyObject_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UEditorNotifyObject();
	UNREALED_API class UClass* Z_Construct_UClass_UEditorBrushBuilder_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UEditorBrushBuilder();
	UNREALED_API class UClass* Z_Construct_UClass_UConeBuilder_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UConeBuilder();
	UNREALED_API class UClass* Z_Construct_UClass_UCubeBuilder_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UCubeBuilder();
	UNREALED_API class UClass* Z_Construct_UClass_UCurvedStairBuilder_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UCurvedStairBuilder();
	UNREALED_API class UClass* Z_Construct_UClass_UCylinderBuilder_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UCylinderBuilder();
	UNREALED_API class UClass* Z_Construct_UClass_ULinearStairBuilder_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_ULinearStairBuilder();
	UNREALED_API class UEnum* Z_Construct_UEnum_UnrealEd_ESheetAxis();
	UNREALED_API class UClass* Z_Construct_UClass_USheetBuilder_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_USheetBuilder();
	UNREALED_API class UClass* Z_Construct_UClass_USpiralStairBuilder_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_USpiralStairBuilder();
	UNREALED_API class UClass* Z_Construct_UClass_UTetrahedronBuilder_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UTetrahedronBuilder();
	UNREALED_API class UClass* Z_Construct_UClass_UVolumetricBuilder_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UVolumetricBuilder();
	UNREALED_API class UClass* Z_Construct_UClass_UEditorPerProjectUserSettings_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UEditorPerProjectUserSettings();
	UNREALED_API class UClass* Z_Construct_UClass_UTransactor_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UTransactor();
	UNREALED_API class UEnum* Z_Construct_UEnum_UnrealEd_EPlayOnLaunchConfiguration();
	UNREALED_API class UEnum* Z_Construct_UEnum_UnrealEd_EPlayOnBuildMode();
	UNREALED_API class UEnum* Z_Construct_UEnum_UnrealEd_EPlayNetMode();
	UNREALED_API class UEnum* Z_Construct_UEnum_UnrealEd_EPlayModeType();
	UNREALED_API class UEnum* Z_Construct_UEnum_UnrealEd_EPlayModeLocations();
	UNREALED_API class UEnum* Z_Construct_UEnum_UnrealEd_ELaunchModeType();
	UNREALED_API class UEnum* Z_Construct_UEnum_UnrealEd_ELabelAnchorMode();
	UNREALED_API class UScriptStruct* Z_Construct_UScriptStruct_FPlayScreenResolution();
	UNREALED_API class UClass* Z_Construct_UClass_ULevelEditorPlaySettings_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_ULevelEditorPlaySettings();
	UNREALED_API class UEnum* Z_Construct_UEnum_UnrealEd_EMeasuringToolUnits();
	UNREALED_API class UEnum* Z_Construct_UEnum_UnrealEd_ELandscapeFoliageEditorControlType();
	UNREALED_API class UEnum* Z_Construct_UEnum_UnrealEd_EWASDType();
	UNREALED_API class UEnum* Z_Construct_UEnum_UnrealEd_ERotationGridMode();
	UNREALED_API class UScriptStruct* Z_Construct_UScriptStruct_FSnapToSurfaceSettings();
	UNREALED_API class UScriptStruct* Z_Construct_UScriptStruct_FLevelEditorViewportInstanceSettingsKeyValuePair();
	UNREALED_API class UScriptStruct* Z_Construct_UScriptStruct_FLevelEditorViewportInstanceSettings();
	UNREALED_API class UClass* Z_Construct_UClass_ULevelEditorViewportSettings_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_ULevelEditorViewportSettings();
	UNREALED_API class UEnum* Z_Construct_UEnum_UnrealEd_EPasteTo();
	UNREALED_API class UEnum* Z_Construct_UEnum_UnrealEd_EMapSetBrushFlags();
	UNREALED_API class UScriptStruct* Z_Construct_UScriptStruct_FCopySelectedInfo();
	UNREALED_API class UScriptStruct* Z_Construct_UScriptStruct_FPIELoginInfo();
	UNREALED_API class UScriptStruct* Z_Construct_UScriptStruct_FSlatePlayInEditorInfo();
	UNREALED_API class UClass* Z_Construct_UClass_UEditorEngine_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UEditorEngine();
	UNREALED_API class UEnum* Z_Construct_UEnum_UnrealEd_EWriteDisallowedWarningState();
	UNREALED_API class UEnum* Z_Construct_UEnum_UnrealEd_EPackageNotifyState();
	UNREALED_API class UScriptStruct* Z_Construct_UScriptStruct_FTemplateMapInfo();
	UNREALED_API class UScriptStruct* Z_Construct_UScriptStruct_FClassMoveInfo();
	UNREALED_API class UClass* Z_Construct_UClass_UUnrealEdEngine_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UUnrealEdEngine();
	UNREALED_API class UClass* Z_Construct_UClass_UEditorExperimentalSettings_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UEditorExperimentalSettings();
	UNREALED_API class UEnum* Z_Construct_UEnum_UnrealEd_ELoadLevelAtStartup();
	UNREALED_API class UScriptStruct* Z_Construct_UScriptStruct_FAutoReimportDirectoryConfig();
	UNREALED_API class UScriptStruct* Z_Construct_UScriptStruct_FAutoReimportWildcard();
	UNREALED_API class UClass* Z_Construct_UClass_UEditorLoadingSavingSettings_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UEditorLoadingSavingSettings();
	UNREALED_API class UClass* Z_Construct_UClass_UEditorMiscSettings_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UEditorMiscSettings();
	UNREALED_API class UClass* Z_Construct_UClass_UEditorParentPlayerListObj_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UEditorParentPlayerListObj();
	UNREALED_API class UEnum* Z_Construct_UEnum_UnrealEd_ELevelEditor2DAxis();
	UNREALED_API class UEnum* Z_Construct_UEnum_UnrealEd_EDefaultLocationUnit();
	UNREALED_API class UEnum* Z_Construct_UEnum_UnrealEd_EUnitDisplay();
	UNREALED_API class UScriptStruct* Z_Construct_UScriptStruct_FMode2DLayer();
	UNREALED_API class UClass* Z_Construct_UClass_UEditorProjectAppearanceSettings_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UEditorProjectAppearanceSettings();
	UNREALED_API class UClass* Z_Construct_UClass_ULevelEditor2DSettings_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_ULevelEditor2DSettings();
	UNREALED_API class UClass* Z_Construct_UClass_UEditorSettings_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UEditorSettings();
	UNREALED_API class UScriptStruct* Z_Construct_UScriptStruct_FSkeletonNotifyDependentAnimations();
	UNREALED_API class UClass* Z_Construct_UClass_UEditorSkeletonNotifyObj_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UEditorSkeletonNotifyObj();
	UNREALED_API class UClass* Z_Construct_UClass_UExportTextContainer_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UExportTextContainer();
	UNREALED_API class UClass* Z_Construct_UClass_UFactory_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UFactory();
	UNREALED_API class UClass* Z_Construct_UClass_UAnimBlueprintFactory_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UAnimBlueprintFactory();
	UNREALED_API class UClass* Z_Construct_UClass_UAnimCompositeFactory_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UAnimCompositeFactory();
	UNREALED_API class UClass* Z_Construct_UClass_UAnimMontageFactory_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UAnimMontageFactory();
	UNREALED_API class UClass* Z_Construct_UClass_UAnimSequenceFactory_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UAnimSequenceFactory();
	UNREALED_API class UClass* Z_Construct_UClass_UBlendSpaceFactory1D_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UBlendSpaceFactory1D();
	UNREALED_API class UClass* Z_Construct_UClass_UAimOffsetBlendSpaceFactory1D_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UAimOffsetBlendSpaceFactory1D();
	UNREALED_API class UClass* Z_Construct_UClass_UBlendSpaceFactoryNew_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UBlendSpaceFactoryNew();
	UNREALED_API class UClass* Z_Construct_UClass_UAimOffsetBlendSpaceFactoryNew_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UAimOffsetBlendSpaceFactoryNew();
	UNREALED_API class UClass* Z_Construct_UClass_UBlueprintFactory_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UBlueprintFactory();
	UNREALED_API class UClass* Z_Construct_UClass_UBlueprintFunctionLibraryFactory_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UBlueprintFunctionLibraryFactory();
	UNREALED_API class UClass* Z_Construct_UClass_UBlueprintMacroFactory_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UBlueprintMacroFactory();
	UNREALED_API class UClass* Z_Construct_UClass_UBlueprintInterfaceFactory_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UBlueprintInterfaceFactory();
	UNREALED_API class UClass* Z_Construct_UClass_UCameraAnimFactory_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UCameraAnimFactory();
	UNREALED_API class UClass* Z_Construct_UClass_UCSVImportFactory_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UCSVImportFactory();
	UNREALED_API class UClass* Z_Construct_UClass_UReimportCurveFactory_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UReimportCurveFactory();
	UNREALED_API class UClass* Z_Construct_UClass_UReimportCurveTableFactory_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UReimportCurveTableFactory();
	UNREALED_API class UClass* Z_Construct_UClass_UReimportDataTableFactory_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UReimportDataTableFactory();
	UNREALED_API class UClass* Z_Construct_UClass_UCurveFactory_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UCurveFactory();
	UNREALED_API class UClass* Z_Construct_UClass_UCurveFloatFactory_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UCurveFloatFactory();
	UNREALED_API class UClass* Z_Construct_UClass_UCurveImportFactory_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UCurveImportFactory();
	UNREALED_API class UClass* Z_Construct_UClass_UDataAssetFactory_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UDataAssetFactory();
	UNREALED_API class UClass* Z_Construct_UClass_UDataTableFactory_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UDataTableFactory();
	UNREALED_API class UClass* Z_Construct_UClass_UDestructibleMeshFactory_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UDestructibleMeshFactory();
	UNREALED_API class UClass* Z_Construct_UClass_UReimportDestructibleMeshFactory_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UReimportDestructibleMeshFactory();
	UNREALED_API class UClass* Z_Construct_UClass_UDialogueVoiceFactory_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UDialogueVoiceFactory();
	UNREALED_API class UClass* Z_Construct_UClass_UDialogueWaveFactory_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UDialogueWaveFactory();
	UNREALED_API class UClass* Z_Construct_UClass_UEnumFactory_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UEnumFactory();
	UNREALED_API class UClass* Z_Construct_UClass_UFbxFactory_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UFbxFactory();
	UNREALED_API class UClass* Z_Construct_UClass_UReimportFbxAnimSequenceFactory_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UReimportFbxAnimSequenceFactory();
	UNREALED_API class UClass* Z_Construct_UClass_UReimportFbxSkeletalMeshFactory_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UReimportFbxSkeletalMeshFactory();
	UNREALED_API class UClass* Z_Construct_UClass_UReimportFbxStaticMeshFactory_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UReimportFbxStaticMeshFactory();
	UNREALED_API class UClass* Z_Construct_UClass_UFontFactory_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UFontFactory();
	UNREALED_API class UClass* Z_Construct_UClass_UFontFileImportFactory_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UFontFileImportFactory();
	UNREALED_API class UClass* Z_Construct_UClass_UForceFeedbackEffectFactory_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UForceFeedbackEffectFactory();
	UNREALED_API class UClass* Z_Construct_UClass_UHapticFeedbackEffectFactory_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UHapticFeedbackEffectFactory();
	UNREALED_API class UClass* Z_Construct_UClass_UInterpDataFactoryNew_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UInterpDataFactoryNew();
	UNREALED_API class UClass* Z_Construct_UClass_ULevelFactory_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_ULevelFactory();
	UNREALED_API class UClass* Z_Construct_UClass_UMaterialFactoryNew_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UMaterialFactoryNew();
	UNREALED_API class UClass* Z_Construct_UClass_UMaterialFunctionFactoryNew_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UMaterialFunctionFactoryNew();
	UNREALED_API class UClass* Z_Construct_UClass_UMaterialInstanceConstantFactoryNew_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UMaterialInstanceConstantFactoryNew();
	UNREALED_API class UClass* Z_Construct_UClass_UMaterialParameterCollectionFactoryNew_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UMaterialParameterCollectionFactoryNew();
	UNREALED_API class UClass* Z_Construct_UClass_UModelFactory_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UModelFactory();
	UNREALED_API class UClass* Z_Construct_UClass_UNiagaraEffectFactoryNew_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UNiagaraEffectFactoryNew();
	UNREALED_API class UClass* Z_Construct_UClass_UNiagaraScriptFactoryNew_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UNiagaraScriptFactoryNew();
	UNREALED_API class UClass* Z_Construct_UClass_UObjectLibraryFactory_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UObjectLibraryFactory();
	UNREALED_API class UClass* Z_Construct_UClass_UPackageFactory_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UPackageFactory();
	UNREALED_API class UClass* Z_Construct_UClass_UPackFactory_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UPackFactory();
	UNREALED_API class UClass* Z_Construct_UClass_UParticleSystemFactoryNew_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UParticleSystemFactoryNew();
	UNREALED_API class UClass* Z_Construct_UClass_UPhysicalMaterialFactoryNew_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UPhysicalMaterialFactoryNew();
	UNREALED_API class UClass* Z_Construct_UClass_UPolysFactory_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UPolysFactory();
	UNREALED_API class UClass* Z_Construct_UClass_UReverbEffectFactory_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UReverbEffectFactory();
	UNREALED_API class UClass* Z_Construct_UClass_USkeletonFactory_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_USkeletonFactory();
	UNREALED_API class UClass* Z_Construct_UClass_USlateBrushAssetFactory_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_USlateBrushAssetFactory();
	UNREALED_API class UClass* Z_Construct_UClass_USlateWidgetStyleAssetFactory_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_USlateWidgetStyleAssetFactory();
	UNREALED_API class UClass* Z_Construct_UClass_USoundAttenuationFactory_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_USoundAttenuationFactory();
	UNREALED_API class UClass* Z_Construct_UClass_USoundClassFactory_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_USoundClassFactory();
	UNREALED_API class UClass* Z_Construct_UClass_USoundCueFactoryNew_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_USoundCueFactoryNew();
	UNREALED_API class UClass* Z_Construct_UClass_USoundFactory_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_USoundFactory();
	UNREALED_API class UClass* Z_Construct_UClass_UReimportSoundFactory_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UReimportSoundFactory();
	UNREALED_API class UClass* Z_Construct_UClass_USoundMixFactory_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_USoundMixFactory();
	UNREALED_API class UClass* Z_Construct_UClass_USoundSurroundFactory_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_USoundSurroundFactory();
	UNREALED_API class UClass* Z_Construct_UClass_UReimportSoundSurroundFactory_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UReimportSoundSurroundFactory();
	UNREALED_API class UClass* Z_Construct_UClass_UStructureFactory_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UStructureFactory();
	UNREALED_API class UClass* Z_Construct_UClass_USubsurfaceProfileFactory_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_USubsurfaceProfileFactory();
	UNREALED_API class UClass* Z_Construct_UClass_UTexture2DFactoryNew_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UTexture2DFactoryNew();
	UNREALED_API class UClass* Z_Construct_UClass_UTextureFactory_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UTextureFactory();
	UNREALED_API class UClass* Z_Construct_UClass_UReimportTextureFactory_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UReimportTextureFactory();
	UNREALED_API class UClass* Z_Construct_UClass_UTrueTypeFontFactory_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UTrueTypeFontFactory();
	UNREALED_API class UClass* Z_Construct_UClass_UTextureRenderTargetCubeFactoryNew_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UTextureRenderTargetCubeFactoryNew();
	UNREALED_API class UClass* Z_Construct_UClass_UTextureRenderTargetFactoryNew_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UTextureRenderTargetFactoryNew();
	UNREALED_API class UClass* Z_Construct_UClass_UTouchInterfaceFactory_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UTouchInterfaceFactory();
	UNREALED_API class UClass* Z_Construct_UClass_UVectorFieldStaticFactory_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UVectorFieldStaticFactory();
	UNREALED_API class UClass* Z_Construct_UClass_UReimportVectorFieldStaticFactory_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UReimportVectorFieldStaticFactory();
	UNREALED_API class UClass* Z_Construct_UClass_UWorldFactory_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UWorldFactory();
	UNREALED_API class UClass* Z_Construct_UClass_UFbxAssetImportData_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UFbxAssetImportData();
	UNREALED_API class UEnum* Z_Construct_UEnum_UnrealEd_EFBXAnimationLengthImportType();
	UNREALED_API class UClass* Z_Construct_UClass_UFbxAnimSequenceImportData_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UFbxAnimSequenceImportData();
	UNREALED_API class UEnum* Z_Construct_UEnum_UnrealEd_EFBXNormalGenerationMethod();
	UNREALED_API class UEnum* Z_Construct_UEnum_UnrealEd_EFBXNormalImportMethod();
	UNREALED_API class UClass* Z_Construct_UClass_UFbxMeshImportData_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UFbxMeshImportData();
	UNREALED_API class UClass* Z_Construct_UClass_UFbxSkeletalMeshImportData_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UFbxSkeletalMeshImportData();
	UNREALED_API class UEnum* Z_Construct_UEnum_UnrealEd_EVertexColorImportOption();
	UNREALED_API class UClass* Z_Construct_UClass_UFbxStaticMeshImportData_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UFbxStaticMeshImportData();
	UNREALED_API class UClass* Z_Construct_UClass_UFbxTextureImportData_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UFbxTextureImportData();
	UNREALED_API class UEnum* Z_Construct_UEnum_UnrealEd_EFBXImportType();
	UNREALED_API class UClass* Z_Construct_UClass_UFbxImportUI_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UFbxImportUI();
	UNREALED_API class UClass* Z_Construct_UClass_UFileServerCommandlet_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UFileServerCommandlet();
	UNREALED_API class UClass* Z_Construct_UClass_UFixupRedirectsCommandlet_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UFixupRedirectsCommandlet();
	UNREALED_API class UClass* Z_Construct_UClass_UGatherTextCommandletBase_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UGatherTextCommandletBase();
	UNREALED_API class UClass* Z_Construct_UClass_UGatherTextCommandlet_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UGatherTextCommandlet();
	UNREALED_API class UClass* Z_Construct_UClass_UGatherTextFromAssetsCommandlet_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UGatherTextFromAssetsCommandlet();
	UNREALED_API class UClass* Z_Construct_UClass_UGatherTextFromMetaDataCommandlet_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UGatherTextFromMetaDataCommandlet();
	UNREALED_API class UClass* Z_Construct_UClass_UGatherTextFromSourceCommandlet_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UGatherTextFromSourceCommandlet();
	UNREALED_API class UClass* Z_Construct_UClass_UGenerateGatherArchiveCommandlet_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UGenerateGatherArchiveCommandlet();
	UNREALED_API class UClass* Z_Construct_UClass_UGenerateGatherManifestCommandlet_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UGenerateGatherManifestCommandlet();
	UNREALED_API class UClass* Z_Construct_UClass_UGenerateTextLocalizationReportCommandlet_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UGenerateTextLocalizationReportCommandlet();
	UNREALED_API class UClass* Z_Construct_UClass_UGenerateTextLocalizationResourceCommandlet_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UGenerateTextLocalizationResourceCommandlet();
	UNREALED_API class UClass* Z_Construct_UClass_UInternationalizationConditioningCommandlet_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UInternationalizationConditioningCommandlet();
	UNREALED_API class UClass* Z_Construct_UClass_UInternationalizationExportCommandlet_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UInternationalizationExportCommandlet();
	UNREALED_API class UClass* Z_Construct_UClass_URepairLocalizationDataCommandlet_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_URepairLocalizationDataCommandlet();
	UNREALED_API class UClass* Z_Construct_UClass_UGenerateBlueprintAPICommandlet_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UGenerateBlueprintAPICommandlet();
	UNREALED_API class UClass* Z_Construct_UClass_UGenerateDistillFileSetsCommandlet_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UGenerateDistillFileSetsCommandlet();
	UNREALED_API class UClass* Z_Construct_UClass_AGroupActor_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_AGroupActor();
	UNREALED_API class UClass* Z_Construct_UClass_AHierarchicalLODVolume_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_AHierarchicalLODVolume();
	UNREALED_API class UClass* Z_Construct_UClass_ULevelEditorMiscSettings_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_ULevelEditorMiscSettings();
	UNREALED_API class UClass* Z_Construct_UClass_ULevelExporterFBX_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_ULevelExporterFBX();
	UNREALED_API class UClass* Z_Construct_UClass_ULevelExporterLOD_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_ULevelExporterLOD();
	UNREALED_API class UClass* Z_Construct_UClass_ULevelExporterOBJ_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_ULevelExporterOBJ();
	UNREALED_API class UClass* Z_Construct_UClass_ULevelExporterSTL_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_ULevelExporterSTL();
	UNREALED_API class UClass* Z_Construct_UClass_ULevelExporterT3D_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_ULevelExporterT3D();
	UNREALED_API class UClass* Z_Construct_UClass_ULightmassOptionsObject_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_ULightmassOptionsObject();
	UNREALED_API class UClass* Z_Construct_UClass_UListMaterialsUsedWithMeshEmittersCommandlet_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UListMaterialsUsedWithMeshEmittersCommandlet();
	UNREALED_API class UClass* Z_Construct_UClass_UListStaticMeshesImportedFromSpeedTreesCommandlet_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UListStaticMeshesImportedFromSpeedTreesCommandlet();
	UNREALED_API class UClass* Z_Construct_UClass_ULoadPackageCommandlet_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_ULoadPackageCommandlet();
	UNREALED_API class UScriptStruct* Z_Construct_UScriptStruct_FEditorStaticComponentMaskParameterValue();
	UNREALED_API class UScriptStruct* Z_Construct_UScriptStruct_FComponentMaskParameter();
	UNREALED_API class UScriptStruct* Z_Construct_UScriptStruct_FEditorStaticSwitchParameterValue();
	UNREALED_API class UScriptStruct* Z_Construct_UScriptStruct_FEditorFontParameterValue();
	UNREALED_API class UScriptStruct* Z_Construct_UScriptStruct_FEditorTextureParameterValue();
	UNREALED_API class UScriptStruct* Z_Construct_UScriptStruct_FEditorScalarParameterValue();
	UNREALED_API class UScriptStruct* Z_Construct_UScriptStruct_FEditorVectorParameterValue();
	UNREALED_API class UScriptStruct* Z_Construct_UScriptStruct_FEditorParameterValue();
	UNREALED_API class UScriptStruct* Z_Construct_UScriptStruct_FEditorParameterGroup();
	UNREALED_API class UClass* Z_Construct_UClass_UMaterialEditorInstanceConstant_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UMaterialEditorInstanceConstant();
	UNREALED_API class UClass* Z_Construct_UClass_UMaterialEditorMeshComponent_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UMaterialEditorMeshComponent();
	UNREALED_API class UClass* Z_Construct_UClass_UMaterialEditorOptions_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UMaterialEditorOptions();
	UNREALED_API class UClass* Z_Construct_UClass_UMaterialGraphNode_Base_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UMaterialGraphNode_Base();
	UNREALED_API class UClass* Z_Construct_UClass_UMaterialGraphNode_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UMaterialGraphNode();
	UNREALED_API class UClass* Z_Construct_UClass_UMaterialGraphNode_Root_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UMaterialGraphNode_Root();
	UNREALED_API class UScriptStruct* Z_Construct_UScriptStruct_FMaterialGraphSchemaAction_Paste();
	UNREALED_API class UScriptStruct* Z_Construct_UScriptStruct_FMaterialGraphSchemaAction_NewComment();
	UNREALED_API class UScriptStruct* Z_Construct_UScriptStruct_FMaterialGraphSchemaAction_NewFunctionCall();
	UNREALED_API class UScriptStruct* Z_Construct_UScriptStruct_FMaterialGraphSchemaAction_NewNode();
	UNREALED_API class UClass* Z_Construct_UClass_UMaterialGraphSchema_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UMaterialGraphSchema();
	UNREALED_API class UClass* Z_Construct_UClass_UModelExporterT3D_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UModelExporterT3D();
	UNREALED_API class UClass* Z_Construct_UClass_UNiagaraGraph_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UNiagaraGraph();
	UNREALED_API class UClass* Z_Construct_UClass_UNiagaraNode_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UNiagaraNode();
	UNREALED_API class UClass* Z_Construct_UClass_UDEPRECATED_NiagaraNodeConstant_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UDEPRECATED_NiagaraNodeConstant();
	UNREALED_API class UClass* Z_Construct_UClass_UNiagaraNodeFunctionCall_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UNiagaraNodeFunctionCall();
	UNREALED_API class UClass* Z_Construct_UClass_UDEPRECATED_NiagaraNodeGetAttr_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UDEPRECATED_NiagaraNodeGetAttr();
	UNREALED_API class UClass* Z_Construct_UClass_UNiagaraNodeInput_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UNiagaraNodeInput();
	UNREALED_API class UClass* Z_Construct_UClass_UNiagaraNodeOp_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UNiagaraNodeOp();
	UNREALED_API class UClass* Z_Construct_UClass_UNiagaraNodeOutput_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UNiagaraNodeOutput();
	UNREALED_API class UClass* Z_Construct_UClass_UDEPRECATED_NiagaraNodeOutputUpdate_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UDEPRECATED_NiagaraNodeOutputUpdate();
	UNREALED_API class UClass* Z_Construct_UClass_UNiagaraScriptSource_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UNiagaraScriptSource();
	UNREALED_API class UClass* Z_Construct_UClass_UObjectExporterT3D_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UObjectExporterT3D();
	UNREALED_API class UClass* Z_Construct_UClass_UParticleSystemAuditCommandlet_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UParticleSystemAuditCommandlet();
	UNREALED_API class UClass* Z_Construct_UClass_UPersonaOptions_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UPersonaOptions();
	UNREALED_API class UClass* Z_Construct_UClass_UPhATSimOptions_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UPhATSimOptions();
	UNREALED_API class UClass* Z_Construct_UClass_UPkgInfoCommandlet_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UPkgInfoCommandlet();
	UNREALED_API class UClass* Z_Construct_UClass_UPolysExporterOBJ_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UPolysExporterOBJ();
	UNREALED_API class UClass* Z_Construct_UClass_UPolysExporterT3D_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UPolysExporterT3D();
	UNREALED_API class UClass* Z_Construct_UClass_UPreviewMaterial_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UPreviewMaterial();
	UNREALED_API class UEnum* Z_Construct_UEnum_UnrealEd_EProjectPackagingInternationalizationPresets();
	UNREALED_API class UEnum* Z_Construct_UEnum_UnrealEd_EProjectPackagingBuildConfigurations();
	UNREALED_API class UClass* Z_Construct_UClass_UProjectPackagingSettings_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UProjectPackagingSettings();
	UNREALED_API class UEnum* Z_Construct_UEnum_UnrealEd_ArrayLabelEnum();
	UNREALED_API class UEnum* Z_Construct_UEnum_UnrealEd_PropertEditorTestEnum();
	UNREALED_API class UScriptStruct* Z_Construct_UScriptStruct_FPropertyEditorTestBasicStruct();
	UNREALED_API class UScriptStruct* Z_Construct_UScriptStruct_FPropertyEditorTestSubStruct();
	UNREALED_API class UClass* Z_Construct_UClass_UPropertyEditorTestObject_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UPropertyEditorTestObject();
	UNREALED_API class UClass* Z_Construct_UClass_UReplaceActorCommandlet_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UReplaceActorCommandlet();
	UNREALED_API class UClass* Z_Construct_UClass_UResavePackagesCommandlet_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UResavePackagesCommandlet();
	UNREALED_API class UClass* Z_Construct_UClass_USceneThumbnailInfo_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_USceneThumbnailInfo();
	UNREALED_API class UEnum* Z_Construct_UEnum_UnrealEd_EThumbnailPrimType();
	UNREALED_API class UScriptStruct* Z_Construct_UScriptStruct_FThumbnailRenderingInfo();
	UNREALED_API class UClass* Z_Construct_UClass_UThumbnailManager_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UThumbnailManager();
	UNREALED_API class UClass* Z_Construct_UClass_USceneThumbnailInfoWithPrimitive_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_USceneThumbnailInfoWithPrimitive();
	UNREALED_API class UEnum* Z_Construct_UEnum_UnrealEd_EOrthoThumbnailDirection();
	UNREALED_API class UClass* Z_Construct_UClass_UWorldThumbnailInfo_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UWorldThumbnailInfo();
	UNREALED_API class UClass* Z_Construct_UClass_USequenceExporterT3D_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_USequenceExporterT3D();
	UNREALED_API class UClass* Z_Construct_UClass_USkeletalMeshExporterFBX_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_USkeletalMeshExporterFBX();
	UNREALED_API class UClass* Z_Construct_UClass_USoundClassGraph_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_USoundClassGraph();
	UNREALED_API class UClass* Z_Construct_UClass_USoundClassGraphNode_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_USoundClassGraphNode();
	UNREALED_API class UScriptStruct* Z_Construct_UScriptStruct_FSoundClassGraphSchemaAction_NewNode();
	UNREALED_API class UClass* Z_Construct_UClass_USoundClassGraphSchema_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_USoundClassGraphSchema();
	UNREALED_API class UClass* Z_Construct_UClass_USoundCueGraph_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_USoundCueGraph();
	UNREALED_API class UClass* Z_Construct_UClass_USoundCueGraphNode_Base_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_USoundCueGraphNode_Base();
	UNREALED_API class UClass* Z_Construct_UClass_USoundCueGraphNode_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_USoundCueGraphNode();
	UNREALED_API class UClass* Z_Construct_UClass_USoundCueGraphNode_Root_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_USoundCueGraphNode_Root();
	UNREALED_API class UScriptStruct* Z_Construct_UScriptStruct_FSoundCueGraphSchemaAction_Paste();
	UNREALED_API class UScriptStruct* Z_Construct_UScriptStruct_FSoundCueGraphSchemaAction_NewComment();
	UNREALED_API class UScriptStruct* Z_Construct_UScriptStruct_FSoundCueGraphSchemaAction_NewFromSelected();
	UNREALED_API class UScriptStruct* Z_Construct_UScriptStruct_FSoundCueGraphSchemaAction_NewNode();
	UNREALED_API class UClass* Z_Construct_UClass_USoundCueGraphSchema_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_USoundCueGraphSchema();
	UNREALED_API class UClass* Z_Construct_UClass_USoundExporterOGG_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_USoundExporterOGG();
	UNREALED_API class UClass* Z_Construct_UClass_USoundExporterWAV_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_USoundExporterWAV();
	UNREALED_API class UClass* Z_Construct_UClass_USoundSurroundExporterWAV_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_USoundSurroundExporterWAV();
	UNREALED_API class UClass* Z_Construct_UClass_UStaticMeshExporterFBX_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UStaticMeshExporterFBX();
	UNREALED_API class UClass* Z_Construct_UClass_UStaticMeshExporterOBJ_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UStaticMeshExporterOBJ();
	UNREALED_API class UClass* Z_Construct_UClass_UDEPRECATED_TemplateMapMetadata_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UDEPRECATED_TemplateMapMetadata();
	UNREALED_API class UEnum* Z_Construct_UEnum_UnrealEd_ETexAlign();
	UNREALED_API class UClass* Z_Construct_UClass_UTexAligner_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UTexAligner();
	UNREALED_API class UClass* Z_Construct_UClass_UTexAlignerBox_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UTexAlignerBox();
	UNREALED_API class UClass* Z_Construct_UClass_UTexAlignerDefault_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UTexAlignerDefault();
	UNREALED_API class UClass* Z_Construct_UClass_UTexAlignerFit_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UTexAlignerFit();
	UNREALED_API class UClass* Z_Construct_UClass_UTexAlignerPlanar_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UTexAlignerPlanar();
	UNREALED_API class UClass* Z_Construct_UClass_UTextBufferExporterTXT_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UTextBufferExporterTXT();
	UNREALED_API class UClass* Z_Construct_UClass_UTextureCubeExporterHDR_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UTextureCubeExporterHDR();
	UNREALED_API class UClass* Z_Construct_UClass_UTextureExporterBMP_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UTextureExporterBMP();
	UNREALED_API class UClass* Z_Construct_UClass_UTextureExporterHDR_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UTextureExporterHDR();
	UNREALED_API class UClass* Z_Construct_UClass_UTextureExporterPCX_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UTextureExporterPCX();
	UNREALED_API class UClass* Z_Construct_UClass_UTextureExporterTGA_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UTextureExporterTGA();
	UNREALED_API class UClass* Z_Construct_UClass_UThumbnailRenderer_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UThumbnailRenderer();
	UNREALED_API class UClass* Z_Construct_UClass_UDefaultSizedThumbnailRenderer_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UDefaultSizedThumbnailRenderer();
	UNREALED_API class UClass* Z_Construct_UClass_UAnimBlueprintThumbnailRenderer_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UAnimBlueprintThumbnailRenderer();
	UNREALED_API class UClass* Z_Construct_UClass_UAnimSequenceThumbnailRenderer_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UAnimSequenceThumbnailRenderer();
	UNREALED_API class UClass* Z_Construct_UClass_UBlendSpaceThumbnailRenderer_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UBlendSpaceThumbnailRenderer();
	UNREALED_API class UClass* Z_Construct_UClass_UBlueprintThumbnailRenderer_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UBlueprintThumbnailRenderer();
	UNREALED_API class UClass* Z_Construct_UClass_UClassThumbnailRenderer_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UClassThumbnailRenderer();
	UNREALED_API class UClass* Z_Construct_UClass_UDestructibleMeshThumbnailRenderer_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UDestructibleMeshThumbnailRenderer();
	UNREALED_API class UClass* Z_Construct_UClass_ULevelThumbnailRenderer_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_ULevelThumbnailRenderer();
	UNREALED_API class UClass* Z_Construct_UClass_UMaterialFunctionThumbnailRenderer_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UMaterialFunctionThumbnailRenderer();
	UNREALED_API class UClass* Z_Construct_UClass_UMaterialInstanceThumbnailRenderer_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UMaterialInstanceThumbnailRenderer();
	UNREALED_API class UClass* Z_Construct_UClass_USkeletalMeshThumbnailRenderer_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_USkeletalMeshThumbnailRenderer();
	UNREALED_API class UClass* Z_Construct_UClass_USlateBrushThumbnailRenderer_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_USlateBrushThumbnailRenderer();
	UNREALED_API class UClass* Z_Construct_UClass_UStaticMeshThumbnailRenderer_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UStaticMeshThumbnailRenderer();
	UNREALED_API class UClass* Z_Construct_UClass_UWorldThumbnailRenderer_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UWorldThumbnailRenderer();
	UNREALED_API class UClass* Z_Construct_UClass_USoundWaveThumbnailRenderer_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_USoundWaveThumbnailRenderer();
	UNREALED_API class UClass* Z_Construct_UClass_UTextureThumbnailRenderer_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UTextureThumbnailRenderer();
	UNREALED_API class UClass* Z_Construct_UClass_UFontThumbnailRenderer_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UFontThumbnailRenderer();
	UNREALED_API class UClass* Z_Construct_UClass_UParticleSystemThumbnailRenderer_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UParticleSystemThumbnailRenderer();
	UNREALED_API class UClass* Z_Construct_UClass_USubsurfaceProfileRenderer_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_USubsurfaceProfileRenderer();
	UNREALED_API class UClass* Z_Construct_UClass_UTextureCubeThumbnailRenderer_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UTextureCubeThumbnailRenderer();
	UNREALED_API class UClass* Z_Construct_UClass_UTransBuffer_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UTransBuffer();
	UNREALED_API class UScriptStruct* Z_Construct_UScriptStruct_FEditorKeyBinding();
	UNREALED_API class UClass* Z_Construct_UClass_UUnrealEdKeyBindings_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UUnrealEdKeyBindings();
	UNREALED_API class UScriptStruct* Z_Construct_UScriptStruct_FClassPickerDefaults();
	UNREALED_API class UScriptStruct* Z_Construct_UScriptStruct_FEditorCommand();
	UNREALED_API class UScriptStruct* Z_Construct_UScriptStruct_FEditorCommandCategory();
	UNREALED_API class UClass* Z_Construct_UClass_UUnrealEdOptions_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UUnrealEdOptions();
	UNREALED_API class UClass* Z_Construct_UClass_UUpdateGameProjectCommandlet_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UUpdateGameProjectCommandlet();
	UNREALED_API class UScriptStruct* Z_Construct_UScriptStruct_FStructVariableDescription();
	UNREALED_API class UClass* Z_Construct_UClass_UUserDefinedStructEditorData_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UUserDefinedStructEditorData();
	UNREALED_API class UClass* Z_Construct_UClass_UWrangleContentCommandlet_NoRegister();
	UNREALED_API class UClass* Z_Construct_UClass_UWrangleContentCommandlet();
	UNREALED_API class UPackage* Z_Construct_UPackage_UnrealEd();
	UClass* Z_Construct_UClass_UActorFactory_NoRegister()
	{
		return UActorFactory::StaticClass();
	}
	UClass* Z_Construct_UClass_UActorFactory()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UActorFactory::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x2010308D;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_SpawnPositionOffset = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SpawnPositionOffset"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(SpawnPositionOffset, UActorFactory), 0x0000000000000000, Z_Construct_UScriptStruct_FVector());
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bUseSurfaceOrientation, UActorFactory, uint8);
				UProperty* NewProp_bUseSurfaceOrientation = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bUseSurfaceOrientation"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bUseSurfaceOrientation, UActorFactory), 0x0000000000000000, CPP_BOOL_PROPERTY_BITMASK(bUseSurfaceOrientation, UActorFactory), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bShowInEditorQuickMenu, UActorFactory, uint8);
				UProperty* NewProp_bShowInEditorQuickMenu = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bShowInEditorQuickMenu"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bShowInEditorQuickMenu, UActorFactory), 0x0000000000000000, CPP_BOOL_PROPERTY_BITMASK(bShowInEditorQuickMenu, UActorFactory), sizeof(uint8), false);
				UProperty* NewProp_NewActorClass = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("NewActorClass"), RF_Public|RF_Transient|RF_Native) UClassProperty(CPP_PROPERTY_BASE(NewActorClass, UActorFactory), 0x0004000000000000, Z_Construct_UClass_AActor_NoRegister());
				UProperty* NewProp_NewActorClassName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("NewActorClassName"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(NewActorClassName, UActorFactory), 0x0000000000004000);
				UProperty* NewProp_MenuPriority = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MenuPriority"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(MenuPriority, UActorFactory), 0x0000000000004000);
				UProperty* NewProp_DisplayName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("DisplayName"), RF_Public|RF_Transient|RF_Native) UTextProperty(CPP_PROPERTY_BASE(DisplayName, UActorFactory), 0x0000000000000000);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->ClassConfigName = FName(TEXT("Editor"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("ActorFactories/ActorFactory.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/ActorFactories/ActorFactory.h"));
				MetaData->SetValue(NewProp_SpawnPositionOffset, TEXT("ModuleRelativePath"), TEXT("Classes/ActorFactories/ActorFactory.h"));
				MetaData->SetValue(NewProp_SpawnPositionOffset, TEXT("ToolTip"), TEXT("Translation applied to the spawn position."));
				MetaData->SetValue(NewProp_bUseSurfaceOrientation, TEXT("ModuleRelativePath"), TEXT("Classes/ActorFactories/ActorFactory.h"));
				MetaData->SetValue(NewProp_bShowInEditorQuickMenu, TEXT("ModuleRelativePath"), TEXT("Classes/ActorFactories/ActorFactory.h"));
				MetaData->SetValue(NewProp_bShowInEditorQuickMenu, TEXT("ToolTip"), TEXT("Whether to appear in the editor add actor quick menu"));
				MetaData->SetValue(NewProp_NewActorClass, TEXT("ModuleRelativePath"), TEXT("Classes/ActorFactories/ActorFactory.h"));
				MetaData->SetValue(NewProp_NewActorClass, TEXT("ToolTip"), TEXT("AActor  subclass this ActorFactory creates."));
				MetaData->SetValue(NewProp_NewActorClassName, TEXT("ModuleRelativePath"), TEXT("Classes/ActorFactories/ActorFactory.h"));
				MetaData->SetValue(NewProp_NewActorClassName, TEXT("ToolTip"), TEXT("name of actor subclass this actorfactory creates - dynamically loaded.  Overrides NewActorClass."));
				MetaData->SetValue(NewProp_MenuPriority, TEXT("ModuleRelativePath"), TEXT("Classes/ActorFactories/ActorFactory.h"));
				MetaData->SetValue(NewProp_MenuPriority, TEXT("ToolTip"), TEXT("Indicates how far up the menu item should be. The higher the number, the higher up the list."));
				MetaData->SetValue(NewProp_DisplayName, TEXT("ModuleRelativePath"), TEXT("Classes/ActorFactories/ActorFactory.h"));
				MetaData->SetValue(NewProp_DisplayName, TEXT("ToolTip"), TEXT("Name used as basis for 'New Actor' menu."));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UActorFactory(Z_Construct_UClass_UActorFactory, TEXT("UActorFactory"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UActorFactory);
	UClass* Z_Construct_UClass_UActorFactoryAmbientSound_NoRegister()
	{
		return UActorFactoryAmbientSound::StaticClass();
	}
	UClass* Z_Construct_UClass_UActorFactoryAmbientSound()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UActorFactory();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UActorFactoryAmbientSound::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x2008308C;


				OuterClass->ClassConfigName = FName(TEXT("Editor"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("ActorFactories/ActorFactoryAmbientSound.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/ActorFactories/ActorFactoryAmbientSound.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UActorFactoryAmbientSound(Z_Construct_UClass_UActorFactoryAmbientSound, TEXT("UActorFactoryAmbientSound"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UActorFactoryAmbientSound);
	UClass* Z_Construct_UClass_UActorFactoryAtmosphericFog_NoRegister()
	{
		return UActorFactoryAtmosphericFog::StaticClass();
	}
	UClass* Z_Construct_UClass_UActorFactoryAtmosphericFog()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UActorFactory();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UActorFactoryAtmosphericFog::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x2008308C;


				OuterClass->ClassConfigName = FName(TEXT("Editor"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("ActorFactories/ActorFactoryAtmosphericFog.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/ActorFactories/ActorFactoryAtmosphericFog.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UActorFactoryAtmosphericFog(Z_Construct_UClass_UActorFactoryAtmosphericFog, TEXT("UActorFactoryAtmosphericFog"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UActorFactoryAtmosphericFog);
	UClass* Z_Construct_UClass_UActorFactoryBlueprint_NoRegister()
	{
		return UActorFactoryBlueprint::StaticClass();
	}
	UClass* Z_Construct_UClass_UActorFactoryBlueprint()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UActorFactory();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UActorFactoryBlueprint::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x2008308C;


				OuterClass->ClassConfigName = FName(TEXT("Editor"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("ActorFactories/ActorFactoryBlueprint.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/ActorFactories/ActorFactoryBlueprint.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UActorFactoryBlueprint(Z_Construct_UClass_UActorFactoryBlueprint, TEXT("UActorFactoryBlueprint"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UActorFactoryBlueprint);
	UClass* Z_Construct_UClass_UActorFactoryBoxReflectionCapture_NoRegister()
	{
		return UActorFactoryBoxReflectionCapture::StaticClass();
	}
	UClass* Z_Construct_UClass_UActorFactoryBoxReflectionCapture()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UActorFactory();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UActorFactoryBoxReflectionCapture::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x2008308C;


				OuterClass->ClassConfigName = FName(TEXT("Editor"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("ActorFactories/ActorFactoryBoxReflectionCapture.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/ActorFactories/ActorFactoryBoxReflectionCapture.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UActorFactoryBoxReflectionCapture(Z_Construct_UClass_UActorFactoryBoxReflectionCapture, TEXT("UActorFactoryBoxReflectionCapture"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UActorFactoryBoxReflectionCapture);
	UClass* Z_Construct_UClass_UActorFactoryBoxVolume_NoRegister()
	{
		return UActorFactoryBoxVolume::StaticClass();
	}
	UClass* Z_Construct_UClass_UActorFactoryBoxVolume()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UActorFactory();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UActorFactoryBoxVolume::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x2008308C;


				OuterClass->ClassConfigName = FName(TEXT("Editor"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("ActorFactories/ActorFactoryBoxVolume.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/ActorFactories/ActorFactoryBoxVolume.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UActorFactoryBoxVolume(Z_Construct_UClass_UActorFactoryBoxVolume, TEXT("UActorFactoryBoxVolume"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UActorFactoryBoxVolume);
	UClass* Z_Construct_UClass_UActorFactoryCameraActor_NoRegister()
	{
		return UActorFactoryCameraActor::StaticClass();
	}
	UClass* Z_Construct_UClass_UActorFactoryCameraActor()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UActorFactory();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UActorFactoryCameraActor::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x2008308C;


				OuterClass->ClassConfigName = FName(TEXT("Editor"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("ActorFactories/ActorFactoryCameraActor.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/ActorFactories/ActorFactoryCameraActor.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UActorFactoryCameraActor(Z_Construct_UClass_UActorFactoryCameraActor, TEXT("UActorFactoryCameraActor"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UActorFactoryCameraActor);
	UClass* Z_Construct_UClass_UActorFactoryCharacter_NoRegister()
	{
		return UActorFactoryCharacter::StaticClass();
	}
	UClass* Z_Construct_UClass_UActorFactoryCharacter()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UActorFactory();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UActorFactoryCharacter::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x2008308C;


				OuterClass->ClassConfigName = FName(TEXT("Editor"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("ActorFactories/ActorFactoryCharacter.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/ActorFactories/ActorFactoryCharacter.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UActorFactoryCharacter(Z_Construct_UClass_UActorFactoryCharacter, TEXT("UActorFactoryCharacter"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UActorFactoryCharacter);
	UClass* Z_Construct_UClass_UActorFactoryClass_NoRegister()
	{
		return UActorFactoryClass::StaticClass();
	}
	UClass* Z_Construct_UClass_UActorFactoryClass()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UActorFactory();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UActorFactoryClass::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x2008308C;


				OuterClass->ClassConfigName = FName(TEXT("Editor"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("ActorFactories/ActorFactoryClass.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/ActorFactories/ActorFactoryClass.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UActorFactoryClass(Z_Construct_UClass_UActorFactoryClass, TEXT("UActorFactoryClass"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UActorFactoryClass);
	UClass* Z_Construct_UClass_UActorFactoryCylinderVolume_NoRegister()
	{
		return UActorFactoryCylinderVolume::StaticClass();
	}
	UClass* Z_Construct_UClass_UActorFactoryCylinderVolume()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UActorFactory();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UActorFactoryCylinderVolume::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x2008308C;


				OuterClass->ClassConfigName = FName(TEXT("Editor"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("ActorFactories/ActorFactoryCylinderVolume.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/ActorFactories/ActorFactoryCylinderVolume.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UActorFactoryCylinderVolume(Z_Construct_UClass_UActorFactoryCylinderVolume, TEXT("UActorFactoryCylinderVolume"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UActorFactoryCylinderVolume);
	UClass* Z_Construct_UClass_UActorFactoryDeferredDecal_NoRegister()
	{
		return UActorFactoryDeferredDecal::StaticClass();
	}
	UClass* Z_Construct_UClass_UActorFactoryDeferredDecal()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UActorFactory();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UActorFactoryDeferredDecal::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x2008308C;


				OuterClass->ClassConfigName = FName(TEXT("Editor"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("ActorFactories/ActorFactoryDeferredDecal.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/ActorFactories/ActorFactoryDeferredDecal.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UActorFactoryDeferredDecal(Z_Construct_UClass_UActorFactoryDeferredDecal, TEXT("UActorFactoryDeferredDecal"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UActorFactoryDeferredDecal);
	UClass* Z_Construct_UClass_UActorFactoryDestructible_NoRegister()
	{
		return UActorFactoryDestructible::StaticClass();
	}
	UClass* Z_Construct_UClass_UActorFactoryDestructible()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UActorFactory();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UActorFactoryDestructible::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x2008308C;


				OuterClass->ClassConfigName = FName(TEXT("Editor"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("ActorFactories/ActorFactoryDestructible.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/ActorFactories/ActorFactoryDestructible.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UActorFactoryDestructible(Z_Construct_UClass_UActorFactoryDestructible, TEXT("UActorFactoryDestructible"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UActorFactoryDestructible);
	UClass* Z_Construct_UClass_UActorFactoryDirectionalLight_NoRegister()
	{
		return UActorFactoryDirectionalLight::StaticClass();
	}
	UClass* Z_Construct_UClass_UActorFactoryDirectionalLight()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UActorFactory();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UActorFactoryDirectionalLight::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x2008308C;


				OuterClass->ClassConfigName = FName(TEXT("Editor"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("ActorFactories/ActorFactoryDirectionalLight.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/ActorFactories/ActorFactoryDirectionalLight.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UActorFactoryDirectionalLight(Z_Construct_UClass_UActorFactoryDirectionalLight, TEXT("UActorFactoryDirectionalLight"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UActorFactoryDirectionalLight);
	UClass* Z_Construct_UClass_UActorFactoryEmitter_NoRegister()
	{
		return UActorFactoryEmitter::StaticClass();
	}
	UClass* Z_Construct_UClass_UActorFactoryEmitter()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UActorFactory();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UActorFactoryEmitter::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x2008308C;


				OuterClass->ClassConfigName = FName(TEXT("Editor"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("ActorFactories/ActorFactoryEmitter.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/ActorFactories/ActorFactoryEmitter.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UActorFactoryEmitter(Z_Construct_UClass_UActorFactoryEmitter, TEXT("UActorFactoryEmitter"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UActorFactoryEmitter);
	UClass* Z_Construct_UClass_UActorFactoryEmptyActor_NoRegister()
	{
		return UActorFactoryEmptyActor::StaticClass();
	}
	UClass* Z_Construct_UClass_UActorFactoryEmptyActor()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UActorFactory();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UActorFactoryEmptyActor::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x2008308C;


				OuterClass->ClassConfigName = FName(TEXT("Editor"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("ActorFactories/ActorFactoryEmptyActor.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/ActorFactories/ActorFactoryEmptyActor.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UActorFactoryEmptyActor(Z_Construct_UClass_UActorFactoryEmptyActor, TEXT("UActorFactoryEmptyActor"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UActorFactoryEmptyActor);
	UClass* Z_Construct_UClass_UActorFactoryPawn_NoRegister()
	{
		return UActorFactoryPawn::StaticClass();
	}
	UClass* Z_Construct_UClass_UActorFactoryPawn()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UActorFactoryEmptyActor();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UActorFactoryPawn::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x2008308C;


				OuterClass->ClassConfigName = FName(TEXT("Editor"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("ActorFactories/ActorFactoryPawn.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/ActorFactories/ActorFactoryPawn.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UActorFactoryPawn(Z_Construct_UClass_UActorFactoryPawn, TEXT("UActorFactoryPawn"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UActorFactoryPawn);
	UClass* Z_Construct_UClass_UActorFactoryExponentialHeightFog_NoRegister()
	{
		return UActorFactoryExponentialHeightFog::StaticClass();
	}
	UClass* Z_Construct_UClass_UActorFactoryExponentialHeightFog()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UActorFactory();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UActorFactoryExponentialHeightFog::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x2008308C;


				OuterClass->ClassConfigName = FName(TEXT("Editor"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("ActorFactories/ActorFactoryExponentialHeightFog.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/ActorFactories/ActorFactoryExponentialHeightFog.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UActorFactoryExponentialHeightFog(Z_Construct_UClass_UActorFactoryExponentialHeightFog, TEXT("UActorFactoryExponentialHeightFog"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UActorFactoryExponentialHeightFog);
	UClass* Z_Construct_UClass_UActorFactoryMatineeActor_NoRegister()
	{
		return UActorFactoryMatineeActor::StaticClass();
	}
	UClass* Z_Construct_UClass_UActorFactoryMatineeActor()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UActorFactory();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UActorFactoryMatineeActor::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x2008308C;


				OuterClass->ClassConfigName = FName(TEXT("Editor"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("ActorFactories/ActorFactoryMatineeActor.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/ActorFactories/ActorFactoryMatineeActor.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UActorFactoryMatineeActor(Z_Construct_UClass_UActorFactoryMatineeActor, TEXT("UActorFactoryMatineeActor"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UActorFactoryMatineeActor);
	UClass* Z_Construct_UClass_UActorFactoryMovieScene_NoRegister()
	{
		return UActorFactoryMovieScene::StaticClass();
	}
	UClass* Z_Construct_UClass_UActorFactoryMovieScene()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UActorFactory();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UActorFactoryMovieScene::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x2000308C;


				OuterClass->ClassConfigName = FName(TEXT("Editor"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Factories/ActorFactoryMovieScene.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/Factories/ActorFactoryMovieScene.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UActorFactoryMovieScene(Z_Construct_UClass_UActorFactoryMovieScene, TEXT("UActorFactoryMovieScene"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UActorFactoryMovieScene);
	UClass* Z_Construct_UClass_UActorFactoryNiagara_NoRegister()
	{
		return UActorFactoryNiagara::StaticClass();
	}
	UClass* Z_Construct_UClass_UActorFactoryNiagara()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UActorFactory();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UActorFactoryNiagara::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x2008308C;


				OuterClass->ClassConfigName = FName(TEXT("Editor"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("ActorFactories/ActorFactoryNiagara.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/ActorFactories/ActorFactoryNiagara.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UActorFactoryNiagara(Z_Construct_UClass_UActorFactoryNiagara, TEXT("UActorFactoryNiagara"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UActorFactoryNiagara);
	UClass* Z_Construct_UClass_UActorFactoryNote_NoRegister()
	{
		return UActorFactoryNote::StaticClass();
	}
	UClass* Z_Construct_UClass_UActorFactoryNote()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UActorFactory();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UActorFactoryNote::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x2008308C;


				OuterClass->ClassConfigName = FName(TEXT("Editor"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("ActorFactories/ActorFactoryNote.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/ActorFactories/ActorFactoryNote.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UActorFactoryNote(Z_Construct_UClass_UActorFactoryNote, TEXT("UActorFactoryNote"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UActorFactoryNote);
	UClass* Z_Construct_UClass_UActorFactoryPhysicsAsset_NoRegister()
	{
		return UActorFactoryPhysicsAsset::StaticClass();
	}
	UClass* Z_Construct_UClass_UActorFactoryPhysicsAsset()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UActorFactory();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UActorFactoryPhysicsAsset::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x2008308C;


				OuterClass->ClassConfigName = FName(TEXT("Editor"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("ActorFactories/ActorFactoryPhysicsAsset.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/ActorFactories/ActorFactoryPhysicsAsset.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UActorFactoryPhysicsAsset(Z_Construct_UClass_UActorFactoryPhysicsAsset, TEXT("UActorFactoryPhysicsAsset"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UActorFactoryPhysicsAsset);
	UClass* Z_Construct_UClass_UActorFactoryPlaneReflectionCapture_NoRegister()
	{
		return UActorFactoryPlaneReflectionCapture::StaticClass();
	}
	UClass* Z_Construct_UClass_UActorFactoryPlaneReflectionCapture()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UActorFactory();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UActorFactoryPlaneReflectionCapture::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x2008308C;


				OuterClass->ClassConfigName = FName(TEXT("Editor"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("ActorFactories/ActorFactoryPlaneReflectionCapture.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/ActorFactories/ActorFactoryPlaneReflectionCapture.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UActorFactoryPlaneReflectionCapture(Z_Construct_UClass_UActorFactoryPlaneReflectionCapture, TEXT("UActorFactoryPlaneReflectionCapture"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UActorFactoryPlaneReflectionCapture);
	UClass* Z_Construct_UClass_UActorFactoryPlayerStart_NoRegister()
	{
		return UActorFactoryPlayerStart::StaticClass();
	}
	UClass* Z_Construct_UClass_UActorFactoryPlayerStart()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UActorFactory();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UActorFactoryPlayerStart::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x2008308C;


				OuterClass->ClassConfigName = FName(TEXT("Editor"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("ActorFactories/ActorFactoryPlayerStart.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/ActorFactories/ActorFactoryPlayerStart.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UActorFactoryPlayerStart(Z_Construct_UClass_UActorFactoryPlayerStart, TEXT("UActorFactoryPlayerStart"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UActorFactoryPlayerStart);
	UClass* Z_Construct_UClass_UActorFactoryPointLight_NoRegister()
	{
		return UActorFactoryPointLight::StaticClass();
	}
	UClass* Z_Construct_UClass_UActorFactoryPointLight()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UActorFactory();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UActorFactoryPointLight::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x2008308C;


				OuterClass->ClassConfigName = FName(TEXT("Editor"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("ActorFactories/ActorFactoryPointLight.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/ActorFactories/ActorFactoryPointLight.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UActorFactoryPointLight(Z_Construct_UClass_UActorFactoryPointLight, TEXT("UActorFactoryPointLight"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UActorFactoryPointLight);
	UClass* Z_Construct_UClass_UActorFactorySkeletalMesh_NoRegister()
	{
		return UActorFactorySkeletalMesh::StaticClass();
	}
	UClass* Z_Construct_UClass_UActorFactorySkeletalMesh()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UActorFactory();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UActorFactorySkeletalMesh::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x2008308C;


				OuterClass->ClassConfigName = FName(TEXT("Editor"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("ActorFactories/ActorFactorySkeletalMesh.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/ActorFactories/ActorFactorySkeletalMesh.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UActorFactorySkeletalMesh(Z_Construct_UClass_UActorFactorySkeletalMesh, TEXT("UActorFactorySkeletalMesh"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UActorFactorySkeletalMesh);
	UClass* Z_Construct_UClass_UActorFactoryAnimationAsset_NoRegister()
	{
		return UActorFactoryAnimationAsset::StaticClass();
	}
	UClass* Z_Construct_UClass_UActorFactoryAnimationAsset()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UActorFactorySkeletalMesh();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UActorFactoryAnimationAsset::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x2008308C;


				OuterClass->ClassConfigName = FName(TEXT("Editor"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("ActorFactories/ActorFactoryAnimationAsset.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/ActorFactories/ActorFactoryAnimationAsset.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UActorFactoryAnimationAsset(Z_Construct_UClass_UActorFactoryAnimationAsset, TEXT("UActorFactoryAnimationAsset"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UActorFactoryAnimationAsset);
	UClass* Z_Construct_UClass_UActorFactorySkyLight_NoRegister()
	{
		return UActorFactorySkyLight::StaticClass();
	}
	UClass* Z_Construct_UClass_UActorFactorySkyLight()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UActorFactory();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UActorFactorySkyLight::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x2008308C;


				OuterClass->ClassConfigName = FName(TEXT("Editor"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("ActorFactories/ActorFactorySkyLight.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/ActorFactories/ActorFactorySkyLight.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UActorFactorySkyLight(Z_Construct_UClass_UActorFactorySkyLight, TEXT("UActorFactorySkyLight"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UActorFactorySkyLight);
	UClass* Z_Construct_UClass_UActorFactorySphereReflectionCapture_NoRegister()
	{
		return UActorFactorySphereReflectionCapture::StaticClass();
	}
	UClass* Z_Construct_UClass_UActorFactorySphereReflectionCapture()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UActorFactory();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UActorFactorySphereReflectionCapture::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x2008308C;


				OuterClass->ClassConfigName = FName(TEXT("Editor"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("ActorFactories/ActorFactorySphereReflectionCapture.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/ActorFactories/ActorFactorySphereReflectionCapture.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UActorFactorySphereReflectionCapture(Z_Construct_UClass_UActorFactorySphereReflectionCapture, TEXT("UActorFactorySphereReflectionCapture"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UActorFactorySphereReflectionCapture);
	UClass* Z_Construct_UClass_UActorFactorySphereVolume_NoRegister()
	{
		return UActorFactorySphereVolume::StaticClass();
	}
	UClass* Z_Construct_UClass_UActorFactorySphereVolume()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UActorFactory();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UActorFactorySphereVolume::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x2008308C;


				OuterClass->ClassConfigName = FName(TEXT("Editor"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("ActorFactories/ActorFactorySphereVolume.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/ActorFactories/ActorFactorySphereVolume.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UActorFactorySphereVolume(Z_Construct_UClass_UActorFactorySphereVolume, TEXT("UActorFactorySphereVolume"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UActorFactorySphereVolume);
	UClass* Z_Construct_UClass_UActorFactorySpotLight_NoRegister()
	{
		return UActorFactorySpotLight::StaticClass();
	}
	UClass* Z_Construct_UClass_UActorFactorySpotLight()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UActorFactory();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UActorFactorySpotLight::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x2008308C;


				OuterClass->ClassConfigName = FName(TEXT("Editor"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("ActorFactories/ActorFactorySpotLight.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/ActorFactories/ActorFactorySpotLight.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UActorFactorySpotLight(Z_Construct_UClass_UActorFactorySpotLight, TEXT("UActorFactorySpotLight"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UActorFactorySpotLight);
	UClass* Z_Construct_UClass_UActorFactoryStaticMesh_NoRegister()
	{
		return UActorFactoryStaticMesh::StaticClass();
	}
	UClass* Z_Construct_UClass_UActorFactoryStaticMesh()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UActorFactory();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UActorFactoryStaticMesh::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x2008308C;


				OuterClass->ClassConfigName = FName(TEXT("Editor"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("ActorFactories/ActorFactoryStaticMesh.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/ActorFactories/ActorFactoryStaticMesh.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UActorFactoryStaticMesh(Z_Construct_UClass_UActorFactoryStaticMesh, TEXT("UActorFactoryStaticMesh"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UActorFactoryStaticMesh);
	UClass* Z_Construct_UClass_UActorFactoryBasicShape_NoRegister()
	{
		return UActorFactoryBasicShape::StaticClass();
	}
	UClass* Z_Construct_UClass_UActorFactoryBasicShape()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UActorFactoryStaticMesh();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UActorFactoryBasicShape::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x2008308C;


				OuterClass->ClassConfigName = FName(TEXT("Editor"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("ActorFactories/ActorFactoryBasicShape.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/ActorFactories/ActorFactoryBasicShape.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UActorFactoryBasicShape(Z_Construct_UClass_UActorFactoryBasicShape, TEXT("UActorFactoryBasicShape"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UActorFactoryBasicShape);
	UClass* Z_Construct_UClass_UActorFactoryInteractiveFoliage_NoRegister()
	{
		return UActorFactoryInteractiveFoliage::StaticClass();
	}
	UClass* Z_Construct_UClass_UActorFactoryInteractiveFoliage()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UActorFactoryStaticMesh();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UActorFactoryInteractiveFoliage::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x2008308C;


				OuterClass->ClassConfigName = FName(TEXT("Editor"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("ActorFactories/ActorFactoryInteractiveFoliage.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/ActorFactories/ActorFactoryInteractiveFoliage.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UActorFactoryInteractiveFoliage(Z_Construct_UClass_UActorFactoryInteractiveFoliage, TEXT("UActorFactoryInteractiveFoliage"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UActorFactoryInteractiveFoliage);
	UClass* Z_Construct_UClass_UActorFactoryTargetPoint_NoRegister()
	{
		return UActorFactoryTargetPoint::StaticClass();
	}
	UClass* Z_Construct_UClass_UActorFactoryTargetPoint()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UActorFactory();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UActorFactoryTargetPoint::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x2008308C;


				OuterClass->ClassConfigName = FName(TEXT("Editor"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("ActorFactories/ActorFactoryTargetPoint.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/ActorFactories/ActorFactoryTargetPoint.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UActorFactoryTargetPoint(Z_Construct_UClass_UActorFactoryTargetPoint, TEXT("UActorFactoryTargetPoint"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UActorFactoryTargetPoint);
	UClass* Z_Construct_UClass_UActorFactoryTextRender_NoRegister()
	{
		return UActorFactoryTextRender::StaticClass();
	}
	UClass* Z_Construct_UClass_UActorFactoryTextRender()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UActorFactory();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UActorFactoryTextRender::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x2008308C;


				OuterClass->ClassConfigName = FName(TEXT("Editor"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("ActorFactories/ActorFactoryTextRender.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/ActorFactories/ActorFactoryTextRender.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UActorFactoryTextRender(Z_Construct_UClass_UActorFactoryTextRender, TEXT("UActorFactoryTextRender"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UActorFactoryTextRender);
	UClass* Z_Construct_UClass_UActorFactoryTriggerBox_NoRegister()
	{
		return UActorFactoryTriggerBox::StaticClass();
	}
	UClass* Z_Construct_UClass_UActorFactoryTriggerBox()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UActorFactory();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UActorFactoryTriggerBox::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x2008308C;


				OuterClass->ClassConfigName = FName(TEXT("Editor"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("ActorFactories/ActorFactoryTriggerBox.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/ActorFactories/ActorFactoryTriggerBox.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UActorFactoryTriggerBox(Z_Construct_UClass_UActorFactoryTriggerBox, TEXT("UActorFactoryTriggerBox"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UActorFactoryTriggerBox);
	UClass* Z_Construct_UClass_UActorFactoryTriggerCapsule_NoRegister()
	{
		return UActorFactoryTriggerCapsule::StaticClass();
	}
	UClass* Z_Construct_UClass_UActorFactoryTriggerCapsule()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UActorFactory();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UActorFactoryTriggerCapsule::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x2008308C;


				OuterClass->ClassConfigName = FName(TEXT("Editor"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("ActorFactories/ActorFactoryTriggerCapsule.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/ActorFactories/ActorFactoryTriggerCapsule.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UActorFactoryTriggerCapsule(Z_Construct_UClass_UActorFactoryTriggerCapsule, TEXT("UActorFactoryTriggerCapsule"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UActorFactoryTriggerCapsule);
	UClass* Z_Construct_UClass_UActorFactoryTriggerSphere_NoRegister()
	{
		return UActorFactoryTriggerSphere::StaticClass();
	}
	UClass* Z_Construct_UClass_UActorFactoryTriggerSphere()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UActorFactory();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UActorFactoryTriggerSphere::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x2008308C;


				OuterClass->ClassConfigName = FName(TEXT("Editor"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("ActorFactories/ActorFactoryTriggerSphere.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/ActorFactories/ActorFactoryTriggerSphere.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UActorFactoryTriggerSphere(Z_Construct_UClass_UActorFactoryTriggerSphere, TEXT("UActorFactoryTriggerSphere"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UActorFactoryTriggerSphere);
	UClass* Z_Construct_UClass_UActorFactoryVectorFieldVolume_NoRegister()
	{
		return UActorFactoryVectorFieldVolume::StaticClass();
	}
	UClass* Z_Construct_UClass_UActorFactoryVectorFieldVolume()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UActorFactory();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UActorFactoryVectorFieldVolume::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x2008308C;


				OuterClass->ClassConfigName = FName(TEXT("Editor"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("ActorFactories/ActorFactoryVectorFieldVolume.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/ActorFactories/ActorFactoryVectorFieldVolume.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UActorFactoryVectorFieldVolume(Z_Construct_UClass_UActorFactoryVectorFieldVolume, TEXT("UActorFactoryVectorFieldVolume"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UActorFactoryVectorFieldVolume);
	UClass* Z_Construct_UClass_UAnalyticsPrivacySettings_NoRegister()
	{
		return UAnalyticsPrivacySettings::StaticClass();
	}
	UClass* Z_Construct_UClass_UAnalyticsPrivacySettings()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UAnalyticsPrivacySettings::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080084;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bSendUsageData, UAnalyticsPrivacySettings, bool);
				UProperty* NewProp_bSendUsageData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bSendUsageData"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bSendUsageData, UAnalyticsPrivacySettings), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(bSendUsageData, UAnalyticsPrivacySettings), sizeof(bool), true);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->ClassConfigName = FName(TEXT("EditorSettings"));
				OuterClass->Interfaces.Add(FImplementedInterface(Z_Construct_UClass_UImportantToggleSettingInterface_NoRegister(), VTABLE_OFFSET(UAnalyticsPrivacySettings, IImportantToggleSettingInterface), false ));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Analytics/AnalyticsPrivacySettings.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Analytics/AnalyticsPrivacySettings.h"));
				MetaData->SetValue(NewProp_bSendUsageData, TEXT("Category"), TEXT("Options"));
				MetaData->SetValue(NewProp_bSendUsageData, TEXT("ModuleRelativePath"), TEXT("Classes/Analytics/AnalyticsPrivacySettings.h"));
				MetaData->SetValue(NewProp_bSendUsageData, TEXT("ToolTip"), TEXT("Determines whether the editor sends usage information to Epic Games in order to improve Unreal Engine. Your information will never be shared with 3rd parties."));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAnalyticsPrivacySettings(Z_Construct_UClass_UAnalyticsPrivacySettings, TEXT("UAnalyticsPrivacySettings"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAnalyticsPrivacySettings);
	UClass* Z_Construct_UClass_UAnimSequenceExporterFBX_NoRegister()
	{
		return UAnimSequenceExporterFBX::StaticClass();
	}
	UClass* Z_Construct_UClass_UAnimSequenceExporterFBX()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UExporter();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UAnimSequenceExporterFBX::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000088;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Exporters/AnimSequenceExporterFBX.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Exporters/AnimSequenceExporterFBX.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAnimSequenceExporterFBX(Z_Construct_UClass_UAnimSequenceExporterFBX, TEXT("UAnimSequenceExporterFBX"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAnimSequenceExporterFBX);
	UClass* Z_Construct_UClass_UAudioTestCommandlet_NoRegister()
	{
		return UAudioTestCommandlet::StaticClass();
	}
	UClass* Z_Construct_UClass_UAudioTestCommandlet()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UCommandlet();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UAudioTestCommandlet::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000088;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Commandlets/AudioTestCommandlet.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Commandlets/AudioTestCommandlet.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAudioTestCommandlet(Z_Construct_UClass_UAudioTestCommandlet, TEXT("UAudioTestCommandlet"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAudioTestCommandlet);
	UClass* Z_Construct_UClass_UAutoReimportManager_NoRegister()
	{
		return UAutoReimportManager::StaticClass();
	}
	UClass* Z_Construct_UClass_UAutoReimportManager()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UAutoReimportManager::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100088;


				OuterClass->ClassConfigName = FName(TEXT("Editor"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("AutoReimport/AutoReimportManager.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/AutoReimport/AutoReimportManager.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Deals with auto reimporting of objects when the objects file on disk is modified"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAutoReimportManager(Z_Construct_UClass_UAutoReimportManager, TEXT("UAutoReimportManager"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAutoReimportManager);
	UClass* Z_Construct_UClass_UCascadeOptions_NoRegister()
	{
		return UCascadeOptions::StaticClass();
	}
	UClass* Z_Construct_UClass_UCascadeOptions()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UCascadeOptions::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100084;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_MotionModeRadius = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MotionModeRadius"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(MotionModeRadius, UCascadeOptions), 0x0000000000004001);
				UProperty* NewProp_Cascade_MouseMoveThreshold = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Cascade_MouseMoveThreshold"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(Cascade_MouseMoveThreshold, UCascadeOptions), 0x0000000000004001);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bCenterCascadeModuleText, UCascadeOptions, uint8);
				UProperty* NewProp_bCenterCascadeModuleText = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bCenterCascadeModuleText"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bCenterCascadeModuleText, UCascadeOptions), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(bCenterCascadeModuleText, UCascadeOptions), sizeof(uint8), false);
				UProperty* NewProp_SlimCascadeDrawHeight = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SlimCascadeDrawHeight"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(SlimCascadeDrawHeight, UCascadeOptions), 0x0000000000004001);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bUseSlimCascadeDraw, UCascadeOptions, uint8);
				UProperty* NewProp_bUseSlimCascadeDraw = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bUseSlimCascadeDraw"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bUseSlimCascadeDraw, UCascadeOptions), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(bUseSlimCascadeDraw, UCascadeOptions), sizeof(uint8), false);
				UProperty* NewProp_ShowPPFlags = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ShowPPFlags"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(ShowPPFlags, UCascadeOptions), 0x0000000000004001);
				UProperty* NewProp_FloorScale3D = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("FloorScale3D"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(FloorScale3D, UCascadeOptions), 0x0000000000004001, Z_Construct_UScriptStruct_FVector());
				UProperty* NewProp_FloorScale = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("FloorScale"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(FloorScale, UCascadeOptions), 0x0000000000004001);
				UProperty* NewProp_FloorRotation = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("FloorRotation"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(FloorRotation, UCascadeOptions), 0x0000000000004001, Z_Construct_UScriptStruct_FRotator());
				UProperty* NewProp_FloorPosition = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("FloorPosition"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(FloorPosition, UCascadeOptions), 0x0000000000004001, Z_Construct_UScriptStruct_FVector());
				UProperty* NewProp_FloorMesh = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("FloorMesh"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(FloorMesh, UCascadeOptions), 0x0000000000004001);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bShowFloor, UCascadeOptions, uint8);
				UProperty* NewProp_bShowFloor = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bShowFloor"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bShowFloor, UCascadeOptions), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(bShowFloor, UCascadeOptions), sizeof(uint8), false);
				UProperty* NewProp_ParticleMemoryUpdateTime = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ParticleMemoryUpdateTime"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(ParticleMemoryUpdateTime, UCascadeOptions), 0x0000000000004001);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bShowParticleMemory, UCascadeOptions, uint8);
				UProperty* NewProp_bShowParticleMemory = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bShowParticleMemory"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bShowParticleMemory, UCascadeOptions), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(bShowParticleMemory, UCascadeOptions), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bShowParticleDistance, UCascadeOptions, uint8);
				UProperty* NewProp_bShowParticleDistance = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bShowParticleDistance"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bShowParticleDistance, UCascadeOptions), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(bShowParticleDistance, UCascadeOptions), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bShowParticleTimes, UCascadeOptions, uint8);
				UProperty* NewProp_bShowParticleTimes = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bShowParticleTimes"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bShowParticleTimes, UCascadeOptions), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(bShowParticleTimes, UCascadeOptions), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bShowParticleEvents, UCascadeOptions, uint8);
				UProperty* NewProp_bShowParticleEvents = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bShowParticleEvents"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bShowParticleEvents, UCascadeOptions), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(bShowParticleEvents, UCascadeOptions), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bShowParticleCounts, UCascadeOptions, uint8);
				UProperty* NewProp_bShowParticleCounts = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bShowParticleCounts"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bShowParticleCounts, UCascadeOptions), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(bShowParticleCounts, UCascadeOptions), sizeof(uint8), false);
				UProperty* NewProp_GridPerspectiveSize = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("GridPerspectiveSize"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(GridPerspectiveSize, UCascadeOptions), 0x0000000000004001);
				UProperty* NewProp_GridColor_Low = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("GridColor_Low"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(GridColor_Low, UCascadeOptions), 0x0000000000004001, Z_Construct_UScriptStruct_FColor());
				UProperty* NewProp_GridColor_Hi = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("GridColor_Hi"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(GridColor_Hi, UCascadeOptions), 0x0000000000004001, Z_Construct_UScriptStruct_FColor());
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bShowGrid, UCascadeOptions, uint8);
				UProperty* NewProp_bShowGrid = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bShowGrid"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bShowGrid, UCascadeOptions), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(bShowGrid, UCascadeOptions), sizeof(uint8), false);
				UProperty* NewProp_ModuleColor_Event_Selected = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ModuleColor_Event_Selected"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(ModuleColor_Event_Selected, UCascadeOptions), 0x0000000000004001, Z_Construct_UScriptStruct_FColor());
				UProperty* NewProp_ModuleColor_Event_Unselected = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ModuleColor_Event_Unselected"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(ModuleColor_Event_Unselected, UCascadeOptions), 0x0000000000004001, Z_Construct_UScriptStruct_FColor());
				UProperty* NewProp_ModuleColor_Required_Selected = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ModuleColor_Required_Selected"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(ModuleColor_Required_Selected, UCascadeOptions), 0x0000000000004001, Z_Construct_UScriptStruct_FColor());
				UProperty* NewProp_ModuleColor_Required_Unselected = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ModuleColor_Required_Unselected"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(ModuleColor_Required_Unselected, UCascadeOptions), 0x0000000000004001, Z_Construct_UScriptStruct_FColor());
				UProperty* NewProp_ModuleColor_Light_Selected = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ModuleColor_Light_Selected"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(ModuleColor_Light_Selected, UCascadeOptions), 0x0000000000004001, Z_Construct_UScriptStruct_FColor());
				UProperty* NewProp_ModuleColor_Light_Unselected = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ModuleColor_Light_Unselected"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(ModuleColor_Light_Unselected, UCascadeOptions), 0x0000000000004001, Z_Construct_UScriptStruct_FColor());
				UProperty* NewProp_ModuleColor_Spawn_Selected = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ModuleColor_Spawn_Selected"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(ModuleColor_Spawn_Selected, UCascadeOptions), 0x0000000000004001, Z_Construct_UScriptStruct_FColor());
				UProperty* NewProp_ModuleColor_Spawn_Unselected = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ModuleColor_Spawn_Unselected"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(ModuleColor_Spawn_Unselected, UCascadeOptions), 0x0000000000004001, Z_Construct_UScriptStruct_FColor());
				UProperty* NewProp_ModuleColor_Trail_Selected = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ModuleColor_Trail_Selected"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(ModuleColor_Trail_Selected, UCascadeOptions), 0x0000000000004001, Z_Construct_UScriptStruct_FColor());
				UProperty* NewProp_ModuleColor_Trail_Unselected = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ModuleColor_Trail_Unselected"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(ModuleColor_Trail_Unselected, UCascadeOptions), 0x0000000000004001, Z_Construct_UScriptStruct_FColor());
				UProperty* NewProp_ModuleColor_Beam_Selected = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ModuleColor_Beam_Selected"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(ModuleColor_Beam_Selected, UCascadeOptions), 0x0000000000004001, Z_Construct_UScriptStruct_FColor());
				UProperty* NewProp_ModuleColor_Beam_Unselected = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ModuleColor_Beam_Unselected"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(ModuleColor_Beam_Unselected, UCascadeOptions), 0x0000000000004001, Z_Construct_UScriptStruct_FColor());
				UProperty* NewProp_ModuleColor_TypeData_Selected = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ModuleColor_TypeData_Selected"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(ModuleColor_TypeData_Selected, UCascadeOptions), 0x0000000000004001, Z_Construct_UScriptStruct_FColor());
				UProperty* NewProp_ModuleColor_TypeData_Unselected = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ModuleColor_TypeData_Unselected"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(ModuleColor_TypeData_Unselected, UCascadeOptions), 0x0000000000004001, Z_Construct_UScriptStruct_FColor());
				UProperty* NewProp_ModuleColor_General_Selected = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ModuleColor_General_Selected"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(ModuleColor_General_Selected, UCascadeOptions), 0x0000000000004001, Z_Construct_UScriptStruct_FColor());
				UProperty* NewProp_ModuleColor_General_Unselected = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ModuleColor_General_Unselected"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(ModuleColor_General_Unselected, UCascadeOptions), 0x0000000000004001, Z_Construct_UScriptStruct_FColor());
				UProperty* NewProp_Emitter_Selected = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Emitter_Selected"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Emitter_Selected, UCascadeOptions), 0x0000000000004001, Z_Construct_UScriptStruct_FColor());
				UProperty* NewProp_Emitter_Unselected = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Emitter_Unselected"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Emitter_Unselected, UCascadeOptions), 0x0000000000004001, Z_Construct_UScriptStruct_FColor());
				UProperty* NewProp_Emitter_Background = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Emitter_Background"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Emitter_Background, UCascadeOptions), 0x0000000000004001, Z_Construct_UScriptStruct_FColor());
				UProperty* NewProp_Empty_Background = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Empty_Background"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Empty_Background, UCascadeOptions), 0x0000000000004001, Z_Construct_UScriptStruct_FColor());
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bUseSpaceBarResetInLevel, UCascadeOptions, uint8);
				UProperty* NewProp_bUseSpaceBarResetInLevel = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bUseSpaceBarResetInLevel"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bUseSpaceBarResetInLevel, UCascadeOptions), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(bUseSpaceBarResetInLevel, UCascadeOptions), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bUseSpaceBarReset, UCascadeOptions, uint8);
				UProperty* NewProp_bUseSpaceBarReset = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bUseSpaceBarReset"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bUseSpaceBarReset, UCascadeOptions), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(bUseSpaceBarReset, UCascadeOptions), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bUseSubMenus, UCascadeOptions, uint8);
				UProperty* NewProp_bUseSubMenus = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bUseSubMenus"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bUseSubMenus, UCascadeOptions), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(bUseSubMenus, UCascadeOptions), sizeof(uint8), false);
				UProperty* NewProp_BackgroundColor = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("BackgroundColor"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(BackgroundColor, UCascadeOptions), 0x0000000000004001, Z_Construct_UScriptStruct_FColor());
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bShowModuleDump, UCascadeOptions, uint8);
				UProperty* NewProp_bShowModuleDump = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bShowModuleDump"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bShowModuleDump, UCascadeOptions), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(bShowModuleDump, UCascadeOptions), sizeof(uint8), false);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->ClassConfigName = FName(TEXT("EditorPerProjectUserSettings"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Preferences/CascadeOptions.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/CascadeOptions.h"));
				MetaData->SetValue(NewProp_MotionModeRadius, TEXT("Category"), TEXT("Options"));
				MetaData->SetValue(NewProp_MotionModeRadius, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/CascadeOptions.h"));
				MetaData->SetValue(NewProp_MotionModeRadius, TEXT("ToolTip"), TEXT("The radius of the motion mode"));
				MetaData->SetValue(NewProp_Cascade_MouseMoveThreshold, TEXT("Category"), TEXT("Options"));
				MetaData->SetValue(NewProp_Cascade_MouseMoveThreshold, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/CascadeOptions.h"));
				MetaData->SetValue(NewProp_Cascade_MouseMoveThreshold, TEXT("ToolTip"), TEXT("The number of units the mouse must move before considering the module as dragged."));
				MetaData->SetValue(NewProp_bCenterCascadeModuleText, TEXT("Category"), TEXT("Options"));
				MetaData->SetValue(NewProp_bCenterCascadeModuleText, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/CascadeOptions.h"));
				MetaData->SetValue(NewProp_bCenterCascadeModuleText, TEXT("ToolTip"), TEXT("If true, center the module name and buttons in the module box."));
				MetaData->SetValue(NewProp_SlimCascadeDrawHeight, TEXT("Category"), TEXT("Options"));
				MetaData->SetValue(NewProp_SlimCascadeDrawHeight, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/CascadeOptions.h"));
				MetaData->SetValue(NewProp_SlimCascadeDrawHeight, TEXT("ToolTip"), TEXT("The height to use for the 'slimline' module drawing method in cascade."));
				MetaData->SetValue(NewProp_bUseSlimCascadeDraw, TEXT("Category"), TEXT("Options"));
				MetaData->SetValue(NewProp_bUseSlimCascadeDraw, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/CascadeOptions.h"));
				MetaData->SetValue(NewProp_bUseSlimCascadeDraw, TEXT("ToolTip"), TEXT("If true, use the 'slimline' module drawing method in cascade."));
				MetaData->SetValue(NewProp_ShowPPFlags, TEXT("Category"), TEXT("Options"));
				MetaData->SetValue(NewProp_ShowPPFlags, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/CascadeOptions.h"));
				MetaData->SetValue(NewProp_FloorScale3D, TEXT("Category"), TEXT("Options"));
				MetaData->SetValue(NewProp_FloorScale3D, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/CascadeOptions.h"));
				MetaData->SetValue(NewProp_FloorScale, TEXT("Category"), TEXT("Options"));
				MetaData->SetValue(NewProp_FloorScale, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/CascadeOptions.h"));
				MetaData->SetValue(NewProp_FloorRotation, TEXT("Category"), TEXT("Options"));
				MetaData->SetValue(NewProp_FloorRotation, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/CascadeOptions.h"));
				MetaData->SetValue(NewProp_FloorPosition, TEXT("Category"), TEXT("Options"));
				MetaData->SetValue(NewProp_FloorPosition, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/CascadeOptions.h"));
				MetaData->SetValue(NewProp_FloorMesh, TEXT("Category"), TEXT("Options"));
				MetaData->SetValue(NewProp_FloorMesh, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/CascadeOptions.h"));
				MetaData->SetValue(NewProp_bShowFloor, TEXT("Category"), TEXT("Options"));
				MetaData->SetValue(NewProp_bShowFloor, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/CascadeOptions.h"));
				MetaData->SetValue(NewProp_ParticleMemoryUpdateTime, TEXT("Category"), TEXT("Options"));
				MetaData->SetValue(NewProp_ParticleMemoryUpdateTime, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/CascadeOptions.h"));
				MetaData->SetValue(NewProp_bShowParticleMemory, TEXT("Category"), TEXT("Options"));
				MetaData->SetValue(NewProp_bShowParticleMemory, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/CascadeOptions.h"));
				MetaData->SetValue(NewProp_bShowParticleDistance, TEXT("Category"), TEXT("Options"));
				MetaData->SetValue(NewProp_bShowParticleDistance, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/CascadeOptions.h"));
				MetaData->SetValue(NewProp_bShowParticleTimes, TEXT("Category"), TEXT("Options"));
				MetaData->SetValue(NewProp_bShowParticleTimes, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/CascadeOptions.h"));
				MetaData->SetValue(NewProp_bShowParticleEvents, TEXT("Category"), TEXT("Options"));
				MetaData->SetValue(NewProp_bShowParticleEvents, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/CascadeOptions.h"));
				MetaData->SetValue(NewProp_bShowParticleCounts, TEXT("Category"), TEXT("Options"));
				MetaData->SetValue(NewProp_bShowParticleCounts, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/CascadeOptions.h"));
				MetaData->SetValue(NewProp_GridPerspectiveSize, TEXT("Category"), TEXT("Options"));
				MetaData->SetValue(NewProp_GridPerspectiveSize, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/CascadeOptions.h"));
				MetaData->SetValue(NewProp_GridColor_Low, TEXT("Category"), TEXT("Options"));
				MetaData->SetValue(NewProp_GridColor_Low, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/CascadeOptions.h"));
				MetaData->SetValue(NewProp_GridColor_Hi, TEXT("Category"), TEXT("Options"));
				MetaData->SetValue(NewProp_GridColor_Hi, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/CascadeOptions.h"));
				MetaData->SetValue(NewProp_bShowGrid, TEXT("Category"), TEXT("Options"));
				MetaData->SetValue(NewProp_bShowGrid, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/CascadeOptions.h"));
				MetaData->SetValue(NewProp_ModuleColor_Event_Selected, TEXT("Category"), TEXT("Options"));
				MetaData->SetValue(NewProp_ModuleColor_Event_Selected, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/CascadeOptions.h"));
				MetaData->SetValue(NewProp_ModuleColor_Event_Unselected, TEXT("Category"), TEXT("Options"));
				MetaData->SetValue(NewProp_ModuleColor_Event_Unselected, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/CascadeOptions.h"));
				MetaData->SetValue(NewProp_ModuleColor_Required_Selected, TEXT("Category"), TEXT("Options"));
				MetaData->SetValue(NewProp_ModuleColor_Required_Selected, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/CascadeOptions.h"));
				MetaData->SetValue(NewProp_ModuleColor_Required_Unselected, TEXT("Category"), TEXT("Options"));
				MetaData->SetValue(NewProp_ModuleColor_Required_Unselected, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/CascadeOptions.h"));
				MetaData->SetValue(NewProp_ModuleColor_Light_Selected, TEXT("Category"), TEXT("Options"));
				MetaData->SetValue(NewProp_ModuleColor_Light_Selected, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/CascadeOptions.h"));
				MetaData->SetValue(NewProp_ModuleColor_Light_Unselected, TEXT("Category"), TEXT("Options"));
				MetaData->SetValue(NewProp_ModuleColor_Light_Unselected, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/CascadeOptions.h"));
				MetaData->SetValue(NewProp_ModuleColor_Spawn_Selected, TEXT("Category"), TEXT("Options"));
				MetaData->SetValue(NewProp_ModuleColor_Spawn_Selected, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/CascadeOptions.h"));
				MetaData->SetValue(NewProp_ModuleColor_Spawn_Unselected, TEXT("Category"), TEXT("Options"));
				MetaData->SetValue(NewProp_ModuleColor_Spawn_Unselected, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/CascadeOptions.h"));
				MetaData->SetValue(NewProp_ModuleColor_Trail_Selected, TEXT("Category"), TEXT("Options"));
				MetaData->SetValue(NewProp_ModuleColor_Trail_Selected, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/CascadeOptions.h"));
				MetaData->SetValue(NewProp_ModuleColor_Trail_Unselected, TEXT("Category"), TEXT("Options"));
				MetaData->SetValue(NewProp_ModuleColor_Trail_Unselected, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/CascadeOptions.h"));
				MetaData->SetValue(NewProp_ModuleColor_Beam_Selected, TEXT("Category"), TEXT("Options"));
				MetaData->SetValue(NewProp_ModuleColor_Beam_Selected, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/CascadeOptions.h"));
				MetaData->SetValue(NewProp_ModuleColor_Beam_Unselected, TEXT("Category"), TEXT("Options"));
				MetaData->SetValue(NewProp_ModuleColor_Beam_Unselected, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/CascadeOptions.h"));
				MetaData->SetValue(NewProp_ModuleColor_TypeData_Selected, TEXT("Category"), TEXT("Options"));
				MetaData->SetValue(NewProp_ModuleColor_TypeData_Selected, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/CascadeOptions.h"));
				MetaData->SetValue(NewProp_ModuleColor_TypeData_Unselected, TEXT("Category"), TEXT("Options"));
				MetaData->SetValue(NewProp_ModuleColor_TypeData_Unselected, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/CascadeOptions.h"));
				MetaData->SetValue(NewProp_ModuleColor_General_Selected, TEXT("Category"), TEXT("Options"));
				MetaData->SetValue(NewProp_ModuleColor_General_Selected, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/CascadeOptions.h"));
				MetaData->SetValue(NewProp_ModuleColor_General_Unselected, TEXT("Category"), TEXT("Options"));
				MetaData->SetValue(NewProp_ModuleColor_General_Unselected, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/CascadeOptions.h"));
				MetaData->SetValue(NewProp_Emitter_Selected, TEXT("Category"), TEXT("Options"));
				MetaData->SetValue(NewProp_Emitter_Selected, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/CascadeOptions.h"));
				MetaData->SetValue(NewProp_Emitter_Unselected, TEXT("Category"), TEXT("Options"));
				MetaData->SetValue(NewProp_Emitter_Unselected, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/CascadeOptions.h"));
				MetaData->SetValue(NewProp_Emitter_Background, TEXT("Category"), TEXT("Options"));
				MetaData->SetValue(NewProp_Emitter_Background, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/CascadeOptions.h"));
				MetaData->SetValue(NewProp_Empty_Background, TEXT("Category"), TEXT("Options"));
				MetaData->SetValue(NewProp_Empty_Background, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/CascadeOptions.h"));
				MetaData->SetValue(NewProp_bUseSpaceBarResetInLevel, TEXT("Category"), TEXT("Options"));
				MetaData->SetValue(NewProp_bUseSpaceBarResetInLevel, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/CascadeOptions.h"));
				MetaData->SetValue(NewProp_bUseSpaceBarReset, TEXT("Category"), TEXT("Options"));
				MetaData->SetValue(NewProp_bUseSpaceBarReset, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/CascadeOptions.h"));
				MetaData->SetValue(NewProp_bUseSubMenus, TEXT("Category"), TEXT("Options"));
				MetaData->SetValue(NewProp_bUseSubMenus, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/CascadeOptions.h"));
				MetaData->SetValue(NewProp_BackgroundColor, TEXT("Category"), TEXT("Options"));
				MetaData->SetValue(NewProp_BackgroundColor, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/CascadeOptions.h"));
				MetaData->SetValue(NewProp_bShowModuleDump, TEXT("Category"), TEXT("Options"));
				MetaData->SetValue(NewProp_bShowModuleDump, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/CascadeOptions.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UCascadeOptions(Z_Construct_UClass_UCascadeOptions, TEXT("UCascadeOptions"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UCascadeOptions);
	UScriptStruct* Z_Construct_UScriptStruct_FChunkDependency()
	{
		UPackage* Outer=Z_Construct_UPackage_UnrealEd();
		extern uint32 Get_Z_Construct_UScriptStruct_FChunkDependency_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("ChunkDependency"), sizeof(FChunkDependency), Get_Z_Construct_UScriptStruct_FChunkDependency_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ChunkDependency"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FChunkDependency>, EStructFlags(0x00000001));
			UProperty* NewProp_ParentChunkID = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ParentChunkID"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(ParentChunkID, FChunkDependency), 0x0000000000000001);
			UProperty* NewProp_ChunkID = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ChunkID"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(ChunkID, FChunkDependency), 0x0000000000000001);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/Commandlets/ChunkDependencyInfo.h"));
			MetaData->SetValue(NewProp_ParentChunkID, TEXT("Category"), TEXT("ChunkInfo"));
			MetaData->SetValue(NewProp_ParentChunkID, TEXT("ModuleRelativePath"), TEXT("Private/Commandlets/ChunkDependencyInfo.h"));
			MetaData->SetValue(NewProp_ChunkID, TEXT("Category"), TEXT("ChunkInfo"));
			MetaData->SetValue(NewProp_ChunkID, TEXT("ModuleRelativePath"), TEXT("Private/Commandlets/ChunkDependencyInfo.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FChunkDependency_CRC() { return 1327476745U; }
	UClass* Z_Construct_UClass_UChunkDependencyInfo_NoRegister()
	{
		return UChunkDependencyInfo::StaticClass();
	}
	UClass* Z_Construct_UClass_UChunkDependencyInfo()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UChunkDependencyInfo::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000086;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_DependencyArray = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("DependencyArray"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(DependencyArray, UChunkDependencyInfo), 0x0000000000004000);
				UProperty* NewProp_DependencyArray_Inner = new(EC_InternalUseOnlyConstructor, NewProp_DependencyArray, TEXT("DependencyArray"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000004000, Z_Construct_UScriptStruct_FChunkDependency());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->ClassConfigName = FName(TEXT("Engine"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Commandlets/ChunkDependencyInfo.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/Commandlets/ChunkDependencyInfo.h"));
				MetaData->SetValue(NewProp_DependencyArray, TEXT("ModuleRelativePath"), TEXT("Private/Commandlets/ChunkDependencyInfo.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UChunkDependencyInfo(Z_Construct_UClass_UChunkDependencyInfo, TEXT("UChunkDependencyInfo"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UChunkDependencyInfo);
	UScriptStruct* Z_Construct_UScriptStruct_FCollisionPerfTest()
	{
		UPackage* Outer=Z_Construct_UPackage_UnrealEd();
		extern uint32 Get_Z_Construct_UScriptStruct_FCollisionPerfTest_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("CollisionPerfTest"), sizeof(FCollisionPerfTest), Get_Z_Construct_UScriptStruct_FCollisionPerfTest_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("CollisionPerfTest"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FCollisionPerfTest>, EStructFlags(0x00000001));
			UProperty* NewProp_CreationElements = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("CreationElements"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(CreationElements, FCollisionPerfTest), 0x0000000000000000, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_CreationBounds = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("CreationBounds"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(CreationBounds, FCollisionPerfTest), 0x0000000000000000, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_ShapeType = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ShapeType"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(ShapeType, FCollisionPerfTest), 0x0000000000000000);
			UProperty* NewProp_RootShapeAsset = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("RootShapeAsset"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(RootShapeAsset, FCollisionPerfTest), 0x0000000000000000);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/Tests/CollisionAutomationTests.h"));
			MetaData->SetValue(NewProp_CreationElements, TEXT("ModuleRelativePath"), TEXT("Private/Tests/CollisionAutomationTests.h"));
			MetaData->SetValue(NewProp_CreationBounds, TEXT("ModuleRelativePath"), TEXT("Private/Tests/CollisionAutomationTests.h"));
			MetaData->SetValue(NewProp_ShapeType, TEXT("ModuleRelativePath"), TEXT("Private/Tests/CollisionAutomationTests.h"));
			MetaData->SetValue(NewProp_RootShapeAsset, TEXT("ModuleRelativePath"), TEXT("Private/Tests/CollisionAutomationTests.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FCollisionPerfTest_CRC() { return 784462725U; }
	UScriptStruct* Z_Construct_UScriptStruct_FCollisionTestEntry()
	{
		UPackage* Outer=Z_Construct_UPackage_UnrealEd();
		extern uint32 Get_Z_Construct_UScriptStruct_FCollisionTestEntry_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("CollisionTestEntry"), sizeof(FCollisionTestEntry), Get_Z_Construct_UScriptStruct_FCollisionTestEntry_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("CollisionTestEntry"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FCollisionTestEntry>, EStructFlags(0x00000005));
			UProperty* NewProp_HitResult = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HitResult"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(HitResult, FCollisionTestEntry), 0x0000008000000000, Z_Construct_UScriptStruct_FHitResult());
			UProperty* NewProp_ShapeType = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ShapeType"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(ShapeType, FCollisionTestEntry), 0x0000000000000000);
			UProperty* NewProp_RootShapeAsset = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("RootShapeAsset"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(RootShapeAsset, FCollisionTestEntry), 0x0000000000000000);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/Tests/CollisionAutomationTests.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Container for detailing collision automated test data."));
			MetaData->SetValue(NewProp_HitResult, TEXT("ModuleRelativePath"), TEXT("Private/Tests/CollisionAutomationTests.h"));
			MetaData->SetValue(NewProp_ShapeType, TEXT("ModuleRelativePath"), TEXT("Private/Tests/CollisionAutomationTests.h"));
			MetaData->SetValue(NewProp_RootShapeAsset, TEXT("ModuleRelativePath"), TEXT("Private/Tests/CollisionAutomationTests.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FCollisionTestEntry_CRC() { return 972454977U; }
	UClass* Z_Construct_UClass_UCollisionAutomationTestConfigData_NoRegister()
	{
		return UCollisionAutomationTestConfigData::StaticClass();
	}
	UClass* Z_Construct_UClass_UCollisionAutomationTestConfigData()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UCollisionAutomationTestConfigData::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800084;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_LineTracePerformanceTests = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("LineTracePerformanceTests"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(LineTracePerformanceTests, UCollisionAutomationTestConfigData), 0x0000000000004000);
				UProperty* NewProp_LineTracePerformanceTests_Inner = new(EC_InternalUseOnlyConstructor, NewProp_LineTracePerformanceTests, TEXT("LineTracePerformanceTests"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000004000, Z_Construct_UScriptStruct_FCollisionPerfTest());
				UProperty* NewProp_LineTraceSingleByChannelTests = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("LineTraceSingleByChannelTests"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(LineTraceSingleByChannelTests, UCollisionAutomationTestConfigData), 0x0000008000004000);
				UProperty* NewProp_LineTraceSingleByChannelTests_Inner = new(EC_InternalUseOnlyConstructor, NewProp_LineTraceSingleByChannelTests, TEXT("LineTraceSingleByChannelTests"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000008000004000, Z_Construct_UScriptStruct_FCollisionTestEntry());
				UProperty* NewProp_ComponentSweepMultiTests = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ComponentSweepMultiTests"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(ComponentSweepMultiTests, UCollisionAutomationTestConfigData), 0x0000008000004000);
				UProperty* NewProp_ComponentSweepMultiTests_Inner = new(EC_InternalUseOnlyConstructor, NewProp_ComponentSweepMultiTests, TEXT("ComponentSweepMultiTests"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000008000004000, Z_Construct_UScriptStruct_FCollisionTestEntry());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->ClassConfigName = FName(TEXT("Editor"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Tests/CollisionAutomationTests.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/Tests/CollisionAutomationTests.h"));
				MetaData->SetValue(NewProp_LineTracePerformanceTests, TEXT("ModuleRelativePath"), TEXT("Private/Tests/CollisionAutomationTests.h"));
				MetaData->SetValue(NewProp_LineTraceSingleByChannelTests, TEXT("ModuleRelativePath"), TEXT("Private/Tests/CollisionAutomationTests.h"));
				MetaData->SetValue(NewProp_ComponentSweepMultiTests, TEXT("ModuleRelativePath"), TEXT("Private/Tests/CollisionAutomationTests.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UCollisionAutomationTestConfigData(Z_Construct_UClass_UCollisionAutomationTestConfigData, TEXT("UCollisionAutomationTestConfigData"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UCollisionAutomationTestConfigData);
	UClass* Z_Construct_UClass_UCompressAnimationsCommandlet_NoRegister()
	{
		return UCompressAnimationsCommandlet::StaticClass();
	}
	UClass* Z_Construct_UClass_UCompressAnimationsCommandlet()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UCommandlet();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UCompressAnimationsCommandlet::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000088;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Commandlets/CompressAnimationsCommandlet.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Commandlets/CompressAnimationsCommandlet.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UCompressAnimationsCommandlet(Z_Construct_UClass_UCompressAnimationsCommandlet, TEXT("UCompressAnimationsCommandlet"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UCompressAnimationsCommandlet);
	UClass* Z_Construct_UClass_UContentBrowserSettings_NoRegister()
	{
		return UContentBrowserSettings::StaticClass();
	}
	UClass* Z_Construct_UClass_UContentBrowserSettings()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UContentBrowserSettings::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100084;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(DisplayCollections, UContentBrowserSettings, bool);
				UProperty* NewProp_DisplayCollections = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("DisplayCollections"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(DisplayCollections, UContentBrowserSettings), 0x0000000000004000, CPP_BOOL_PROPERTY_BITMASK(DisplayCollections, UContentBrowserSettings), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(DisplayPluginFolders, UContentBrowserSettings, bool);
				UProperty* NewProp_DisplayPluginFolders = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("DisplayPluginFolders"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(DisplayPluginFolders, UContentBrowserSettings), 0x0000000000004000, CPP_BOOL_PROPERTY_BITMASK(DisplayPluginFolders, UContentBrowserSettings), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(DisplayDevelopersFolder, UContentBrowserSettings, bool);
				UProperty* NewProp_DisplayDevelopersFolder = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("DisplayDevelopersFolder"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(DisplayDevelopersFolder, UContentBrowserSettings), 0x0000000000004000, CPP_BOOL_PROPERTY_BITMASK(DisplayDevelopersFolder, UContentBrowserSettings), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(DisplayEngineFolder, UContentBrowserSettings, bool);
				UProperty* NewProp_DisplayEngineFolder = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("DisplayEngineFolder"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(DisplayEngineFolder, UContentBrowserSettings), 0x0000000000004000, CPP_BOOL_PROPERTY_BITMASK(DisplayEngineFolder, UContentBrowserSettings), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(DisplayFolders, UContentBrowserSettings, bool);
				UProperty* NewProp_DisplayFolders = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("DisplayFolders"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(DisplayFolders, UContentBrowserSettings), 0x0000000000004000, CPP_BOOL_PROPERTY_BITMASK(DisplayFolders, UContentBrowserSettings), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(RealTimeThumbnails, UContentBrowserSettings, bool);
				UProperty* NewProp_RealTimeThumbnails = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("RealTimeThumbnails"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(RealTimeThumbnails, UContentBrowserSettings), 0x0000000000004000, CPP_BOOL_PROPERTY_BITMASK(RealTimeThumbnails, UContentBrowserSettings), sizeof(bool), true);
				UProperty* NewProp_NumObjectsToLoadBeforeWarning = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("NumObjectsToLoadBeforeWarning"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(NumObjectsToLoadBeforeWarning, UContentBrowserSettings), 0x0000000000004001);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->ClassConfigName = FName(TEXT("EditorPerProjectUserSettings"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Settings/ContentBrowserSettings.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/ContentBrowserSettings.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Implements the Level Editor's loading and saving settings."));
				MetaData->SetValue(NewProp_DisplayCollections, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/ContentBrowserSettings.h"));
				MetaData->SetValue(NewProp_DisplayPluginFolders, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/ContentBrowserSettings.h"));
				MetaData->SetValue(NewProp_DisplayPluginFolders, TEXT("ToolTip"), TEXT("List of plugin folders to display in the content browser."));
				MetaData->SetValue(NewProp_DisplayDevelopersFolder, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/ContentBrowserSettings.h"));
				MetaData->SetValue(NewProp_DisplayDevelopersFolder, TEXT("ToolTip"), TEXT("Whether to display the developers folder in the path view of the content browser"));
				MetaData->SetValue(NewProp_DisplayEngineFolder, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/ContentBrowserSettings.h"));
				MetaData->SetValue(NewProp_DisplayEngineFolder, TEXT("ToolTip"), TEXT("Whether to display the engine folder in the assets view of the content browser."));
				MetaData->SetValue(NewProp_DisplayFolders, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/ContentBrowserSettings.h"));
				MetaData->SetValue(NewProp_DisplayFolders, TEXT("ToolTip"), TEXT("Whether to display folders in the assets view of the content browser. Note that this implies 'Show Only Assets in Selected Folders'."));
				MetaData->SetValue(NewProp_RealTimeThumbnails, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/ContentBrowserSettings.h"));
				MetaData->SetValue(NewProp_RealTimeThumbnails, TEXT("ToolTip"), TEXT("Whether to render thumbnails for loaded assets in real-time in the Content Browser"));
				MetaData->SetValue(NewProp_NumObjectsToLoadBeforeWarning, TEXT("Category"), TEXT("ContentBrowser"));
				MetaData->SetValue(NewProp_NumObjectsToLoadBeforeWarning, TEXT("DisplayName"), TEXT("Assets to Load at Once Before Warning"));
				MetaData->SetValue(NewProp_NumObjectsToLoadBeforeWarning, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/ContentBrowserSettings.h"));
				MetaData->SetValue(NewProp_NumObjectsToLoadBeforeWarning, TEXT("ToolTip"), TEXT("The number of objects to load at once in the Content Browser before displaying a warning about loading many assets"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UContentBrowserSettings(Z_Construct_UClass_UContentBrowserSettings, TEXT("UContentBrowserSettings"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UContentBrowserSettings);
	UClass* Z_Construct_UClass_UCookCommandlet_NoRegister()
	{
		return UCookCommandlet::StaticClass();
	}
	UClass* Z_Construct_UClass_UCookCommandlet()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UCommandlet();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UCookCommandlet::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x2000008C;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_FullGCAssetClassNames = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("FullGCAssetClassNames"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(FullGCAssetClassNames, UCookCommandlet), 0x0000000000004000);
				UProperty* NewProp_FullGCAssetClassNames_Inner = new(EC_InternalUseOnlyConstructor, NewProp_FullGCAssetClassNames, TEXT("FullGCAssetClassNames"), RF_Public|RF_Transient|RF_Native) UStrProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000004000);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->ClassConfigName = FName(TEXT("Editor"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Commandlets/CookCommandlet.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Commandlets/CookCommandlet.h"));
				MetaData->SetValue(NewProp_FullGCAssetClassNames, TEXT("ModuleRelativePath"), TEXT("Classes/Commandlets/CookCommandlet.h"));
				MetaData->SetValue(NewProp_FullGCAssetClassNames, TEXT("ToolTip"), TEXT("List of asset types that will force GC after loading them during cook"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UCookCommandlet(Z_Construct_UClass_UCookCommandlet, TEXT("UCookCommandlet"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UCookCommandlet);
	UClass* Z_Construct_UClass_UCookerSettings_NoRegister()
	{
		return UCookerSettings::StaticClass();
	}
	UClass* Z_Construct_UClass_UCookerSettings()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UDeveloperSettings();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UCookerSettings::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100086;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_DefaultASTCQualityBySize = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("DefaultASTCQualityBySize"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(DefaultASTCQualityBySize, UCookerSettings), 0x0000000000044001);
				UProperty* NewProp_DefaultASTCQualityBySpeed = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("DefaultASTCQualityBySpeed"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(DefaultASTCQualityBySpeed, UCookerSettings), 0x0000000000044001);
				UProperty* NewProp_DefaultPVRTCQuality = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("DefaultPVRTCQuality"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(DefaultPVRTCQuality, UCookerSettings), 0x0000000000044001);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bEnableCookOnTheSide, UCookerSettings, bool);
				UProperty* NewProp_bEnableCookOnTheSide = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bEnableCookOnTheSide"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bEnableCookOnTheSide, UCookerSettings), 0x0000000000044001, CPP_BOOL_PROPERTY_BITMASK(bEnableCookOnTheSide, UCookerSettings), sizeof(bool), true);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->ClassConfigName = FName(TEXT("Engine"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("DisplayName"), TEXT("Cooker"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("CookerSettings.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/CookerSettings.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Various cooker settings."));
				MetaData->SetValue(NewProp_DefaultASTCQualityBySize, TEXT("Category"), TEXT("Textures"));
				MetaData->SetValue(NewProp_DefaultASTCQualityBySize, TEXT("DisplayName"), TEXT("ASTC Compression Quality vs Size (0-4, 0 is smallest)"));
				MetaData->SetValue(NewProp_DefaultASTCQualityBySize, TEXT("ModuleRelativePath"), TEXT("Public/CookerSettings.h"));
				MetaData->SetValue(NewProp_DefaultASTCQualityBySize, TEXT("ToolTip"), TEXT("Quality of 0 means smallest (12x12 block size), 4 means best (4x4 block size)"));
				MetaData->SetValue(NewProp_DefaultASTCQualityBySpeed, TEXT("Category"), TEXT("Textures"));
				MetaData->SetValue(NewProp_DefaultASTCQualityBySpeed, TEXT("DisplayName"), TEXT("ASTC Compression Quality vs Speed (0-4, 0 is fastest)"));
				MetaData->SetValue(NewProp_DefaultASTCQualityBySpeed, TEXT("ModuleRelativePath"), TEXT("Public/CookerSettings.h"));
				MetaData->SetValue(NewProp_DefaultASTCQualityBySpeed, TEXT("ToolTip"), TEXT("Quality of 0 means fastest, 3 means best quality"));
				MetaData->SetValue(NewProp_DefaultPVRTCQuality, TEXT("Category"), TEXT("Textures"));
				MetaData->SetValue(NewProp_DefaultPVRTCQuality, TEXT("DisplayName"), TEXT("PVRTC Compression Quality (0-4, 0 is fastest)"));
				MetaData->SetValue(NewProp_DefaultPVRTCQuality, TEXT("ModuleRelativePath"), TEXT("Public/CookerSettings.h"));
				MetaData->SetValue(NewProp_DefaultPVRTCQuality, TEXT("ToolTip"), TEXT("Quality of 0 means fastest, 4 means best quality"));
				MetaData->SetValue(NewProp_bEnableCookOnTheSide, TEXT("Category"), TEXT("Cooker"));
				MetaData->SetValue(NewProp_bEnableCookOnTheSide, TEXT("DisplayName"), TEXT("Enable cooking via network in the background of the editor, launch on uses this setting, requires device to have network access to editor"));
				MetaData->SetValue(NewProp_bEnableCookOnTheSide, TEXT("ModuleRelativePath"), TEXT("Public/CookerSettings.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UCookerSettings(Z_Construct_UClass_UCookerSettings, TEXT("UCookerSettings"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UCookerSettings);
	UEnum* Z_Construct_UEnum_UnrealEd_ECookMode()
	{
		UPackage* Outer=Z_Construct_UPackage_UnrealEd();
		extern uint32 Get_Z_Construct_UEnum_UnrealEd_ECookMode_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("ECookMode"), 0, Get_Z_Construct_UEnum_UnrealEd_ECookMode_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ECookMode"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ECookMode::CookOnTheFly")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ECookMode::CookOnTheFlyFromTheEditor")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ECookMode::CookByTheBookFromTheEditor")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ECookMode::CookByTheBook")), 3));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ECookMode::ECookMode_MAX")), 4));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("CookByTheBook.ToolTip"), TEXT("Cooking by the book (not in the editor)."));
			MetaData->SetValue(ReturnEnum, TEXT("CookByTheBookFromTheEditor.ToolTip"), TEXT("Precook all resources while in the editor."));
			MetaData->SetValue(ReturnEnum, TEXT("CookOnTheFly.ToolTip"), TEXT("Default mode, handles requests from network."));
			MetaData->SetValue(ReturnEnum, TEXT("CookOnTheFlyFromTheEditor.ToolTip"), TEXT("Cook on the side."));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/CookOnTheSide/CookOnTheFlyServer.h"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_UnrealEd_ECookMode_CRC() { return 1820212998U; }
	UClass* Z_Construct_UClass_UCookOnTheFlyServer_NoRegister()
	{
		return UCookOnTheFlyServer::StaticClass();
	}
	UClass* Z_Construct_UClass_UCookOnTheFlyServer()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UCookOnTheFlyServer::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("CookOnTheSide/CookOnTheFlyServer.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/CookOnTheSide/CookOnTheFlyServer.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UCookOnTheFlyServer(Z_Construct_UClass_UCookOnTheFlyServer, TEXT("UCookOnTheFlyServer"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UCookOnTheFlyServer);
	UEnum* Z_Construct_UEnum_UnrealEd_ECurveEditorTangentVisibility()
	{
		UPackage* Outer=Z_Construct_UPackage_UnrealEd();
		extern uint32 Get_Z_Construct_UEnum_UnrealEd_ECurveEditorTangentVisibility_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("ECurveEditorTangentVisibility"), 0, Get_Z_Construct_UEnum_UnrealEd_ECurveEditorTangentVisibility_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ECurveEditorTangentVisibility"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ECurveEditorTangentVisibility::AllTangents")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ECurveEditorTangentVisibility::SelectedKeys")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ECurveEditorTangentVisibility::NoTangents")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ECurveEditorTangentVisibility::ECurveEditorTangentVisibility_MAX")), 3));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("AllTangents.ToolTip"), TEXT("All tangents should be visible."));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Public/CurveEditorSettings.h"));
			MetaData->SetValue(ReturnEnum, TEXT("NoTangents.ToolTip"), TEXT("Don't display tangents."));
			MetaData->SetValue(ReturnEnum, TEXT("SelectedKeys.ToolTip"), TEXT("Only tangents from selected keys should be visible."));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("Defines visibility states for the tangents in the curve editor."));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_UnrealEd_ECurveEditorTangentVisibility_CRC() { return 1605239311U; }
	UEnum* Z_Construct_UEnum_UnrealEd_ECurveEditorCurveVisibility()
	{
		UPackage* Outer=Z_Construct_UPackage_UnrealEd();
		extern uint32 Get_Z_Construct_UEnum_UnrealEd_ECurveEditorCurveVisibility_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("ECurveEditorCurveVisibility"), 0, Get_Z_Construct_UEnum_UnrealEd_ECurveEditorCurveVisibility_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ECurveEditorCurveVisibility"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ECurveEditorCurveVisibility::AllCurves")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ECurveEditorCurveVisibility::SelectedCurves")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ECurveEditorCurveVisibility::AnimatedCurves")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ECurveEditorCurveVisibility::ECurveEditorCurveVisibility_MAX")), 3));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("AllCurves.ToolTip"), TEXT("All curves should be visible."));
			MetaData->SetValue(ReturnEnum, TEXT("AnimatedCurves.ToolTip"), TEXT("Only curves which have keyframes should be visible."));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Public/CurveEditorSettings.h"));
			MetaData->SetValue(ReturnEnum, TEXT("SelectedCurves.ToolTip"), TEXT("Only curves from selected nodes should be visible."));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("Defines visibility states for the curves in the curve editor."));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_UnrealEd_ECurveEditorCurveVisibility_CRC() { return 193217454U; }
	UClass* Z_Construct_UClass_UCurveEditorSettings_NoRegister()
	{
		return UCurveEditorSettings::StaticClass();
	}
	UClass* Z_Construct_UClass_UCurveEditorSettings()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UCurveEditorSettings::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100084;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_TangentVisibility = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("TangentVisibility"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(TangentVisibility, UCurveEditorSettings), 0x0000080000004000, Z_Construct_UEnum_UnrealEd_ECurveEditorTangentVisibility());
				UProperty* NewProp_CurveVisibility = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CurveVisibility"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(CurveVisibility, UCurveEditorSettings), 0x0000080000004000, Z_Construct_UEnum_UnrealEd_ECurveEditorCurveVisibility());
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bShowCurveEditorCurveToolTips, UCurveEditorSettings, bool);
				UProperty* NewProp_bShowCurveEditorCurveToolTips = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bShowCurveEditorCurveToolTips"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bShowCurveEditorCurveToolTips, UCurveEditorSettings), 0x0000080000004000, CPP_BOOL_PROPERTY_BITMASK(bShowCurveEditorCurveToolTips, UCurveEditorSettings), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bAutoFrameCurveEditor, UCurveEditorSettings, bool);
				UProperty* NewProp_bAutoFrameCurveEditor = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bAutoFrameCurveEditor"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bAutoFrameCurveEditor, UCurveEditorSettings), 0x0000080000004000, CPP_BOOL_PROPERTY_BITMASK(bAutoFrameCurveEditor, UCurveEditorSettings), sizeof(bool), true);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->ClassConfigName = FName(TEXT("EditorPerProjectUserSettings"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("CurveEditorSettings.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/CurveEditorSettings.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Serializable options for curve editor."));
				MetaData->SetValue(NewProp_TangentVisibility, TEXT("ModuleRelativePath"), TEXT("Public/CurveEditorSettings.h"));
				MetaData->SetValue(NewProp_CurveVisibility, TEXT("ModuleRelativePath"), TEXT("Public/CurveEditorSettings.h"));
				MetaData->SetValue(NewProp_bShowCurveEditorCurveToolTips, TEXT("ModuleRelativePath"), TEXT("Public/CurveEditorSettings.h"));
				MetaData->SetValue(NewProp_bAutoFrameCurveEditor, TEXT("ModuleRelativePath"), TEXT("Public/CurveEditorSettings.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UCurveEditorSettings(Z_Construct_UClass_UCurveEditorSettings, TEXT("UCurveEditorSettings"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UCurveEditorSettings);
	UClass* Z_Construct_UClass_UCurveEdOptions_NoRegister()
	{
		return UCurveEdOptions::StaticClass();
	}
	UClass* Z_Construct_UClass_UCurveEdOptions()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UCurveEdOptions::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100084;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_SelectedKeyColor = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SelectedKeyColor"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(SelectedKeyColor, UCurveEdOptions), 0x0000000000004001, Z_Construct_UScriptStruct_FLinearColor());
				UProperty* NewProp_LabelBlockBkgColor = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("LabelBlockBkgColor"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(LabelBlockBkgColor, UCurveEdOptions), 0x0000000000004001, Z_Construct_UScriptStruct_FLinearColor());
				UProperty* NewProp_GridTextColor = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("GridTextColor"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(GridTextColor, UCurveEdOptions), 0x0000000000004001, Z_Construct_UScriptStruct_FLinearColor());
				UProperty* NewProp_GridColor = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("GridColor"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(GridColor, UCurveEdOptions), 0x0000000000004001, Z_Construct_UScriptStruct_FLinearColor());
				UProperty* NewProp_SelectedLabelColor = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SelectedLabelColor"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(SelectedLabelColor, UCurveEdOptions), 0x0000000000004001, Z_Construct_UScriptStruct_FLinearColor());
				UProperty* NewProp_LabelColor = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("LabelColor"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(LabelColor, UCurveEdOptions), 0x0000000000004001, Z_Construct_UScriptStruct_FLinearColor());
				UProperty* NewProp_BackgroundColor = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("BackgroundColor"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(BackgroundColor, UCurveEdOptions), 0x0000000000004001, Z_Construct_UScriptStruct_FLinearColor());
				UProperty* NewProp_MaxViewRange = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MaxViewRange"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(MaxViewRange, UCurveEdOptions), 0x0000000000004001);
				UProperty* NewProp_MinViewRange = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MinViewRange"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(MinViewRange, UCurveEdOptions), 0x0000000000004001);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->ClassConfigName = FName(TEXT("EditorPerProjectUserSettings"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Preferences/CurveEdOptions.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/CurveEdOptions.h"));
				MetaData->SetValue(NewProp_SelectedKeyColor, TEXT("Category"), TEXT("Options"));
				MetaData->SetValue(NewProp_SelectedKeyColor, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/CurveEdOptions.h"));
				MetaData->SetValue(NewProp_LabelBlockBkgColor, TEXT("Category"), TEXT("Options"));
				MetaData->SetValue(NewProp_LabelBlockBkgColor, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/CurveEdOptions.h"));
				MetaData->SetValue(NewProp_GridTextColor, TEXT("Category"), TEXT("Options"));
				MetaData->SetValue(NewProp_GridTextColor, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/CurveEdOptions.h"));
				MetaData->SetValue(NewProp_GridColor, TEXT("Category"), TEXT("Options"));
				MetaData->SetValue(NewProp_GridColor, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/CurveEdOptions.h"));
				MetaData->SetValue(NewProp_SelectedLabelColor, TEXT("Category"), TEXT("Options"));
				MetaData->SetValue(NewProp_SelectedLabelColor, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/CurveEdOptions.h"));
				MetaData->SetValue(NewProp_LabelColor, TEXT("Category"), TEXT("Options"));
				MetaData->SetValue(NewProp_LabelColor, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/CurveEdOptions.h"));
				MetaData->SetValue(NewProp_BackgroundColor, TEXT("Category"), TEXT("Options"));
				MetaData->SetValue(NewProp_BackgroundColor, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/CurveEdOptions.h"));
				MetaData->SetValue(NewProp_MaxViewRange, TEXT("Category"), TEXT("Options"));
				MetaData->SetValue(NewProp_MaxViewRange, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/CurveEdOptions.h"));
				MetaData->SetValue(NewProp_MinViewRange, TEXT("Category"), TEXT("Options"));
				MetaData->SetValue(NewProp_MinViewRange, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/CurveEdOptions.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UCurveEdOptions(Z_Construct_UClass_UCurveEdOptions, TEXT("UCurveEdOptions"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UCurveEdOptions);
	UScriptStruct* Z_Construct_UScriptStruct_FSelectedSocketInfo()
	{
		UPackage* Outer=Z_Construct_UPackage_UnrealEd();
		extern uint32 Get_Z_Construct_UScriptStruct_FSelectedSocketInfo_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("SelectedSocketInfo"), sizeof(FSelectedSocketInfo), Get_Z_Construct_UScriptStruct_FSelectedSocketInfo_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SelectedSocketInfo"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FSelectedSocketInfo>, EStructFlags(0x00000001));
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/Animation/DebugSkelMeshComponent.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FSelectedSocketInfo_CRC() { return 2466312189U; }
	UClass* Z_Construct_UClass_UDebugSkelMeshComponent_NoRegister()
	{
		return UDebugSkelMeshComponent::StaticClass();
	}
	UClass* Z_Construct_UClass_UDebugSkelMeshComponent()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_USkeletalMeshComponent();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UDebugSkelMeshComponent::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20A81088;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bIsUsingInGameBounds, UDebugSkelMeshComponent, bool);
				UProperty* NewProp_bIsUsingInGameBounds = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bIsUsingInGameBounds"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bIsUsingInGameBounds, UDebugSkelMeshComponent), 0x0000000000002000, CPP_BOOL_PROPERTY_BITMASK(bIsUsingInGameBounds, UDebugSkelMeshComponent), sizeof(bool), true);
				UProperty* NewProp_SavedAnimScriptInstance = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SavedAnimScriptInstance"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(SavedAnimScriptInstance, UDebugSkelMeshComponent), 0x0000000000002000, Z_Construct_UClass_UAnimInstance_NoRegister());
				UProperty* NewProp_PreviewInstance = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("PreviewInstance"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(PreviewInstance, UDebugSkelMeshComponent), 0x0000000000002000, Z_Construct_UClass_UAnimPreviewInstance_NoRegister());
				UProperty* NewProp_SkelMaterials = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SkelMaterials"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(SkelMaterials, UDebugSkelMeshComponent), 0x0000000000002000);
				UProperty* NewProp_SkelMaterials_Inner = new(EC_InternalUseOnlyConstructor, NewProp_SkelMaterials, TEXT("SkelMaterials"), RF_Public|RF_Transient|RF_Native) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UClass_UMaterialInterface_NoRegister());
				UProperty* NewProp_SocketsOfInterest = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SocketsOfInterest"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(SocketsOfInterest, UDebugSkelMeshComponent), 0x0000000000002000);
				UProperty* NewProp_SocketsOfInterest_Inner = new(EC_InternalUseOnlyConstructor, NewProp_SocketsOfInterest, TEXT("SocketsOfInterest"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FSelectedSocketInfo());
				UProperty* NewProp_BonesOfInterest = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("BonesOfInterest"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(BonesOfInterest, UDebugSkelMeshComponent), 0x0000000000002000);
				UProperty* NewProp_BonesOfInterest_Inner = new(EC_InternalUseOnlyConstructor, NewProp_BonesOfInterest, TEXT("BonesOfInterest"), RF_Public|RF_Transient|RF_Native) UIntProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bPreviewRootMotion, UDebugSkelMeshComponent, uint8);
				UProperty* NewProp_bPreviewRootMotion = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bPreviewRootMotion"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bPreviewRootMotion, UDebugSkelMeshComponent), 0x0000000000002000, CPP_BOOL_PROPERTY_BITMASK(bPreviewRootMotion, UDebugSkelMeshComponent), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bDisplayBound, UDebugSkelMeshComponent, uint8);
				UProperty* NewProp_bDisplayBound = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bDisplayBound"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bDisplayBound, UDebugSkelMeshComponent), 0x0000000000002000, CPP_BOOL_PROPERTY_BITMASK(bDisplayBound, UDebugSkelMeshComponent), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bDisplaySourceAnimation, UDebugSkelMeshComponent, uint8);
				UProperty* NewProp_bDisplaySourceAnimation = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bDisplaySourceAnimation"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bDisplaySourceAnimation, UDebugSkelMeshComponent), 0x0000000000002000, CPP_BOOL_PROPERTY_BITMASK(bDisplaySourceAnimation, UDebugSkelMeshComponent), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bDisplayBakedAnimation, UDebugSkelMeshComponent, uint8);
				UProperty* NewProp_bDisplayBakedAnimation = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bDisplayBakedAnimation"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bDisplayBakedAnimation, UDebugSkelMeshComponent), 0x0000000000002000, CPP_BOOL_PROPERTY_BITMASK(bDisplayBakedAnimation, UDebugSkelMeshComponent), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bDisplayAdditiveBasePose, UDebugSkelMeshComponent, uint8);
				UProperty* NewProp_bDisplayAdditiveBasePose = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bDisplayAdditiveBasePose"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bDisplayAdditiveBasePose, UDebugSkelMeshComponent), 0x0000000000002000, CPP_BOOL_PROPERTY_BITMASK(bDisplayAdditiveBasePose, UDebugSkelMeshComponent), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bDisplayNonRetargetedPose, UDebugSkelMeshComponent, uint8);
				UProperty* NewProp_bDisplayNonRetargetedPose = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bDisplayNonRetargetedPose"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bDisplayNonRetargetedPose, UDebugSkelMeshComponent), 0x0000000000002000, CPP_BOOL_PROPERTY_BITMASK(bDisplayNonRetargetedPose, UDebugSkelMeshComponent), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bDisplayRawAnimation, UDebugSkelMeshComponent, uint8);
				UProperty* NewProp_bDisplayRawAnimation = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bDisplayRawAnimation"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bDisplayRawAnimation, UDebugSkelMeshComponent), 0x0000000000002000, CPP_BOOL_PROPERTY_BITMASK(bDisplayRawAnimation, UDebugSkelMeshComponent), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bMeshSocketsVisible, UDebugSkelMeshComponent, uint8);
				UProperty* NewProp_bMeshSocketsVisible = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bMeshSocketsVisible"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bMeshSocketsVisible, UDebugSkelMeshComponent), 0x0000000000002000, CPP_BOOL_PROPERTY_BITMASK(bMeshSocketsVisible, UDebugSkelMeshComponent), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bSkeletonSocketsVisible, UDebugSkelMeshComponent, uint8);
				UProperty* NewProp_bSkeletonSocketsVisible = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bSkeletonSocketsVisible"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bSkeletonSocketsVisible, UDebugSkelMeshComponent), 0x0000000000002000, CPP_BOOL_PROPERTY_BITMASK(bSkeletonSocketsVisible, UDebugSkelMeshComponent), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bDrawSockets, UDebugSkelMeshComponent, uint8);
				UProperty* NewProp_bDrawSockets = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bDrawSockets"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bDrawSockets, UDebugSkelMeshComponent), 0x0000000000002000, CPP_BOOL_PROPERTY_BITMASK(bDrawSockets, UDebugSkelMeshComponent), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bDrawBinormals, UDebugSkelMeshComponent, uint8);
				UProperty* NewProp_bDrawBinormals = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bDrawBinormals"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bDrawBinormals, UDebugSkelMeshComponent), 0x0000000000002000, CPP_BOOL_PROPERTY_BITMASK(bDrawBinormals, UDebugSkelMeshComponent), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bDrawTangents, UDebugSkelMeshComponent, uint8);
				UProperty* NewProp_bDrawTangents = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bDrawTangents"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bDrawTangents, UDebugSkelMeshComponent), 0x0000000000002000, CPP_BOOL_PROPERTY_BITMASK(bDrawTangents, UDebugSkelMeshComponent), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bDrawNormals, UDebugSkelMeshComponent, uint8);
				UProperty* NewProp_bDrawNormals = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bDrawNormals"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bDrawNormals, UDebugSkelMeshComponent), 0x0000000000002000, CPP_BOOL_PROPERTY_BITMASK(bDrawNormals, UDebugSkelMeshComponent), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bDrawBoneInfluences, UDebugSkelMeshComponent, uint8);
				UProperty* NewProp_bDrawBoneInfluences = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bDrawBoneInfluences"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bDrawBoneInfluences, UDebugSkelMeshComponent), 0x0000000000002000, CPP_BOOL_PROPERTY_BITMASK(bDrawBoneInfluences, UDebugSkelMeshComponent), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bShowBoneNames, UDebugSkelMeshComponent, uint8);
				UProperty* NewProp_bShowBoneNames = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bShowBoneNames"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bShowBoneNames, UDebugSkelMeshComponent), 0x0000000000000000, CPP_BOOL_PROPERTY_BITMASK(bShowBoneNames, UDebugSkelMeshComponent), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bDrawMesh, UDebugSkelMeshComponent, uint8);
				UProperty* NewProp_bDrawMesh = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bDrawMesh"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bDrawMesh, UDebugSkelMeshComponent), 0x0000000000000000, CPP_BOOL_PROPERTY_BITMASK(bDrawMesh, UDebugSkelMeshComponent), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bRenderRawSkeleton, UDebugSkelMeshComponent, uint8);
				UProperty* NewProp_bRenderRawSkeleton = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bRenderRawSkeleton"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bRenderRawSkeleton, UDebugSkelMeshComponent), 0x0000000000000000, CPP_BOOL_PROPERTY_BITMASK(bRenderRawSkeleton, UDebugSkelMeshComponent), sizeof(uint8), false);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object Object Mobility Trigger ComponentReplication"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Animation/DebugSkelMeshComponent.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Animation/DebugSkelMeshComponent.h"));
				MetaData->SetValue(NewProp_bIsUsingInGameBounds, TEXT("ModuleRelativePath"), TEXT("Classes/Animation/DebugSkelMeshComponent.h"));
				MetaData->SetValue(NewProp_bIsUsingInGameBounds, TEXT("ToolTip"), TEXT("Does this component use in game bounds or does it use bounds calculated from bones"));
				MetaData->SetValue(NewProp_SavedAnimScriptInstance, TEXT("ModuleRelativePath"), TEXT("Classes/Animation/DebugSkelMeshComponent.h"));
				MetaData->SetValue(NewProp_PreviewInstance, TEXT("ModuleRelativePath"), TEXT("Classes/Animation/DebugSkelMeshComponent.h"));
				MetaData->SetValue(NewProp_SkelMaterials, TEXT("ModuleRelativePath"), TEXT("Classes/Animation/DebugSkelMeshComponent.h"));
				MetaData->SetValue(NewProp_SkelMaterials, TEXT("ToolTip"), TEXT("Array of materials to restore when not rendering blend weights"));
				MetaData->SetValue(NewProp_SocketsOfInterest, TEXT("ModuleRelativePath"), TEXT("Classes/Animation/DebugSkelMeshComponent.h"));
				MetaData->SetValue(NewProp_SocketsOfInterest, TEXT("ToolTip"), TEXT("Array of sockets to render manipulation widgets for\n      /       Storing a pointer to the actual socket rather than a name, as we don't care here\n      /       whether the socket is on the skeleton or the mesh!"));
				MetaData->SetValue(NewProp_BonesOfInterest, TEXT("ModuleRelativePath"), TEXT("Classes/Animation/DebugSkelMeshComponent.h"));
				MetaData->SetValue(NewProp_BonesOfInterest, TEXT("ToolTip"), TEXT("Array of bones to render bone weights for"));
				MetaData->SetValue(NewProp_bPreviewRootMotion, TEXT("ModuleRelativePath"), TEXT("Classes/Animation/DebugSkelMeshComponent.h"));
				MetaData->SetValue(NewProp_bDisplayBound, TEXT("ModuleRelativePath"), TEXT("Classes/Animation/DebugSkelMeshComponent.h"));
				MetaData->SetValue(NewProp_bDisplayBound, TEXT("ToolTip"), TEXT("Display Bound *"));
				MetaData->SetValue(NewProp_bDisplaySourceAnimation, TEXT("ModuleRelativePath"), TEXT("Classes/Animation/DebugSkelMeshComponent.h"));
				MetaData->SetValue(NewProp_bDisplaySourceAnimation, TEXT("ToolTip"), TEXT("Display source animation pose"));
				MetaData->SetValue(NewProp_bDisplayBakedAnimation, TEXT("ModuleRelativePath"), TEXT("Classes/Animation/DebugSkelMeshComponent.h"));
				MetaData->SetValue(NewProp_bDisplayBakedAnimation, TEXT("ToolTip"), TEXT("Display baked animation pose"));
				MetaData->SetValue(NewProp_bDisplayAdditiveBasePose, TEXT("ModuleRelativePath"), TEXT("Classes/Animation/DebugSkelMeshComponent.h"));
				MetaData->SetValue(NewProp_bDisplayAdditiveBasePose, TEXT("ToolTip"), TEXT("Display additive base bone transform"));
				MetaData->SetValue(NewProp_bDisplayNonRetargetedPose, TEXT("ModuleRelativePath"), TEXT("Classes/Animation/DebugSkelMeshComponent.h"));
				MetaData->SetValue(NewProp_bDisplayNonRetargetedPose, TEXT("ToolTip"), TEXT("Display non retargeted animation pose"));
				MetaData->SetValue(NewProp_bDisplayRawAnimation, TEXT("ModuleRelativePath"), TEXT("Classes/Animation/DebugSkelMeshComponent.h"));
				MetaData->SetValue(NewProp_bDisplayRawAnimation, TEXT("ToolTip"), TEXT("Display raw animation bone transform"));
				MetaData->SetValue(NewProp_bMeshSocketsVisible, TEXT("ModuleRelativePath"), TEXT("Classes/Animation/DebugSkelMeshComponent.h"));
				MetaData->SetValue(NewProp_bMeshSocketsVisible, TEXT("ToolTip"), TEXT("Mesh sockets visible?"));
				MetaData->SetValue(NewProp_bSkeletonSocketsVisible, TEXT("ModuleRelativePath"), TEXT("Classes/Animation/DebugSkelMeshComponent.h"));
				MetaData->SetValue(NewProp_bSkeletonSocketsVisible, TEXT("ToolTip"), TEXT("Skeleton sockets visible?"));
				MetaData->SetValue(NewProp_bDrawSockets, TEXT("ModuleRelativePath"), TEXT("Classes/Animation/DebugSkelMeshComponent.h"));
				MetaData->SetValue(NewProp_bDrawSockets, TEXT("ToolTip"), TEXT("Socket hit points viewing"));
				MetaData->SetValue(NewProp_bDrawBinormals, TEXT("ModuleRelativePath"), TEXT("Classes/Animation/DebugSkelMeshComponent.h"));
				MetaData->SetValue(NewProp_bDrawBinormals, TEXT("ToolTip"), TEXT("Vertex binormal viewing"));
				MetaData->SetValue(NewProp_bDrawTangents, TEXT("ModuleRelativePath"), TEXT("Classes/Animation/DebugSkelMeshComponent.h"));
				MetaData->SetValue(NewProp_bDrawTangents, TEXT("ToolTip"), TEXT("Vertex tangent viewing"));
				MetaData->SetValue(NewProp_bDrawNormals, TEXT("ModuleRelativePath"), TEXT("Classes/Animation/DebugSkelMeshComponent.h"));
				MetaData->SetValue(NewProp_bDrawNormals, TEXT("ToolTip"), TEXT("Vertex normal viewing"));
				MetaData->SetValue(NewProp_bDrawBoneInfluences, TEXT("ModuleRelativePath"), TEXT("Classes/Animation/DebugSkelMeshComponent.h"));
				MetaData->SetValue(NewProp_bDrawBoneInfluences, TEXT("ToolTip"), TEXT("Bone influences viewing"));
				MetaData->SetValue(NewProp_bShowBoneNames, TEXT("ModuleRelativePath"), TEXT("Classes/Animation/DebugSkelMeshComponent.h"));
				MetaData->SetValue(NewProp_bShowBoneNames, TEXT("ToolTip"), TEXT("If true then the bone names associated with the skeletal mesh are displayed"));
				MetaData->SetValue(NewProp_bDrawMesh, TEXT("ModuleRelativePath"), TEXT("Classes/Animation/DebugSkelMeshComponent.h"));
				MetaData->SetValue(NewProp_bDrawMesh, TEXT("ToolTip"), TEXT("If true then the skeletal mesh associated with the component is drawn."));
				MetaData->SetValue(NewProp_bRenderRawSkeleton, TEXT("ModuleRelativePath"), TEXT("Classes/Animation/DebugSkelMeshComponent.h"));
				MetaData->SetValue(NewProp_bRenderRawSkeleton, TEXT("ToolTip"), TEXT("If true, render a wireframe skeleton of the mesh animated with the raw (uncompressed) animation data."));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UDebugSkelMeshComponent(Z_Construct_UClass_UDebugSkelMeshComponent, TEXT("UDebugSkelMeshComponent"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UDebugSkelMeshComponent);
	UEnum* Z_Construct_UEnum_UnrealEd_ELevelViewportType()
	{
		UPackage* Outer=Z_Construct_UPackage_UnrealEd();
		extern uint32 Get_Z_Construct_UEnum_UnrealEd_ELevelViewportType_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("ELevelViewportType"), 0, Get_Z_Construct_UEnum_UnrealEd_ELevelViewportType_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ELevelViewportType"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("LVT_OrthoXY")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("LVT_OrthoXZ")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("LVT_OrthoYZ")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("LVT_Perspective")), 3));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("LVT_OrthoFreelook")), 4));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("LVT_OrthoNegativeXY")), 5));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("LVT_OrthoNegativeXZ")), 6));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("LVT_OrthoNegativeYZ")), 7));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("LVT_MAX")), 8));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("LVT_None")), 255));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Regular);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("LVT_OrthoNegativeXY.ToolTip"), TEXT("Bottom"));
			MetaData->SetValue(ReturnEnum, TEXT("LVT_OrthoNegativeXZ.ToolTip"), TEXT("Back"));
			MetaData->SetValue(ReturnEnum, TEXT("LVT_OrthoNegativeYZ.ToolTip"), TEXT("Right"));
			MetaData->SetValue(ReturnEnum, TEXT("LVT_OrthoXY.ToolTip"), TEXT("Top"));
			MetaData->SetValue(ReturnEnum, TEXT("LVT_OrthoXZ.ToolTip"), TEXT("Front"));
			MetaData->SetValue(ReturnEnum, TEXT("LVT_OrthoYZ.ToolTip"), TEXT("Left"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/UnrealEdTypes.h"));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("ELevelViewportType"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_UnrealEd_ELevelViewportType_CRC() { return 1175474672U; }
	UScriptStruct* Z_Construct_UScriptStruct_FLightmassParameterizedMaterialSettings()
	{
		UPackage* Outer=Z_Construct_UPackage_UnrealEd();
		extern uint32 Get_Z_Construct_UScriptStruct_FLightmassParameterizedMaterialSettings_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("LightmassParameterizedMaterialSettings"), sizeof(FLightmassParameterizedMaterialSettings), Get_Z_Construct_UScriptStruct_FLightmassParameterizedMaterialSettings_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("LightmassParameterizedMaterialSettings"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FLightmassParameterizedMaterialSettings>, EStructFlags(0x00000001));
			UProperty* NewProp_ExportResolutionScale = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ExportResolutionScale"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(ExportResolutionScale, FLightmassParameterizedMaterialSettings), 0x0000000000000005, Z_Construct_UScriptStruct_FLightmassScalarParameterValue());
			UProperty* NewProp_DiffuseBoost = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("DiffuseBoost"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(DiffuseBoost, FLightmassParameterizedMaterialSettings), 0x0000000000000005, Z_Construct_UScriptStruct_FLightmassScalarParameterValue());
			UProperty* NewProp_EmissiveBoost = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("EmissiveBoost"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(EmissiveBoost, FLightmassParameterizedMaterialSettings), 0x0000000000000005, Z_Construct_UScriptStruct_FLightmassScalarParameterValue());
			UProperty* NewProp_CastShadowAsMasked = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("CastShadowAsMasked"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(CastShadowAsMasked, FLightmassParameterizedMaterialSettings), 0x0000000000000005, Z_Construct_UScriptStruct_FLightmassBooleanParameterValue());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/UnrealEdTypes.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Structure for 'parameterized' Lightmass settings"));
			MetaData->SetValue(NewProp_ExportResolutionScale, TEXT("Category"), TEXT("LightmassParameterizedMaterialSettings"));
			MetaData->SetValue(NewProp_ExportResolutionScale, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/UnrealEdTypes.h"));
			MetaData->SetValue(NewProp_ExportResolutionScale, TEXT("ToolTip"), TEXT("Scales the resolution that this material's attributes were exported at.\nThis is useful for increasing material resolution when details are needed."));
			MetaData->SetValue(NewProp_DiffuseBoost, TEXT("Category"), TEXT("LightmassParameterizedMaterialSettings"));
			MetaData->SetValue(NewProp_DiffuseBoost, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/UnrealEdTypes.h"));
			MetaData->SetValue(NewProp_DiffuseBoost, TEXT("ToolTip"), TEXT("Scales the diffuse contribution of this material to static lighting."));
			MetaData->SetValue(NewProp_EmissiveBoost, TEXT("Category"), TEXT("LightmassParameterizedMaterialSettings"));
			MetaData->SetValue(NewProp_EmissiveBoost, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/UnrealEdTypes.h"));
			MetaData->SetValue(NewProp_EmissiveBoost, TEXT("ToolTip"), TEXT("Scales the emissive contribution of this material to static lighting."));
			MetaData->SetValue(NewProp_CastShadowAsMasked, TEXT("Category"), TEXT("LightmassParameterizedMaterialSettings"));
			MetaData->SetValue(NewProp_CastShadowAsMasked, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/UnrealEdTypes.h"));
			MetaData->SetValue(NewProp_CastShadowAsMasked, TEXT("ToolTip"), TEXT("If true, forces translucency to cast static shadows as if the material were masked."));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FLightmassParameterizedMaterialSettings_CRC() { return 4163975426U; }
	UScriptStruct* Z_Construct_UScriptStruct_FLightmassScalarParameterValue()
	{
		UPackage* Outer=Z_Construct_UPackage_UnrealEd();
		extern uint32 Get_Z_Construct_UScriptStruct_FLightmassScalarParameterValue_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("LightmassScalarParameterValue"), sizeof(FLightmassScalarParameterValue), Get_Z_Construct_UScriptStruct_FLightmassScalarParameterValue_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("LightmassScalarParameterValue"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), Z_Construct_UScriptStruct_FLightmassParameterValue(), new UScriptStruct::TCppStructOps<FLightmassScalarParameterValue>, EStructFlags(0x00000001));
			UProperty* NewProp_ParameterValue = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ParameterValue"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(ParameterValue, FLightmassScalarParameterValue), 0x0000000000000005);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/UnrealEdTypes.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Scalar parameter value"));
			MetaData->SetValue(NewProp_ParameterValue, TEXT("Category"), TEXT("LightmassScalarParameterValue"));
			MetaData->SetValue(NewProp_ParameterValue, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/UnrealEdTypes.h"));
			MetaData->SetValue(NewProp_ParameterValue, TEXT("ToolTip"), TEXT("The scalar value to override the parent value with"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FLightmassScalarParameterValue_CRC() { return 1422156032U; }
	UScriptStruct* Z_Construct_UScriptStruct_FLightmassBooleanParameterValue()
	{
		UPackage* Outer=Z_Construct_UPackage_UnrealEd();
		extern uint32 Get_Z_Construct_UScriptStruct_FLightmassBooleanParameterValue_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("LightmassBooleanParameterValue"), sizeof(FLightmassBooleanParameterValue), Get_Z_Construct_UScriptStruct_FLightmassBooleanParameterValue_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("LightmassBooleanParameterValue"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), Z_Construct_UScriptStruct_FLightmassParameterValue(), new UScriptStruct::TCppStructOps<FLightmassBooleanParameterValue>, EStructFlags(0x00000001));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ParameterValue, FLightmassBooleanParameterValue, uint8);
			UProperty* NewProp_ParameterValue = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ParameterValue"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ParameterValue, FLightmassBooleanParameterValue), 0x0000000000000005, CPP_BOOL_PROPERTY_BITMASK(ParameterValue, FLightmassBooleanParameterValue), sizeof(uint8), false);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/UnrealEdTypes.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Boolean parameter value"));
			MetaData->SetValue(NewProp_ParameterValue, TEXT("Category"), TEXT("LightmassBooleanParameterValue"));
			MetaData->SetValue(NewProp_ParameterValue, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/UnrealEdTypes.h"));
			MetaData->SetValue(NewProp_ParameterValue, TEXT("ToolTip"), TEXT("The boolean value to override the parent value with"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FLightmassBooleanParameterValue_CRC() { return 3200507727U; }
	UScriptStruct* Z_Construct_UScriptStruct_FLightmassParameterValue()
	{
		UPackage* Outer=Z_Construct_UPackage_UnrealEd();
		extern uint32 Get_Z_Construct_UScriptStruct_FLightmassParameterValue_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("LightmassParameterValue"), sizeof(FLightmassParameterValue), Get_Z_Construct_UScriptStruct_FLightmassParameterValue_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("LightmassParameterValue"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FLightmassParameterValue>, EStructFlags(0x00000001));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bOverride, FLightmassParameterValue, uint8);
			UProperty* NewProp_bOverride = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bOverride"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bOverride, FLightmassParameterValue), 0x0000000000000005, CPP_BOOL_PROPERTY_BITMASK(bOverride, FLightmassParameterValue), sizeof(uint8), false);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/UnrealEdTypes.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Base LightmassParameterValue class"));
			MetaData->SetValue(NewProp_bOverride, TEXT("Category"), TEXT("LightmassParameterValue"));
			MetaData->SetValue(NewProp_bOverride, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/UnrealEdTypes.h"));
			MetaData->SetValue(NewProp_bOverride, TEXT("ToolTip"), TEXT("If true, override the given parameter with the given settings"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FLightmassParameterValue_CRC() { return 1373306243U; }
	UClass* Z_Construct_UClass_UUnrealEdTypes_NoRegister()
	{
		return UUnrealEdTypes::StaticClass();
	}
	UClass* Z_Construct_UClass_UUnrealEdTypes()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UUnrealEdTypes::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000081;


				OuterClass->ClassConfigName = FName(TEXT("UnrealEd"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Editor/UnrealEdTypes.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/UnrealEdTypes.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UUnrealEdTypes(Z_Construct_UClass_UUnrealEdTypes, TEXT("UUnrealEdTypes"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UUnrealEdTypes);
	UClass* Z_Construct_UClass_UDEditorParameterValue_NoRegister()
	{
		return UDEditorParameterValue::StaticClass();
	}
	UClass* Z_Construct_UClass_UDEditorParameterValue()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UDEditorParameterValue::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20103080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_ExpressionId = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ExpressionId"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(ExpressionId, UDEditorParameterValue), 0x0000000000000000, Z_Construct_UScriptStruct_FGuid());
				UProperty* NewProp_ParameterName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ParameterName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(ParameterName, UDEditorParameterValue), 0x0000000000000001);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bOverride, UDEditorParameterValue, uint8);
				UProperty* NewProp_bOverride = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bOverride"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bOverride, UDEditorParameterValue), 0x0000000000000001, CPP_BOOL_PROPERTY_BITMASK(bOverride, UDEditorParameterValue), sizeof(uint8), false);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("MaterialEditor/DEditorParameterValue.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/MaterialEditor/DEditorParameterValue.h"));
				MetaData->SetValue(NewProp_ExpressionId, TEXT("ModuleRelativePath"), TEXT("Classes/MaterialEditor/DEditorParameterValue.h"));
				MetaData->SetValue(NewProp_ParameterName, TEXT("Category"), TEXT("DEditorParameterValue"));
				MetaData->SetValue(NewProp_ParameterName, TEXT("ModuleRelativePath"), TEXT("Classes/MaterialEditor/DEditorParameterValue.h"));
				MetaData->SetValue(NewProp_bOverride, TEXT("Category"), TEXT("DEditorParameterValue"));
				MetaData->SetValue(NewProp_bOverride, TEXT("ModuleRelativePath"), TEXT("Classes/MaterialEditor/DEditorParameterValue.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UDEditorParameterValue(Z_Construct_UClass_UDEditorParameterValue, TEXT("UDEditorParameterValue"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UDEditorParameterValue);
	UScriptStruct* Z_Construct_UScriptStruct_FDFontParameters()
	{
		UPackage* Outer=Z_Construct_UPackage_UnrealEd();
		extern uint32 Get_Z_Construct_UScriptStruct_FDFontParameters_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("DFontParameters"), sizeof(FDFontParameters), Get_Z_Construct_UScriptStruct_FDFontParameters_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("DFontParameters"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FDFontParameters>, EStructFlags(0x00000201));
			UProperty* NewProp_FontPage = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("FontPage"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(FontPage, FDFontParameters), 0x0000000000000001);
			UProperty* NewProp_FontValue = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("FontValue"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(FontValue, FDFontParameters), 0x0000000000000001, Z_Construct_UClass_UFont_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/MaterialEditor/DEditorFontParameterValue.h"));
			MetaData->SetValue(NewProp_FontPage, TEXT("Category"), TEXT("DFontParameter"));
			MetaData->SetValue(NewProp_FontPage, TEXT("ModuleRelativePath"), TEXT("Classes/MaterialEditor/DEditorFontParameterValue.h"));
			MetaData->SetValue(NewProp_FontValue, TEXT("Category"), TEXT("DFontParameter"));
			MetaData->SetValue(NewProp_FontValue, TEXT("ModuleRelativePath"), TEXT("Classes/MaterialEditor/DEditorFontParameterValue.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FDFontParameters_CRC() { return 220177578U; }
	UClass* Z_Construct_UClass_UDEditorFontParameterValue_NoRegister()
	{
		return UDEditorFontParameterValue::StaticClass();
	}
	UClass* Z_Construct_UClass_UDEditorFontParameterValue()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UDEditorParameterValue();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UDEditorFontParameterValue::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20103080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_ParameterValue = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ParameterValue"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(ParameterValue, UDEditorFontParameterValue), 0x0000000000000001, Z_Construct_UScriptStruct_FDFontParameters());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("MaterialEditor/DEditorFontParameterValue.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/MaterialEditor/DEditorFontParameterValue.h"));
				MetaData->SetValue(NewProp_ParameterValue, TEXT("Category"), TEXT("DEditorFontParameterValue"));
				MetaData->SetValue(NewProp_ParameterValue, TEXT("ModuleRelativePath"), TEXT("Classes/MaterialEditor/DEditorFontParameterValue.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UDEditorFontParameterValue(Z_Construct_UClass_UDEditorFontParameterValue, TEXT("UDEditorFontParameterValue"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UDEditorFontParameterValue);
	UClass* Z_Construct_UClass_UDEditorScalarParameterValue_NoRegister()
	{
		return UDEditorScalarParameterValue::StaticClass();
	}
	UClass* Z_Construct_UClass_UDEditorScalarParameterValue()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UDEditorParameterValue();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UDEditorScalarParameterValue::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20103080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_ParameterValue = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ParameterValue"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(ParameterValue, UDEditorScalarParameterValue), 0x0000000000000001);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("MaterialEditor/DEditorScalarParameterValue.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/MaterialEditor/DEditorScalarParameterValue.h"));
				MetaData->SetValue(NewProp_ParameterValue, TEXT("Category"), TEXT("DEditorScalarParameterValue"));
				MetaData->SetValue(NewProp_ParameterValue, TEXT("ModuleRelativePath"), TEXT("Classes/MaterialEditor/DEditorScalarParameterValue.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UDEditorScalarParameterValue(Z_Construct_UClass_UDEditorScalarParameterValue, TEXT("UDEditorScalarParameterValue"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UDEditorScalarParameterValue);
	UScriptStruct* Z_Construct_UScriptStruct_FDComponentMaskParameter()
	{
		UPackage* Outer=Z_Construct_UPackage_UnrealEd();
		extern uint32 Get_Z_Construct_UScriptStruct_FDComponentMaskParameter_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("DComponentMaskParameter"), sizeof(FDComponentMaskParameter), Get_Z_Construct_UScriptStruct_FDComponentMaskParameter_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("DComponentMaskParameter"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FDComponentMaskParameter>, EStructFlags(0x00000201));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(A, FDComponentMaskParameter, uint8);
			UProperty* NewProp_A = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("A"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(A, FDComponentMaskParameter), 0x0000000000000001, CPP_BOOL_PROPERTY_BITMASK(A, FDComponentMaskParameter), sizeof(uint8), false);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(B, FDComponentMaskParameter, uint8);
			UProperty* NewProp_B = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("B"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(B, FDComponentMaskParameter), 0x0000000000000001, CPP_BOOL_PROPERTY_BITMASK(B, FDComponentMaskParameter), sizeof(uint8), false);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(G, FDComponentMaskParameter, uint8);
			UProperty* NewProp_G = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("G"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(G, FDComponentMaskParameter), 0x0000000000000001, CPP_BOOL_PROPERTY_BITMASK(G, FDComponentMaskParameter), sizeof(uint8), false);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(R, FDComponentMaskParameter, uint8);
			UProperty* NewProp_R = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("R"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(R, FDComponentMaskParameter), 0x0000000000000001, CPP_BOOL_PROPERTY_BITMASK(R, FDComponentMaskParameter), sizeof(uint8), false);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/MaterialEditor/DEditorStaticComponentMaskParameterValue.h"));
			MetaData->SetValue(NewProp_A, TEXT("Category"), TEXT("DComponentMaskParameter"));
			MetaData->SetValue(NewProp_A, TEXT("ModuleRelativePath"), TEXT("Classes/MaterialEditor/DEditorStaticComponentMaskParameterValue.h"));
			MetaData->SetValue(NewProp_B, TEXT("Category"), TEXT("DComponentMaskParameter"));
			MetaData->SetValue(NewProp_B, TEXT("ModuleRelativePath"), TEXT("Classes/MaterialEditor/DEditorStaticComponentMaskParameterValue.h"));
			MetaData->SetValue(NewProp_G, TEXT("Category"), TEXT("DComponentMaskParameter"));
			MetaData->SetValue(NewProp_G, TEXT("ModuleRelativePath"), TEXT("Classes/MaterialEditor/DEditorStaticComponentMaskParameterValue.h"));
			MetaData->SetValue(NewProp_R, TEXT("Category"), TEXT("DComponentMaskParameter"));
			MetaData->SetValue(NewProp_R, TEXT("ModuleRelativePath"), TEXT("Classes/MaterialEditor/DEditorStaticComponentMaskParameterValue.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FDComponentMaskParameter_CRC() { return 1975216582U; }
	UClass* Z_Construct_UClass_UDEditorStaticComponentMaskParameterValue_NoRegister()
	{
		return UDEditorStaticComponentMaskParameterValue::StaticClass();
	}
	UClass* Z_Construct_UClass_UDEditorStaticComponentMaskParameterValue()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UDEditorParameterValue();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UDEditorStaticComponentMaskParameterValue::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20103080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_ParameterValue = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ParameterValue"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(ParameterValue, UDEditorStaticComponentMaskParameterValue), 0x0000000000000001, Z_Construct_UScriptStruct_FDComponentMaskParameter());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("MaterialEditor/DEditorStaticComponentMaskParameterValue.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/MaterialEditor/DEditorStaticComponentMaskParameterValue.h"));
				MetaData->SetValue(NewProp_ParameterValue, TEXT("Category"), TEXT("DEditorStaticComponentMaskParameterValue"));
				MetaData->SetValue(NewProp_ParameterValue, TEXT("ModuleRelativePath"), TEXT("Classes/MaterialEditor/DEditorStaticComponentMaskParameterValue.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UDEditorStaticComponentMaskParameterValue(Z_Construct_UClass_UDEditorStaticComponentMaskParameterValue, TEXT("UDEditorStaticComponentMaskParameterValue"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UDEditorStaticComponentMaskParameterValue);
	UClass* Z_Construct_UClass_UDEditorStaticSwitchParameterValue_NoRegister()
	{
		return UDEditorStaticSwitchParameterValue::StaticClass();
	}
	UClass* Z_Construct_UClass_UDEditorStaticSwitchParameterValue()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UDEditorParameterValue();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UDEditorStaticSwitchParameterValue::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20103080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(ParameterValue, UDEditorStaticSwitchParameterValue, uint8);
				UProperty* NewProp_ParameterValue = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ParameterValue"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ParameterValue, UDEditorStaticSwitchParameterValue), 0x0000000000000001, CPP_BOOL_PROPERTY_BITMASK(ParameterValue, UDEditorStaticSwitchParameterValue), sizeof(uint8), false);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("MaterialEditor/DEditorStaticSwitchParameterValue.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/MaterialEditor/DEditorStaticSwitchParameterValue.h"));
				MetaData->SetValue(NewProp_ParameterValue, TEXT("Category"), TEXT("DEditorStaticSwitchParameterValue"));
				MetaData->SetValue(NewProp_ParameterValue, TEXT("ModuleRelativePath"), TEXT("Classes/MaterialEditor/DEditorStaticSwitchParameterValue.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UDEditorStaticSwitchParameterValue(Z_Construct_UClass_UDEditorStaticSwitchParameterValue, TEXT("UDEditorStaticSwitchParameterValue"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UDEditorStaticSwitchParameterValue);
	UClass* Z_Construct_UClass_UDEditorTextureParameterValue_NoRegister()
	{
		return UDEditorTextureParameterValue::StaticClass();
	}
	UClass* Z_Construct_UClass_UDEditorTextureParameterValue()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UDEditorParameterValue();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UDEditorTextureParameterValue::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20103080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_ParameterValue = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ParameterValue"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(ParameterValue, UDEditorTextureParameterValue), 0x0000000000000001, Z_Construct_UClass_UTexture_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("MaterialEditor/DEditorTextureParameterValue.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/MaterialEditor/DEditorTextureParameterValue.h"));
				MetaData->SetValue(NewProp_ParameterValue, TEXT("Category"), TEXT("DEditorTextureParameterValue"));
				MetaData->SetValue(NewProp_ParameterValue, TEXT("ModuleRelativePath"), TEXT("Classes/MaterialEditor/DEditorTextureParameterValue.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UDEditorTextureParameterValue(Z_Construct_UClass_UDEditorTextureParameterValue, TEXT("UDEditorTextureParameterValue"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UDEditorTextureParameterValue);
	UClass* Z_Construct_UClass_UDEditorVectorParameterValue_NoRegister()
	{
		return UDEditorVectorParameterValue::StaticClass();
	}
	UClass* Z_Construct_UClass_UDEditorVectorParameterValue()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UDEditorParameterValue();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UDEditorVectorParameterValue::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20103080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_ParameterValue = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ParameterValue"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(ParameterValue, UDEditorVectorParameterValue), 0x0000000000000001, Z_Construct_UScriptStruct_FLinearColor());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("MaterialEditor/DEditorVectorParameterValue.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/MaterialEditor/DEditorVectorParameterValue.h"));
				MetaData->SetValue(NewProp_ParameterValue, TEXT("Category"), TEXT("DEditorVectorParameterValue"));
				MetaData->SetValue(NewProp_ParameterValue, TEXT("ModuleRelativePath"), TEXT("Classes/MaterialEditor/DEditorVectorParameterValue.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UDEditorVectorParameterValue(Z_Construct_UClass_UDEditorVectorParameterValue, TEXT("UDEditorVectorParameterValue"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UDEditorVectorParameterValue);
	UClass* Z_Construct_UClass_UDerivedDataCacheCommandlet_NoRegister()
	{
		return UDerivedDataCacheCommandlet::StaticClass();
	}
	UClass* Z_Construct_UClass_UDerivedDataCacheCommandlet()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UCommandlet();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UDerivedDataCacheCommandlet::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000088;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Commandlets/DerivedDataCacheCommandlet.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Commandlets/DerivedDataCacheCommandlet.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UDerivedDataCacheCommandlet(Z_Construct_UClass_UDerivedDataCacheCommandlet, TEXT("UDerivedDataCacheCommandlet"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UDerivedDataCacheCommandlet);
	UClass* Z_Construct_UClass_UDestructableMeshEditorSettings_NoRegister()
	{
		return UDestructableMeshEditorSettings::StaticClass();
	}
	UClass* Z_Construct_UClass_UDestructableMeshEditorSettings()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UDestructableMeshEditorSettings::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100084;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_AnimPreviewDirectionalColor = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AnimPreviewDirectionalColor"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(AnimPreviewDirectionalColor, UDestructableMeshEditorSettings), 0x0000000000004001, Z_Construct_UScriptStruct_FColor());
				UProperty* NewProp_AnimPreviewLightingDirection = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AnimPreviewLightingDirection"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(AnimPreviewLightingDirection, UDestructableMeshEditorSettings), 0x0000000000004001, Z_Construct_UScriptStruct_FRotator());
				UProperty* NewProp_AnimPreviewLightBrightness = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AnimPreviewLightBrightness"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(AnimPreviewLightBrightness, UDestructableMeshEditorSettings), 0x0000000000004001);
				UProperty* NewProp_AnimPreviewSkyBrightness = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AnimPreviewSkyBrightness"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(AnimPreviewSkyBrightness, UDestructableMeshEditorSettings), 0x0000000000004001);
				UProperty* NewProp_AnimPreviewSkyColor = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AnimPreviewSkyColor"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(AnimPreviewSkyColor, UDestructableMeshEditorSettings), 0x0000000000004001, Z_Construct_UScriptStruct_FColor());
				UProperty* NewProp_AnimPreviewFloorColor = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AnimPreviewFloorColor"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(AnimPreviewFloorColor, UDestructableMeshEditorSettings), 0x0000000000004001, Z_Construct_UScriptStruct_FColor());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->ClassConfigName = FName(TEXT("EditorPerProjectUserSettings"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Settings/DestructableMeshEditorSettings.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/DestructableMeshEditorSettings.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Implements the settings for the destructable mesh editor."));
				MetaData->SetValue(NewProp_AnimPreviewDirectionalColor, TEXT("Category"), TEXT("AnimationPreview"));
				MetaData->SetValue(NewProp_AnimPreviewDirectionalColor, TEXT("DisplayName"), TEXT("Viewport Directional Color"));
				MetaData->SetValue(NewProp_AnimPreviewDirectionalColor, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/DestructableMeshEditorSettings.h"));
				MetaData->SetValue(NewProp_AnimPreviewLightingDirection, TEXT("Category"), TEXT("AnimationPreview"));
				MetaData->SetValue(NewProp_AnimPreviewLightingDirection, TEXT("DisplayName"), TEXT("Viewport Lighting Direction"));
				MetaData->SetValue(NewProp_AnimPreviewLightingDirection, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/DestructableMeshEditorSettings.h"));
				MetaData->SetValue(NewProp_AnimPreviewLightBrightness, TEXT("Category"), TEXT("AnimationPreview"));
				MetaData->SetValue(NewProp_AnimPreviewLightBrightness, TEXT("DisplayName"), TEXT("Viewport Light Brightness"));
				MetaData->SetValue(NewProp_AnimPreviewLightBrightness, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/DestructableMeshEditorSettings.h"));
				MetaData->SetValue(NewProp_AnimPreviewSkyBrightness, TEXT("Category"), TEXT("AnimationPreview"));
				MetaData->SetValue(NewProp_AnimPreviewSkyBrightness, TEXT("DisplayName"), TEXT("Viewport Sky Brightness"));
				MetaData->SetValue(NewProp_AnimPreviewSkyBrightness, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/DestructableMeshEditorSettings.h"));
				MetaData->SetValue(NewProp_AnimPreviewSkyColor, TEXT("Category"), TEXT("AnimationPreview"));
				MetaData->SetValue(NewProp_AnimPreviewSkyColor, TEXT("DisplayName"), TEXT("Viewport Sky Color"));
				MetaData->SetValue(NewProp_AnimPreviewSkyColor, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/DestructableMeshEditorSettings.h"));
				MetaData->SetValue(NewProp_AnimPreviewFloorColor, TEXT("Category"), TEXT("AnimationPreview"));
				MetaData->SetValue(NewProp_AnimPreviewFloorColor, TEXT("DisplayName"), TEXT("Viewport Floor Color"));
				MetaData->SetValue(NewProp_AnimPreviewFloorColor, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/DestructableMeshEditorSettings.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UDestructableMeshEditorSettings(Z_Construct_UClass_UDestructableMeshEditorSettings, TEXT("UDestructableMeshEditorSettings"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UDestructableMeshEditorSettings);
	UClass* Z_Construct_UClass_UDiffAssetsCommandlet_NoRegister()
	{
		return UDiffAssetsCommandlet::StaticClass();
	}
	UClass* Z_Construct_UClass_UDiffAssetsCommandlet()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UCommandlet();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UDiffAssetsCommandlet::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000088;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Commandlets/DiffAssetsCommandlet.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Commandlets/DiffAssetsCommandlet.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UDiffAssetsCommandlet(Z_Construct_UClass_UDiffAssetsCommandlet, TEXT("UDiffAssetsCommandlet"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UDiffAssetsCommandlet);
	UClass* Z_Construct_UClass_UDiffPackagesCommandlet_NoRegister()
	{
		return UDiffPackagesCommandlet::StaticClass();
	}
	UClass* Z_Construct_UClass_UDiffPackagesCommandlet()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UCommandlet();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UDiffPackagesCommandlet::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000088;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_Packages = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Packages"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(Packages, UDiffPackagesCommandlet), 0x0000000000000000, UPackage::StaticClass());
				NewProp_Packages->ArrayDim = CPP_ARRAY_DIM(Packages, UDiffPackagesCommandlet);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Commandlets/DiffPackagesCommandlet.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Commandlets/DiffPackagesCommandlet.h"));
				MetaData->SetValue(NewProp_Packages, TEXT("ModuleRelativePath"), TEXT("Classes/Commandlets/DiffPackagesCommandlet.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UDiffPackagesCommandlet(Z_Construct_UClass_UDiffPackagesCommandlet, TEXT("UDiffPackagesCommandlet"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UDiffPackagesCommandlet);
	UClass* Z_Construct_UClass_UDumpBlueprintsInfoCommandlet_NoRegister()
	{
		return UDumpBlueprintsInfoCommandlet::StaticClass();
	}
	UClass* Z_Construct_UClass_UDumpBlueprintsInfoCommandlet()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UCommandlet();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UDumpBlueprintsInfoCommandlet::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000088;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Commandlets/DumpBlueprintsInfoCommandlet.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Commandlets/DumpBlueprintsInfoCommandlet.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UDumpBlueprintsInfoCommandlet(Z_Construct_UClass_UDumpBlueprintsInfoCommandlet, TEXT("UDumpBlueprintsInfoCommandlet"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UDumpBlueprintsInfoCommandlet);
	UClass* Z_Construct_UClass_UDumpHiddenCategoriesCommandlet_NoRegister()
	{
		return UDumpHiddenCategoriesCommandlet::StaticClass();
	}
	UClass* Z_Construct_UClass_UDumpHiddenCategoriesCommandlet()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UCommandlet();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UDumpHiddenCategoriesCommandlet::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000088;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Commandlets/DumpHiddenCategoriesCommandlet.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Commandlets/DumpHiddenCategoriesCommandlet.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UDumpHiddenCategoriesCommandlet(Z_Construct_UClass_UDumpHiddenCategoriesCommandlet, TEXT("UDumpHiddenCategoriesCommandlet"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UDumpHiddenCategoriesCommandlet);
	UEnum* Z_Construct_UEnum_UnrealEd_ECommentBoxMode()
	{
		UPackage* Outer=Z_Construct_UPackage_UnrealEd();
		extern uint32 Get_Z_Construct_UEnum_UnrealEd_ECommentBoxMode_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("ECommentBoxMode"), 0, Get_Z_Construct_UEnum_UnrealEd_ECommentBoxMode_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ECommentBoxMode"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ECommentBoxMode::GroupMovement")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ECommentBoxMode::NoGroupMovement")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ECommentBoxMode::ECommentBoxMode_MAX")), 2));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("GroupMovement.DisplayName"), TEXT("Group Movement"));
			MetaData->SetValue(ReturnEnum, TEXT("GroupMovement.ToolTip"), TEXT("This comment box will move any fully contained nodes when it moves."));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Public/EdGraphNode_Comment.h"));
			MetaData->SetValue(ReturnEnum, TEXT("NoGroupMovement.DisplayName"), TEXT("Comment"));
			MetaData->SetValue(ReturnEnum, TEXT("NoGroupMovement.ToolTip"), TEXT("This comment box has no effect on nodes contained inside it."));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_UnrealEd_ECommentBoxMode_CRC() { return 2774511226U; }
	UClass* Z_Construct_UClass_UEdGraphNode_Comment_NoRegister()
	{
		return UEdGraphNode_Comment::StaticClass();
	}
	UClass* Z_Construct_UClass_UEdGraphNode_Comment()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UEdGraphNode();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UEdGraphNode_Comment::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_CommentDepth = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CommentDepth"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(CommentDepth, UEdGraphNode_Comment), 0x0000000000000000);
				UProperty* NewProp_MoveMode = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MoveMode"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(MoveMode, UEdGraphNode_Comment), 0x0000000000000001, Z_Construct_UEnum_UnrealEd_ECommentBoxMode());
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bColorCommentBubble, UEdGraphNode_Comment, uint8);
				UProperty* NewProp_bColorCommentBubble = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bColorCommentBubble"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bColorCommentBubble, UEdGraphNode_Comment), 0x0000000000000001, CPP_BOOL_PROPERTY_BITMASK(bColorCommentBubble, UEdGraphNode_Comment), sizeof(uint8), false);
				UProperty* NewProp_CommentColor = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CommentColor"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(CommentColor, UEdGraphNode_Comment), 0x0000000000000001, Z_Construct_UScriptStruct_FLinearColor());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("EdGraphNode_Comment.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/EdGraphNode_Comment.h"));
				MetaData->SetValue(NewProp_CommentDepth, TEXT("ModuleRelativePath"), TEXT("Public/EdGraphNode_Comment.h"));
				MetaData->SetValue(NewProp_CommentDepth, TEXT("ToolTip"), TEXT("comment Depth"));
				MetaData->SetValue(NewProp_MoveMode, TEXT("Category"), TEXT("Comment"));
				MetaData->SetValue(NewProp_MoveMode, TEXT("ModuleRelativePath"), TEXT("Public/EdGraphNode_Comment.h"));
				MetaData->SetValue(NewProp_MoveMode, TEXT("ToolTip"), TEXT("Whether the comment should move any fully enclosed nodes around when it is moved"));
				MetaData->SetValue(NewProp_bColorCommentBubble, TEXT("Category"), TEXT("Comment"));
				MetaData->SetValue(NewProp_bColorCommentBubble, TEXT("DisplayName"), TEXT("Color Bubble"));
				MetaData->SetValue(NewProp_bColorCommentBubble, TEXT("ModuleRelativePath"), TEXT("Public/EdGraphNode_Comment.h"));
				MetaData->SetValue(NewProp_bColorCommentBubble, TEXT("ToolTip"), TEXT("Whether to use Comment Color to color the background of the comment bubble shown when zoomed out."));
				MetaData->SetValue(NewProp_CommentColor, TEXT("Category"), TEXT("Comment"));
				MetaData->SetValue(NewProp_CommentColor, TEXT("ModuleRelativePath"), TEXT("Public/EdGraphNode_Comment.h"));
				MetaData->SetValue(NewProp_CommentColor, TEXT("ToolTip"), TEXT("Color to style comment with"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UEdGraphNode_Comment(Z_Construct_UClass_UEdGraphNode_Comment, TEXT("UEdGraphNode_Comment"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UEdGraphNode_Comment);
	UClass* Z_Construct_UClass_UMaterialGraph_NoRegister()
	{
		return UMaterialGraph::StaticClass();
	}
	UClass* Z_Construct_UClass_UMaterialGraph()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UEdGraph();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UMaterialGraph::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_OriginalMaterialFullName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OriginalMaterialFullName"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(OriginalMaterialFullName, UMaterialGraph), 0x0000000000000000);
				UProperty* NewProp_RootNode = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("RootNode"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(RootNode, UMaterialGraph), 0x0000000000000000, Z_Construct_UClass_UMaterialGraphNode_Root_NoRegister());
				UProperty* NewProp_MaterialFunction = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MaterialFunction"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(MaterialFunction, UMaterialGraph), 0x0000000000000000, Z_Construct_UClass_UMaterialFunction_NoRegister());
				UProperty* NewProp_Material = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Material"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(Material, UMaterialGraph), 0x0000000000000000, Z_Construct_UClass_UMaterial_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("MaterialGraph/MaterialGraph.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/MaterialGraph/MaterialGraph.h"));
				MetaData->SetValue(NewProp_OriginalMaterialFullName, TEXT("ModuleRelativePath"), TEXT("Classes/MaterialGraph/MaterialGraph.h"));
				MetaData->SetValue(NewProp_OriginalMaterialFullName, TEXT("ToolTip"), TEXT("The name of the material that we are editing"));
				MetaData->SetValue(NewProp_RootNode, TEXT("ModuleRelativePath"), TEXT("Classes/MaterialGraph/MaterialGraph.h"));
				MetaData->SetValue(NewProp_RootNode, TEXT("ToolTip"), TEXT("Root node representing Material inputs (NULL for Material Functions)"));
				MetaData->SetValue(NewProp_MaterialFunction, TEXT("ModuleRelativePath"), TEXT("Classes/MaterialGraph/MaterialGraph.h"));
				MetaData->SetValue(NewProp_MaterialFunction, TEXT("ToolTip"), TEXT("Material Function this Graph represents (NULL for Materials)"));
				MetaData->SetValue(NewProp_Material, TEXT("ModuleRelativePath"), TEXT("Classes/MaterialGraph/MaterialGraph.h"));
				MetaData->SetValue(NewProp_Material, TEXT("ToolTip"), TEXT("Material this Graph represents"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UMaterialGraph(Z_Construct_UClass_UMaterialGraph, TEXT("UMaterialGraph"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UMaterialGraph);
	UClass* Z_Construct_UClass_UMaterialGraphNode_Comment_NoRegister()
	{
		return UMaterialGraphNode_Comment::StaticClass();
	}
	UClass* Z_Construct_UClass_UMaterialGraphNode_Comment()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UEdGraphNode_Comment();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UMaterialGraphNode_Comment::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_MaterialExpressionComment = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MaterialExpressionComment"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(MaterialExpressionComment, UMaterialGraphNode_Comment), 0x0000000000000000, Z_Construct_UClass_UMaterialExpressionComment_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("MaterialGraph/MaterialGraphNode_Comment.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/MaterialGraph/MaterialGraphNode_Comment.h"));
				MetaData->SetValue(NewProp_MaterialExpressionComment, TEXT("ModuleRelativePath"), TEXT("Classes/MaterialGraph/MaterialGraphNode_Comment.h"));
				MetaData->SetValue(NewProp_MaterialExpressionComment, TEXT("ToolTip"), TEXT("Material Comment that this node represents"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UMaterialGraphNode_Comment(Z_Construct_UClass_UMaterialGraphNode_Comment, TEXT("UMaterialGraphNode_Comment"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UMaterialGraphNode_Comment);
	UScriptStruct* Z_Construct_UScriptStruct_FNiagaraSchemaAction_NewNode()
	{
		UPackage* Outer=Z_Construct_UPackage_UnrealEd();
		extern uint32 Get_Z_Construct_UScriptStruct_FNiagaraSchemaAction_NewNode_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("NiagaraSchemaAction_NewNode"), sizeof(FNiagaraSchemaAction_NewNode), Get_Z_Construct_UScriptStruct_FNiagaraSchemaAction_NewNode_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("NiagaraSchemaAction_NewNode"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), Z_Construct_UScriptStruct_FEdGraphSchemaAction(), new UScriptStruct::TCppStructOps<FNiagaraSchemaAction_NewNode>, EStructFlags(0x00000201));
			UProperty* NewProp_NodeTemplate = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("NodeTemplate"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(NodeTemplate, FNiagaraSchemaAction_NewNode), 0x0000000000000000, Z_Construct_UClass_UNiagaraNode_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/Niagara/EdGraphSchema_Niagara.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Action to add a node to the graph"));
			MetaData->SetValue(NewProp_NodeTemplate, TEXT("ModuleRelativePath"), TEXT("Classes/Niagara/EdGraphSchema_Niagara.h"));
			MetaData->SetValue(NewProp_NodeTemplate, TEXT("ToolTip"), TEXT("Template of node we want to create"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FNiagaraSchemaAction_NewNode_CRC() { return 2063440145U; }
	UClass* Z_Construct_UClass_UEdGraphSchema_Niagara_NoRegister()
	{
		return UEdGraphSchema_Niagara::StaticClass();
	}
	UClass* Z_Construct_UClass_UEdGraphSchema_Niagara()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UEdGraphSchema();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UEdGraphSchema_Niagara::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_PC_Curve = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("PC_Curve"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(PC_Curve, UEdGraphSchema_Niagara), 0x0000000000000000);
				UProperty* NewProp_PC_Matrix = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("PC_Matrix"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(PC_Matrix, UEdGraphSchema_Niagara), 0x0000000000000000);
				UProperty* NewProp_PC_Vector = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("PC_Vector"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(PC_Vector, UEdGraphSchema_Niagara), 0x0000000000000000);
				UProperty* NewProp_PC_Float = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("PC_Float"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(PC_Float, UEdGraphSchema_Niagara), 0x0000000000000000);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Niagara/EdGraphSchema_Niagara.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Niagara/EdGraphSchema_Niagara.h"));
				MetaData->SetValue(NewProp_PC_Curve, TEXT("ModuleRelativePath"), TEXT("Classes/Niagara/EdGraphSchema_Niagara.h"));
				MetaData->SetValue(NewProp_PC_Matrix, TEXT("ModuleRelativePath"), TEXT("Classes/Niagara/EdGraphSchema_Niagara.h"));
				MetaData->SetValue(NewProp_PC_Vector, TEXT("ModuleRelativePath"), TEXT("Classes/Niagara/EdGraphSchema_Niagara.h"));
				MetaData->SetValue(NewProp_PC_Float, TEXT("ModuleRelativePath"), TEXT("Classes/Niagara/EdGraphSchema_Niagara.h"));
				MetaData->SetValue(NewProp_PC_Float, TEXT("ToolTip"), TEXT("Allowable PinType.PinCategory values"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UEdGraphSchema_Niagara(Z_Construct_UClass_UEdGraphSchema_Niagara, TEXT("UEdGraphSchema_Niagara"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UEdGraphSchema_Niagara);
	UScriptStruct* Z_Construct_UScriptStruct_FActorFolderProps()
	{
		UPackage* Outer=Z_Construct_UPackage_UnrealEd();
		extern uint32 Get_Z_Construct_UScriptStruct_FActorFolderProps_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("ActorFolderProps"), sizeof(FActorFolderProps), Get_Z_Construct_UScriptStruct_FActorFolderProps_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ActorFolderProps"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FActorFolderProps>, EStructFlags(0x00000001));
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/EditorActorFolders.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FActorFolderProps_CRC() { return 997486116U; }
	UClass* Z_Construct_UClass_UEditorActorFolders_NoRegister()
	{
		return UEditorActorFolders::StaticClass();
	}
	UClass* Z_Construct_UClass_UEditorActorFolders()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UEditorActorFolders::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("EditorActorFolders.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/EditorActorFolders.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Actor Folder UObject. This is used to support undo/redo reliably"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UEditorActorFolders(Z_Construct_UClass_UEditorActorFolders, TEXT("UEditorActorFolders"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UEditorActorFolders);
	UClass* Z_Construct_UClass_UEditorAnimBaseObj_NoRegister()
	{
		return UEditorAnimBaseObj::StaticClass();
	}
	UClass* Z_Construct_UClass_UEditorAnimBaseObj()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UEditorAnimBaseObj::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080081;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Animation/EditorAnimBaseObj.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Animation/EditorAnimBaseObj.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UEditorAnimBaseObj(Z_Construct_UClass_UEditorAnimBaseObj, TEXT("UEditorAnimBaseObj"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UEditorAnimBaseObj);
	UClass* Z_Construct_UClass_UEditorAnimCompositeSegment_NoRegister()
	{
		return UEditorAnimCompositeSegment::StaticClass();
	}
	UClass* Z_Construct_UClass_UEditorAnimCompositeSegment()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UEditorAnimBaseObj();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UEditorAnimCompositeSegment::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_AnimSegment = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AnimSegment"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(AnimSegment, UEditorAnimCompositeSegment), 0x0000000000000001, Z_Construct_UScriptStruct_FAnimSegment());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("UObject"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Animation/EditorAnimCompositeSegment.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Animation/EditorAnimCompositeSegment.h"));
				MetaData->SetValue(NewProp_AnimSegment, TEXT("Category"), TEXT("Montage"));
				MetaData->SetValue(NewProp_AnimSegment, TEXT("ModuleRelativePath"), TEXT("Classes/Animation/EditorAnimCompositeSegment.h"));
				MetaData->SetValue(NewProp_AnimSegment, TEXT("ToolTip"), TEXT("Default blend in time."));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UEditorAnimCompositeSegment(Z_Construct_UClass_UEditorAnimCompositeSegment, TEXT("UEditorAnimCompositeSegment"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UEditorAnimCompositeSegment);
	UClass* Z_Construct_UClass_UEditorAnimSegment_NoRegister()
	{
		return UEditorAnimSegment::StaticClass();
	}
	UClass* Z_Construct_UClass_UEditorAnimSegment()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UEditorAnimBaseObj();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UEditorAnimSegment::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_AnimSegment = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AnimSegment"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(AnimSegment, UEditorAnimSegment), 0x0000000000000001, Z_Construct_UScriptStruct_FAnimSegment());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("UObject"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Animation/EditorAnimSegment.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Animation/EditorAnimSegment.h"));
				MetaData->SetValue(NewProp_AnimSegment, TEXT("Category"), TEXT("Montage"));
				MetaData->SetValue(NewProp_AnimSegment, TEXT("ModuleRelativePath"), TEXT("Classes/Animation/EditorAnimSegment.h"));
				MetaData->SetValue(NewProp_AnimSegment, TEXT("ToolTip"), TEXT("Default blend in time."));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UEditorAnimSegment(Z_Construct_UClass_UEditorAnimSegment, TEXT("UEditorAnimSegment"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UEditorAnimSegment);
	UClass* Z_Construct_UClass_UEditorCompositeSection_NoRegister()
	{
		return UEditorCompositeSection::StaticClass();
	}
	UClass* Z_Construct_UClass_UEditorCompositeSection()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UEditorAnimBaseObj();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UEditorCompositeSection::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20880080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_CompositeSection = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CompositeSection"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(CompositeSection, UEditorCompositeSection), 0x0000008000000001, Z_Construct_UScriptStruct_FCompositeSection());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("UObject"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Animation/EditorCompositeSection.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Animation/EditorCompositeSection.h"));
				MetaData->SetValue(NewProp_CompositeSection, TEXT("Category"), TEXT("Montage"));
				MetaData->SetValue(NewProp_CompositeSection, TEXT("ModuleRelativePath"), TEXT("Classes/Animation/EditorCompositeSection.h"));
				MetaData->SetValue(NewProp_CompositeSection, TEXT("ToolTip"), TEXT("Default blend in time."));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UEditorCompositeSection(Z_Construct_UClass_UEditorCompositeSection, TEXT("UEditorCompositeSection"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UEditorCompositeSection);
	UClass* Z_Construct_UClass_UEditorNotifyObject_NoRegister()
	{
		return UEditorNotifyObject::StaticClass();
	}
	UClass* Z_Construct_UClass_UEditorNotifyObject()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UEditorAnimBaseObj();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UEditorNotifyObject::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20880080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_Event = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Event"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Event, UEditorNotifyObject), 0x0000008000000001, Z_Construct_UScriptStruct_FAnimNotifyEvent());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Animation/EditorNotifyObject.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Animation/EditorNotifyObject.h"));
				MetaData->SetValue(NewProp_Event, TEXT("Category"), TEXT("Event"));
				MetaData->SetValue(NewProp_Event, TEXT("ModuleRelativePath"), TEXT("Classes/Animation/EditorNotifyObject.h"));
				MetaData->SetValue(NewProp_Event, TEXT("ToolTip"), TEXT("The notify event to modify"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UEditorNotifyObject(Z_Construct_UClass_UEditorNotifyObject, TEXT("UEditorNotifyObject"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UEditorNotifyObject);
	UClass* Z_Construct_UClass_UEditorBrushBuilder_NoRegister()
	{
		return UEditorBrushBuilder::StaticClass();
	}
	UClass* Z_Construct_UClass_UEditorBrushBuilder()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UBrushBuilder();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UEditorBrushBuilder::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080081;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Builders/EditorBrushBuilder.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Builders/EditorBrushBuilder.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UEditorBrushBuilder(Z_Construct_UClass_UEditorBrushBuilder, TEXT("UEditorBrushBuilder"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UEditorBrushBuilder);
	UClass* Z_Construct_UClass_UConeBuilder_NoRegister()
	{
		return UConeBuilder::StaticClass();
	}
	UClass* Z_Construct_UClass_UConeBuilder()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UEditorBrushBuilder();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UConeBuilder::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20081080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(Hollow, UConeBuilder, uint8);
				UProperty* NewProp_Hollow = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Hollow"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Hollow, UConeBuilder), 0x0000000000000001, CPP_BOOL_PROPERTY_BITMASK(Hollow, UConeBuilder), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(AlignToSide, UConeBuilder, uint8);
				UProperty* NewProp_AlignToSide = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AlignToSide"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(AlignToSide, UConeBuilder), 0x0000000000000001, CPP_BOOL_PROPERTY_BITMASK(AlignToSide, UConeBuilder), sizeof(uint8), false);
				UProperty* NewProp_GroupName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("GroupName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(GroupName, UConeBuilder), 0x0000000000000000);
				UProperty* NewProp_Sides = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Sides"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(Sides, UConeBuilder), 0x0000000000000001);
				UProperty* NewProp_InnerRadius = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("InnerRadius"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(InnerRadius, UConeBuilder), 0x0000000000000001);
				UProperty* NewProp_OuterRadius = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OuterRadius"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(OuterRadius, UConeBuilder), 0x0000000000000001);
				UProperty* NewProp_CapZ = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CapZ"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(CapZ, UConeBuilder), 0x0000000000000001);
				UProperty* NewProp_Z = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Z"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(Z, UConeBuilder), 0x0000000000000001);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("AutoExpandCategories"), TEXT("BrushSettings"));
				MetaData->SetValue(OuterClass, TEXT("DisplayName"), TEXT("Cone"));
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Builders/ConeBuilder.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Builders/ConeBuilder.h"));
				MetaData->SetValue(NewProp_Hollow, TEXT("Category"), TEXT("BrushSettings"));
				MetaData->SetValue(NewProp_Hollow, TEXT("ModuleRelativePath"), TEXT("Classes/Builders/ConeBuilder.h"));
				MetaData->SetValue(NewProp_Hollow, TEXT("ToolTip"), TEXT("Whether this is a hollow or solid cone"));
				MetaData->SetValue(NewProp_AlignToSide, TEXT("Category"), TEXT("BrushSettings"));
				MetaData->SetValue(NewProp_AlignToSide, TEXT("ModuleRelativePath"), TEXT("Classes/Builders/ConeBuilder.h"));
				MetaData->SetValue(NewProp_AlignToSide, TEXT("ToolTip"), TEXT("Whether to align the brush to a face"));
				MetaData->SetValue(NewProp_GroupName, TEXT("ModuleRelativePath"), TEXT("Classes/Builders/ConeBuilder.h"));
				MetaData->SetValue(NewProp_Sides, TEXT("Category"), TEXT("BrushSettings"));
				MetaData->SetValue(NewProp_Sides, TEXT("ClampMax"), TEXT("500"));
				MetaData->SetValue(NewProp_Sides, TEXT("ClampMin"), TEXT("3"));
				MetaData->SetValue(NewProp_Sides, TEXT("ModuleRelativePath"), TEXT("Classes/Builders/ConeBuilder.h"));
				MetaData->SetValue(NewProp_Sides, TEXT("ToolTip"), TEXT("How many sides this cone should have"));
				MetaData->SetValue(NewProp_InnerRadius, TEXT("Category"), TEXT("BrushSettings"));
				MetaData->SetValue(NewProp_InnerRadius, TEXT("EditCondition"), TEXT("Hollow"));
				MetaData->SetValue(NewProp_InnerRadius, TEXT("ModuleRelativePath"), TEXT("Classes/Builders/ConeBuilder.h"));
				MetaData->SetValue(NewProp_InnerRadius, TEXT("ToolTip"), TEXT("Radius of inner cone (when hollow)"));
				MetaData->SetValue(NewProp_OuterRadius, TEXT("Category"), TEXT("BrushSettings"));
				MetaData->SetValue(NewProp_OuterRadius, TEXT("ClampMin"), TEXT("0.000001"));
				MetaData->SetValue(NewProp_OuterRadius, TEXT("ModuleRelativePath"), TEXT("Classes/Builders/ConeBuilder.h"));
				MetaData->SetValue(NewProp_OuterRadius, TEXT("ToolTip"), TEXT("Radius of cone"));
				MetaData->SetValue(NewProp_CapZ, TEXT("Category"), TEXT("BrushSettings"));
				MetaData->SetValue(NewProp_CapZ, TEXT("EditCondition"), TEXT("Hollow"));
				MetaData->SetValue(NewProp_CapZ, TEXT("ModuleRelativePath"), TEXT("Classes/Builders/ConeBuilder.h"));
				MetaData->SetValue(NewProp_CapZ, TEXT("ToolTip"), TEXT("Distance from base to the tip of inner cone (when hollow)"));
				MetaData->SetValue(NewProp_Z, TEXT("Category"), TEXT("BrushSettings"));
				MetaData->SetValue(NewProp_Z, TEXT("ClampMin"), TEXT("0.000001"));
				MetaData->SetValue(NewProp_Z, TEXT("ModuleRelativePath"), TEXT("Classes/Builders/ConeBuilder.h"));
				MetaData->SetValue(NewProp_Z, TEXT("ToolTip"), TEXT("Distance from base to tip of cone"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UConeBuilder(Z_Construct_UClass_UConeBuilder, TEXT("UConeBuilder"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UConeBuilder);
	UClass* Z_Construct_UClass_UCubeBuilder_NoRegister()
	{
		return UCubeBuilder::StaticClass();
	}
	UClass* Z_Construct_UClass_UCubeBuilder()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UEditorBrushBuilder();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UCubeBuilder::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20081080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(Tessellated, UCubeBuilder, uint8);
				UProperty* NewProp_Tessellated = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Tessellated"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Tessellated, UCubeBuilder), 0x0000000000000001, CPP_BOOL_PROPERTY_BITMASK(Tessellated, UCubeBuilder), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(Hollow, UCubeBuilder, uint8);
				UProperty* NewProp_Hollow = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Hollow"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Hollow, UCubeBuilder), 0x0000000000000001, CPP_BOOL_PROPERTY_BITMASK(Hollow, UCubeBuilder), sizeof(uint8), false);
				UProperty* NewProp_GroupName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("GroupName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(GroupName, UCubeBuilder), 0x0000000000000000);
				UProperty* NewProp_WallThickness = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("WallThickness"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(WallThickness, UCubeBuilder), 0x0000000000000001);
				UProperty* NewProp_Z = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Z"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(Z, UCubeBuilder), 0x0000000000000001);
				UProperty* NewProp_Y = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Y"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(Y, UCubeBuilder), 0x0000000000000001);
				UProperty* NewProp_X = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("X"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(X, UCubeBuilder), 0x0000000000000001);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("AutoExpandCategories"), TEXT("BrushSettings"));
				MetaData->SetValue(OuterClass, TEXT("DisplayName"), TEXT("Box"));
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Builders/CubeBuilder.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Builders/CubeBuilder.h"));
				MetaData->SetValue(NewProp_Tessellated, TEXT("Category"), TEXT("BrushSettings"));
				MetaData->SetValue(NewProp_Tessellated, TEXT("ModuleRelativePath"), TEXT("Classes/Builders/CubeBuilder.h"));
				MetaData->SetValue(NewProp_Tessellated, TEXT("ToolTip"), TEXT("Whether extra internal faces should be generated for each cube face"));
				MetaData->SetValue(NewProp_Hollow, TEXT("Category"), TEXT("BrushSettings"));
				MetaData->SetValue(NewProp_Hollow, TEXT("ModuleRelativePath"), TEXT("Classes/Builders/CubeBuilder.h"));
				MetaData->SetValue(NewProp_Hollow, TEXT("ToolTip"), TEXT("Whether this is a hollow or solid cube"));
				MetaData->SetValue(NewProp_GroupName, TEXT("ModuleRelativePath"), TEXT("Classes/Builders/CubeBuilder.h"));
				MetaData->SetValue(NewProp_WallThickness, TEXT("Category"), TEXT("BrushSettings"));
				MetaData->SetValue(NewProp_WallThickness, TEXT("EditCondition"), TEXT("Hollow"));
				MetaData->SetValue(NewProp_WallThickness, TEXT("ModuleRelativePath"), TEXT("Classes/Builders/CubeBuilder.h"));
				MetaData->SetValue(NewProp_WallThickness, TEXT("ToolTip"), TEXT("The thickness of the cube wall when hollow"));
				MetaData->SetValue(NewProp_Z, TEXT("Category"), TEXT("BrushSettings"));
				MetaData->SetValue(NewProp_Z, TEXT("ClampMin"), TEXT("0.000001"));
				MetaData->SetValue(NewProp_Z, TEXT("ModuleRelativePath"), TEXT("Classes/Builders/CubeBuilder.h"));
				MetaData->SetValue(NewProp_Z, TEXT("ToolTip"), TEXT("The size of the cube in the Z dimension"));
				MetaData->SetValue(NewProp_Y, TEXT("Category"), TEXT("BrushSettings"));
				MetaData->SetValue(NewProp_Y, TEXT("ClampMin"), TEXT("0.000001"));
				MetaData->SetValue(NewProp_Y, TEXT("ModuleRelativePath"), TEXT("Classes/Builders/CubeBuilder.h"));
				MetaData->SetValue(NewProp_Y, TEXT("ToolTip"), TEXT("The size of the cube in the Y dimension"));
				MetaData->SetValue(NewProp_X, TEXT("Category"), TEXT("BrushSettings"));
				MetaData->SetValue(NewProp_X, TEXT("ClampMin"), TEXT("0.000001"));
				MetaData->SetValue(NewProp_X, TEXT("ModuleRelativePath"), TEXT("Classes/Builders/CubeBuilder.h"));
				MetaData->SetValue(NewProp_X, TEXT("ToolTip"), TEXT("The size of the cube in the X dimension"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UCubeBuilder(Z_Construct_UClass_UCubeBuilder, TEXT("UCubeBuilder"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UCubeBuilder);
	UClass* Z_Construct_UClass_UCurvedStairBuilder_NoRegister()
	{
		return UCurvedStairBuilder::StaticClass();
	}
	UClass* Z_Construct_UClass_UCurvedStairBuilder()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UEditorBrushBuilder();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UCurvedStairBuilder::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20081080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(CounterClockwise, UCurvedStairBuilder, uint8);
				UProperty* NewProp_CounterClockwise = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CounterClockwise"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(CounterClockwise, UCurvedStairBuilder), 0x0000000000000001, CPP_BOOL_PROPERTY_BITMASK(CounterClockwise, UCurvedStairBuilder), sizeof(uint8), false);
				UProperty* NewProp_GroupName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("GroupName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(GroupName, UCurvedStairBuilder), 0x0000000000000000);
				UProperty* NewProp_AddToFirstStep = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AddToFirstStep"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(AddToFirstStep, UCurvedStairBuilder), 0x0000000000000001);
				UProperty* NewProp_NumSteps = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("NumSteps"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(NumSteps, UCurvedStairBuilder), 0x0000000000000001);
				UProperty* NewProp_AngleOfCurve = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AngleOfCurve"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(AngleOfCurve, UCurvedStairBuilder), 0x0000000000000001);
				UProperty* NewProp_StepWidth = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("StepWidth"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(StepWidth, UCurvedStairBuilder), 0x0000000000000001);
				UProperty* NewProp_StepHeight = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("StepHeight"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(StepHeight, UCurvedStairBuilder), 0x0000000000000001);
				UProperty* NewProp_InnerRadius = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("InnerRadius"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(InnerRadius, UCurvedStairBuilder), 0x0000000000000001);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("AutoExpandCategories"), TEXT("BrushSettings"));
				MetaData->SetValue(OuterClass, TEXT("DisplayName"), TEXT("Curved Stair"));
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Builders/CurvedStairBuilder.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Builders/CurvedStairBuilder.h"));
				MetaData->SetValue(NewProp_CounterClockwise, TEXT("Category"), TEXT("BrushSettings"));
				MetaData->SetValue(NewProp_CounterClockwise, TEXT("ModuleRelativePath"), TEXT("Classes/Builders/CurvedStairBuilder.h"));
				MetaData->SetValue(NewProp_CounterClockwise, TEXT("ToolTip"), TEXT("Whether the stair curves clockwise or counter-clockwise"));
				MetaData->SetValue(NewProp_GroupName, TEXT("ModuleRelativePath"), TEXT("Classes/Builders/CurvedStairBuilder.h"));
				MetaData->SetValue(NewProp_AddToFirstStep, TEXT("Category"), TEXT("BrushSettings"));
				MetaData->SetValue(NewProp_AddToFirstStep, TEXT("ModuleRelativePath"), TEXT("Classes/Builders/CurvedStairBuilder.h"));
				MetaData->SetValue(NewProp_AddToFirstStep, TEXT("ToolTip"), TEXT("The distance below the first step"));
				MetaData->SetValue(NewProp_NumSteps, TEXT("Category"), TEXT("BrushSettings"));
				MetaData->SetValue(NewProp_NumSteps, TEXT("ClampMax"), TEXT("100"));
				MetaData->SetValue(NewProp_NumSteps, TEXT("ClampMin"), TEXT("1"));
				MetaData->SetValue(NewProp_NumSteps, TEXT("ModuleRelativePath"), TEXT("Classes/Builders/CurvedStairBuilder.h"));
				MetaData->SetValue(NewProp_NumSteps, TEXT("ToolTip"), TEXT("The number of steps"));
				MetaData->SetValue(NewProp_AngleOfCurve, TEXT("Category"), TEXT("BrushSettings"));
				MetaData->SetValue(NewProp_AngleOfCurve, TEXT("ClampMax"), TEXT("360"));
				MetaData->SetValue(NewProp_AngleOfCurve, TEXT("ClampMin"), TEXT("1"));
				MetaData->SetValue(NewProp_AngleOfCurve, TEXT("ModuleRelativePath"), TEXT("Classes/Builders/CurvedStairBuilder.h"));
				MetaData->SetValue(NewProp_AngleOfCurve, TEXT("ToolTip"), TEXT("The angle of the total arc described by this stair"));
				MetaData->SetValue(NewProp_StepWidth, TEXT("Category"), TEXT("BrushSettings"));
				MetaData->SetValue(NewProp_StepWidth, TEXT("ClampMin"), TEXT("1"));
				MetaData->SetValue(NewProp_StepWidth, TEXT("ModuleRelativePath"), TEXT("Classes/Builders/CurvedStairBuilder.h"));
				MetaData->SetValue(NewProp_StepWidth, TEXT("ToolTip"), TEXT("The width of each step"));
				MetaData->SetValue(NewProp_StepHeight, TEXT("Category"), TEXT("BrushSettings"));
				MetaData->SetValue(NewProp_StepHeight, TEXT("ClampMin"), TEXT("1"));
				MetaData->SetValue(NewProp_StepHeight, TEXT("ModuleRelativePath"), TEXT("Classes/Builders/CurvedStairBuilder.h"));
				MetaData->SetValue(NewProp_StepHeight, TEXT("ToolTip"), TEXT("The height of each step"));
				MetaData->SetValue(NewProp_InnerRadius, TEXT("Category"), TEXT("BrushSettings"));
				MetaData->SetValue(NewProp_InnerRadius, TEXT("ClampMin"), TEXT("1"));
				MetaData->SetValue(NewProp_InnerRadius, TEXT("ModuleRelativePath"), TEXT("Classes/Builders/CurvedStairBuilder.h"));
				MetaData->SetValue(NewProp_InnerRadius, TEXT("ToolTip"), TEXT("The radius of the inner curve of the stair"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UCurvedStairBuilder(Z_Construct_UClass_UCurvedStairBuilder, TEXT("UCurvedStairBuilder"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UCurvedStairBuilder);
	UClass* Z_Construct_UClass_UCylinderBuilder_NoRegister()
	{
		return UCylinderBuilder::StaticClass();
	}
	UClass* Z_Construct_UClass_UCylinderBuilder()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UEditorBrushBuilder();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UCylinderBuilder::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20081080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(Hollow, UCylinderBuilder, uint8);
				UProperty* NewProp_Hollow = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Hollow"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Hollow, UCylinderBuilder), 0x0000000000000001, CPP_BOOL_PROPERTY_BITMASK(Hollow, UCylinderBuilder), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(AlignToSide, UCylinderBuilder, uint8);
				UProperty* NewProp_AlignToSide = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AlignToSide"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(AlignToSide, UCylinderBuilder), 0x0000000000000001, CPP_BOOL_PROPERTY_BITMASK(AlignToSide, UCylinderBuilder), sizeof(uint8), false);
				UProperty* NewProp_GroupName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("GroupName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(GroupName, UCylinderBuilder), 0x0000000000000000);
				UProperty* NewProp_Sides = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Sides"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(Sides, UCylinderBuilder), 0x0000000000000001);
				UProperty* NewProp_InnerRadius = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("InnerRadius"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(InnerRadius, UCylinderBuilder), 0x0000000000000001);
				UProperty* NewProp_OuterRadius = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OuterRadius"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(OuterRadius, UCylinderBuilder), 0x0000000000000001);
				UProperty* NewProp_Z = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Z"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(Z, UCylinderBuilder), 0x0000000000000001);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("AutoExpandCategories"), TEXT("BrushSettings"));
				MetaData->SetValue(OuterClass, TEXT("DisplayName"), TEXT("Cylinder"));
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Builders/CylinderBuilder.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Builders/CylinderBuilder.h"));
				MetaData->SetValue(NewProp_Hollow, TEXT("Category"), TEXT("BrushSettings"));
				MetaData->SetValue(NewProp_Hollow, TEXT("ModuleRelativePath"), TEXT("Classes/Builders/CylinderBuilder.h"));
				MetaData->SetValue(NewProp_Hollow, TEXT("ToolTip"), TEXT("Whether this is a hollow or solid cylinder"));
				MetaData->SetValue(NewProp_AlignToSide, TEXT("Category"), TEXT("BrushSettings"));
				MetaData->SetValue(NewProp_AlignToSide, TEXT("ModuleRelativePath"), TEXT("Classes/Builders/CylinderBuilder.h"));
				MetaData->SetValue(NewProp_AlignToSide, TEXT("ToolTip"), TEXT("Whether to align the brush to a face"));
				MetaData->SetValue(NewProp_GroupName, TEXT("ModuleRelativePath"), TEXT("Classes/Builders/CylinderBuilder.h"));
				MetaData->SetValue(NewProp_Sides, TEXT("Category"), TEXT("BrushSettings"));
				MetaData->SetValue(NewProp_Sides, TEXT("ClampMax"), TEXT("500"));
				MetaData->SetValue(NewProp_Sides, TEXT("ClampMin"), TEXT("3"));
				MetaData->SetValue(NewProp_Sides, TEXT("ModuleRelativePath"), TEXT("Classes/Builders/CylinderBuilder.h"));
				MetaData->SetValue(NewProp_Sides, TEXT("ToolTip"), TEXT("How many sides this cylinder should have"));
				MetaData->SetValue(NewProp_InnerRadius, TEXT("Category"), TEXT("BrushSettings"));
				MetaData->SetValue(NewProp_InnerRadius, TEXT("EditCondition"), TEXT("Hollow"));
				MetaData->SetValue(NewProp_InnerRadius, TEXT("ModuleRelativePath"), TEXT("Classes/Builders/CylinderBuilder.h"));
				MetaData->SetValue(NewProp_InnerRadius, TEXT("ToolTip"), TEXT("Radius of inner cylinder (when hollow)"));
				MetaData->SetValue(NewProp_OuterRadius, TEXT("Category"), TEXT("BrushSettings"));
				MetaData->SetValue(NewProp_OuterRadius, TEXT("ClampMin"), TEXT("0.000001"));
				MetaData->SetValue(NewProp_OuterRadius, TEXT("ModuleRelativePath"), TEXT("Classes/Builders/CylinderBuilder.h"));
				MetaData->SetValue(NewProp_OuterRadius, TEXT("ToolTip"), TEXT("Radius of cylinder"));
				MetaData->SetValue(NewProp_Z, TEXT("Category"), TEXT("BrushSettings"));
				MetaData->SetValue(NewProp_Z, TEXT("ClampMin"), TEXT("0.000001"));
				MetaData->SetValue(NewProp_Z, TEXT("ModuleRelativePath"), TEXT("Classes/Builders/CylinderBuilder.h"));
				MetaData->SetValue(NewProp_Z, TEXT("ToolTip"), TEXT("Distance from base to tip of cylinder"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UCylinderBuilder(Z_Construct_UClass_UCylinderBuilder, TEXT("UCylinderBuilder"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UCylinderBuilder);
	UClass* Z_Construct_UClass_ULinearStairBuilder_NoRegister()
	{
		return ULinearStairBuilder::StaticClass();
	}
	UClass* Z_Construct_UClass_ULinearStairBuilder()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UEditorBrushBuilder();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = ULinearStairBuilder::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20081080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_GroupName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("GroupName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(GroupName, ULinearStairBuilder), 0x0000000000000000);
				UProperty* NewProp_AddToFirstStep = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AddToFirstStep"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(AddToFirstStep, ULinearStairBuilder), 0x0000000000000001);
				UProperty* NewProp_NumSteps = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("NumSteps"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(NumSteps, ULinearStairBuilder), 0x0000000000000001);
				UProperty* NewProp_StepWidth = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("StepWidth"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(StepWidth, ULinearStairBuilder), 0x0000000000000001);
				UProperty* NewProp_StepHeight = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("StepHeight"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(StepHeight, ULinearStairBuilder), 0x0000000000000001);
				UProperty* NewProp_StepLength = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("StepLength"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(StepLength, ULinearStairBuilder), 0x0000000000000001);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("AutoExpandCategories"), TEXT("BrushSettings"));
				MetaData->SetValue(OuterClass, TEXT("DisplayName"), TEXT("Linear Stair"));
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Builders/LinearStairBuilder.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Builders/LinearStairBuilder.h"));
				MetaData->SetValue(NewProp_GroupName, TEXT("ModuleRelativePath"), TEXT("Classes/Builders/LinearStairBuilder.h"));
				MetaData->SetValue(NewProp_AddToFirstStep, TEXT("Category"), TEXT("BrushSettings"));
				MetaData->SetValue(NewProp_AddToFirstStep, TEXT("ModuleRelativePath"), TEXT("Classes/Builders/LinearStairBuilder.h"));
				MetaData->SetValue(NewProp_AddToFirstStep, TEXT("ToolTip"), TEXT("The distance below the first step"));
				MetaData->SetValue(NewProp_NumSteps, TEXT("Category"), TEXT("BrushSettings"));
				MetaData->SetValue(NewProp_NumSteps, TEXT("ClampMax"), TEXT("45"));
				MetaData->SetValue(NewProp_NumSteps, TEXT("ClampMin"), TEXT("2"));
				MetaData->SetValue(NewProp_NumSteps, TEXT("ModuleRelativePath"), TEXT("Classes/Builders/LinearStairBuilder.h"));
				MetaData->SetValue(NewProp_NumSteps, TEXT("ToolTip"), TEXT("The number of steps"));
				MetaData->SetValue(NewProp_StepWidth, TEXT("Category"), TEXT("BrushSettings"));
				MetaData->SetValue(NewProp_StepWidth, TEXT("ClampMin"), TEXT("1"));
				MetaData->SetValue(NewProp_StepWidth, TEXT("ModuleRelativePath"), TEXT("Classes/Builders/LinearStairBuilder.h"));
				MetaData->SetValue(NewProp_StepWidth, TEXT("ToolTip"), TEXT("The width of each step"));
				MetaData->SetValue(NewProp_StepHeight, TEXT("Category"), TEXT("BrushSettings"));
				MetaData->SetValue(NewProp_StepHeight, TEXT("ClampMin"), TEXT("1"));
				MetaData->SetValue(NewProp_StepHeight, TEXT("ModuleRelativePath"), TEXT("Classes/Builders/LinearStairBuilder.h"));
				MetaData->SetValue(NewProp_StepHeight, TEXT("ToolTip"), TEXT("The height of each step"));
				MetaData->SetValue(NewProp_StepLength, TEXT("Category"), TEXT("BrushSettings"));
				MetaData->SetValue(NewProp_StepLength, TEXT("ClampMin"), TEXT("1"));
				MetaData->SetValue(NewProp_StepLength, TEXT("ModuleRelativePath"), TEXT("Classes/Builders/LinearStairBuilder.h"));
				MetaData->SetValue(NewProp_StepLength, TEXT("ToolTip"), TEXT("The length of each step"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_ULinearStairBuilder(Z_Construct_UClass_ULinearStairBuilder, TEXT("ULinearStairBuilder"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(ULinearStairBuilder);
	UEnum* Z_Construct_UEnum_UnrealEd_ESheetAxis()
	{
		UPackage* Outer=Z_Construct_UPackage_UnrealEd();
		extern uint32 Get_Z_Construct_UEnum_UnrealEd_ESheetAxis_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("ESheetAxis"), 0, Get_Z_Construct_UEnum_UnrealEd_ESheetAxis_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ESheetAxis"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("AX_Horizontal")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("AX_XAxis")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("AX_YAxis")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("AX_MAX")), 3));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Regular);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/Builders/SheetBuilder.h"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_UnrealEd_ESheetAxis_CRC() { return 1723361437U; }
	UClass* Z_Construct_UClass_USheetBuilder_NoRegister()
	{
		return USheetBuilder::StaticClass();
	}
	UClass* Z_Construct_UClass_USheetBuilder()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UEditorBrushBuilder();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = USheetBuilder::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20081280;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_GroupName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("GroupName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(GroupName, USheetBuilder), 0x0000000000000000);
				UProperty* NewProp_Axis = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Axis"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(Axis, USheetBuilder), 0x0000000000000001, Z_Construct_UEnum_UnrealEd_ESheetAxis());
				UProperty* NewProp_YSegments = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("YSegments"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(YSegments, USheetBuilder), 0x0000000000000001);
				UProperty* NewProp_XSegments = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("XSegments"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(XSegments, USheetBuilder), 0x0000000000000001);
				UProperty* NewProp_Y = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Y"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(Y, USheetBuilder), 0x0000000000000001);
				UProperty* NewProp_X = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("X"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(X, USheetBuilder), 0x0000000000000001);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("AutoExpandCategories"), TEXT("BrushSettings"));
				MetaData->SetValue(OuterClass, TEXT("DisplayName"), TEXT("Plane"));
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Builders/SheetBuilder.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Builders/SheetBuilder.h"));
				MetaData->SetValue(NewProp_GroupName, TEXT("ModuleRelativePath"), TEXT("Classes/Builders/SheetBuilder.h"));
				MetaData->SetValue(NewProp_Axis, TEXT("Category"), TEXT("BrushSettings"));
				MetaData->SetValue(NewProp_Axis, TEXT("ModuleRelativePath"), TEXT("Classes/Builders/SheetBuilder.h"));
				MetaData->SetValue(NewProp_YSegments, TEXT("Category"), TEXT("BrushSettings"));
				MetaData->SetValue(NewProp_YSegments, TEXT("ClampMax"), TEXT("100"));
				MetaData->SetValue(NewProp_YSegments, TEXT("ClampMin"), TEXT("1"));
				MetaData->SetValue(NewProp_YSegments, TEXT("ModuleRelativePath"), TEXT("Classes/Builders/SheetBuilder.h"));
				MetaData->SetValue(NewProp_YSegments, TEXT("UIMax"), TEXT("20"));
				MetaData->SetValue(NewProp_YSegments, TEXT("UIMin"), TEXT("1"));
				MetaData->SetValue(NewProp_XSegments, TEXT("Category"), TEXT("BrushSettings"));
				MetaData->SetValue(NewProp_XSegments, TEXT("ClampMax"), TEXT("100"));
				MetaData->SetValue(NewProp_XSegments, TEXT("ClampMin"), TEXT("1"));
				MetaData->SetValue(NewProp_XSegments, TEXT("ModuleRelativePath"), TEXT("Classes/Builders/SheetBuilder.h"));
				MetaData->SetValue(NewProp_XSegments, TEXT("UIMax"), TEXT("20"));
				MetaData->SetValue(NewProp_XSegments, TEXT("UIMin"), TEXT("1"));
				MetaData->SetValue(NewProp_Y, TEXT("Category"), TEXT("BrushSettings"));
				MetaData->SetValue(NewProp_Y, TEXT("ClampMin"), TEXT("1"));
				MetaData->SetValue(NewProp_Y, TEXT("ModuleRelativePath"), TEXT("Classes/Builders/SheetBuilder.h"));
				MetaData->SetValue(NewProp_X, TEXT("Category"), TEXT("BrushSettings"));
				MetaData->SetValue(NewProp_X, TEXT("ClampMin"), TEXT("1"));
				MetaData->SetValue(NewProp_X, TEXT("ModuleRelativePath"), TEXT("Classes/Builders/SheetBuilder.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_USheetBuilder(Z_Construct_UClass_USheetBuilder, TEXT("USheetBuilder"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(USheetBuilder);
	UClass* Z_Construct_UClass_USpiralStairBuilder_NoRegister()
	{
		return USpiralStairBuilder::StaticClass();
	}
	UClass* Z_Construct_UClass_USpiralStairBuilder()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UEditorBrushBuilder();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = USpiralStairBuilder::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20081080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(CounterClockwise, USpiralStairBuilder, uint8);
				UProperty* NewProp_CounterClockwise = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CounterClockwise"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(CounterClockwise, USpiralStairBuilder), 0x0000000000000001, CPP_BOOL_PROPERTY_BITMASK(CounterClockwise, USpiralStairBuilder), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(SlopedFloor, USpiralStairBuilder, uint8);
				UProperty* NewProp_SlopedFloor = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SlopedFloor"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(SlopedFloor, USpiralStairBuilder), 0x0000000000000001, CPP_BOOL_PROPERTY_BITMASK(SlopedFloor, USpiralStairBuilder), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(SlopedCeiling, USpiralStairBuilder, uint8);
				UProperty* NewProp_SlopedCeiling = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SlopedCeiling"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(SlopedCeiling, USpiralStairBuilder), 0x0000000000000001, CPP_BOOL_PROPERTY_BITMASK(SlopedCeiling, USpiralStairBuilder), sizeof(uint8), false);
				UProperty* NewProp_GroupName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("GroupName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(GroupName, USpiralStairBuilder), 0x0000000000000000);
				UProperty* NewProp_NumSteps = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("NumSteps"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(NumSteps, USpiralStairBuilder), 0x0000000000000001);
				UProperty* NewProp_NumStepsPer360 = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("NumStepsPer360"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(NumStepsPer360, USpiralStairBuilder), 0x0000000000000001);
				UProperty* NewProp_StepThickness = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("StepThickness"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(StepThickness, USpiralStairBuilder), 0x0000000000000001);
				UProperty* NewProp_StepHeight = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("StepHeight"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(StepHeight, USpiralStairBuilder), 0x0000000000000001);
				UProperty* NewProp_StepWidth = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("StepWidth"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(StepWidth, USpiralStairBuilder), 0x0000000000000001);
				UProperty* NewProp_InnerRadius = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("InnerRadius"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(InnerRadius, USpiralStairBuilder), 0x0000000000000001);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("AutoExpandCategories"), TEXT("BrushSettings"));
				MetaData->SetValue(OuterClass, TEXT("DisplayName"), TEXT("Spiral Stair"));
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Builders/SpiralStairBuilder.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Builders/SpiralStairBuilder.h"));
				MetaData->SetValue(NewProp_CounterClockwise, TEXT("Category"), TEXT("BrushSettings"));
				MetaData->SetValue(NewProp_CounterClockwise, TEXT("ModuleRelativePath"), TEXT("Classes/Builders/SpiralStairBuilder.h"));
				MetaData->SetValue(NewProp_CounterClockwise, TEXT("ToolTip"), TEXT("Whether the stair curves clockwise or counter-clockwise"));
				MetaData->SetValue(NewProp_SlopedFloor, TEXT("Category"), TEXT("BrushSettings"));
				MetaData->SetValue(NewProp_SlopedFloor, TEXT("ModuleRelativePath"), TEXT("Classes/Builders/SpiralStairBuilder.h"));
				MetaData->SetValue(NewProp_SlopedFloor, TEXT("ToolTip"), TEXT("Whether the surface of the spiral is sloped or stepped"));
				MetaData->SetValue(NewProp_SlopedCeiling, TEXT("Category"), TEXT("BrushSettings"));
				MetaData->SetValue(NewProp_SlopedCeiling, TEXT("ModuleRelativePath"), TEXT("Classes/Builders/SpiralStairBuilder.h"));
				MetaData->SetValue(NewProp_SlopedCeiling, TEXT("ToolTip"), TEXT("Whether the underside of the spiral is sloped or stepped"));
				MetaData->SetValue(NewProp_GroupName, TEXT("ModuleRelativePath"), TEXT("Classes/Builders/SpiralStairBuilder.h"));
				MetaData->SetValue(NewProp_NumSteps, TEXT("Category"), TEXT("BrushSettings"));
				MetaData->SetValue(NewProp_NumSteps, TEXT("ClampMax"), TEXT("100"));
				MetaData->SetValue(NewProp_NumSteps, TEXT("ClampMin"), TEXT("1"));
				MetaData->SetValue(NewProp_NumSteps, TEXT("ModuleRelativePath"), TEXT("Classes/Builders/SpiralStairBuilder.h"));
				MetaData->SetValue(NewProp_NumSteps, TEXT("ToolTip"), TEXT("The total number of steps"));
				MetaData->SetValue(NewProp_NumStepsPer360, TEXT("Category"), TEXT("BrushSettings"));
				MetaData->SetValue(NewProp_NumStepsPer360, TEXT("ClampMin"), TEXT("3"));
				MetaData->SetValue(NewProp_NumStepsPer360, TEXT("ModuleRelativePath"), TEXT("Classes/Builders/SpiralStairBuilder.h"));
				MetaData->SetValue(NewProp_NumStepsPer360, TEXT("ToolTip"), TEXT("The number of steps in one whole spiral rotation"));
				MetaData->SetValue(NewProp_StepThickness, TEXT("Category"), TEXT("BrushSettings"));
				MetaData->SetValue(NewProp_StepThickness, TEXT("ClampMin"), TEXT("1"));
				MetaData->SetValue(NewProp_StepThickness, TEXT("ModuleRelativePath"), TEXT("Classes/Builders/SpiralStairBuilder.h"));
				MetaData->SetValue(NewProp_StepThickness, TEXT("ToolTip"), TEXT("The thickness of each step"));
				MetaData->SetValue(NewProp_StepHeight, TEXT("Category"), TEXT("BrushSettings"));
				MetaData->SetValue(NewProp_StepHeight, TEXT("ClampMin"), TEXT("1"));
				MetaData->SetValue(NewProp_StepHeight, TEXT("ModuleRelativePath"), TEXT("Classes/Builders/SpiralStairBuilder.h"));
				MetaData->SetValue(NewProp_StepHeight, TEXT("ToolTip"), TEXT("The height of each step"));
				MetaData->SetValue(NewProp_StepWidth, TEXT("Category"), TEXT("BrushSettings"));
				MetaData->SetValue(NewProp_StepWidth, TEXT("ClampMin"), TEXT("1"));
				MetaData->SetValue(NewProp_StepWidth, TEXT("ModuleRelativePath"), TEXT("Classes/Builders/SpiralStairBuilder.h"));
				MetaData->SetValue(NewProp_StepWidth, TEXT("ToolTip"), TEXT("The width of each step"));
				MetaData->SetValue(NewProp_InnerRadius, TEXT("Category"), TEXT("BrushSettings"));
				MetaData->SetValue(NewProp_InnerRadius, TEXT("ClampMin"), TEXT("1"));
				MetaData->SetValue(NewProp_InnerRadius, TEXT("ModuleRelativePath"), TEXT("Classes/Builders/SpiralStairBuilder.h"));
				MetaData->SetValue(NewProp_InnerRadius, TEXT("ToolTip"), TEXT("The radius of the inner curve of the stair"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_USpiralStairBuilder(Z_Construct_UClass_USpiralStairBuilder, TEXT("USpiralStairBuilder"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(USpiralStairBuilder);
	UClass* Z_Construct_UClass_UTetrahedronBuilder_NoRegister()
	{
		return UTetrahedronBuilder::StaticClass();
	}
	UClass* Z_Construct_UClass_UTetrahedronBuilder()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UEditorBrushBuilder();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UTetrahedronBuilder::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20081080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_GroupName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("GroupName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(GroupName, UTetrahedronBuilder), 0x0000000000000000);
				UProperty* NewProp_SphereExtrapolation = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SphereExtrapolation"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(SphereExtrapolation, UTetrahedronBuilder), 0x0000000000000001);
				UProperty* NewProp_Radius = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Radius"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(Radius, UTetrahedronBuilder), 0x0000000000000001);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("AutoExpandCategories"), TEXT("BrushSettings"));
				MetaData->SetValue(OuterClass, TEXT("DisplayName"), TEXT("Sphere"));
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Builders/TetrahedronBuilder.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Builders/TetrahedronBuilder.h"));
				MetaData->SetValue(NewProp_GroupName, TEXT("ModuleRelativePath"), TEXT("Classes/Builders/TetrahedronBuilder.h"));
				MetaData->SetValue(NewProp_SphereExtrapolation, TEXT("Category"), TEXT("BrushSettings"));
				MetaData->SetValue(NewProp_SphereExtrapolation, TEXT("ClampMax"), TEXT("5"));
				MetaData->SetValue(NewProp_SphereExtrapolation, TEXT("ClampMin"), TEXT("1"));
				MetaData->SetValue(NewProp_SphereExtrapolation, TEXT("DisplayName"), TEXT("Tessellation"));
				MetaData->SetValue(NewProp_SphereExtrapolation, TEXT("ModuleRelativePath"), TEXT("Classes/Builders/TetrahedronBuilder.h"));
				MetaData->SetValue(NewProp_SphereExtrapolation, TEXT("ToolTip"), TEXT("How many iterations this sphere uses to tessellate its geometry"));
				MetaData->SetValue(NewProp_Radius, TEXT("Category"), TEXT("BrushSettings"));
				MetaData->SetValue(NewProp_Radius, TEXT("ClampMin"), TEXT("0.000001"));
				MetaData->SetValue(NewProp_Radius, TEXT("ModuleRelativePath"), TEXT("Classes/Builders/TetrahedronBuilder.h"));
				MetaData->SetValue(NewProp_Radius, TEXT("ToolTip"), TEXT("The radius of this sphere"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UTetrahedronBuilder(Z_Construct_UClass_UTetrahedronBuilder, TEXT("UTetrahedronBuilder"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UTetrahedronBuilder);
	UClass* Z_Construct_UClass_UVolumetricBuilder_NoRegister()
	{
		return UVolumetricBuilder::StaticClass();
	}
	UClass* Z_Construct_UClass_UVolumetricBuilder()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UEditorBrushBuilder();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UVolumetricBuilder::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20081280;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_GroupName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("GroupName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(GroupName, UVolumetricBuilder), 0x0000000000000000);
				UProperty* NewProp_NumSheets = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("NumSheets"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(NumSheets, UVolumetricBuilder), 0x0000000000000001);
				UProperty* NewProp_Radius = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Radius"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(Radius, UVolumetricBuilder), 0x0000000000000001);
				UProperty* NewProp_Z = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Z"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(Z, UVolumetricBuilder), 0x0000000000000001);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("AutoExpandCategories"), TEXT("BrushSettings"));
				MetaData->SetValue(OuterClass, TEXT("DisplayName"), TEXT("Volumetric"));
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Builders/VolumetricBuilder.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Builders/VolumetricBuilder.h"));
				MetaData->SetValue(NewProp_GroupName, TEXT("ModuleRelativePath"), TEXT("Classes/Builders/VolumetricBuilder.h"));
				MetaData->SetValue(NewProp_NumSheets, TEXT("Category"), TEXT("BrushSettings"));
				MetaData->SetValue(NewProp_NumSheets, TEXT("ClampMax"), TEXT("1000"));
				MetaData->SetValue(NewProp_NumSheets, TEXT("ClampMin"), TEXT("2"));
				MetaData->SetValue(NewProp_NumSheets, TEXT("ModuleRelativePath"), TEXT("Classes/Builders/VolumetricBuilder.h"));
				MetaData->SetValue(NewProp_Radius, TEXT("Category"), TEXT("BrushSettings"));
				MetaData->SetValue(NewProp_Radius, TEXT("ClampMin"), TEXT("0.000001"));
				MetaData->SetValue(NewProp_Radius, TEXT("ModuleRelativePath"), TEXT("Classes/Builders/VolumetricBuilder.h"));
				MetaData->SetValue(NewProp_Z, TEXT("Category"), TEXT("BrushSettings"));
				MetaData->SetValue(NewProp_Z, TEXT("ClampMin"), TEXT("0.000001"));
				MetaData->SetValue(NewProp_Z, TEXT("ModuleRelativePath"), TEXT("Classes/Builders/VolumetricBuilder.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UVolumetricBuilder(Z_Construct_UClass_UVolumetricBuilder, TEXT("UVolumetricBuilder"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UVolumetricBuilder);
	UClass* Z_Construct_UClass_UEditorPerProjectUserSettings_NoRegister()
	{
		return UEditorPerProjectUserSettings::StaticClass();
	}
	UClass* Z_Construct_UClass_UEditorPerProjectUserSettings()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UEditorPerProjectUserSettings::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080084;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_MaterialQualityLevel = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MaterialQualityLevel"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(MaterialQualityLevel, UEditorPerProjectUserSettings), 0x0000000000004000);
				UProperty* NewProp_BlueprintFavorites = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("BlueprintFavorites"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(BlueprintFavorites, UEditorPerProjectUserSettings), 0x0000000000000000, Z_Construct_UClass_UBlueprintPaletteFavorites_NoRegister());
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bAllowSelectTranslucent, UEditorPerProjectUserSettings, uint8);
				UProperty* NewProp_bAllowSelectTranslucent = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bAllowSelectTranslucent"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bAllowSelectTranslucent, UEditorPerProjectUserSettings), 0x0000000000004000, CPP_BOOL_PROPERTY_BITMASK(bAllowSelectTranslucent, UEditorPerProjectUserSettings), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bSuppressFullyLoadPrompt, UEditorPerProjectUserSettings, uint8);
				UProperty* NewProp_bSuppressFullyLoadPrompt = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bSuppressFullyLoadPrompt"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bSuppressFullyLoadPrompt, UEditorPerProjectUserSettings), 0x0000000000004000, CPP_BOOL_PROPERTY_BITMASK(bSuppressFullyLoadPrompt, UEditorPerProjectUserSettings), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bAutoloadCheckedOutPackages, UEditorPerProjectUserSettings, uint8);
				UProperty* NewProp_bAutoloadCheckedOutPackages = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bAutoloadCheckedOutPackages"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bAutoloadCheckedOutPackages, UEditorPerProjectUserSettings), 0x0000000000004000, CPP_BOOL_PROPERTY_BITMASK(bAutoloadCheckedOutPackages, UEditorPerProjectUserSettings), sizeof(uint8), false);
				UProperty* NewProp_SCSViewportCameraSpeed = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SCSViewportCameraSpeed"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(SCSViewportCameraSpeed, UEditorPerProjectUserSettings), 0x0000000000004000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bSCSEditorShowFloor, UEditorPerProjectUserSettings, bool);
				UProperty* NewProp_bSCSEditorShowFloor = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bSCSEditorShowFloor"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bSCSEditorShowFloor, UEditorPerProjectUserSettings), 0x0000000000004000, CPP_BOOL_PROPERTY_BITMASK(bSCSEditorShowFloor, UEditorPerProjectUserSettings), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bSCSEditorShowGrid, UEditorPerProjectUserSettings, bool);
				UProperty* NewProp_bSCSEditorShowGrid = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bSCSEditorShowGrid"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bSCSEditorShowGrid, UEditorPerProjectUserSettings), 0x0000000000004000, CPP_BOOL_PROPERTY_BITMASK(bSCSEditorShowGrid, UEditorPerProjectUserSettings), sizeof(bool), true);
				UProperty* NewProp_PropertyMatrix_NumberOfPasteOperationsBeforeWarning = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("PropertyMatrix_NumberOfPasteOperationsBeforeWarning"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(PropertyMatrix_NumberOfPasteOperationsBeforeWarning, UEditorPerProjectUserSettings), 0x0000000000004000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bUseCurvesForDistributions, UEditorPerProjectUserSettings, uint8);
				UProperty* NewProp_bUseCurvesForDistributions = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bUseCurvesForDistributions"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bUseCurvesForDistributions, UEditorPerProjectUserSettings), 0x0000000000004000, CPP_BOOL_PROPERTY_BITMASK(bUseCurvesForDistributions, UEditorPerProjectUserSettings), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bKeepAttachHierarchy, UEditorPerProjectUserSettings, uint8);
				UProperty* NewProp_bKeepAttachHierarchy = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bKeepAttachHierarchy"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bKeepAttachHierarchy, UEditorPerProjectUserSettings), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(bKeepAttachHierarchy, UEditorPerProjectUserSettings), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bAutomaticallyHotReloadNewClasses, UEditorPerProjectUserSettings, uint8);
				UProperty* NewProp_bAutomaticallyHotReloadNewClasses = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bAutomaticallyHotReloadNewClasses"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bAutomaticallyHotReloadNewClasses, UEditorPerProjectUserSettings), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(bAutomaticallyHotReloadNewClasses, UEditorPerProjectUserSettings), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bMonitorEditorPerformance, UEditorPerProjectUserSettings, uint8);
				UProperty* NewProp_bMonitorEditorPerformance = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bMonitorEditorPerformance"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bMonitorEditorPerformance, UEditorPerProjectUserSettings), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(bMonitorEditorPerformance, UEditorPerProjectUserSettings), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bThrottleCPUWhenNotForeground, UEditorPerProjectUserSettings, uint8);
				UProperty* NewProp_bThrottleCPUWhenNotForeground = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bThrottleCPUWhenNotForeground"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bThrottleCPUWhenNotForeground, UEditorPerProjectUserSettings), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(bThrottleCPUWhenNotForeground, UEditorPerProjectUserSettings), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bShowFrameRateAndMemory, UEditorPerProjectUserSettings, uint8);
				UProperty* NewProp_bShowFrameRateAndMemory = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bShowFrameRateAndMemory"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bShowFrameRateAndMemory, UEditorPerProjectUserSettings), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(bShowFrameRateAndMemory, UEditorPerProjectUserSettings), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bDisplayEngineVersionInBadge, UEditorPerProjectUserSettings, bool);
				UProperty* NewProp_bDisplayEngineVersionInBadge = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bDisplayEngineVersionInBadge"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bDisplayEngineVersionInBadge, UEditorPerProjectUserSettings), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(bDisplayEngineVersionInBadge, UEditorPerProjectUserSettings), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bAlwaysGatherBehaviorTreeDebuggerData, UEditorPerProjectUserSettings, uint8);
				UProperty* NewProp_bAlwaysGatherBehaviorTreeDebuggerData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bAlwaysGatherBehaviorTreeDebuggerData"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bAlwaysGatherBehaviorTreeDebuggerData, UEditorPerProjectUserSettings), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(bAlwaysGatherBehaviorTreeDebuggerData, UEditorPerProjectUserSettings), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bDisplayActionListItemRefIds, UEditorPerProjectUserSettings, uint8);
				UProperty* NewProp_bDisplayActionListItemRefIds = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bDisplayActionListItemRefIds"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bDisplayActionListItemRefIds, UEditorPerProjectUserSettings), 0x0000000000004000, CPP_BOOL_PROPERTY_BITMASK(bDisplayActionListItemRefIds, UEditorPerProjectUserSettings), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bDisplayDocumentationLink, UEditorPerProjectUserSettings, uint8);
				UProperty* NewProp_bDisplayDocumentationLink = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bDisplayDocumentationLink"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bDisplayDocumentationLink, UEditorPerProjectUserSettings), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(bDisplayDocumentationLink, UEditorPerProjectUserSettings), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bDisplayUIExtensionPoints, UEditorPerProjectUserSettings, uint8);
				UProperty* NewProp_bDisplayUIExtensionPoints = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bDisplayUIExtensionPoints"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bDisplayUIExtensionPoints, UEditorPerProjectUserSettings), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(bDisplayUIExtensionPoints, UEditorPerProjectUserSettings), sizeof(uint8), false);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->ClassConfigName = FName(TEXT("EditorPerProjectUserSettings"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("AutoExpandCategories"), TEXT("ViewportControls ViewportLookAndFeel LevelEditing SourceControl Content Startup"));
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object Options Grid RotationGrid"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Editor/EditorPerProjectUserSettings.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/EditorPerProjectUserSettings.h"));
				MetaData->SetValue(NewProp_MaterialQualityLevel, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/EditorPerProjectUserSettings.h"));
				MetaData->SetValue(NewProp_BlueprintFavorites, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/EditorPerProjectUserSettings.h"));
				MetaData->SetValue(NewProp_bAllowSelectTranslucent, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/EditorPerProjectUserSettings.h"));
				MetaData->SetValue(NewProp_bAllowSelectTranslucent, TEXT("ToolTip"), TEXT("True if user should be allowed to select translucent objects in perspective viewports"));
				MetaData->SetValue(NewProp_bSuppressFullyLoadPrompt, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/EditorPerProjectUserSettings.h"));
				MetaData->SetValue(NewProp_bSuppressFullyLoadPrompt, TEXT("ToolTip"), TEXT("If this is true, the user will not be asked to fully load a package before saving or before creating a new object"));
				MetaData->SetValue(NewProp_bAutoloadCheckedOutPackages, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/EditorPerProjectUserSettings.h"));
				MetaData->SetValue(NewProp_bAutoloadCheckedOutPackages, TEXT("ToolTip"), TEXT("Controls whether packages which are checked-out are automatically fully loaded at startup"));
				MetaData->SetValue(NewProp_SCSViewportCameraSpeed, TEXT("ClampMax"), TEXT("8"));
				MetaData->SetValue(NewProp_SCSViewportCameraSpeed, TEXT("ClampMin"), TEXT("1"));
				MetaData->SetValue(NewProp_SCSViewportCameraSpeed, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/EditorPerProjectUserSettings.h"));
				MetaData->SetValue(NewProp_SCSViewportCameraSpeed, TEXT("ToolTip"), TEXT("How fast the SCS viewport camera moves"));
				MetaData->SetValue(NewProp_SCSViewportCameraSpeed, TEXT("UIMax"), TEXT("8"));
				MetaData->SetValue(NewProp_SCSViewportCameraSpeed, TEXT("UIMin"), TEXT("1"));
				MetaData->SetValue(NewProp_bSCSEditorShowFloor, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/EditorPerProjectUserSettings.h"));
				MetaData->SetValue(NewProp_bSCSEditorShowGrid, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/EditorPerProjectUserSettings.h"));
				MetaData->SetValue(NewProp_PropertyMatrix_NumberOfPasteOperationsBeforeWarning, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/EditorPerProjectUserSettings.h"));
				MetaData->SetValue(NewProp_PropertyMatrix_NumberOfPasteOperationsBeforeWarning, TEXT("ToolTip"), TEXT("Controls the minimum value at which the property matrix editor will display a loading bar when pasting values"));
				MetaData->SetValue(NewProp_bUseCurvesForDistributions, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/EditorPerProjectUserSettings.h"));
				MetaData->SetValue(NewProp_bUseCurvesForDistributions, TEXT("ToolTip"), TEXT("Select to make Distributions use the curves, not the baked lookup tables."));
				MetaData->SetValue(NewProp_bKeepAttachHierarchy, TEXT("Category"), TEXT("Export"));
				MetaData->SetValue(NewProp_bKeepAttachHierarchy, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/EditorPerProjectUserSettings.h"));
				MetaData->SetValue(NewProp_bKeepAttachHierarchy, TEXT("ToolTip"), TEXT("If enabled, export level with attachment hierarchy set"));
				MetaData->SetValue(NewProp_bAutomaticallyHotReloadNewClasses, TEXT("Category"), TEXT("HotReload"));
				MetaData->SetValue(NewProp_bAutomaticallyHotReloadNewClasses, TEXT("DisplayName"), TEXT("Automatically Compile Newly Added C++ Classes"));
				MetaData->SetValue(NewProp_bAutomaticallyHotReloadNewClasses, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/EditorPerProjectUserSettings.h"));
				MetaData->SetValue(NewProp_bAutomaticallyHotReloadNewClasses, TEXT("ToolTip"), TEXT("If enabled, any newly added classes will be automatically compiled and trigger a hot-reload of the module they were added to"));
				MetaData->SetValue(NewProp_bMonitorEditorPerformance, TEXT("Category"), TEXT("Performance"));
				MetaData->SetValue(NewProp_bMonitorEditorPerformance, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/EditorPerProjectUserSettings.h"));
				MetaData->SetValue(NewProp_bMonitorEditorPerformance, TEXT("ToolTip"), TEXT("When turned on, the editor will constantly monitor performance and adjust scalability settings for you when performance drops (disabled in debug)"));
				MetaData->SetValue(NewProp_bThrottleCPUWhenNotForeground, TEXT("Category"), TEXT("Performance"));
				MetaData->SetValue(NewProp_bThrottleCPUWhenNotForeground, TEXT("DisplayName"), TEXT("Use Less CPU when in Background"));
				MetaData->SetValue(NewProp_bThrottleCPUWhenNotForeground, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/EditorPerProjectUserSettings.h"));
				MetaData->SetValue(NewProp_bThrottleCPUWhenNotForeground, TEXT("ToolTip"), TEXT("Lowers CPU usage when the editor is in the background and not the active application"));
				MetaData->SetValue(NewProp_bShowFrameRateAndMemory, TEXT("Category"), TEXT("Performance"));
				MetaData->SetValue(NewProp_bShowFrameRateAndMemory, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/EditorPerProjectUserSettings.h"));
				MetaData->SetValue(NewProp_bShowFrameRateAndMemory, TEXT("ToolTip"), TEXT("When enabled, the application frame rate, memory and Unreal object count will be displayed in the main editor UI"));
				MetaData->SetValue(NewProp_bDisplayEngineVersionInBadge, TEXT("Category"), TEXT("DeveloperTools"));
				MetaData->SetValue(NewProp_bDisplayEngineVersionInBadge, TEXT("ConfigRestartRequired"), TEXT("TRUE"));
				MetaData->SetValue(NewProp_bDisplayEngineVersionInBadge, TEXT("DisplayName"), TEXT("Display Engine Version Number in Project Badge"));
				MetaData->SetValue(NewProp_bDisplayEngineVersionInBadge, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/EditorPerProjectUserSettings.h"));
				MetaData->SetValue(NewProp_bDisplayEngineVersionInBadge, TEXT("ToolTip"), TEXT("When enabled, Engine Version Number is displayed in the ProjectBadge"));
				MetaData->SetValue(NewProp_bAlwaysGatherBehaviorTreeDebuggerData, TEXT("Category"), TEXT("AI"));
				MetaData->SetValue(NewProp_bAlwaysGatherBehaviorTreeDebuggerData, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/EditorPerProjectUserSettings.h"));
				MetaData->SetValue(NewProp_bAlwaysGatherBehaviorTreeDebuggerData, TEXT("ToolTip"), TEXT("If enabled, behavior tree debugger will collect its data even when all behavior tree editor windows are closed"));
				MetaData->SetValue(NewProp_bDisplayActionListItemRefIds, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/EditorPerProjectUserSettings.h"));
				MetaData->SetValue(NewProp_bDisplayActionListItemRefIds, TEXT("ToolTip"), TEXT(", Category=DeveloperTools"));
				MetaData->SetValue(NewProp_bDisplayDocumentationLink, TEXT("Category"), TEXT("DeveloperTools"));
				MetaData->SetValue(NewProp_bDisplayDocumentationLink, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/EditorPerProjectUserSettings.h"));
				MetaData->SetValue(NewProp_bDisplayDocumentationLink, TEXT("ToolTip"), TEXT("If enabled, tooltips linked to documentation will show the developer the link bound to that UI item"));
				MetaData->SetValue(NewProp_bDisplayUIExtensionPoints, TEXT("Category"), TEXT("DeveloperTools"));
				MetaData->SetValue(NewProp_bDisplayUIExtensionPoints, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/EditorPerProjectUserSettings.h"));
				MetaData->SetValue(NewProp_bDisplayUIExtensionPoints, TEXT("ToolTip"), TEXT("If enabled, any newly opened UI menus, menu bars, and toolbars will show the developer hooks that would accept extensions"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UEditorPerProjectUserSettings(Z_Construct_UClass_UEditorPerProjectUserSettings, TEXT("UEditorPerProjectUserSettings"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UEditorPerProjectUserSettings);
	UClass* Z_Construct_UClass_UTransactor_NoRegister()
	{
		return UTransactor::StaticClass();
	}
	UClass* Z_Construct_UClass_UTransactor()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UTransactor::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000088;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Editor/Transactor.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/Transactor.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UTransactor(Z_Construct_UClass_UTransactor, TEXT("UTransactor"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UTransactor);
	UEnum* Z_Construct_UEnum_UnrealEd_EPlayOnLaunchConfiguration()
	{
		UPackage* Outer=Z_Construct_UPackage_UnrealEd();
		extern uint32 Get_Z_Construct_UEnum_UnrealEd_EPlayOnLaunchConfiguration_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("EPlayOnLaunchConfiguration"), 0, Get_Z_Construct_UEnum_UnrealEd_EPlayOnLaunchConfiguration_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EPlayOnLaunchConfiguration"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("LaunchConfig_Default")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("LaunchConfig_Debug")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("LaunchConfig_Development")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("LaunchConfig_Test")), 3));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("LaunchConfig_Shipping")), 4));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("LaunchConfig_MAX")), 5));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Regular);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("LaunchConfig_Debug.DisplayName"), TEXT("Debug"));
			MetaData->SetValue(ReturnEnum, TEXT("LaunchConfig_Debug.ToolTip"), TEXT("Launch on device with a Debug build configuration."));
			MetaData->SetValue(ReturnEnum, TEXT("LaunchConfig_Default.DisplayName"), TEXT("Same as Editor"));
			MetaData->SetValue(ReturnEnum, TEXT("LaunchConfig_Default.ToolTip"), TEXT("Launch on device with the same build configuration as the editor."));
			MetaData->SetValue(ReturnEnum, TEXT("LaunchConfig_Development.DisplayName"), TEXT("Development"));
			MetaData->SetValue(ReturnEnum, TEXT("LaunchConfig_Development.ToolTip"), TEXT("Launch on device with a Development build configuration."));
			MetaData->SetValue(ReturnEnum, TEXT("LaunchConfig_Shipping.DisplayName"), TEXT("Shipping"));
			MetaData->SetValue(ReturnEnum, TEXT("LaunchConfig_Shipping.ToolTip"), TEXT("Launch on device with a Shipping build configuration."));
			MetaData->SetValue(ReturnEnum, TEXT("LaunchConfig_Test.DisplayName"), TEXT("Test"));
			MetaData->SetValue(ReturnEnum, TEXT("LaunchConfig_Test.ToolTip"), TEXT("Launch on device with a Test build configuration."));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorPlaySettings.h"));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("Configuration to use when launching on device."));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_UnrealEd_EPlayOnLaunchConfiguration_CRC() { return 1158945602U; }
	UEnum* Z_Construct_UEnum_UnrealEd_EPlayOnBuildMode()
	{
		UPackage* Outer=Z_Construct_UPackage_UnrealEd();
		extern uint32 Get_Z_Construct_UEnum_UnrealEd_EPlayOnBuildMode_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("EPlayOnBuildMode"), 0, Get_Z_Construct_UEnum_UnrealEd_EPlayOnBuildMode_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EPlayOnBuildMode"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("PlayOnBuild_Always")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("PlayOnBuild_Never")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("PlayOnBuild_Default")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("PlayOnBuild_MAX")), 3));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Regular);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorPlaySettings.h"));
			MetaData->SetValue(ReturnEnum, TEXT("PlayOnBuild_Always.DisplayName"), TEXT("Always Build"));
			MetaData->SetValue(ReturnEnum, TEXT("PlayOnBuild_Always.ToolTip"), TEXT("Always build."));
			MetaData->SetValue(ReturnEnum, TEXT("PlayOnBuild_Default.DisplayName"), TEXT("Only Build Code Projects"));
			MetaData->SetValue(ReturnEnum, TEXT("PlayOnBuild_Default.ToolTip"), TEXT("Build based on project type."));
			MetaData->SetValue(ReturnEnum, TEXT("PlayOnBuild_Never.DisplayName"), TEXT("Never Build"));
			MetaData->SetValue(ReturnEnum, TEXT("PlayOnBuild_Never.ToolTip"), TEXT("Never build."));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_UnrealEd_EPlayOnBuildMode_CRC() { return 877023203U; }
	UEnum* Z_Construct_UEnum_UnrealEd_EPlayNetMode()
	{
		UPackage* Outer=Z_Construct_UPackage_UnrealEd();
		extern uint32 Get_Z_Construct_UEnum_UnrealEd_EPlayNetMode_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("EPlayNetMode"), 0, Get_Z_Construct_UEnum_UnrealEd_EPlayNetMode_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EPlayNetMode"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("PIE_Standalone")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("PIE_ListenServer")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("PIE_Client")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("PIE_MAX")), 3));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Regular);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorPlaySettings.h"));
			MetaData->SetValue(ReturnEnum, TEXT("PIE_Client.DisplayName"), TEXT("Play As Client"));
			MetaData->SetValue(ReturnEnum, TEXT("PIE_ListenServer.DisplayName"), TEXT("Play As Listen Server"));
			MetaData->SetValue(ReturnEnum, TEXT("PIE_Standalone.DisplayName"), TEXT("Play Offline"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_UnrealEd_EPlayNetMode_CRC() { return 2447400581U; }
	UEnum* Z_Construct_UEnum_UnrealEd_EPlayModeType()
	{
		UPackage* Outer=Z_Construct_UPackage_UnrealEd();
		extern uint32 Get_Z_Construct_UEnum_UnrealEd_EPlayModeType_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("EPlayModeType"), 0, Get_Z_Construct_UEnum_UnrealEd_EPlayModeType_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EPlayModeType"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("PlayMode_InViewPort")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("PlayMode_InEditorFloating")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("PlayMode_InMobilePreview")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("PlayMode_InNewProcess")), 3));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("PlayMode_InVR")), 4));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("PlayMode_Simulate")), 5));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("PlayMode_Count")), 6));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("PlayMode_MAX")), 7));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Regular);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorPlaySettings.h"));
			MetaData->SetValue(ReturnEnum, TEXT("PlayMode_Count.ToolTip"), TEXT("The number of different Play Modes."));
			MetaData->SetValue(ReturnEnum, TEXT("PlayMode_InEditorFloating.ToolTip"), TEXT("Runs in a new window."));
			MetaData->SetValue(ReturnEnum, TEXT("PlayMode_InMobilePreview.ToolTip"), TEXT("Runs a mobile preview in a new process."));
			MetaData->SetValue(ReturnEnum, TEXT("PlayMode_InNewProcess.ToolTip"), TEXT("Runs in a new process."));
			MetaData->SetValue(ReturnEnum, TEXT("PlayMode_InViewPort.ToolTip"), TEXT("Runs from within the editor."));
			MetaData->SetValue(ReturnEnum, TEXT("PlayMode_InVR.ToolTip"), TEXT("Runs in VR."));
			MetaData->SetValue(ReturnEnum, TEXT("PlayMode_Simulate.ToolTip"), TEXT("Simulates in viewport without possessing the player."));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_UnrealEd_EPlayModeType_CRC() { return 2088794470U; }
	UEnum* Z_Construct_UEnum_UnrealEd_EPlayModeLocations()
	{
		UPackage* Outer=Z_Construct_UPackage_UnrealEd();
		extern uint32 Get_Z_Construct_UEnum_UnrealEd_EPlayModeLocations_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("EPlayModeLocations"), 0, Get_Z_Construct_UEnum_UnrealEd_EPlayModeLocations_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EPlayModeLocations"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("PlayLocation_CurrentCameraLocation")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("PlayLocation_DefaultPlayerStart")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("PlayLocation_MAX")), 2));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Regular);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorPlaySettings.h"));
			MetaData->SetValue(ReturnEnum, TEXT("PlayLocation_CurrentCameraLocation.ToolTip"), TEXT("Spawns the player at the current camera location."));
			MetaData->SetValue(ReturnEnum, TEXT("PlayLocation_DefaultPlayerStart.ToolTip"), TEXT("Spawns the player from the default player start."));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_UnrealEd_EPlayModeLocations_CRC() { return 3444317872U; }
	UEnum* Z_Construct_UEnum_UnrealEd_ELaunchModeType()
	{
		UPackage* Outer=Z_Construct_UPackage_UnrealEd();
		extern uint32 Get_Z_Construct_UEnum_UnrealEd_ELaunchModeType_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("ELaunchModeType"), 0, Get_Z_Construct_UEnum_UnrealEd_ELaunchModeType_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ELaunchModeType"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("LaunchMode_OnDevice")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("LaunchMode_MAX")), 1));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Regular);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("LaunchMode_OnDevice.ToolTip"), TEXT("Runs the map on a specified device."));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorPlaySettings.h"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_UnrealEd_ELaunchModeType_CRC() { return 3989582959U; }
	UEnum* Z_Construct_UEnum_UnrealEd_ELabelAnchorMode()
	{
		UPackage* Outer=Z_Construct_UPackage_UnrealEd();
		extern uint32 Get_Z_Construct_UEnum_UnrealEd_ELabelAnchorMode_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("ELabelAnchorMode"), 0, Get_Z_Construct_UEnum_UnrealEd_ELabelAnchorMode_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ELabelAnchorMode"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("LabelAnchorMode_TopLeft")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("LabelAnchorMode_TopCenter")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("LabelAnchorMode_TopRight")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("LabelAnchorMode_CenterLeft")), 3));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("LabelAnchorMode_Centered")), 4));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("LabelAnchorMode_CenterRight")), 5));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("LabelAnchorMode_BottomLeft")), 6));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("LabelAnchorMode_BottomCenter")), 7));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("LabelAnchorMode_BottomRight")), 8));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("LabelAnchorMode_MAX")), 9));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Regular);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("LabelAnchorMode_BottomCenter.DisplayName"), TEXT("Bottom Center"));
			MetaData->SetValue(ReturnEnum, TEXT("LabelAnchorMode_BottomLeft.DisplayName"), TEXT("Bottom Left"));
			MetaData->SetValue(ReturnEnum, TEXT("LabelAnchorMode_BottomRight.DisplayName"), TEXT("Bottom Right"));
			MetaData->SetValue(ReturnEnum, TEXT("LabelAnchorMode_Centered.DisplayName"), TEXT("Centered"));
			MetaData->SetValue(ReturnEnum, TEXT("LabelAnchorMode_CenterLeft.DisplayName"), TEXT("Center Left"));
			MetaData->SetValue(ReturnEnum, TEXT("LabelAnchorMode_CenterRight.DisplayName"), TEXT("Center Right"));
			MetaData->SetValue(ReturnEnum, TEXT("LabelAnchorMode_TopCenter.DisplayName"), TEXT("Top Center"));
			MetaData->SetValue(ReturnEnum, TEXT("LabelAnchorMode_TopLeft.DisplayName"), TEXT("Top Left"));
			MetaData->SetValue(ReturnEnum, TEXT("LabelAnchorMode_TopRight.DisplayName"), TEXT("Top Right"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorPlaySettings.h"));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("Enumerates label anchor modes."));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_UnrealEd_ELabelAnchorMode_CRC() { return 3220734272U; }
	UScriptStruct* Z_Construct_UScriptStruct_FPlayScreenResolution()
	{
		UPackage* Outer=Z_Construct_UPackage_UnrealEd();
		extern uint32 Get_Z_Construct_UScriptStruct_FPlayScreenResolution_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("PlayScreenResolution"), sizeof(FPlayScreenResolution), Get_Z_Construct_UScriptStruct_FPlayScreenResolution_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("PlayScreenResolution"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FPlayScreenResolution>, EStructFlags(0x00000001));
			UProperty* NewProp_AspectRatio = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("AspectRatio"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(AspectRatio, FPlayScreenResolution), 0x0000000000004000);
			UProperty* NewProp_Height = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Height"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(Height, FPlayScreenResolution), 0x0000000000004000);
			UProperty* NewProp_Width = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Width"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(Width, FPlayScreenResolution), 0x0000000000004000);
			UProperty* NewProp_Description = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Description"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(Description, FPlayScreenResolution), 0x0000000000004000);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorPlaySettings.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Holds information about a screen resolution to be used for playing."));
			MetaData->SetValue(NewProp_AspectRatio, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorPlaySettings.h"));
			MetaData->SetValue(NewProp_AspectRatio, TEXT("ToolTip"), TEXT("The screen resolution's aspect ratio (as a string)."));
			MetaData->SetValue(NewProp_Height, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorPlaySettings.h"));
			MetaData->SetValue(NewProp_Height, TEXT("ToolTip"), TEXT("The screen resolution's height (in pixels)."));
			MetaData->SetValue(NewProp_Width, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorPlaySettings.h"));
			MetaData->SetValue(NewProp_Width, TEXT("ToolTip"), TEXT("The screen resolution's width (in pixels)."));
			MetaData->SetValue(NewProp_Description, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorPlaySettings.h"));
			MetaData->SetValue(NewProp_Description, TEXT("ToolTip"), TEXT("FText"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FPlayScreenResolution_CRC() { return 1868003371U; }
	UClass* Z_Construct_UClass_ULevelEditorPlaySettings_NoRegister()
	{
		return ULevelEditorPlaySettings::StaticClass();
	}
	UClass* Z_Construct_UClass_ULevelEditorPlaySettings()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = ULevelEditorPlaySettings::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100084;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_TelevisionScreenResolutions = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("TelevisionScreenResolutions"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(TelevisionScreenResolutions, ULevelEditorPlaySettings), 0x0000000000004000);
				UProperty* NewProp_TelevisionScreenResolutions_Inner = new(EC_InternalUseOnlyConstructor, NewProp_TelevisionScreenResolutions, TEXT("TelevisionScreenResolutions"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000004000, Z_Construct_UScriptStruct_FPlayScreenResolution());
				UProperty* NewProp_TabletScreenResolutions = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("TabletScreenResolutions"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(TabletScreenResolutions, ULevelEditorPlaySettings), 0x0000000000004000);
				UProperty* NewProp_TabletScreenResolutions_Inner = new(EC_InternalUseOnlyConstructor, NewProp_TabletScreenResolutions, TEXT("TabletScreenResolutions"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000004000, Z_Construct_UScriptStruct_FPlayScreenResolution());
				UProperty* NewProp_PhoneScreenResolutions = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("PhoneScreenResolutions"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(PhoneScreenResolutions, ULevelEditorPlaySettings), 0x0000000000004000);
				UProperty* NewProp_PhoneScreenResolutions_Inner = new(EC_InternalUseOnlyConstructor, NewProp_PhoneScreenResolutions, TEXT("PhoneScreenResolutions"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000004000, Z_Construct_UScriptStruct_FPlayScreenResolution());
				UProperty* NewProp_MonitorScreenResolutions = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MonitorScreenResolutions"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(MonitorScreenResolutions, ULevelEditorPlaySettings), 0x0000000000004000);
				UProperty* NewProp_MonitorScreenResolutions_Inner = new(EC_InternalUseOnlyConstructor, NewProp_MonitorScreenResolutions, TEXT("MonitorScreenResolutions"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000004000, Z_Construct_UScriptStruct_FPlayScreenResolution());
				UProperty* NewProp_LaptopScreenResolutions = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("LaptopScreenResolutions"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(LaptopScreenResolutions, ULevelEditorPlaySettings), 0x0000000000004000);
				UProperty* NewProp_LaptopScreenResolutions_Inner = new(EC_InternalUseOnlyConstructor, NewProp_LaptopScreenResolutions, TEXT("LaptopScreenResolutions"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000004000, Z_Construct_UScriptStruct_FPlayScreenResolution());
				UProperty* NewProp_LastExecutedPlayModeType = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("LastExecutedPlayModeType"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(LastExecutedPlayModeType, ULevelEditorPlaySettings), 0x0000000000004000, Z_Construct_UEnum_UnrealEd_EPlayModeType());
				UProperty* NewProp_LastExecutedPlayModeLocation = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("LastExecutedPlayModeLocation"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(LastExecutedPlayModeLocation, ULevelEditorPlaySettings), 0x0000000000004000, Z_Construct_UEnum_UnrealEd_EPlayModeLocations());
				UProperty* NewProp_LastExecutedLaunchModeType = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("LastExecutedLaunchModeType"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(LastExecutedLaunchModeType, ULevelEditorPlaySettings), 0x0000000000004000, Z_Construct_UEnum_UnrealEd_ELaunchModeType());
				UProperty* NewProp_LastExecutedLaunchName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("LastExecutedLaunchName"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(LastExecutedLaunchName, ULevelEditorPlaySettings), 0x0000000000004000);
				UProperty* NewProp_LastExecutedLaunchDevice = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("LastExecutedLaunchDevice"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(LastExecutedLaunchDevice, ULevelEditorPlaySettings), 0x0000000000004000);
				UProperty* NewProp_MultipleInstancePositions = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MultipleInstancePositions"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(MultipleInstancePositions, ULevelEditorPlaySettings), 0x0000000000004000);
				UProperty* NewProp_MultipleInstancePositions_Inner = new(EC_InternalUseOnlyConstructor, NewProp_MultipleInstancePositions, TEXT("MultipleInstancePositions"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000004000, Z_Construct_UScriptStruct_FIntPoint());
				UProperty* NewProp_MultipleInstanceLastWidth = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MultipleInstanceLastWidth"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(MultipleInstanceLastWidth, ULevelEditorPlaySettings), 0x0000000000004000);
				UProperty* NewProp_MultipleInstanceLastHeight = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MultipleInstanceLastHeight"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(MultipleInstanceLastHeight, ULevelEditorPlaySettings), 0x0000000000004000);
				UProperty* NewProp_AdditionalLaunchOptions = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AdditionalLaunchOptions"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(AdditionalLaunchOptions, ULevelEditorPlaySettings), 0x0000000000004001);
				UProperty* NewProp_AdditionalServerGameOptions = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AdditionalServerGameOptions"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(AdditionalServerGameOptions, ULevelEditorPlaySettings), 0x0000000000004001);
				UProperty* NewProp_ClientWindowHeight = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ClientWindowHeight"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(ClientWindowHeight, ULevelEditorPlaySettings), 0x0000000000004001);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(CreateAudioDeviceForEveryPlayer, ULevelEditorPlaySettings, bool);
				UProperty* NewProp_CreateAudioDeviceForEveryPlayer = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CreateAudioDeviceForEveryPlayer"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(CreateAudioDeviceForEveryPlayer, ULevelEditorPlaySettings), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(CreateAudioDeviceForEveryPlayer, ULevelEditorPlaySettings), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(RouteGamepadToSecondWindow, ULevelEditorPlaySettings, bool);
				UProperty* NewProp_RouteGamepadToSecondWindow = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("RouteGamepadToSecondWindow"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(RouteGamepadToSecondWindow, ULevelEditorPlaySettings), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(RouteGamepadToSecondWindow, ULevelEditorPlaySettings), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(AutoConnectToServer, ULevelEditorPlaySettings, bool);
				UProperty* NewProp_AutoConnectToServer = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AutoConnectToServer"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(AutoConnectToServer, ULevelEditorPlaySettings), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(AutoConnectToServer, ULevelEditorPlaySettings), sizeof(bool), true);
				UProperty* NewProp_ClientWindowWidth = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ClientWindowWidth"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(ClientWindowWidth, ULevelEditorPlaySettings), 0x0000000000004001);
				UProperty* NewProp_PlayNumberOfClients = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("PlayNumberOfClients"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(PlayNumberOfClients, ULevelEditorPlaySettings), 0x0000000000004001);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(PlayNetDedicated, ULevelEditorPlaySettings, bool);
				UProperty* NewProp_PlayNetDedicated = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("PlayNetDedicated"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(PlayNetDedicated, ULevelEditorPlaySettings), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(PlayNetDedicated, ULevelEditorPlaySettings), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(RunUnderOneProcess, ULevelEditorPlaySettings, bool);
				UProperty* NewProp_RunUnderOneProcess = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("RunUnderOneProcess"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(RunUnderOneProcess, ULevelEditorPlaySettings), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(RunUnderOneProcess, ULevelEditorPlaySettings), sizeof(bool), true);
				UProperty* NewProp_PlayNetMode = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("PlayNetMode"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(PlayNetMode, ULevelEditorPlaySettings), 0x0000000000004001, Z_Construct_UEnum_UnrealEd_EPlayNetMode());
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bAutoCompileBlueprintsOnLaunch, ULevelEditorPlaySettings, bool);
				UProperty* NewProp_bAutoCompileBlueprintsOnLaunch = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bAutoCompileBlueprintsOnLaunch"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bAutoCompileBlueprintsOnLaunch, ULevelEditorPlaySettings), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(bAutoCompileBlueprintsOnLaunch, ULevelEditorPlaySettings), sizeof(bool), true);
				UProperty* NewProp_LaunchConfiguration = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("LaunchConfiguration"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(LaunchConfiguration, ULevelEditorPlaySettings), 0x0000000000004001, Z_Construct_UEnum_UnrealEd_EPlayOnLaunchConfiguration());
				UProperty* NewProp_BuildGameBeforeLaunch = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("BuildGameBeforeLaunch"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(BuildGameBeforeLaunch, ULevelEditorPlaySettings), 0x0000000000004001, Z_Construct_UEnum_UnrealEd_EPlayOnBuildMode());
				UProperty* NewProp_AdditionalLaunchParameters = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AdditionalLaunchParameters"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(AdditionalLaunchParameters, ULevelEditorPlaySettings), 0x0000040000004001);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(DisableStandaloneSound, ULevelEditorPlaySettings, uint8);
				UProperty* NewProp_DisableStandaloneSound = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("DisableStandaloneSound"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(DisableStandaloneSound, ULevelEditorPlaySettings), 0x0000040000004001, CPP_BOOL_PROPERTY_BITMASK(DisableStandaloneSound, ULevelEditorPlaySettings), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(CenterStandaloneWindow, ULevelEditorPlaySettings, bool);
				UProperty* NewProp_CenterStandaloneWindow = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CenterStandaloneWindow"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(CenterStandaloneWindow, ULevelEditorPlaySettings), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(CenterStandaloneWindow, ULevelEditorPlaySettings), sizeof(bool), true);
				UProperty* NewProp_StandaloneWindowPosition = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("StandaloneWindowPosition"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(StandaloneWindowPosition, ULevelEditorPlaySettings), 0x0000000000004001, Z_Construct_UScriptStruct_FIntPoint());
				UProperty* NewProp_StandaloneWindowHeight = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("StandaloneWindowHeight"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(StandaloneWindowHeight, ULevelEditorPlaySettings), 0x0000000000004001);
				UProperty* NewProp_StandaloneWindowWidth = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("StandaloneWindowWidth"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(StandaloneWindowWidth, ULevelEditorPlaySettings), 0x0000000000004001);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(CenterNewWindow, ULevelEditorPlaySettings, bool);
				UProperty* NewProp_CenterNewWindow = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CenterNewWindow"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(CenterNewWindow, ULevelEditorPlaySettings), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(CenterNewWindow, ULevelEditorPlaySettings), sizeof(bool), true);
				UProperty* NewProp_NewWindowPosition = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("NewWindowPosition"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(NewWindowPosition, ULevelEditorPlaySettings), 0x0000000000004001, Z_Construct_UScriptStruct_FIntPoint());
				UProperty* NewProp_NewWindowHeight = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("NewWindowHeight"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(NewWindowHeight, ULevelEditorPlaySettings), 0x0000000000004001);
				UProperty* NewProp_NewWindowWidth = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("NewWindowWidth"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(NewWindowWidth, ULevelEditorPlaySettings), 0x0000000000004001);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(PIEAlwaysOnTop, ULevelEditorPlaySettings, bool);
				UProperty* NewProp_PIEAlwaysOnTop = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("PIEAlwaysOnTop"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(PIEAlwaysOnTop, ULevelEditorPlaySettings), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(PIEAlwaysOnTop, ULevelEditorPlaySettings), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bPreferToStreamLevelsInPIE, ULevelEditorPlaySettings, uint8);
				UProperty* NewProp_bPreferToStreamLevelsInPIE = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bPreferToStreamLevelsInPIE"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bPreferToStreamLevelsInPIE, ULevelEditorPlaySettings), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(bPreferToStreamLevelsInPIE, ULevelEditorPlaySettings), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bOnlyLoadVisibleLevelsInPIE, ULevelEditorPlaySettings, uint8);
				UProperty* NewProp_bOnlyLoadVisibleLevelsInPIE = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bOnlyLoadVisibleLevelsInPIE"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bOnlyLoadVisibleLevelsInPIE, ULevelEditorPlaySettings), 0x0000000000004000, CPP_BOOL_PROPERTY_BITMASK(bOnlyLoadVisibleLevelsInPIE, ULevelEditorPlaySettings), sizeof(uint8), false);
				UProperty* NewProp_PlayInEditorSoundQualityLevel = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("PlayInEditorSoundQualityLevel"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(PlayInEditorSoundQualityLevel, ULevelEditorPlaySettings), 0x0000000000004001);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(EnableSound, ULevelEditorPlaySettings, bool);
				UProperty* NewProp_EnableSound = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("EnableSound"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(EnableSound, ULevelEditorPlaySettings), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(EnableSound, ULevelEditorPlaySettings), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(AutoRecompileBlueprints, ULevelEditorPlaySettings, bool);
				UProperty* NewProp_AutoRecompileBlueprints = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AutoRecompileBlueprints"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(AutoRecompileBlueprints, ULevelEditorPlaySettings), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(AutoRecompileBlueprints, ULevelEditorPlaySettings), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(ViewportGetsHMDControl, ULevelEditorPlaySettings, bool);
				UProperty* NewProp_ViewportGetsHMDControl = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ViewportGetsHMDControl"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ViewportGetsHMDControl, ULevelEditorPlaySettings), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(ViewportGetsHMDControl, ULevelEditorPlaySettings), sizeof(bool), true);
				UProperty* NewProp_MouseControlLabelPosition = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MouseControlLabelPosition"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(MouseControlLabelPosition, ULevelEditorPlaySettings), 0x0000000000004001, Z_Construct_UEnum_UnrealEd_ELabelAnchorMode());
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(ShowMouseControlLabel, ULevelEditorPlaySettings, bool);
				UProperty* NewProp_ShowMouseControlLabel = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ShowMouseControlLabel"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ShowMouseControlLabel, ULevelEditorPlaySettings), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(ShowMouseControlLabel, ULevelEditorPlaySettings), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(GameGetsMouseControl, ULevelEditorPlaySettings, bool);
				UProperty* NewProp_GameGetsMouseControl = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("GameGetsMouseControl"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(GameGetsMouseControl, ULevelEditorPlaySettings), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(GameGetsMouseControl, ULevelEditorPlaySettings), sizeof(bool), true);
				UProperty* NewProp_PlayFromHerePlayerStartClassName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("PlayFromHerePlayerStartClassName"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(PlayFromHerePlayerStartClassName, ULevelEditorPlaySettings), 0x0000000000044000);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->ClassConfigName = FName(TEXT("EditorPerProjectUserSettings"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Settings/LevelEditorPlaySettings.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorPlaySettings.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Implements the Editor's play settings."));
				MetaData->SetValue(NewProp_TelevisionScreenResolutions, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorPlaySettings.h"));
				MetaData->SetValue(NewProp_TelevisionScreenResolutions, TEXT("ToolTip"), TEXT("Collection of common screen resolutions on television screens."));
				MetaData->SetValue(NewProp_TabletScreenResolutions, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorPlaySettings.h"));
				MetaData->SetValue(NewProp_TabletScreenResolutions, TEXT("ToolTip"), TEXT("Collection of common screen resolutions on tablet devices."));
				MetaData->SetValue(NewProp_PhoneScreenResolutions, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorPlaySettings.h"));
				MetaData->SetValue(NewProp_PhoneScreenResolutions, TEXT("ToolTip"), TEXT("Collection of common screen resolutions on mobile phones."));
				MetaData->SetValue(NewProp_MonitorScreenResolutions, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorPlaySettings.h"));
				MetaData->SetValue(NewProp_MonitorScreenResolutions, TEXT("ToolTip"), TEXT("Collection of common screen resolutions on desktop monitors."));
				MetaData->SetValue(NewProp_LaptopScreenResolutions, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorPlaySettings.h"));
				MetaData->SetValue(NewProp_LaptopScreenResolutions, TEXT("ToolTip"), TEXT("Collection of common screen resolutions on mobile phones."));
				MetaData->SetValue(NewProp_LastExecutedPlayModeType, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorPlaySettings.h"));
				MetaData->SetValue(NewProp_LastExecutedPlayModeType, TEXT("ToolTip"), TEXT("The last type of play session the user ran."));
				MetaData->SetValue(NewProp_LastExecutedPlayModeLocation, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorPlaySettings.h"));
				MetaData->SetValue(NewProp_LastExecutedPlayModeLocation, TEXT("ToolTip"), TEXT("The last type of play location the user ran."));
				MetaData->SetValue(NewProp_LastExecutedLaunchModeType, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorPlaySettings.h"));
				MetaData->SetValue(NewProp_LastExecutedLaunchModeType, TEXT("ToolTip"), TEXT("The last type of play-on session the user ran."));
				MetaData->SetValue(NewProp_LastExecutedLaunchName, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorPlaySettings.h"));
				MetaData->SetValue(NewProp_LastExecutedLaunchName, TEXT("ToolTip"), TEXT("The name of the last device that the user ran a play session on."));
				MetaData->SetValue(NewProp_LastExecutedLaunchDevice, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorPlaySettings.h"));
				MetaData->SetValue(NewProp_LastExecutedLaunchDevice, TEXT("ToolTip"), TEXT("The name of the last platform that the user ran a play session on."));
				MetaData->SetValue(NewProp_MultipleInstancePositions, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorPlaySettings.h"));
				MetaData->SetValue(NewProp_MultipleInstancePositions, TEXT("ToolTip"), TEXT("The last known screen positions of multiple instance windows (in pixels)."));
				MetaData->SetValue(NewProp_MultipleInstanceLastWidth, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorPlaySettings.h"));
				MetaData->SetValue(NewProp_MultipleInstanceLastWidth, TEXT("ToolTip"), TEXT("The last used width for multiple instance windows (in pixels)."));
				MetaData->SetValue(NewProp_MultipleInstanceLastHeight, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorPlaySettings.h"));
				MetaData->SetValue(NewProp_MultipleInstanceLastHeight, TEXT("ToolTip"), TEXT("The last used height for multiple instance windows (in pixels)."));
				MetaData->SetValue(NewProp_AdditionalLaunchOptions, TEXT("Category"), TEXT("MultiplayerOptions"));
				MetaData->SetValue(NewProp_AdditionalLaunchOptions, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorPlaySettings.h"));
				MetaData->SetValue(NewProp_AdditionalLaunchOptions, TEXT("ToolTip"), TEXT("Additional command line options that will be passed to standalone game instances, for example -debug"));
				MetaData->SetValue(NewProp_AdditionalServerGameOptions, TEXT("Category"), TEXT("MultiplayerOptions"));
				MetaData->SetValue(NewProp_AdditionalServerGameOptions, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorPlaySettings.h"));
				MetaData->SetValue(NewProp_AdditionalServerGameOptions, TEXT("ToolTip"), TEXT("Additional options that will be passed to the server as URL parameters, in the format ?bIsLanMatch=1?listen - any additional command line switches should be passed in the Command Line Arguments field below."));
				MetaData->SetValue(NewProp_ClientWindowHeight, TEXT("Category"), TEXT("MultiplayerOptions"));
				MetaData->SetValue(NewProp_ClientWindowHeight, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorPlaySettings.h"));
				MetaData->SetValue(NewProp_ClientWindowHeight, TEXT("ToolTip"), TEXT("Height to use when spawning additional windows."));
				MetaData->SetValue(NewProp_CreateAudioDeviceForEveryPlayer, TEXT("Category"), TEXT("MultiplayerOptions"));
				MetaData->SetValue(NewProp_CreateAudioDeviceForEveryPlayer, TEXT("EditCondition"), TEXT("EnableSound"));
				MetaData->SetValue(NewProp_CreateAudioDeviceForEveryPlayer, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorPlaySettings.h"));
				MetaData->SetValue(NewProp_CreateAudioDeviceForEveryPlayer, TEXT("ToolTip"), TEXT("If checked, a separate audio device is created for every player.\n\nIf unchecked, a separate audio device is created for only the first two players and uses the main audio device for more than 2 players.\n\nEnabling this will allow rendering accurate audio from every player's perspective but will use more CPU. Keep this disabled on lower-perf machines."));
				MetaData->SetValue(NewProp_RouteGamepadToSecondWindow, TEXT("Category"), TEXT("MultiplayerOptions"));
				MetaData->SetValue(NewProp_RouteGamepadToSecondWindow, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorPlaySettings.h"));
				MetaData->SetValue(NewProp_RouteGamepadToSecondWindow, TEXT("ToolTip"), TEXT("When running multiple player windows in a single process, this option determines how the game pad input gets routed.\n\nIf unchecked (default) then the 1st game pad is attached to the 1st window, 2nd to the 2nd window, and so on.\n\nIf it is checked, the 1st game pad goes the 2nd window. The 1st window can then be controlled by keyboard/mouse, which is convenient if two people are testing on the same computer."));
				MetaData->SetValue(NewProp_AutoConnectToServer, TEXT("Category"), TEXT("MultiplayerOptions"));
				MetaData->SetValue(NewProp_AutoConnectToServer, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorPlaySettings.h"));
				MetaData->SetValue(NewProp_AutoConnectToServer, TEXT("ToolTip"), TEXT("When running multiple players or a dedicated server the client need to connect to the server, this option sets how they connect\n\nIf this is checked, the clients will automatically connect to the launched server, if false they will launch into the map and wait"));
				MetaData->SetValue(NewProp_ClientWindowWidth, TEXT("Category"), TEXT("MultiplayerOptions"));
				MetaData->SetValue(NewProp_ClientWindowWidth, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorPlaySettings.h"));
				MetaData->SetValue(NewProp_ClientWindowWidth, TEXT("ToolTip"), TEXT("Width to use when spawning additional windows."));
				MetaData->SetValue(NewProp_PlayNumberOfClients, TEXT("Category"), TEXT("MultiplayerOptions"));
				MetaData->SetValue(NewProp_PlayNumberOfClients, TEXT("ClampMin"), TEXT("1"));
				MetaData->SetValue(NewProp_PlayNumberOfClients, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorPlaySettings.h"));
				MetaData->SetValue(NewProp_PlayNumberOfClients, TEXT("ToolTip"), TEXT("The editor and listen server count as players, a dedicated server will not. Clients make up the remainder."));
				MetaData->SetValue(NewProp_PlayNumberOfClients, TEXT("UIMax"), TEXT("64"));
				MetaData->SetValue(NewProp_PlayNumberOfClients, TEXT("UIMin"), TEXT("1"));
				MetaData->SetValue(NewProp_PlayNetDedicated, TEXT("Category"), TEXT("MultiplayerOptions"));
				MetaData->SetValue(NewProp_PlayNetDedicated, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorPlaySettings.h"));
				MetaData->SetValue(NewProp_PlayNetDedicated, TEXT("ToolTip"), TEXT("If checked, a separate dedicated server will be launched. Otherwise the first player will act as a listen server that all other players connect to."));
				MetaData->SetValue(NewProp_RunUnderOneProcess, TEXT("Category"), TEXT("MultiplayerOptions"));
				MetaData->SetValue(NewProp_RunUnderOneProcess, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorPlaySettings.h"));
				MetaData->SetValue(NewProp_RunUnderOneProcess, TEXT("ToolTip"), TEXT("Spawn multiple player windows in a single instance of UE4. This will load much faster, but has potential to have more issues."));
				MetaData->SetValue(NewProp_PlayNetMode, TEXT("Category"), TEXT("MultiplayerOptions"));
				MetaData->SetValue(NewProp_PlayNetMode, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorPlaySettings.h"));
				MetaData->SetValue(NewProp_PlayNetMode, TEXT("ToolTip"), TEXT("NetMode to use for Play In Editor."));
				MetaData->SetValue(NewProp_bAutoCompileBlueprintsOnLaunch, TEXT("Category"), TEXT("PlayOnDevice"));
				MetaData->SetValue(NewProp_bAutoCompileBlueprintsOnLaunch, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorPlaySettings.h"));
				MetaData->SetValue(NewProp_bAutoCompileBlueprintsOnLaunch, TEXT("ToolTip"), TEXT("Whether to automatically recompile dirty Blueprints before launching"));
				MetaData->SetValue(NewProp_LaunchConfiguration, TEXT("Category"), TEXT("PlayOnDevice"));
				MetaData->SetValue(NewProp_LaunchConfiguration, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorPlaySettings.h"));
				MetaData->SetValue(NewProp_LaunchConfiguration, TEXT("ToolTip"), TEXT("Which build configuration to use when launching on device."));
				MetaData->SetValue(NewProp_BuildGameBeforeLaunch, TEXT("Category"), TEXT("PlayOnDevice"));
				MetaData->SetValue(NewProp_BuildGameBeforeLaunch, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorPlaySettings.h"));
				MetaData->SetValue(NewProp_BuildGameBeforeLaunch, TEXT("ToolTip"), TEXT("Whether to build the game before launching on device."));
				MetaData->SetValue(NewProp_AdditionalLaunchParameters, TEXT("Category"), TEXT("PlayInStandaloneGame"));
				MetaData->SetValue(NewProp_AdditionalLaunchParameters, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorPlaySettings.h"));
				MetaData->SetValue(NewProp_AdditionalLaunchParameters, TEXT("ToolTip"), TEXT("Extra parameters to be include as part of the command line for the standalone game."));
				MetaData->SetValue(NewProp_DisableStandaloneSound, TEXT("Category"), TEXT("PlayInStandaloneGame"));
				MetaData->SetValue(NewProp_DisableStandaloneSound, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorPlaySettings.h"));
				MetaData->SetValue(NewProp_DisableStandaloneSound, TEXT("ToolTip"), TEXT("Whether sound should be disabled when playing standalone games."));
				MetaData->SetValue(NewProp_CenterStandaloneWindow, TEXT("Category"), TEXT("PlayInStandaloneGame"));
				MetaData->SetValue(NewProp_CenterStandaloneWindow, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorPlaySettings.h"));
				MetaData->SetValue(NewProp_CenterStandaloneWindow, TEXT("ToolTip"), TEXT("Whether the standalone game window should be centered on the screen."));
				MetaData->SetValue(NewProp_StandaloneWindowPosition, TEXT("Category"), TEXT("PlayInStandaloneGame"));
				MetaData->SetValue(NewProp_StandaloneWindowPosition, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorPlaySettings.h"));
				MetaData->SetValue(NewProp_StandaloneWindowPosition, TEXT("ToolTip"), TEXT("The position of the standalone game window on the screen in pixels."));
				MetaData->SetValue(NewProp_StandaloneWindowHeight, TEXT("Category"), TEXT("PlayInStandaloneGame"));
				MetaData->SetValue(NewProp_StandaloneWindowHeight, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorPlaySettings.h"));
				MetaData->SetValue(NewProp_StandaloneWindowHeight, TEXT("ToolTip"), TEXT("The height of the standalone game window in pixels (0 = use the desktop's screen resolution)."));
				MetaData->SetValue(NewProp_StandaloneWindowWidth, TEXT("Category"), TEXT("PlayInStandaloneGame"));
				MetaData->SetValue(NewProp_StandaloneWindowWidth, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorPlaySettings.h"));
				MetaData->SetValue(NewProp_StandaloneWindowWidth, TEXT("ToolTip"), TEXT("The width of the standalone game window in pixels (0 = use the desktop's screen resolution)."));
				MetaData->SetValue(NewProp_CenterNewWindow, TEXT("Category"), TEXT("PlayInNewWindow"));
				MetaData->SetValue(NewProp_CenterNewWindow, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorPlaySettings.h"));
				MetaData->SetValue(NewProp_CenterNewWindow, TEXT("ToolTip"), TEXT("Whether the new window should be centered on the screen."));
				MetaData->SetValue(NewProp_NewWindowPosition, TEXT("Category"), TEXT("PlayInNewWindow"));
				MetaData->SetValue(NewProp_NewWindowPosition, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorPlaySettings.h"));
				MetaData->SetValue(NewProp_NewWindowPosition, TEXT("ToolTip"), TEXT("The position of the new view port window on the screen in pixels."));
				MetaData->SetValue(NewProp_NewWindowHeight, TEXT("Category"), TEXT("PlayInNewWindow"));
				MetaData->SetValue(NewProp_NewWindowHeight, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorPlaySettings.h"));
				MetaData->SetValue(NewProp_NewWindowHeight, TEXT("ToolTip"), TEXT("The height of the new view port window in pixels (0 = use the desktop's screen resolution)."));
				MetaData->SetValue(NewProp_NewWindowWidth, TEXT("Category"), TEXT("PlayInNewWindow"));
				MetaData->SetValue(NewProp_NewWindowWidth, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorPlaySettings.h"));
				MetaData->SetValue(NewProp_NewWindowWidth, TEXT("ToolTip"), TEXT("The width of the new view port window in pixels (0 = use the desktop's screen resolution)."));
				MetaData->SetValue(NewProp_PIEAlwaysOnTop, TEXT("Category"), TEXT("PlayInNewWindow"));
				MetaData->SetValue(NewProp_PIEAlwaysOnTop, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorPlaySettings.h"));
				MetaData->SetValue(NewProp_PIEAlwaysOnTop, TEXT("ToolTip"), TEXT("Always have the PIE window on top of the parent windows."));
				MetaData->SetValue(NewProp_bPreferToStreamLevelsInPIE, TEXT("Category"), TEXT("PlayInEditor"));
				MetaData->SetValue(NewProp_bPreferToStreamLevelsInPIE, TEXT("DisplayName"), TEXT("Stream Sub-Levels during Play in Editor"));
				MetaData->SetValue(NewProp_bPreferToStreamLevelsInPIE, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorPlaySettings.h"));
				MetaData->SetValue(NewProp_bPreferToStreamLevelsInPIE, TEXT("ToolTip"), TEXT("Prefer to stream sub-levels from the disk instead of duplicating editor sub-levels"));
				MetaData->SetValue(NewProp_bOnlyLoadVisibleLevelsInPIE, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorPlaySettings.h"));
				MetaData->SetValue(NewProp_bOnlyLoadVisibleLevelsInPIE, TEXT("ToolTip"), TEXT("True if Play In Editor should only load currently-visible levels in PIE."));
				MetaData->SetValue(NewProp_PlayInEditorSoundQualityLevel, TEXT("Category"), TEXT("PlayInEditor"));
				MetaData->SetValue(NewProp_PlayInEditorSoundQualityLevel, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorPlaySettings.h"));
				MetaData->SetValue(NewProp_PlayInEditorSoundQualityLevel, TEXT("ToolTip"), TEXT("Which quality level to use when playing in editor"));
				MetaData->SetValue(NewProp_EnableSound, TEXT("Category"), TEXT("PlayInEditor"));
				MetaData->SetValue(NewProp_EnableSound, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorPlaySettings.h"));
				MetaData->SetValue(NewProp_EnableSound, TEXT("ToolTip"), TEXT("Whether to play sounds when in a Play In Editor session"));
				MetaData->SetValue(NewProp_AutoRecompileBlueprints, TEXT("Category"), TEXT("PlayInEditor"));
				MetaData->SetValue(NewProp_AutoRecompileBlueprints, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorPlaySettings.h"));
				MetaData->SetValue(NewProp_AutoRecompileBlueprints, TEXT("ToolTip"), TEXT("Automatically recompile blueprints used by the current level when initiating a Play In Editor session"));
				MetaData->SetValue(NewProp_ViewportGetsHMDControl, TEXT("Category"), TEXT("PlayInEditor"));
				MetaData->SetValue(NewProp_ViewportGetsHMDControl, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorPlaySettings.h"));
				MetaData->SetValue(NewProp_ViewportGetsHMDControl, TEXT("ToolTip"), TEXT("Whether or not HMD orientation should be used when playing in viewport"));
				MetaData->SetValue(NewProp_MouseControlLabelPosition, TEXT("Category"), TEXT("PlayInEditor"));
				MetaData->SetValue(NewProp_MouseControlLabelPosition, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorPlaySettings.h"));
				MetaData->SetValue(NewProp_MouseControlLabelPosition, TEXT("ToolTip"), TEXT("Location on screen to anchor the mouse control label when in PIE mode."));
				MetaData->SetValue(NewProp_ShowMouseControlLabel, TEXT("Category"), TEXT("PlayInEditor"));
				MetaData->SetValue(NewProp_ShowMouseControlLabel, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorPlaySettings.h"));
				MetaData->SetValue(NewProp_ShowMouseControlLabel, TEXT("ToolTip"), TEXT("Whether to show a label for mouse control gestures in the PIE view."));
				MetaData->SetValue(NewProp_GameGetsMouseControl, TEXT("Category"), TEXT("PlayInEditor"));
				MetaData->SetValue(NewProp_GameGetsMouseControl, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorPlaySettings.h"));
				MetaData->SetValue(NewProp_GameGetsMouseControl, TEXT("ToolTip"), TEXT("Give the game mouse control when PIE starts or require a click in the viewport first"));
				MetaData->SetValue(NewProp_PlayFromHerePlayerStartClassName, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorPlaySettings.h"));
				MetaData->SetValue(NewProp_PlayFromHerePlayerStartClassName, TEXT("ToolTip"), TEXT("The PlayerStart class used when spawning the player at the current camera location."));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_ULevelEditorPlaySettings(Z_Construct_UClass_ULevelEditorPlaySettings, TEXT("ULevelEditorPlaySettings"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(ULevelEditorPlaySettings);
	UEnum* Z_Construct_UEnum_UnrealEd_EMeasuringToolUnits()
	{
		UPackage* Outer=Z_Construct_UPackage_UnrealEd();
		extern uint32 Get_Z_Construct_UEnum_UnrealEd_EMeasuringToolUnits_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("EMeasuringToolUnits"), 0, Get_Z_Construct_UEnum_UnrealEd_EMeasuringToolUnits_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EMeasuringToolUnits"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("MeasureUnits_Centimeters")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("MeasureUnits_Meters")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("MeasureUnits_Kilometers")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("MeasureUnits_MAX")), 3));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Regular);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("MeasureUnits_Centimeters.DisplayName"), TEXT("Centimeters"));
			MetaData->SetValue(ReturnEnum, TEXT("MeasureUnits_Kilometers.DisplayName"), TEXT("Kilometers"));
			MetaData->SetValue(ReturnEnum, TEXT("MeasureUnits_Meters.DisplayName"), TEXT("Meters"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorViewportSettings.h"));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("Units used by measuring tool"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_UnrealEd_EMeasuringToolUnits_CRC() { return 2673440297U; }
	UEnum* Z_Construct_UEnum_UnrealEd_ELandscapeFoliageEditorControlType()
	{
		UPackage* Outer=Z_Construct_UPackage_UnrealEd();
		extern uint32 Get_Z_Construct_UEnum_UnrealEd_ELandscapeFoliageEditorControlType_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("ELandscapeFoliageEditorControlType"), 0, Get_Z_Construct_UEnum_UnrealEd_ELandscapeFoliageEditorControlType_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ELandscapeFoliageEditorControlType"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ELandscapeFoliageEditorControlType::IgnoreCtrl")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ELandscapeFoliageEditorControlType::RequireCtrl")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ELandscapeFoliageEditorControlType::RequireNoCtrl")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ELandscapeFoliageEditorControlType::ELandscapeFoliageEditorControlType_MAX")), 3));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::EnumClass);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("IgnoreCtrl.DisplayName"), TEXT("Ignore Ctrl key (allow but don't require Ctrl held)"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorViewportSettings.h"));
			MetaData->SetValue(ReturnEnum, TEXT("RequireCtrl.DisplayName"), TEXT("Require Ctrl held for tools"));
			MetaData->SetValue(ReturnEnum, TEXT("RequireNoCtrl.DisplayName"), TEXT("Require Ctrl is not held"));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("Is Ctrl key required for editing landscape/foliage?"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_UnrealEd_ELandscapeFoliageEditorControlType_CRC() { return 1454479336U; }
	UEnum* Z_Construct_UEnum_UnrealEd_EWASDType()
	{
		UPackage* Outer=Z_Construct_UPackage_UnrealEd();
		extern uint32 Get_Z_Construct_UEnum_UnrealEd_EWASDType_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("EWASDType"), 0, Get_Z_Construct_UEnum_UnrealEd_EWASDType_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EWASDType"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("WASD_Always")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("WASD_RMBOnly")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("WASD_Never")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("WASD_MAX")), 3));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Regular);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorViewportSettings.h"));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("Enumerates camera control types for the W, A, S and D keys."));
			MetaData->SetValue(ReturnEnum, TEXT("WASD_Always.DisplayName"), TEXT("Use WASD for Camera Controls"));
			MetaData->SetValue(ReturnEnum, TEXT("WASD_Never.DisplayName"), TEXT("Never use WASD for Camera Controls"));
			MetaData->SetValue(ReturnEnum, TEXT("WASD_RMBOnly.DisplayName"), TEXT("Use WASD only when a Mouse Button is Pressed"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_UnrealEd_EWASDType_CRC() { return 3667459432U; }
	UEnum* Z_Construct_UEnum_UnrealEd_ERotationGridMode()
	{
		UPackage* Outer=Z_Construct_UPackage_UnrealEd();
		extern uint32 Get_Z_Construct_UEnum_UnrealEd_ERotationGridMode_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("ERotationGridMode"), 0, Get_Z_Construct_UEnum_UnrealEd_ERotationGridMode_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ERotationGridMode"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("GridMode_DivisionsOf360")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("GridMode_Common")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("GridMode_MAX")), 2));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Regular);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("GridMode_Common.ToolTip"), TEXT("Uses the user defined grid values."));
			MetaData->SetValue(ReturnEnum, TEXT("GridMode_DivisionsOf360.ToolTip"), TEXT("Using Divisions of 360 degrees (e.g 360/2. 360/3, 360/4, ... )."));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorViewportSettings.h"));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("Enumerates modes for the viewport's rotation grid."));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_UnrealEd_ERotationGridMode_CRC() { return 604533959U; }
	UScriptStruct* Z_Construct_UScriptStruct_FSnapToSurfaceSettings()
	{
		UPackage* Outer=Z_Construct_UPackage_UnrealEd();
		extern uint32 Get_Z_Construct_UScriptStruct_FSnapToSurfaceSettings_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("SnapToSurfaceSettings"), sizeof(FSnapToSurfaceSettings), Get_Z_Construct_UScriptStruct_FSnapToSurfaceSettings_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SnapToSurfaceSettings"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FSnapToSurfaceSettings>, EStructFlags(0x00000201));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bSnapRotation, FSnapToSurfaceSettings, bool);
			UProperty* NewProp_bSnapRotation = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bSnapRotation"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bSnapRotation, FSnapToSurfaceSettings), 0x0000000000004000, CPP_BOOL_PROPERTY_BITMASK(bSnapRotation, FSnapToSurfaceSettings), sizeof(bool), true);
			UProperty* NewProp_SnapOffsetExtent = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("SnapOffsetExtent"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(SnapOffsetExtent, FSnapToSurfaceSettings), 0x0000000000004000);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bEnabled, FSnapToSurfaceSettings, bool);
			UProperty* NewProp_bEnabled = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bEnabled"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bEnabled, FSnapToSurfaceSettings), 0x0000000000004000, CPP_BOOL_PROPERTY_BITMASK(bEnabled, FSnapToSurfaceSettings), sizeof(bool), true);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorViewportSettings.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Settings that control the behavior of the \"snap to surface\" feature"));
			MetaData->SetValue(NewProp_bSnapRotation, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorViewportSettings.h"));
			MetaData->SetValue(NewProp_bSnapRotation, TEXT("ToolTip"), TEXT("Whether objects should match the rotation of the surfaces they snap to"));
			MetaData->SetValue(NewProp_SnapOffsetExtent, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorViewportSettings.h"));
			MetaData->SetValue(NewProp_SnapOffsetExtent, TEXT("ToolTip"), TEXT("The amount of offset to apply when snapping to surfaces"));
			MetaData->SetValue(NewProp_bEnabled, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorViewportSettings.h"));
			MetaData->SetValue(NewProp_bEnabled, TEXT("ToolTip"), TEXT("Whether snapping to surfaces in the world is enabled"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FSnapToSurfaceSettings_CRC() { return 708068948U; }
	UScriptStruct* Z_Construct_UScriptStruct_FLevelEditorViewportInstanceSettingsKeyValuePair()
	{
		UPackage* Outer=Z_Construct_UPackage_UnrealEd();
		extern uint32 Get_Z_Construct_UScriptStruct_FLevelEditorViewportInstanceSettingsKeyValuePair_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("LevelEditorViewportInstanceSettingsKeyValuePair"), sizeof(FLevelEditorViewportInstanceSettingsKeyValuePair), Get_Z_Construct_UScriptStruct_FLevelEditorViewportInstanceSettingsKeyValuePair_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("LevelEditorViewportInstanceSettingsKeyValuePair"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FLevelEditorViewportInstanceSettingsKeyValuePair>, EStructFlags(0x00000201));
			UProperty* NewProp_ConfigSettings = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ConfigSettings"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(ConfigSettings, FLevelEditorViewportInstanceSettingsKeyValuePair), 0x0000000000004000, Z_Construct_UScriptStruct_FLevelEditorViewportInstanceSettings());
			UProperty* NewProp_ConfigName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ConfigName"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(ConfigName, FLevelEditorViewportInstanceSettingsKeyValuePair), 0x0000000000004000);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorViewportSettings.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Implements a key -> value pair for the per-instance view port settings"));
			MetaData->SetValue(NewProp_ConfigSettings, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorViewportSettings.h"));
			MetaData->SetValue(NewProp_ConfigSettings, TEXT("ToolTip"), TEXT("Settings for this config."));
			MetaData->SetValue(NewProp_ConfigName, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorViewportSettings.h"));
			MetaData->SetValue(NewProp_ConfigName, TEXT("ToolTip"), TEXT("Name identifying this config."));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FLevelEditorViewportInstanceSettingsKeyValuePair_CRC() { return 2046025935U; }
	UScriptStruct* Z_Construct_UScriptStruct_FLevelEditorViewportInstanceSettings()
	{
		UPackage* Outer=Z_Construct_UPackage_UnrealEd();
		extern uint32 Get_Z_Construct_UScriptStruct_FLevelEditorViewportInstanceSettings_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("LevelEditorViewportInstanceSettings"), sizeof(FLevelEditorViewportInstanceSettings), Get_Z_Construct_UScriptStruct_FLevelEditorViewportInstanceSettings_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("LevelEditorViewportInstanceSettings"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FLevelEditorViewportInstanceSettings>, EStructFlags(0x00000201));
			UProperty* NewProp_EnabledStats = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("EnabledStats"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(EnabledStats, FLevelEditorViewportInstanceSettings), 0x0000000000004000);
			UProperty* NewProp_EnabledStats_Inner = new(EC_InternalUseOnlyConstructor, NewProp_EnabledStats, TEXT("EnabledStats"), RF_Public|RF_Transient|RF_Native) UStrProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000004000);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bShowStats, FLevelEditorViewportInstanceSettings, bool);
			UProperty* NewProp_bShowStats = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bShowStats"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bShowStats, FLevelEditorViewportInstanceSettings), 0x0000000000004000, CPP_BOOL_PROPERTY_BITMASK(bShowStats, FLevelEditorViewportInstanceSettings), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bShowFPS_DEPRECATED, FLevelEditorViewportInstanceSettings, bool);
			UProperty* NewProp_bShowFPS = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bShowFPS"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bShowFPS_DEPRECATED, FLevelEditorViewportInstanceSettings), 0x0000000020004000, CPP_BOOL_PROPERTY_BITMASK(bShowFPS_DEPRECATED, FLevelEditorViewportInstanceSettings), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bIsRealtime, FLevelEditorViewportInstanceSettings, bool);
			UProperty* NewProp_bIsRealtime = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bIsRealtime"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bIsRealtime, FLevelEditorViewportInstanceSettings), 0x0000000000004000, CPP_BOOL_PROPERTY_BITMASK(bIsRealtime, FLevelEditorViewportInstanceSettings), sizeof(bool), true);
			UProperty* NewProp_FarViewPlane = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("FarViewPlane"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(FarViewPlane, FLevelEditorViewportInstanceSettings), 0x0000000000004000);
			UProperty* NewProp_FOVAngle = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("FOVAngle"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(FOVAngle, FLevelEditorViewportInstanceSettings), 0x0000000000004000);
			UProperty* NewProp_ExposureSettings = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ExposureSettings"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(ExposureSettings, FLevelEditorViewportInstanceSettings), 0x0000000000004000, Z_Construct_UScriptStruct_FExposureSettings());
			UProperty* NewProp_BufferVisualizationMode = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("BufferVisualizationMode"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(BufferVisualizationMode, FLevelEditorViewportInstanceSettings), 0x0000000000004000);
			UProperty* NewProp_GameShowFlagsString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("GameShowFlagsString"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(GameShowFlagsString, FLevelEditorViewportInstanceSettings), 0x0000000000004000);
			UProperty* NewProp_EditorShowFlagsString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("EditorShowFlagsString"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(EditorShowFlagsString, FLevelEditorViewportInstanceSettings), 0x0000000000004000);
			UProperty* NewProp_OrthoViewModeIndex = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("OrthoViewModeIndex"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(OrthoViewModeIndex, FLevelEditorViewportInstanceSettings), 0x0000000000004000, Z_Construct_UEnum_Engine_EViewModeIndex());
			UProperty* NewProp_PerspViewModeIndex = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("PerspViewModeIndex"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(PerspViewModeIndex, FLevelEditorViewportInstanceSettings), 0x0000000000004000, Z_Construct_UEnum_Engine_EViewModeIndex());
			UProperty* NewProp_ViewportType = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ViewportType"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(ViewportType, FLevelEditorViewportInstanceSettings), 0x0000000000004000, Z_Construct_UEnum_UnrealEd_ELevelViewportType());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorViewportSettings.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Implements the Level Editor's per-instance view port settings."));
			MetaData->SetValue(NewProp_EnabledStats, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorViewportSettings.h"));
			MetaData->SetValue(NewProp_EnabledStats, TEXT("ToolTip"), TEXT("Whether viewport statistics should be enabled by default."));
			MetaData->SetValue(NewProp_bShowStats, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorViewportSettings.h"));
			MetaData->SetValue(NewProp_bShowStats, TEXT("ToolTip"), TEXT("Whether viewport statistics should be shown."));
			MetaData->SetValue(NewProp_bShowFPS, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorViewportSettings.h"));
			MetaData->SetValue(NewProp_bShowFPS, TEXT("ToolTip"), TEXT("Whether the FPS counter should be shown."));
			MetaData->SetValue(NewProp_bIsRealtime, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorViewportSettings.h"));
			MetaData->SetValue(NewProp_bIsRealtime, TEXT("ToolTip"), TEXT("Whether this viewport is updating in real-time."));
			MetaData->SetValue(NewProp_FarViewPlane, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorViewportSettings.h"));
			MetaData->SetValue(NewProp_FarViewPlane, TEXT("ToolTip"), TEXT("Position of the var plane in the editor viewport"));
			MetaData->SetValue(NewProp_FOVAngle, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorViewportSettings.h"));
			MetaData->SetValue(NewProp_FOVAngle, TEXT("ToolTip"), TEXT("Field of view angle for the viewport."));
			MetaData->SetValue(NewProp_ExposureSettings, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorViewportSettings.h"));
			MetaData->SetValue(NewProp_ExposureSettings, TEXT("ToolTip"), TEXT("Setting to allow designers to override the automatic expose."));
			MetaData->SetValue(NewProp_BufferVisualizationMode, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorViewportSettings.h"));
			MetaData->SetValue(NewProp_BufferVisualizationMode, TEXT("ToolTip"), TEXT("The buffer visualization mode for the viewport."));
			MetaData->SetValue(NewProp_GameShowFlagsString, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorViewportSettings.h"));
			MetaData->SetValue(NewProp_GameShowFlagsString, TEXT("ToolTip"), TEXT("A set of flags that determines visibility for various scene elements (FEngineShowFlags), converted to string form.\nThese have to be saved as strings since FEngineShowFlags is too complex for UHT to parse correctly."));
			MetaData->SetValue(NewProp_EditorShowFlagsString, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorViewportSettings.h"));
			MetaData->SetValue(NewProp_EditorShowFlagsString, TEXT("ToolTip"), TEXT("A set of flags that determines visibility for various scene elements (FEngineShowFlags), converted to string form.\nThese have to be saved as strings since FEngineShowFlags is too complex for UHT to parse correctly."));
			MetaData->SetValue(NewProp_OrthoViewModeIndex, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorViewportSettings.h"));
			MetaData->SetValue(NewProp_OrthoViewModeIndex, TEXT("ToolTip"), TEXT("View mode to set when this viewport is not of type LVT_Perspective."));
			MetaData->SetValue(NewProp_PerspViewModeIndex, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorViewportSettings.h"));
			MetaData->SetValue(NewProp_PerspViewModeIndex, TEXT("ToolTip"), TEXT("View mode to set when this viewport is of type LVT_Perspective."));
			MetaData->SetValue(NewProp_ViewportType, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorViewportSettings.h"));
			MetaData->SetValue(NewProp_ViewportType, TEXT("ToolTip"), TEXT("The viewport type"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FLevelEditorViewportInstanceSettings_CRC() { return 2699036784U; }
	UClass* Z_Construct_UClass_ULevelEditorViewportSettings_NoRegister()
	{
		return ULevelEditorViewportSettings::StaticClass();
	}
	UClass* Z_Construct_UClass_ULevelEditorViewportSettings()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = ULevelEditorViewportSettings::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100084;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_PerInstanceSettings = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("PerInstanceSettings"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(PerInstanceSettings, ULevelEditorViewportSettings), 0x0000000000004000);
				UProperty* NewProp_PerInstanceSettings_Inner = new(EC_InternalUseOnlyConstructor, NewProp_PerInstanceSettings, TEXT("PerInstanceSettings"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000004000, Z_Construct_UScriptStruct_FLevelEditorViewportInstanceSettingsKeyValuePair());
				UProperty* NewProp_MeasuringToolUnits = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MeasuringToolUnits"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(MeasuringToolUnits, ULevelEditorViewportSettings), 0x0000000000004001, Z_Construct_UEnum_UnrealEd_EMeasuringToolUnits());
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bSaveEngineStats, ULevelEditorViewportSettings, uint8);
				UProperty* NewProp_bSaveEngineStats = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bSaveEngineStats"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bSaveEngineStats, ULevelEditorViewportSettings), 0x0000040000004001, CPP_BOOL_PROPERTY_BITMASK(bSaveEngineStats, ULevelEditorViewportSettings), sizeof(uint8), false);
				UProperty* NewProp_TransformWidgetSizeAdjustment = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("TransformWidgetSizeAdjustment"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(TransformWidgetSizeAdjustment, ULevelEditorViewportSettings), 0x0000040000004001);
				UProperty* NewProp_BillboardScale = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("BillboardScale"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(BillboardScale, ULevelEditorViewportSettings), 0x0000040000004001);
				UProperty* NewProp_PreviewMeshes = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("PreviewMeshes"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(PreviewMeshes, ULevelEditorViewportSettings), 0x0000000000004001);
				UProperty* NewProp_PreviewMeshes_Inner = new(EC_InternalUseOnlyConstructor, NewProp_PreviewMeshes, TEXT("PreviewMeshes"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000004000, Z_Construct_UScriptStruct_FStringAssetReference());
				UProperty* NewProp_BackgroundDropDistance = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("BackgroundDropDistance"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(BackgroundDropDistance, ULevelEditorViewportSettings), 0x0000040000004001);
				UProperty* NewProp_CameraPreviewSize = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CameraPreviewSize"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(CameraPreviewSize, ULevelEditorViewportSettings), 0x0000000000004001);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bPreviewSelectedCameras, ULevelEditorViewportSettings, uint8);
				UProperty* NewProp_bPreviewSelectedCameras = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bPreviewSelectedCameras"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bPreviewSelectedCameras, ULevelEditorViewportSettings), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(bPreviewSelectedCameras, ULevelEditorViewportSettings), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bEnableViewportCameraToUpdateFromPIV, ULevelEditorViewportSettings, uint8);
				UProperty* NewProp_bEnableViewportCameraToUpdateFromPIV = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bEnableViewportCameraToUpdateFromPIV"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bEnableViewportCameraToUpdateFromPIV, ULevelEditorViewportSettings), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(bEnableViewportCameraToUpdateFromPIV, ULevelEditorViewportSettings), sizeof(uint8), false);
				UProperty* NewProp_HoverHighlightIntensity = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("HoverHighlightIntensity"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(HoverHighlightIntensity, ULevelEditorViewportSettings), 0x0000040000004001);
				UProperty* NewProp_BSPSelectionHighlightIntensity = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("BSPSelectionHighlightIntensity"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(BSPSelectionHighlightIntensity, ULevelEditorViewportSettings), 0x0000040000004001);
				UProperty* NewProp_SelectionHighlightIntensity = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SelectionHighlightIntensity"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(SelectionHighlightIntensity, ULevelEditorViewportSettings), 0x0000000000004001);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bUseSelectionOutline, ULevelEditorViewportSettings, uint8);
				UProperty* NewProp_bUseSelectionOutline = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bUseSelectionOutline"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bUseSelectionOutline, ULevelEditorViewportSettings), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(bUseSelectionOutline, ULevelEditorViewportSettings), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bTransparentBoxSelection, ULevelEditorViewportSettings, uint8);
				UProperty* NewProp_bTransparentBoxSelection = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bTransparentBoxSelection"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bTransparentBoxSelection, ULevelEditorViewportSettings), 0x0000000000004000, CPP_BOOL_PROPERTY_BITMASK(bTransparentBoxSelection, ULevelEditorViewportSettings), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bStrictBoxSelection, ULevelEditorViewportSettings, uint8);
				UProperty* NewProp_bStrictBoxSelection = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bStrictBoxSelection"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bStrictBoxSelection, ULevelEditorViewportSettings), 0x0000000000004000, CPP_BOOL_PROPERTY_BITMASK(bStrictBoxSelection, ULevelEditorViewportSettings), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bUseLinkedOrthographicViewports, ULevelEditorViewportSettings, uint8);
				UProperty* NewProp_bUseLinkedOrthographicViewports = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bUseLinkedOrthographicViewports"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bUseLinkedOrthographicViewports, ULevelEditorViewportSettings), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(bUseLinkedOrthographicViewports, ULevelEditorViewportSettings), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bHighlightWithBrackets, ULevelEditorViewportSettings, uint8);
				UProperty* NewProp_bHighlightWithBrackets = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bHighlightWithBrackets"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bHighlightWithBrackets, ULevelEditorViewportSettings), 0x0000040000004001, CPP_BOOL_PROPERTY_BITMASK(bHighlightWithBrackets, ULevelEditorViewportSettings), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bEnableViewportHoverFeedback, ULevelEditorViewportSettings, uint8);
				UProperty* NewProp_bEnableViewportHoverFeedback = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bEnableViewportHoverFeedback"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bEnableViewportHoverFeedback, ULevelEditorViewportSettings), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(bEnableViewportHoverFeedback, ULevelEditorViewportSettings), sizeof(uint8), false);
				UProperty* NewProp_AspectRatioAxisConstraint = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AspectRatioAxisConstraint"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(AspectRatioAxisConstraint, ULevelEditorViewportSettings), 0x0000000000004001, Z_Construct_UEnum_Engine_EAspectRatioAxisConstraint());
				UProperty* NewProp_CurrentRotGridMode = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CurrentRotGridMode"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(CurrentRotGridMode, ULevelEditorViewportSettings), 0x0000000000004000, Z_Construct_UEnum_UnrealEd_ERotationGridMode());
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(PreserveNonUniformScale, ULevelEditorViewportSettings, bool);
				UProperty* NewProp_PreserveNonUniformScale = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("PreserveNonUniformScale"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(PreserveNonUniformScale, ULevelEditorViewportSettings), 0x0000000000004000, CPP_BOOL_PROPERTY_BITMASK(PreserveNonUniformScale, ULevelEditorViewportSettings), sizeof(bool), true);
				UProperty* NewProp_CurrentScalingGridSize = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CurrentScalingGridSize"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(CurrentScalingGridSize, ULevelEditorViewportSettings), 0x0000000000004000);
				UProperty* NewProp_CurrentRotGridSize = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CurrentRotGridSize"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(CurrentRotGridSize, ULevelEditorViewportSettings), 0x0000000000004000);
				UProperty* NewProp_CurrentPosGridSize = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CurrentPosGridSize"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(CurrentPosGridSize, ULevelEditorViewportSettings), 0x0000000000004000);
				UProperty* NewProp_SnapDistance = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SnapDistance"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(SnapDistance, ULevelEditorViewportSettings), 0x0000000000004000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bSnapVertices, ULevelEditorViewportSettings, bool);
				UProperty* NewProp_bSnapVertices = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bSnapVertices"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bSnapVertices, ULevelEditorViewportSettings), 0x0000000000004000, CPP_BOOL_PROPERTY_BITMASK(bSnapVertices, ULevelEditorViewportSettings), sizeof(bool), true);
				UProperty* NewProp_ActorSnapDistance = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ActorSnapDistance"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(ActorSnapDistance, ULevelEditorViewportSettings), 0x0000000000004000);
				UProperty* NewProp_ActorSnapScale = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ActorSnapScale"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(ActorSnapScale, ULevelEditorViewportSettings), 0x0000040000034001);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bEnableActorSnap, ULevelEditorViewportSettings, uint8);
				UProperty* NewProp_bEnableActorSnap = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bEnableActorSnap"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bEnableActorSnap, ULevelEditorViewportSettings), 0x0000040000034001, CPP_BOOL_PROPERTY_BITMASK(bEnableActorSnap, ULevelEditorViewportSettings), sizeof(uint8), false);
				UProperty* NewProp_ActiveSnapLayerIndex = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ActiveSnapLayerIndex"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(ActiveSnapLayerIndex, ULevelEditorViewportSettings), 0x0000000000004000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bEnableLayerSnap, ULevelEditorViewportSettings, uint8);
				UProperty* NewProp_bEnableLayerSnap = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bEnableLayerSnap"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bEnableLayerSnap, ULevelEditorViewportSettings), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(bEnableLayerSnap, ULevelEditorViewportSettings), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bUsePercentageBasedScaling, ULevelEditorViewportSettings, uint8);
				UProperty* NewProp_bUsePercentageBasedScaling = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bUsePercentageBasedScaling"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bUsePercentageBasedScaling, ULevelEditorViewportSettings), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(bUsePercentageBasedScaling, ULevelEditorViewportSettings), sizeof(uint8), false);
				UProperty* NewProp_SnapToSurface = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SnapToSurface"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(SnapToSurface, ULevelEditorViewportSettings), 0x0000000000004000, Z_Construct_UScriptStruct_FSnapToSurfaceSettings());
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(SnapScaleEnabled, ULevelEditorViewportSettings, uint8);
				UProperty* NewProp_SnapScaleEnabled = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SnapScaleEnabled"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(SnapScaleEnabled, ULevelEditorViewportSettings), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(SnapScaleEnabled, ULevelEditorViewportSettings), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(RotGridEnabled, ULevelEditorViewportSettings, uint8);
				UProperty* NewProp_RotGridEnabled = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("RotGridEnabled"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(RotGridEnabled, ULevelEditorViewportSettings), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(RotGridEnabled, ULevelEditorViewportSettings), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(GridEnabled, ULevelEditorViewportSettings, uint8);
				UProperty* NewProp_GridEnabled = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("GridEnabled"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(GridEnabled, ULevelEditorViewportSettings), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(GridEnabled, ULevelEditorViewportSettings), sizeof(uint8), false);
				UProperty* NewProp_ScalingGridSizes = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ScalingGridSizes"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(ScalingGridSizes, ULevelEditorViewportSettings), 0x0000040000004001);
				UProperty* NewProp_ScalingGridSizes_Inner = new(EC_InternalUseOnlyConstructor, NewProp_ScalingGridSizes, TEXT("ScalingGridSizes"), RF_Public|RF_Transient|RF_Native) UFloatProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000004000);
				UProperty* NewProp_DivisionsOf360RotGridSizes = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("DivisionsOf360RotGridSizes"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(DivisionsOf360RotGridSizes, ULevelEditorViewportSettings), 0x0000040000004001);
				UProperty* NewProp_DivisionsOf360RotGridSizes_Inner = new(EC_InternalUseOnlyConstructor, NewProp_DivisionsOf360RotGridSizes, TEXT("DivisionsOf360RotGridSizes"), RF_Public|RF_Transient|RF_Native) UFloatProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000004000);
				UProperty* NewProp_CommonRotGridSizes = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CommonRotGridSizes"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(CommonRotGridSizes, ULevelEditorViewportSettings), 0x0000040000004001);
				UProperty* NewProp_CommonRotGridSizes_Inner = new(EC_InternalUseOnlyConstructor, NewProp_CommonRotGridSizes, TEXT("CommonRotGridSizes"), RF_Public|RF_Transient|RF_Native) UFloatProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000004000);
				UProperty* NewProp_Pow2GridIntervals = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Pow2GridIntervals"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(Pow2GridIntervals, ULevelEditorViewportSettings), 0x0000040000004001);
				UProperty* NewProp_Pow2GridIntervals_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Pow2GridIntervals, TEXT("Pow2GridIntervals"), RF_Public|RF_Transient|RF_Native) UFloatProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000004000);
				UProperty* NewProp_Pow2GridSizes = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Pow2GridSizes"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(Pow2GridSizes, ULevelEditorViewportSettings), 0x0000040000004001);
				UProperty* NewProp_Pow2GridSizes_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Pow2GridSizes, TEXT("Pow2GridSizes"), RF_Public|RF_Transient|RF_Native) UFloatProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000004000);
				UProperty* NewProp_DecimalGridIntervals = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("DecimalGridIntervals"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(DecimalGridIntervals, ULevelEditorViewportSettings), 0x0000040000004001);
				UProperty* NewProp_DecimalGridIntervals_Inner = new(EC_InternalUseOnlyConstructor, NewProp_DecimalGridIntervals, TEXT("DecimalGridIntervals"), RF_Public|RF_Transient|RF_Native) UFloatProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000004000);
				UProperty* NewProp_DecimalGridSizes = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("DecimalGridSizes"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(DecimalGridSizes, ULevelEditorViewportSettings), 0x0000040000004001);
				UProperty* NewProp_DecimalGridSizes_Inner = new(EC_InternalUseOnlyConstructor, NewProp_DecimalGridSizes, TEXT("DecimalGridSizes"), RF_Public|RF_Transient|RF_Native) UFloatProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000004000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bUsePowerOf2SnapSize, ULevelEditorViewportSettings, bool);
				UProperty* NewProp_bUsePowerOf2SnapSize = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bUsePowerOf2SnapSize"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bUsePowerOf2SnapSize, ULevelEditorViewportSettings), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(bUsePowerOf2SnapSize, ULevelEditorViewportSettings), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bUseUE3OrbitControls, ULevelEditorViewportSettings, bool);
				UProperty* NewProp_bUseUE3OrbitControls = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bUseUE3OrbitControls"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bUseUE3OrbitControls, ULevelEditorViewportSettings), 0x0000040000004001, CPP_BOOL_PROPERTY_BITMASK(bUseUE3OrbitControls, ULevelEditorViewportSettings), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bLevelStreamingVolumePrevis, ULevelEditorViewportSettings, bool);
				UProperty* NewProp_bLevelStreamingVolumePrevis = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bLevelStreamingVolumePrevis"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bLevelStreamingVolumePrevis, ULevelEditorViewportSettings), 0x0000040000004001, CPP_BOOL_PROPERTY_BITMASK(bLevelStreamingVolumePrevis, ULevelEditorViewportSettings), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bUseAbsoluteTranslation, ULevelEditorViewportSettings, uint8);
				UProperty* NewProp_bUseAbsoluteTranslation = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bUseAbsoluteTranslation"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bUseAbsoluteTranslation, ULevelEditorViewportSettings), 0x0000040000004001, CPP_BOOL_PROPERTY_BITMASK(bUseAbsoluteTranslation, ULevelEditorViewportSettings), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bInvertMiddleMousePan, ULevelEditorViewportSettings, bool);
				UProperty* NewProp_bInvertMiddleMousePan = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bInvertMiddleMousePan"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bInvertMiddleMousePan, ULevelEditorViewportSettings), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(bInvertMiddleMousePan, ULevelEditorViewportSettings), sizeof(bool), true);
				UProperty* NewProp_MouseSensitivty = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MouseSensitivty"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(MouseSensitivty, ULevelEditorViewportSettings), 0x0000000000004001);
				UProperty* NewProp_MouseScrollCameraSpeed = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MouseScrollCameraSpeed"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(MouseScrollCameraSpeed, ULevelEditorViewportSettings), 0x0000000000004001);
				UProperty* NewProp_CameraSpeed = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CameraSpeed"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(CameraSpeed, ULevelEditorViewportSettings), 0x0000000000004000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bClickBSPSelectsBrush, ULevelEditorViewportSettings, uint8);
				UProperty* NewProp_bClickBSPSelectsBrush = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bClickBSPSelectsBrush"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bClickBSPSelectsBrush, ULevelEditorViewportSettings), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(bClickBSPSelectsBrush, ULevelEditorViewportSettings), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bAllowTranslateRotateZWidget, ULevelEditorViewportSettings, uint8);
				UProperty* NewProp_bAllowTranslateRotateZWidget = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bAllowTranslateRotateZWidget"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bAllowTranslateRotateZWidget, ULevelEditorViewportSettings), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(bAllowTranslateRotateZWidget, ULevelEditorViewportSettings), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bCenterZoomAroundCursor, ULevelEditorViewportSettings, uint8);
				UProperty* NewProp_bCenterZoomAroundCursor = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bCenterZoomAroundCursor"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bCenterZoomAroundCursor, ULevelEditorViewportSettings), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(bCenterZoomAroundCursor, ULevelEditorViewportSettings), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bPanMovesCanvas, ULevelEditorViewportSettings, uint8);
				UProperty* NewProp_bPanMovesCanvas = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bPanMovesCanvas"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bPanMovesCanvas, ULevelEditorViewportSettings), 0x0000040000004001, CPP_BOOL_PROPERTY_BITMASK(bPanMovesCanvas, ULevelEditorViewportSettings), sizeof(uint8), false);
				UProperty* NewProp_FoliageEditorControlType = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("FoliageEditorControlType"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(FoliageEditorControlType, ULevelEditorViewportSettings), 0x0000000000004001, Z_Construct_UEnum_UnrealEd_ELandscapeFoliageEditorControlType());
				UProperty* NewProp_LandscapeEditorControlType = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("LandscapeEditorControlType"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(LandscapeEditorControlType, ULevelEditorViewportSettings), 0x0000000000004001, Z_Construct_UEnum_UnrealEd_ELandscapeFoliageEditorControlType());
				UProperty* NewProp_FlightCameraControlType = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("FlightCameraControlType"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(FlightCameraControlType, ULevelEditorViewportSettings), 0x0000000000004001, Z_Construct_UEnum_UnrealEd_EWASDType());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->ClassConfigName = FName(TEXT("EditorPerProjectUserSettings"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Settings/LevelEditorViewportSettings.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorViewportSettings.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Implements the Level Editor's view port settings."));
				MetaData->SetValue(NewProp_PerInstanceSettings, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorViewportSettings.h"));
				MetaData->SetValue(NewProp_PerInstanceSettings, TEXT("ToolTip"), TEXT("Per-instance viewport settings."));
				MetaData->SetValue(NewProp_MeasuringToolUnits, TEXT("Category"), TEXT("LookAndFeel"));
				MetaData->SetValue(NewProp_MeasuringToolUnits, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorViewportSettings.h"));
				MetaData->SetValue(NewProp_MeasuringToolUnits, TEXT("ToolTip"), TEXT("Specify the units used by the measuring tool"));
				MetaData->SetValue(NewProp_bSaveEngineStats, TEXT("Category"), TEXT("LookAndFeel"));
				MetaData->SetValue(NewProp_bSaveEngineStats, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorViewportSettings.h"));
				MetaData->SetValue(NewProp_bSaveEngineStats, TEXT("ToolTip"), TEXT("When enabled, engine stats that are enabled in level viewports are preserved between editor sessions"));
				MetaData->SetValue(NewProp_TransformWidgetSizeAdjustment, TEXT("Category"), TEXT("LookAndFeel"));
				MetaData->SetValue(NewProp_TransformWidgetSizeAdjustment, TEXT("ClampMax"), TEXT("150"));
				MetaData->SetValue(NewProp_TransformWidgetSizeAdjustment, TEXT("ClampMin"), TEXT("-10"));
				MetaData->SetValue(NewProp_TransformWidgetSizeAdjustment, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorViewportSettings.h"));
				MetaData->SetValue(NewProp_TransformWidgetSizeAdjustment, TEXT("ToolTip"), TEXT("The size adjustment to apply to the translate/rotate/scale widgets (in Unreal units)."));
				MetaData->SetValue(NewProp_BillboardScale, TEXT("Category"), TEXT("LookAndFeel"));
				MetaData->SetValue(NewProp_BillboardScale, TEXT("ClampMin"), TEXT("0.01"));
				MetaData->SetValue(NewProp_BillboardScale, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorViewportSettings.h"));
				MetaData->SetValue(NewProp_BillboardScale, TEXT("UIMax"), TEXT("5"));
				MetaData->SetValue(NewProp_BillboardScale, TEXT("UIMin"), TEXT("0.01"));
				MetaData->SetValue(NewProp_PreviewMeshes, TEXT("AllowedClasses"), TEXT("StaticMesh"));
				MetaData->SetValue(NewProp_PreviewMeshes, TEXT("Category"), TEXT("Preview"));
				MetaData->SetValue(NewProp_PreviewMeshes, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorViewportSettings.h"));
				MetaData->SetValue(NewProp_PreviewMeshes, TEXT("ToolTip"), TEXT("A list of meshes that can be used as preview mesh in the editor view port by holding down the backslash key"));
				MetaData->SetValue(NewProp_BackgroundDropDistance, TEXT("Category"), TEXT("LookAndFeel"));
				MetaData->SetValue(NewProp_BackgroundDropDistance, TEXT("DisplayName"), TEXT("Background Drop Distance"));
				MetaData->SetValue(NewProp_BackgroundDropDistance, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorViewportSettings.h"));
				MetaData->SetValue(NewProp_BackgroundDropDistance, TEXT("ToolTip"), TEXT("Distance from the camera to place actors which are dropped on nothing in the view port."));
				MetaData->SetValue(NewProp_CameraPreviewSize, TEXT("Category"), TEXT("LookAndFeel"));
				MetaData->SetValue(NewProp_CameraPreviewSize, TEXT("ClampMin"), TEXT("1"));
				MetaData->SetValue(NewProp_CameraPreviewSize, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorViewportSettings.h"));
				MetaData->SetValue(NewProp_CameraPreviewSize, TEXT("ToolTip"), TEXT("Affects the size of 'picture in picture' previews if they are enabled"));
				MetaData->SetValue(NewProp_CameraPreviewSize, TEXT("UIMax"), TEXT("10"));
				MetaData->SetValue(NewProp_CameraPreviewSize, TEXT("UIMin"), TEXT("1"));
				MetaData->SetValue(NewProp_bPreviewSelectedCameras, TEXT("Category"), TEXT("LookAndFeel"));
				MetaData->SetValue(NewProp_bPreviewSelectedCameras, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorViewportSettings.h"));
				MetaData->SetValue(NewProp_bPreviewSelectedCameras, TEXT("ToolTip"), TEXT("When enabled, selecting a camera actor will display a live 'picture in picture' preview from the camera's perspective within the current editor view port.  This can be used to easily tweak camera positioning, post-processing and other settings without having to possess the camera itself.  This feature may reduce application performance when enabled."));
				MetaData->SetValue(NewProp_bEnableViewportCameraToUpdateFromPIV, TEXT("Category"), TEXT("LookAndFeel"));
				MetaData->SetValue(NewProp_bEnableViewportCameraToUpdateFromPIV, TEXT("DisplayName"), TEXT("Use Camera Location from Play-In-Viewport"));
				MetaData->SetValue(NewProp_bEnableViewportCameraToUpdateFromPIV, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorViewportSettings.h"));
				MetaData->SetValue(NewProp_bEnableViewportCameraToUpdateFromPIV, TEXT("ToolTip"), TEXT("Enables the editor perspective camera to be dropped at the last PlayInViewport cam position"));
				MetaData->SetValue(NewProp_HoverHighlightIntensity, TEXT("Category"), TEXT("LookAndFeel"));
				MetaData->SetValue(NewProp_HoverHighlightIntensity, TEXT("ClampMin"), TEXT("0"));
				MetaData->SetValue(NewProp_HoverHighlightIntensity, TEXT("DisplayName"), TEXT("Hover Highlight Intensity"));
				MetaData->SetValue(NewProp_HoverHighlightIntensity, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorViewportSettings.h"));
				MetaData->SetValue(NewProp_HoverHighlightIntensity, TEXT("ToolTip"), TEXT("Sets the intensity of the overlay displayed when an object is hovered"));
				MetaData->SetValue(NewProp_HoverHighlightIntensity, TEXT("UIMax"), TEXT("20"));
				MetaData->SetValue(NewProp_HoverHighlightIntensity, TEXT("UIMin"), TEXT("0"));
				MetaData->SetValue(NewProp_BSPSelectionHighlightIntensity, TEXT("Category"), TEXT("LookAndFeel"));
				MetaData->SetValue(NewProp_BSPSelectionHighlightIntensity, TEXT("ClampMin"), TEXT("0"));
				MetaData->SetValue(NewProp_BSPSelectionHighlightIntensity, TEXT("DisplayName"), TEXT("BSP Surface Highlight Intensity"));
				MetaData->SetValue(NewProp_BSPSelectionHighlightIntensity, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorViewportSettings.h"));
				MetaData->SetValue(NewProp_BSPSelectionHighlightIntensity, TEXT("ToolTip"), TEXT("Sets the intensity of the overlay displayed when an object is selected"));
				MetaData->SetValue(NewProp_BSPSelectionHighlightIntensity, TEXT("UIMax"), TEXT("1"));
				MetaData->SetValue(NewProp_BSPSelectionHighlightIntensity, TEXT("UIMin"), TEXT("0"));
				MetaData->SetValue(NewProp_SelectionHighlightIntensity, TEXT("Category"), TEXT("LookAndFeel"));
				MetaData->SetValue(NewProp_SelectionHighlightIntensity, TEXT("ClampMin"), TEXT("0"));
				MetaData->SetValue(NewProp_SelectionHighlightIntensity, TEXT("DisplayName"), TEXT("Selection Highlight Intensity"));
				MetaData->SetValue(NewProp_SelectionHighlightIntensity, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorViewportSettings.h"));
				MetaData->SetValue(NewProp_SelectionHighlightIntensity, TEXT("ToolTip"), TEXT("Sets the intensity of the overlay displayed when an object is selected"));
				MetaData->SetValue(NewProp_SelectionHighlightIntensity, TEXT("UIMax"), TEXT("1"));
				MetaData->SetValue(NewProp_SelectionHighlightIntensity, TEXT("UIMin"), TEXT("0"));
				MetaData->SetValue(NewProp_bUseSelectionOutline, TEXT("Category"), TEXT("LookAndFeel"));
				MetaData->SetValue(NewProp_bUseSelectionOutline, TEXT("DisplayName"), TEXT("Use Selection Outline"));
				MetaData->SetValue(NewProp_bUseSelectionOutline, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorViewportSettings.h"));
				MetaData->SetValue(NewProp_bUseSelectionOutline, TEXT("ToolTip"), TEXT("Whether to show selection outlines for selected Actors"));
				MetaData->SetValue(NewProp_bTransparentBoxSelection, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorViewportSettings.h"));
				MetaData->SetValue(NewProp_bTransparentBoxSelection, TEXT("ToolTip"), TEXT("True if viewport box selection also selects occluded objects, false if only objects with visible pixels are selected"));
				MetaData->SetValue(NewProp_bStrictBoxSelection, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorViewportSettings.h"));
				MetaData->SetValue(NewProp_bStrictBoxSelection, TEXT("ToolTip"), TEXT("True if viewport box selection requires objects to be fully encompassed by the selection box to be selected"));
				MetaData->SetValue(NewProp_bUseLinkedOrthographicViewports, TEXT("Category"), TEXT("LookAndFeel"));
				MetaData->SetValue(NewProp_bUseLinkedOrthographicViewports, TEXT("DisplayName"), TEXT("Link Orthographic Viewport Movement"));
				MetaData->SetValue(NewProp_bUseLinkedOrthographicViewports, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorViewportSettings.h"));
				MetaData->SetValue(NewProp_bUseLinkedOrthographicViewports, TEXT("ToolTip"), TEXT("If checked all orthographic view ports are linked to the same position and move together."));
				MetaData->SetValue(NewProp_bHighlightWithBrackets, TEXT("Category"), TEXT("LookAndFeel"));
				MetaData->SetValue(NewProp_bHighlightWithBrackets, TEXT("DisplayName"), TEXT("Highlight Selected Objects with Brackets"));
				MetaData->SetValue(NewProp_bHighlightWithBrackets, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorViewportSettings.h"));
				MetaData->SetValue(NewProp_bHighlightWithBrackets, TEXT("ToolTip"), TEXT("If enabled, selected objects will be highlighted with brackets in all modes rather than a special highlight color."));
				MetaData->SetValue(NewProp_bEnableViewportHoverFeedback, TEXT("Category"), TEXT("LookAndFeel"));
				MetaData->SetValue(NewProp_bEnableViewportHoverFeedback, TEXT("DisplayName"), TEXT("Highlight Objects Under Mouse Cursor"));
				MetaData->SetValue(NewProp_bEnableViewportHoverFeedback, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorViewportSettings.h"));
				MetaData->SetValue(NewProp_bEnableViewportHoverFeedback, TEXT("ToolTip"), TEXT("Enables real-time hover feedback when mousing over objects in editor view ports"));
				MetaData->SetValue(NewProp_AspectRatioAxisConstraint, TEXT("Category"), TEXT("LookAndFeel"));
				MetaData->SetValue(NewProp_AspectRatioAxisConstraint, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorViewportSettings.h"));
				MetaData->SetValue(NewProp_AspectRatioAxisConstraint, TEXT("ToolTip"), TEXT("How to constrain perspective view port FOV"));
				MetaData->SetValue(NewProp_CurrentRotGridMode, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorViewportSettings.h"));
				MetaData->SetValue(NewProp_CurrentRotGridMode, TEXT("ToolTip"), TEXT("Controls which array of rotation grid values we are using"));
				MetaData->SetValue(NewProp_PreserveNonUniformScale, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorViewportSettings.h"));
				MetaData->SetValue(NewProp_CurrentScalingGridSize, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorViewportSettings.h"));
				MetaData->SetValue(NewProp_CurrentRotGridSize, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorViewportSettings.h"));
				MetaData->SetValue(NewProp_CurrentPosGridSize, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorViewportSettings.h"));
				MetaData->SetValue(NewProp_SnapDistance, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorViewportSettings.h"));
				MetaData->SetValue(NewProp_bSnapVertices, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorViewportSettings.h"));
				MetaData->SetValue(NewProp_ActorSnapDistance, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorViewportSettings.h"));
				MetaData->SetValue(NewProp_ActorSnapDistance, TEXT("ToolTip"), TEXT("Global actor snap distance setting for the editor"));
				MetaData->SetValue(NewProp_ActorSnapScale, TEXT("Category"), TEXT("GridSnapping"));
				MetaData->SetValue(NewProp_ActorSnapScale, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorViewportSettings.h"));
				MetaData->SetValue(NewProp_ActorSnapScale, TEXT("ToolTip"), TEXT("Global actor snap scale for the editor"));
				MetaData->SetValue(NewProp_bEnableActorSnap, TEXT("Category"), TEXT("GridSnapping"));
				MetaData->SetValue(NewProp_bEnableActorSnap, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorViewportSettings.h"));
				MetaData->SetValue(NewProp_bEnableActorSnap, TEXT("ToolTip"), TEXT("If true actor snap will be enabled in the editor *"));
				MetaData->SetValue(NewProp_ActiveSnapLayerIndex, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorViewportSettings.h"));
				MetaData->SetValue(NewProp_ActiveSnapLayerIndex, TEXT("ToolTip"), TEXT("The index of the snap plane to use when bEnableLayerSnap is true (from the project SnapLayers array)"));
				MetaData->SetValue(NewProp_bEnableLayerSnap, TEXT("Category"), TEXT("GridSnapping"));
				MetaData->SetValue(NewProp_bEnableLayerSnap, TEXT("DisplayName"), TEXT("Enable 2D Layer Snapping"));
				MetaData->SetValue(NewProp_bEnableLayerSnap, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorViewportSettings.h"));
				MetaData->SetValue(NewProp_bEnableLayerSnap, TEXT("ToolTip"), TEXT("If enabled, actor rotations will snap to the grid."));
				MetaData->SetValue(NewProp_bUsePercentageBasedScaling, TEXT("Category"), TEXT("GridSnapping"));
				MetaData->SetValue(NewProp_bUsePercentageBasedScaling, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorViewportSettings.h"));
				MetaData->SetValue(NewProp_bUsePercentageBasedScaling, TEXT("ToolTip"), TEXT("If enabled, use the old-style multiplicative/percentage scaling method instead of the new additive/fraction method"));
				MetaData->SetValue(NewProp_SnapToSurface, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorViewportSettings.h"));
				MetaData->SetValue(NewProp_SnapToSurface, TEXT("ToolTip"), TEXT("If enabled, actors will snap to surfaces in the viewport when dragged around"));
				MetaData->SetValue(NewProp_SnapScaleEnabled, TEXT("Category"), TEXT("GridSnapping"));
				MetaData->SetValue(NewProp_SnapScaleEnabled, TEXT("DisplayName"), TEXT("Enable Scale Snapping"));
				MetaData->SetValue(NewProp_SnapScaleEnabled, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorViewportSettings.h"));
				MetaData->SetValue(NewProp_SnapScaleEnabled, TEXT("ToolTip"), TEXT("If enabled, actor sizes will snap to the grid."));
				MetaData->SetValue(NewProp_RotGridEnabled, TEXT("Category"), TEXT("GridSnapping"));
				MetaData->SetValue(NewProp_RotGridEnabled, TEXT("DisplayName"), TEXT("Enable Rotation Snapping"));
				MetaData->SetValue(NewProp_RotGridEnabled, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorViewportSettings.h"));
				MetaData->SetValue(NewProp_RotGridEnabled, TEXT("ToolTip"), TEXT("If enabled, actor rotations will snap to the grid."));
				MetaData->SetValue(NewProp_GridEnabled, TEXT("Category"), TEXT("GridSnapping"));
				MetaData->SetValue(NewProp_GridEnabled, TEXT("DisplayName"), TEXT("Enable Grid Snapping"));
				MetaData->SetValue(NewProp_GridEnabled, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorViewportSettings.h"));
				MetaData->SetValue(NewProp_GridEnabled, TEXT("ToolTip"), TEXT("If enabled, actor positions will snap to the grid."));
				MetaData->SetValue(NewProp_ScalingGridSizes, TEXT("Category"), TEXT("GridSnapping"));
				MetaData->SetValue(NewProp_ScalingGridSizes, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorViewportSettings.h"));
				MetaData->SetValue(NewProp_ScalingGridSizes, TEXT("ToolTip"), TEXT("Grid sizes for scaling"));
				MetaData->SetValue(NewProp_DivisionsOf360RotGridSizes, TEXT("Category"), TEXT("GridSnapping"));
				MetaData->SetValue(NewProp_DivisionsOf360RotGridSizes, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorViewportSettings.h"));
				MetaData->SetValue(NewProp_DivisionsOf360RotGridSizes, TEXT("ToolTip"), TEXT("Preset grid intervals for rotations"));
				MetaData->SetValue(NewProp_CommonRotGridSizes, TEXT("Category"), TEXT("GridSnapping"));
				MetaData->SetValue(NewProp_CommonRotGridSizes, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorViewportSettings.h"));
				MetaData->SetValue(NewProp_CommonRotGridSizes, TEXT("ToolTip"), TEXT("User defined grid intervals for rotations"));
				MetaData->SetValue(NewProp_Pow2GridIntervals, TEXT("Category"), TEXT("GridSnapping"));
				MetaData->SetValue(NewProp_Pow2GridIntervals, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorViewportSettings.h"));
				MetaData->SetValue(NewProp_Pow2GridIntervals, TEXT("ToolTip"), TEXT("The number of lines between each major line interval for pow2 grids"));
				MetaData->SetValue(NewProp_Pow2GridSizes, TEXT("Category"), TEXT("GridSnapping"));
				MetaData->SetValue(NewProp_Pow2GridSizes, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorViewportSettings.h"));
				MetaData->SetValue(NewProp_Pow2GridSizes, TEXT("ToolTip"), TEXT("Power of 2 grid sizes (for translation snapping and grid rendering)"));
				MetaData->SetValue(NewProp_DecimalGridIntervals, TEXT("Category"), TEXT("GridSnapping"));
				MetaData->SetValue(NewProp_DecimalGridIntervals, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorViewportSettings.h"));
				MetaData->SetValue(NewProp_DecimalGridIntervals, TEXT("ToolTip"), TEXT("The number of lines between each major line interval for decimal grids"));
				MetaData->SetValue(NewProp_DecimalGridSizes, TEXT("Category"), TEXT("GridSnapping"));
				MetaData->SetValue(NewProp_DecimalGridSizes, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorViewportSettings.h"));
				MetaData->SetValue(NewProp_DecimalGridSizes, TEXT("ToolTip"), TEXT("Decimal grid sizes (for translation snapping and grid rendering)"));
				MetaData->SetValue(NewProp_bUsePowerOf2SnapSize, TEXT("Category"), TEXT("GridSnapping"));
				MetaData->SetValue(NewProp_bUsePowerOf2SnapSize, TEXT("DisplayName"), TEXT("Use Power of Two Snap Size"));
				MetaData->SetValue(NewProp_bUsePowerOf2SnapSize, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorViewportSettings.h"));
				MetaData->SetValue(NewProp_bUsePowerOf2SnapSize, TEXT("ToolTip"), TEXT("If enabled will use power of 2 grid settings (e.g, 1,2,4,8,16,...,1024) instead of decimal grid sizes"));
				MetaData->SetValue(NewProp_bUseUE3OrbitControls, TEXT("Category"), TEXT("Controls"));
				MetaData->SetValue(NewProp_bUseUE3OrbitControls, TEXT("DisplayName"), TEXT("Use UE3 Orbit Controls"));
				MetaData->SetValue(NewProp_bUseUE3OrbitControls, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorViewportSettings.h"));
				MetaData->SetValue(NewProp_bUseUE3OrbitControls, TEXT("ToolTip"), TEXT("When checked, orbit the camera by using the L or U keys when unchecked, Alt and Left Mouse Drag will orbit around the look at point"));
				MetaData->SetValue(NewProp_bLevelStreamingVolumePrevis, TEXT("Category"), TEXT("Controls"));
				MetaData->SetValue(NewProp_bLevelStreamingVolumePrevis, TEXT("DisplayName"), TEXT("Stream in Levels Automatically when Camera is Moved"));
				MetaData->SetValue(NewProp_bLevelStreamingVolumePrevis, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorViewportSettings.h"));
				MetaData->SetValue(NewProp_bLevelStreamingVolumePrevis, TEXT("ToolTip"), TEXT("If enabled, the viewport will stream in levels automatically when the camera is moved."));
				MetaData->SetValue(NewProp_bUseAbsoluteTranslation, TEXT("Category"), TEXT("Controls"));
				MetaData->SetValue(NewProp_bUseAbsoluteTranslation, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorViewportSettings.h"));
				MetaData->SetValue(NewProp_bUseAbsoluteTranslation, TEXT("ToolTip"), TEXT("Whether to use mouse position as direct widget position."));
				MetaData->SetValue(NewProp_bInvertMiddleMousePan, TEXT("Category"), TEXT("Controls"));
				MetaData->SetValue(NewProp_bInvertMiddleMousePan, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorViewportSettings.h"));
				MetaData->SetValue(NewProp_bInvertMiddleMousePan, TEXT("ToolTip"), TEXT("Whether or not to invert the direction of middle mouse panning in viewports"));
				MetaData->SetValue(NewProp_MouseSensitivty, TEXT("Category"), TEXT("Controls"));
				MetaData->SetValue(NewProp_MouseSensitivty, TEXT("ClampMax"), TEXT("1.0"));
				MetaData->SetValue(NewProp_MouseSensitivty, TEXT("ClampMin"), TEXT("0.0"));
				MetaData->SetValue(NewProp_MouseSensitivty, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorViewportSettings.h"));
				MetaData->SetValue(NewProp_MouseSensitivty, TEXT("ToolTip"), TEXT("The sensitivity of mouse movement when rotating the camera."));
				MetaData->SetValue(NewProp_MouseScrollCameraSpeed, TEXT("Category"), TEXT("Controls"));
				MetaData->SetValue(NewProp_MouseScrollCameraSpeed, TEXT("ClampMax"), TEXT("8"));
				MetaData->SetValue(NewProp_MouseScrollCameraSpeed, TEXT("ClampMin"), TEXT("1"));
				MetaData->SetValue(NewProp_MouseScrollCameraSpeed, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorViewportSettings.h"));
				MetaData->SetValue(NewProp_MouseScrollCameraSpeed, TEXT("ToolTip"), TEXT("How fast the perspective camera moves through the world when using mouse scroll."));
				MetaData->SetValue(NewProp_MouseScrollCameraSpeed, TEXT("UIMax"), TEXT("8"));
				MetaData->SetValue(NewProp_MouseScrollCameraSpeed, TEXT("UIMin"), TEXT("1"));
				MetaData->SetValue(NewProp_CameraSpeed, TEXT("ClampMax"), TEXT("8"));
				MetaData->SetValue(NewProp_CameraSpeed, TEXT("ClampMin"), TEXT("1"));
				MetaData->SetValue(NewProp_CameraSpeed, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorViewportSettings.h"));
				MetaData->SetValue(NewProp_CameraSpeed, TEXT("ToolTip"), TEXT("How fast the perspective camera moves when flying through the world."));
				MetaData->SetValue(NewProp_CameraSpeed, TEXT("UIMax"), TEXT("8"));
				MetaData->SetValue(NewProp_CameraSpeed, TEXT("UIMin"), TEXT("1"));
				MetaData->SetValue(NewProp_bClickBSPSelectsBrush, TEXT("Category"), TEXT("Controls"));
				MetaData->SetValue(NewProp_bClickBSPSelectsBrush, TEXT("DisplayName"), TEXT("Clicking BSP Enables Brush"));
				MetaData->SetValue(NewProp_bClickBSPSelectsBrush, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorViewportSettings.h"));
				MetaData->SetValue(NewProp_bClickBSPSelectsBrush, TEXT("ToolTip"), TEXT("If true, Clicking a BSP selects the brush and ctrl+shift+click selects the surface. If false, vice versa"));
				MetaData->SetValue(NewProp_bAllowTranslateRotateZWidget, TEXT("Category"), TEXT("Controls"));
				MetaData->SetValue(NewProp_bAllowTranslateRotateZWidget, TEXT("DisplayName"), TEXT("Enable Combined Translate/Rotate Widget"));
				MetaData->SetValue(NewProp_bAllowTranslateRotateZWidget, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorViewportSettings.h"));
				MetaData->SetValue(NewProp_bAllowTranslateRotateZWidget, TEXT("ToolTip"), TEXT("Allow translate/rotate widget"));
				MetaData->SetValue(NewProp_bCenterZoomAroundCursor, TEXT("Category"), TEXT("Controls"));
				MetaData->SetValue(NewProp_bCenterZoomAroundCursor, TEXT("DisplayName"), TEXT("Orthographic Zoom to Cursor Position"));
				MetaData->SetValue(NewProp_bCenterZoomAroundCursor, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorViewportSettings.h"));
				MetaData->SetValue(NewProp_bCenterZoomAroundCursor, TEXT("ToolTip"), TEXT("If checked, in orthographic view ports zooming will center on the mouse position.  If unchecked, the zoom is around the center of the viewport."));
				MetaData->SetValue(NewProp_bPanMovesCanvas, TEXT("Category"), TEXT("Controls"));
				MetaData->SetValue(NewProp_bPanMovesCanvas, TEXT("DisplayName"), TEXT("Grab and Drag to Move Orthographic Cameras"));
				MetaData->SetValue(NewProp_bPanMovesCanvas, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorViewportSettings.h"));
				MetaData->SetValue(NewProp_bPanMovesCanvas, TEXT("ToolTip"), TEXT("If true, moves the canvas and shows the mouse.  If false, uses original camera movement."));
				MetaData->SetValue(NewProp_FoliageEditorControlType, TEXT("Category"), TEXT("Controls"));
				MetaData->SetValue(NewProp_FoliageEditorControlType, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorViewportSettings.h"));
				MetaData->SetValue(NewProp_FoliageEditorControlType, TEXT("ToolTip"), TEXT("Choose the control scheme for foliage tools"));
				MetaData->SetValue(NewProp_LandscapeEditorControlType, TEXT("Category"), TEXT("Controls"));
				MetaData->SetValue(NewProp_LandscapeEditorControlType, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorViewportSettings.h"));
				MetaData->SetValue(NewProp_LandscapeEditorControlType, TEXT("ToolTip"), TEXT("Choose the control scheme for landscape tools (ignored for pen input)"));
				MetaData->SetValue(NewProp_FlightCameraControlType, TEXT("Category"), TEXT("Controls"));
				MetaData->SetValue(NewProp_FlightCameraControlType, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorViewportSettings.h"));
				MetaData->SetValue(NewProp_FlightCameraControlType, TEXT("ToolTip"), TEXT("Enable the use of flight camera controls under various circumstances."));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_ULevelEditorViewportSettings(Z_Construct_UClass_ULevelEditorViewportSettings, TEXT("ULevelEditorViewportSettings"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(ULevelEditorViewportSettings);
	UEnum* Z_Construct_UEnum_UnrealEd_EPasteTo()
	{
		UPackage* Outer=Z_Construct_UPackage_UnrealEd();
		extern uint32 Get_Z_Construct_UEnum_UnrealEd_EPasteTo_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("EPasteTo"), 0, Get_Z_Construct_UEnum_UnrealEd_EPasteTo_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EPasteTo"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("PT_OriginalLocation")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("PT_Here")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("PT_WorldOrigin")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("PT_MAX")), 3));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Regular);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/EditorEngine.h"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_UnrealEd_EPasteTo_CRC() { return 2038475179U; }
	UEnum* Z_Construct_UEnum_UnrealEd_EMapSetBrushFlags()
	{
		UPackage* Outer=Z_Construct_UPackage_UnrealEd();
		extern uint32 Get_Z_Construct_UEnum_UnrealEd_EMapSetBrushFlags_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("EMapSetBrushFlags"), 0, Get_Z_Construct_UEnum_UnrealEd_EMapSetBrushFlags_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EMapSetBrushFlags"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("MSB_BrushColor")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("MSB_Group")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("MSB_PolyFlags")), 4));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("MSB_BrushType")), 8));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("MSB_MAX")), 9));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Regular);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/EditorEngine.h"));
			MetaData->SetValue(ReturnEnum, TEXT("MSB_BrushColor.ToolTip"), TEXT("Set brush color."));
			MetaData->SetValue(ReturnEnum, TEXT("MSB_BrushType.ToolTip"), TEXT("Set CSG operation."));
			MetaData->SetValue(ReturnEnum, TEXT("MSB_Group.ToolTip"), TEXT("Set group."));
			MetaData->SetValue(ReturnEnum, TEXT("MSB_PolyFlags.ToolTip"), TEXT("Set poly flags."));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("Things to set in mapSetBrush."));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_UnrealEd_EMapSetBrushFlags_CRC() { return 699257575U; }
	UScriptStruct* Z_Construct_UScriptStruct_FCopySelectedInfo()
	{
		UPackage* Outer=Z_Construct_UPackage_UnrealEd();
		extern uint32 Get_Z_Construct_UScriptStruct_FCopySelectedInfo_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("CopySelectedInfo"), sizeof(FCopySelectedInfo), Get_Z_Construct_UScriptStruct_FCopySelectedInfo_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("CopySelectedInfo"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FCopySelectedInfo>, EStructFlags(0x00000001));
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/EditorEngine.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FCopySelectedInfo_CRC() { return 3526840849U; }
	UScriptStruct* Z_Construct_UScriptStruct_FPIELoginInfo()
	{
		UPackage* Outer=Z_Construct_UPackage_UnrealEd();
		extern uint32 Get_Z_Construct_UScriptStruct_FPIELoginInfo_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("PIELoginInfo"), sizeof(FPIELoginInfo), Get_Z_Construct_UScriptStruct_FPIELoginInfo_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("PIELoginInfo"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FPIELoginInfo>, EStructFlags(0x00000001));
			UProperty* NewProp_Token = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Token"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(Token, FPIELoginInfo), 0x0000000000000000);
			UProperty* NewProp_Id = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Id"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(Id, FPIELoginInfo), 0x0000000000000000);
			UProperty* NewProp_Type = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Type"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(Type, FPIELoginInfo), 0x0000000000000000);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/EditorEngine.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Data structure for storing PIE login credentials"));
			MetaData->SetValue(NewProp_Token, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/EditorEngine.h"));
			MetaData->SetValue(NewProp_Token, TEXT("ToolTip"), TEXT("Credentials of the user logging in (password or auth token)"));
			MetaData->SetValue(NewProp_Id, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/EditorEngine.h"));
			MetaData->SetValue(NewProp_Id, TEXT("ToolTip"), TEXT("Id of the user logging in (email, display name, facebook id, etc)"));
			MetaData->SetValue(NewProp_Type, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/EditorEngine.h"));
			MetaData->SetValue(NewProp_Type, TEXT("ToolTip"), TEXT("Type of account. Needed to identity the auth method to use (epic, internal, facebook, etc)"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FPIELoginInfo_CRC() { return 1647902002U; }
	UScriptStruct* Z_Construct_UScriptStruct_FSlatePlayInEditorInfo()
	{
		UPackage* Outer=Z_Construct_UPackage_UnrealEd();
		extern uint32 Get_Z_Construct_UScriptStruct_FSlatePlayInEditorInfo_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("SlatePlayInEditorInfo"), sizeof(FSlatePlayInEditorInfo), Get_Z_Construct_UScriptStruct_FSlatePlayInEditorInfo_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SlatePlayInEditorInfo"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FSlatePlayInEditorInfo>, EStructFlags(0x00000001));
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/EditorEngine.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FSlatePlayInEditorInfo_CRC() { return 2767142664U; }
	UClass* Z_Construct_UClass_UEditorEngine_NoRegister()
	{
		return UEditorEngine::StaticClass();
	}
	UClass* Z_Construct_UClass_UEditorEngine()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UEngine();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UEditorEngine::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x2090008E;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_BrushBuilders = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("BrushBuilders"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(BrushBuilders, UEditorEngine), 0x0000000000002000);
				UProperty* NewProp_BrushBuilders_Inner = new(EC_InternalUseOnlyConstructor, NewProp_BrushBuilders, TEXT("BrushBuilders"), RF_Public|RF_Transient|RF_Native) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UClass_UBrushBuilder_NoRegister());
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bDrawParticleHelpers, UEditorEngine, uint8);
				UProperty* NewProp_bDrawParticleHelpers = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bDrawParticleHelpers"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bDrawParticleHelpers, UEditorEngine), 0x0000000000002000, CPP_BOOL_PROPERTY_BITMASK(bDrawParticleHelpers, UEditorEngine), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bDrawSocketsInGMode, UEditorEngine, uint8);
				UProperty* NewProp_bDrawSocketsInGMode = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bDrawSocketsInGMode"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bDrawSocketsInGMode, UEditorEngine), 0x0000000000004000, CPP_BOOL_PROPERTY_BITMASK(bDrawSocketsInGMode, UEditorEngine), sizeof(uint8), false);
				UProperty* NewProp_CustomCameraAlignEmitterDistance = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CustomCameraAlignEmitterDistance"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(CustomCameraAlignEmitterDistance, UEditorEngine), 0x0000000000004000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bCustomCameraAlignEmitter, UEditorEngine, uint8);
				UProperty* NewProp_bCustomCameraAlignEmitter = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bCustomCameraAlignEmitter"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bCustomCameraAlignEmitter, UEditorEngine), 0x0000000000004000, CPP_BOOL_PROPERTY_BITMASK(bCustomCameraAlignEmitter, UEditorEngine), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bShowPreviewMesh, UEditorEngine, uint8);
				UProperty* NewProp_bShowPreviewMesh = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bShowPreviewMesh"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bShowPreviewMesh, UEditorEngine), 0x0000000000000000, CPP_BOOL_PROPERTY_BITMASK(bShowPreviewMesh, UEditorEngine), sizeof(uint8), false);
				UProperty* NewProp_PreviewMeshIndex = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("PreviewMeshIndex"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(PreviewMeshIndex, UEditorEngine), 0x0000000000000000);
				UProperty* NewProp_PreviewMeshComp = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("PreviewMeshComp"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(PreviewMeshComp, UEditorEngine), 0x0000000000082008, Z_Construct_UClass_UStaticMeshComponent_NoRegister());
				UProperty* NewProp_ScratchRenderTarget256 = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ScratchRenderTarget256"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(ScratchRenderTarget256, UEditorEngine), 0x0000000000002000, Z_Construct_UClass_UTextureRenderTarget2D_NoRegister());
				UProperty* NewProp_ScratchRenderTarget512 = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ScratchRenderTarget512"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(ScratchRenderTarget512, UEditorEngine), 0x0000000000002000, Z_Construct_UClass_UTextureRenderTarget2D_NoRegister());
				UProperty* NewProp_ScratchRenderTarget1024 = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ScratchRenderTarget1024"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(ScratchRenderTarget1024, UEditorEngine), 0x0000000000002000, Z_Construct_UClass_UTextureRenderTarget2D_NoRegister());
				UProperty* NewProp_ScratchRenderTarget2048 = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ScratchRenderTarget2048"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(ScratchRenderTarget2048, UEditorEngine), 0x0000000000002000, Z_Construct_UClass_UTextureRenderTarget2D_NoRegister());
				UProperty* NewProp_UserEditedPlayWorldURL = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("UserEditedPlayWorldURL"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(UserEditedPlayWorldURL, UEditorEngine), 0x0000000000000000);
				UProperty* NewProp_PlayInEditorViewportIndex = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("PlayInEditorViewportIndex"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(PlayInEditorViewportIndex, UEditorEngine), 0x0000000000000000);
				UProperty* NewProp_PIELogins = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("PIELogins"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(PIELogins, UEditorEngine), 0x0000000000004000);
				UProperty* NewProp_PIELogins_Inner = new(EC_InternalUseOnlyConstructor, NewProp_PIELogins, TEXT("PIELogins"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000004000, Z_Construct_UScriptStruct_FPIELoginInfo());
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bOnlinePIEEnabled, UEditorEngine, bool);
				UProperty* NewProp_bOnlinePIEEnabled = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bOnlinePIEEnabled"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bOnlinePIEEnabled, UEditorEngine), 0x0000000000004000, CPP_BOOL_PROPERTY_BITMASK(bOnlinePIEEnabled, UEditorEngine), sizeof(bool), true);
				UProperty* NewProp_BuildPlayDevice = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("BuildPlayDevice"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(BuildPlayDevice, UEditorEngine), 0x0000000000004000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bMobilePreviewPortrait, UEditorEngine, uint8);
				UProperty* NewProp_bMobilePreviewPortrait = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bMobilePreviewPortrait"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bMobilePreviewPortrait, UEditorEngine), 0x0000000000004000, CPP_BOOL_PROPERTY_BITMASK(bMobilePreviewPortrait, UEditorEngine), sizeof(uint8), false);
				UProperty* NewProp_CurrentPlayWorldDestination = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CurrentPlayWorldDestination"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(CurrentPlayWorldDestination, UEditorEngine), 0x0000000000000000);
				UProperty* NewProp_PlayWorldDestination = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("PlayWorldDestination"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(PlayWorldDestination, UEditorEngine), 0x0000000000000000);
				UProperty* NewProp_ActorsThatWereSelected = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ActorsThatWereSelected"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(ActorsThatWereSelected, UEditorEngine), 0x0004000000000000);
				UProperty* NewProp_ActorsThatWereSelected_Inner = new(EC_InternalUseOnlyConstructor, NewProp_ActorsThatWereSelected, TEXT("ActorsThatWereSelected"), RF_Public|RF_Transient|RF_Native) UWeakObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0004000000000000, Z_Construct_UClass_AActor_NoRegister());
				UProperty* NewProp_EditorWorld = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("EditorWorld"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(EditorWorld, UEditorEngine), 0x0000000000000000, Z_Construct_UClass_UWorld_NoRegister());
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bIsSimulatingInEditor, UEditorEngine, uint8);
				UProperty* NewProp_bIsSimulatingInEditor = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bIsSimulatingInEditor"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bIsSimulatingInEditor, UEditorEngine), 0x0000000000000000, CPP_BOOL_PROPERTY_BITMASK(bIsSimulatingInEditor, UEditorEngine), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bUseVRPreviewForPlayWorld, UEditorEngine, uint8);
				UProperty* NewProp_bUseVRPreviewForPlayWorld = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bUseVRPreviewForPlayWorld"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bUseVRPreviewForPlayWorld, UEditorEngine), 0x0000000000000000, CPP_BOOL_PROPERTY_BITMASK(bUseVRPreviewForPlayWorld, UEditorEngine), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bUseMobilePreviewForPlayWorld, UEditorEngine, uint8);
				UProperty* NewProp_bUseMobilePreviewForPlayWorld = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bUseMobilePreviewForPlayWorld"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bUseMobilePreviewForPlayWorld, UEditorEngine), 0x0000000000000000, CPP_BOOL_PROPERTY_BITMASK(bUseMobilePreviewForPlayWorld, UEditorEngine), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bHasPlayWorldPlacement, UEditorEngine, uint8);
				UProperty* NewProp_bHasPlayWorldPlacement = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bHasPlayWorldPlacement"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bHasPlayWorldPlacement, UEditorEngine), 0x0000000000000000, CPP_BOOL_PROPERTY_BITMASK(bHasPlayWorldPlacement, UEditorEngine), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bRequestEndPlayMapQueued, UEditorEngine, uint8);
				UProperty* NewProp_bRequestEndPlayMapQueued = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bRequestEndPlayMapQueued"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bRequestEndPlayMapQueued, UEditorEngine), 0x0000000000000000, CPP_BOOL_PROPERTY_BITMASK(bRequestEndPlayMapQueued, UEditorEngine), sizeof(uint8), false);
				UProperty* NewProp_PlayFromHerePlayerStartClass = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("PlayFromHerePlayerStartClass"), RF_Public|RF_Transient|RF_Native) UClassProperty(CPP_PROPERTY_BASE(PlayFromHerePlayerStartClass, UEditorEngine), 0x0004000000000000, Z_Construct_UClass_ANavigationObjectBase_NoRegister());
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bAllowMultiplePIEWorlds, UEditorEngine, uint8);
				UProperty* NewProp_bAllowMultiplePIEWorlds = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bAllowMultiplePIEWorlds"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bAllowMultiplePIEWorlds, UEditorEngine), 0x0000000000044000, CPP_BOOL_PROPERTY_BITMASK(bAllowMultiplePIEWorlds, UEditorEngine), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bIsSimulateInEditorQueued, UEditorEngine, uint8);
				UProperty* NewProp_bIsSimulateInEditorQueued = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bIsSimulateInEditorQueued"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bIsSimulateInEditorQueued, UEditorEngine), 0x0000000000000000, CPP_BOOL_PROPERTY_BITMASK(bIsSimulateInEditorQueued, UEditorEngine), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bIsToggleBetweenPIEandSIEQueued, UEditorEngine, uint8);
				UProperty* NewProp_bIsToggleBetweenPIEandSIEQueued = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bIsToggleBetweenPIEandSIEQueued"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bIsToggleBetweenPIEandSIEQueued, UEditorEngine), 0x0000000000000000, CPP_BOOL_PROPERTY_BITMASK(bIsToggleBetweenPIEandSIEQueued, UEditorEngine), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bIsPlayWorldQueued, UEditorEngine, uint8);
				UProperty* NewProp_bIsPlayWorldQueued = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bIsPlayWorldQueued"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bIsPlayWorldQueued, UEditorEngine), 0x0000000000000000, CPP_BOOL_PROPERTY_BITMASK(bIsPlayWorldQueued, UEditorEngine), sizeof(uint8), false);
				UProperty* NewProp_PlayWorldRotation = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("PlayWorldRotation"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(PlayWorldRotation, UEditorEngine), 0x0000000000000000, Z_Construct_UScriptStruct_FRotator());
				UProperty* NewProp_PlayWorldLocation = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("PlayWorldLocation"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(PlayWorldLocation, UEditorEngine), 0x0000000000000000, Z_Construct_UScriptStruct_FVector());
				UProperty* NewProp_PlayWorld = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("PlayWorld"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(PlayWorld, UEditorEngine), 0x0000000000000000, Z_Construct_UClass_UWorld_NoRegister());
				UProperty* NewProp_InEditorGameURLOptions = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("InEditorGameURLOptions"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(InEditorGameURLOptions, UEditorEngine), 0x0000000000004001);
				UProperty* NewProp_UserOpenedFile = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("UserOpenedFile"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(UserOpenedFile, UEditorEngine), 0x0000000000000000);
				UProperty* NewProp_ActorsForGlobalReregister = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ActorsForGlobalReregister"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(ActorsForGlobalReregister, UEditorEngine), 0x0000000000000000);
				UProperty* NewProp_ActorsForGlobalReregister_Inner = new(EC_InternalUseOnlyConstructor, NewProp_ActorsForGlobalReregister, TEXT("ActorsForGlobalReregister"), RF_Public|RF_Transient|RF_Native) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UClass_AActor_NoRegister());
				UProperty* NewProp_ActorFactories = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ActorFactories"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(ActorFactories, UEditorEngine), 0x0000000000000000);
				UProperty* NewProp_ActorFactories_Inner = new(EC_InternalUseOnlyConstructor, NewProp_ActorFactories, TEXT("ActorFactories"), RF_Public|RF_Transient|RF_Native) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UClass_UActorFactory_NoRegister());
				UProperty* NewProp_HeightMapExportClassName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("HeightMapExportClassName"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(HeightMapExportClassName, UEditorEngine), 0x0000000000004000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bGroupingActive, UEditorEngine, uint8);
				UProperty* NewProp_bGroupingActive = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bGroupingActive"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bGroupingActive, UEditorEngine), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(bGroupingActive, UEditorEngine), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bEnableLODLocking, UEditorEngine, uint8);
				UProperty* NewProp_bEnableLODLocking = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bEnableLODLocking"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bEnableLODLocking, UEditorEngine), 0x0000000000000000, CPP_BOOL_PROPERTY_BITMASK(bEnableLODLocking, UEditorEngine), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bEnableSocketSnapping, UEditorEngine, uint8);
				UProperty* NewProp_bEnableSocketSnapping = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bEnableSocketSnapping"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bEnableSocketSnapping, UEditorEngine), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(bEnableSocketSnapping, UEditorEngine), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bShowBrushMarkerPolys, UEditorEngine, uint8);
				UProperty* NewProp_bShowBrushMarkerPolys = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bShowBrushMarkerPolys"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bShowBrushMarkerPolys, UEditorEngine), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(bShowBrushMarkerPolys, UEditorEngine), sizeof(uint8), false);
				UProperty* NewProp_GameCommandLine = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("GameCommandLine"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(GameCommandLine, UEditorEngine), 0x0000000000004001);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(GodMode, UEditorEngine, uint8);
				UProperty* NewProp_GodMode = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("GodMode"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(GodMode, UEditorEngine), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(GodMode, UEditorEngine), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(UseAxisIndicator, UEditorEngine, uint8);
				UProperty* NewProp_UseAxisIndicator = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("UseAxisIndicator"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(UseAxisIndicator, UEditorEngine), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(UseAxisIndicator, UEditorEngine), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(UseSizingBox, UEditorEngine, uint8);
				UProperty* NewProp_UseSizingBox = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("UseSizingBox"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(UseSizingBox, UEditorEngine), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(UseSizingBox, UEditorEngine), sizeof(uint8), false);
				UProperty* NewProp_DetailMode = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("DetailMode"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(DetailMode, UEditorEngine), 0x0000000000000000, Z_Construct_UEnum_Engine_EDetailMode());
				UProperty* NewProp_MouseMovement = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MouseMovement"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(MouseMovement, UEditorEngine), 0x0000000000000000, Z_Construct_UScriptStruct_FVector());
				UProperty* NewProp_ClickPlane = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ClickPlane"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(ClickPlane, UEditorEngine), 0x0000000000000000, Z_Construct_UScriptStruct_FPlane());
				UProperty* NewProp_ClickLocation = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ClickLocation"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(ClickLocation, UEditorEngine), 0x0000000000000000, Z_Construct_UScriptStruct_FVector());
				UProperty* NewProp_UnsnappedClickLocation = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("UnsnappedClickLocation"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(UnsnappedClickLocation, UEditorEngine), 0x0000000000000000, Z_Construct_UScriptStruct_FVector());
				UProperty* NewProp_ParentContext = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ParentContext"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(ParentContext, UEditorEngine), 0x0000000000000000, UPackage::StaticClass());
				UProperty* NewProp_ClickFlags = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ClickFlags"), RF_Public|RF_Transient|RF_Native) UUInt32Property(CPP_PROPERTY_BASE(ClickFlags, UEditorEngine), 0x0000000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(IsImportingT3D, UEditorEngine, uint8);
				UProperty* NewProp_IsImportingT3D = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("IsImportingT3D"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(IsImportingT3D, UEditorEngine), 0x0000000000000000, CPP_BOOL_PROPERTY_BITMASK(IsImportingT3D, UEditorEngine), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bFastRebuild, UEditorEngine, uint8);
				UProperty* NewProp_bFastRebuild = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bFastRebuild"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bFastRebuild, UEditorEngine), 0x0000000000000000, CPP_BOOL_PROPERTY_BITMASK(bFastRebuild, UEditorEngine), sizeof(uint8), false);
				UProperty* NewProp_EditorCylinder = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("EditorCylinder"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(EditorCylinder, UEditorEngine), 0x0000000000000000, Z_Construct_UClass_UStaticMesh_NoRegister());
				UProperty* NewProp_EditorPlane = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("EditorPlane"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(EditorPlane, UEditorEngine), 0x0000000000000000, Z_Construct_UClass_UStaticMesh_NoRegister());
				UProperty* NewProp_EditorSphere = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("EditorSphere"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(EditorSphere, UEditorEngine), 0x0000000000000000, Z_Construct_UClass_UStaticMesh_NoRegister());
				UProperty* NewProp_EditorCube = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("EditorCube"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(EditorCube, UEditorEngine), 0x0000000000000000, Z_Construct_UClass_UStaticMesh_NoRegister());
				UProperty* NewProp_PreviewAudioComponent = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("PreviewAudioComponent"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(PreviewAudioComponent, UEditorEngine), 0x0000000000082008, Z_Construct_UClass_UAudioComponent_NoRegister());
				UProperty* NewProp_PreviewSoundCue = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("PreviewSoundCue"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(PreviewSoundCue, UEditorEngine), 0x0000000000002000, Z_Construct_UClass_USoundCue_NoRegister());
				UProperty* NewProp_EditorFont = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("EditorFont"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(EditorFont, UEditorEngine), 0x0000000000000000, Z_Construct_UClass_UFont_NoRegister());
				UProperty* NewProp_BkgndHi = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("BkgndHi"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(BkgndHi, UEditorEngine), 0x0000000000000000, Z_Construct_UClass_UTexture2D_NoRegister());
				UProperty* NewProp_Bkgnd = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Bkgnd"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(Bkgnd, UEditorEngine), 0x0000000000000000, Z_Construct_UClass_UTexture2D_NoRegister());
				UProperty* NewProp_Bad = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Bad"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(Bad, UEditorEngine), 0x0000000000000000, Z_Construct_UClass_UTexture2D_NoRegister());
				UProperty* NewProp_Trans = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Trans"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(Trans, UEditorEngine), 0x0000000000000000, Z_Construct_UClass_UTransactor_NoRegister());
				UProperty* NewProp_ConversionTempModel = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ConversionTempModel"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(ConversionTempModel, UEditorEngine), 0x0000000000000000, UModel::StaticClass());
				UProperty* NewProp_TempModel = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("TempModel"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(TempModel, UEditorEngine), 0x0000000000000000, UModel::StaticClass());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->ClassConfigName = FName(TEXT("Engine"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Editor/EditorEngine.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/EditorEngine.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Engine that drives the Editor.\nSeparate from UGameEngine because it may have much different functionality than desired for an instance of a game itself."));
				MetaData->SetValue(NewProp_BrushBuilders, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/EditorEngine.h"));
				MetaData->SetValue(NewProp_BrushBuilders, TEXT("ToolTip"), TEXT("Brush builders that have been created in the editor"));
				MetaData->SetValue(NewProp_bDrawParticleHelpers, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/EditorEngine.h"));
				MetaData->SetValue(NewProp_bDrawParticleHelpers, TEXT("ToolTip"), TEXT("If true, then draw particle debug helpers in editor viewports"));
				MetaData->SetValue(NewProp_bDrawSocketsInGMode, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/EditorEngine.h"));
				MetaData->SetValue(NewProp_bDrawSocketsInGMode, TEXT("ToolTip"), TEXT("If true, then draw sockets when socket snapping is enabled in 'g' mode"));
				MetaData->SetValue(NewProp_CustomCameraAlignEmitterDistance, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/EditorEngine.h"));
				MetaData->SetValue(NewProp_CustomCameraAlignEmitterDistance, TEXT("ToolTip"), TEXT("The distance to place the camera from an emitter actor when custom zooming is enabled"));
				MetaData->SetValue(NewProp_bCustomCameraAlignEmitter, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/EditorEngine.h"));
				MetaData->SetValue(NewProp_bCustomCameraAlignEmitter, TEXT("ToolTip"), TEXT("If \"Camera Align\" emitter handling uses a custom zoom or not"));
				MetaData->SetValue(NewProp_bShowPreviewMesh, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/EditorEngine.h"));
				MetaData->SetValue(NewProp_bShowPreviewMesh, TEXT("ToolTip"), TEXT("When true, the preview mesh mode is activated."));
				MetaData->SetValue(NewProp_PreviewMeshIndex, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/EditorEngine.h"));
				MetaData->SetValue(NewProp_PreviewMeshIndex, TEXT("ToolTip"), TEXT("The index of the mesh to use from the list of preview meshes."));
				MetaData->SetValue(NewProp_PreviewMeshComp, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_PreviewMeshComp, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/EditorEngine.h"));
				MetaData->SetValue(NewProp_PreviewMeshComp, TEXT("ToolTip"), TEXT("A mesh component used to preview in editor without spawning a static mesh actor."));
				MetaData->SetValue(NewProp_ScratchRenderTarget256, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/EditorEngine.h"));
				MetaData->SetValue(NewProp_ScratchRenderTarget512, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/EditorEngine.h"));
				MetaData->SetValue(NewProp_ScratchRenderTarget1024, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/EditorEngine.h"));
				MetaData->SetValue(NewProp_ScratchRenderTarget2048, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/EditorEngine.h"));
				MetaData->SetValue(NewProp_ScratchRenderTarget2048, TEXT("ToolTip"), TEXT("Temporary render target that can be used by the editor."));
				MetaData->SetValue(NewProp_UserEditedPlayWorldURL, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/EditorEngine.h"));
				MetaData->SetValue(NewProp_UserEditedPlayWorldURL, TEXT("ToolTip"), TEXT("Play world url string edited by a user."));
				MetaData->SetValue(NewProp_PlayInEditorViewportIndex, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/EditorEngine.h"));
				MetaData->SetValue(NewProp_PlayInEditorViewportIndex, TEXT("ToolTip"), TEXT("When set to anything other than -1, indicates a specific In-Editor viewport index that PIE should use"));
				MetaData->SetValue(NewProp_PIELogins, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/EditorEngine.h"));
				MetaData->SetValue(NewProp_PIELogins, TEXT("ToolTip"), TEXT("Logins available for use when running PIE instances"));
				MetaData->SetValue(NewProp_bOnlinePIEEnabled, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/EditorEngine.h"));
				MetaData->SetValue(NewProp_bOnlinePIEEnabled, TEXT("ToolTip"), TEXT("Enabled online PIE"));
				MetaData->SetValue(NewProp_BuildPlayDevice, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/EditorEngine.h"));
				MetaData->SetValue(NewProp_BuildPlayDevice, TEXT("ToolTip"), TEXT("Currently targeted device for mobile previewer."));
				MetaData->SetValue(NewProp_bMobilePreviewPortrait, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/EditorEngine.h"));
				MetaData->SetValue(NewProp_bMobilePreviewPortrait, TEXT("ToolTip"), TEXT("Mobile preview settings for what orientation to default to"));
				MetaData->SetValue(NewProp_CurrentPlayWorldDestination, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/EditorEngine.h"));
				MetaData->SetValue(NewProp_CurrentPlayWorldDestination, TEXT("ToolTip"), TEXT("The current play world destination (I.E console).  -1 means no current play world destination, 0 or more is an index into the GConsoleSupportContainer"));
				MetaData->SetValue(NewProp_PlayWorldDestination, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/EditorEngine.h"));
				MetaData->SetValue(NewProp_PlayWorldDestination, TEXT("ToolTip"), TEXT("Where did the person want to play? Where to play the game - -1 means in editor, 0 or more is an index into the GConsoleSupportContainer"));
				MetaData->SetValue(NewProp_ActorsThatWereSelected, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/EditorEngine.h"));
				MetaData->SetValue(NewProp_ActorsThatWereSelected, TEXT("ToolTip"), TEXT("When Simulating In Editor, an array of all actors that were selected when it began"));
				MetaData->SetValue(NewProp_EditorWorld, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/EditorEngine.h"));
				MetaData->SetValue(NewProp_EditorWorld, TEXT("ToolTip"), TEXT("When Simulating In Editor, a pointer to the original (non-simulating) editor world"));
				MetaData->SetValue(NewProp_bIsSimulatingInEditor, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/EditorEngine.h"));
				MetaData->SetValue(NewProp_bIsSimulatingInEditor, TEXT("ToolTip"), TEXT("True if we're Simulating In Editor, as opposed to Playing In Editor.  In this mode, simulation takes place right the level editing environment"));
				MetaData->SetValue(NewProp_bUseVRPreviewForPlayWorld, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/EditorEngine.h"));
				MetaData->SetValue(NewProp_bUseVRPreviewForPlayWorld, TEXT("ToolTip"), TEXT("True to enable VR preview mode when launching the game from the editor on PC platform"));
				MetaData->SetValue(NewProp_bUseMobilePreviewForPlayWorld, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/EditorEngine.h"));
				MetaData->SetValue(NewProp_bUseMobilePreviewForPlayWorld, TEXT("ToolTip"), TEXT("True to enable mobile preview mode when launching the game from the editor on PC platform"));
				MetaData->SetValue(NewProp_bHasPlayWorldPlacement, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/EditorEngine.h"));
				MetaData->SetValue(NewProp_bHasPlayWorldPlacement, TEXT("ToolTip"), TEXT("Did the request include the optional location and rotation?"));
				MetaData->SetValue(NewProp_bRequestEndPlayMapQueued, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/EditorEngine.h"));
				MetaData->SetValue(NewProp_bRequestEndPlayMapQueued, TEXT("ToolTip"), TEXT("True if there is a pending end play map queued"));
				MetaData->SetValue(NewProp_PlayFromHerePlayerStartClass, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/EditorEngine.h"));
				MetaData->SetValue(NewProp_PlayFromHerePlayerStartClass, TEXT("ToolTip"), TEXT("The PlayerStart class used when spawning the player at the current camera location."));
				MetaData->SetValue(NewProp_bAllowMultiplePIEWorlds, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/EditorEngine.h"));
				MetaData->SetValue(NewProp_bAllowMultiplePIEWorlds, TEXT("ToolTip"), TEXT("Allows multipel PIE worlds under a single instance. If false, you can only do multiple UE4 processes for pie networking"));
				MetaData->SetValue(NewProp_bIsSimulateInEditorQueued, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/EditorEngine.h"));
				MetaData->SetValue(NewProp_bIsSimulateInEditorQueued, TEXT("ToolTip"), TEXT("True if we are requesting to start a simulation-in-editor session"));
				MetaData->SetValue(NewProp_bIsToggleBetweenPIEandSIEQueued, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/EditorEngine.h"));
				MetaData->SetValue(NewProp_bIsToggleBetweenPIEandSIEQueued, TEXT("ToolTip"), TEXT("Has a request to toggle between PIE and SIE been made?"));
				MetaData->SetValue(NewProp_bIsPlayWorldQueued, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/EditorEngine.h"));
				MetaData->SetValue(NewProp_bIsPlayWorldQueued, TEXT("ToolTip"), TEXT("Has a request for \"Play From Here\" been made?"));
				MetaData->SetValue(NewProp_PlayWorldRotation, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/EditorEngine.h"));
				MetaData->SetValue(NewProp_PlayWorldRotation, TEXT("ToolTip"), TEXT("An optional rotation for the starting location for \"Play From Here\""));
				MetaData->SetValue(NewProp_PlayWorldLocation, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/EditorEngine.h"));
				MetaData->SetValue(NewProp_PlayWorldLocation, TEXT("ToolTip"), TEXT("An optional location for the starting location for \"Play From Here\""));
				MetaData->SetValue(NewProp_PlayWorld, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/EditorEngine.h"));
				MetaData->SetValue(NewProp_PlayWorld, TEXT("ToolTip"), TEXT("A pointer to a UWorld that is the duplicated/saved-loaded to be played in with \"Play From Here\""));
				MetaData->SetValue(NewProp_InEditorGameURLOptions, TEXT("Category"), TEXT("Advanced"));
				MetaData->SetValue(NewProp_InEditorGameURLOptions, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/EditorEngine.h"));
				MetaData->SetValue(NewProp_InEditorGameURLOptions, TEXT("ToolTip"), TEXT("Additional per-user/per-game options set in the .ini file. Should be in the form \"?option1=X?option2?option3=Y\""));
				MetaData->SetValue(NewProp_UserOpenedFile, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/EditorEngine.h"));
				MetaData->SetValue(NewProp_UserOpenedFile, TEXT("ToolTip"), TEXT("The name of the file currently being opened in the editor. \"\" if no file is being opened."));
				MetaData->SetValue(NewProp_ActorsForGlobalReregister, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/EditorEngine.h"));
				MetaData->SetValue(NewProp_ActorsForGlobalReregister, TEXT("ToolTip"), TEXT("Actors that are being deleted and should processed in the global re-attach"));
				MetaData->SetValue(NewProp_ActorFactories, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/EditorEngine.h"));
				MetaData->SetValue(NewProp_ActorFactories, TEXT("ToolTip"), TEXT("Array of actor factories created at editor startup and used by context menu etc."));
				MetaData->SetValue(NewProp_HeightMapExportClassName, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/EditorEngine.h"));
				MetaData->SetValue(NewProp_bGroupingActive, TEXT("Category"), TEXT("Advanced"));
				MetaData->SetValue(NewProp_bGroupingActive, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/EditorEngine.h"));
				MetaData->SetValue(NewProp_bGroupingActive, TEXT("ToolTip"), TEXT("If true, actors can be grouped and grouping rules will be maintained. When deactivated, any currently existing groups will still be preserved."));
				MetaData->SetValue(NewProp_bEnableLODLocking, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/EditorEngine.h"));
				MetaData->SetValue(NewProp_bEnableLODLocking, TEXT("ToolTip"), TEXT("If true, same type views will be camera tied, and ortho views will use perspective view for LOD parenting"));
				MetaData->SetValue(NewProp_bEnableSocketSnapping, TEXT("Category"), TEXT("Advanced"));
				MetaData->SetValue(NewProp_bEnableSocketSnapping, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/EditorEngine.h"));
				MetaData->SetValue(NewProp_bEnableSocketSnapping, TEXT("ToolTip"), TEXT("If true, socket snapping is enabled in the main level viewports."));
				MetaData->SetValue(NewProp_bShowBrushMarkerPolys, TEXT("Category"), TEXT("Advanced"));
				MetaData->SetValue(NewProp_bShowBrushMarkerPolys, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/EditorEngine.h"));
				MetaData->SetValue(NewProp_bShowBrushMarkerPolys, TEXT("ToolTip"), TEXT("If true, show translucent marker polygons on the builder brush and volumes."));
				MetaData->SetValue(NewProp_GameCommandLine, TEXT("Category"), TEXT("Advanced"));
				MetaData->SetValue(NewProp_GameCommandLine, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/EditorEngine.h"));
				MetaData->SetValue(NewProp_GodMode, TEXT("Category"), TEXT("Advanced"));
				MetaData->SetValue(NewProp_GodMode, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/EditorEngine.h"));
				MetaData->SetValue(NewProp_UseAxisIndicator, TEXT("Category"), TEXT("Advanced"));
				MetaData->SetValue(NewProp_UseAxisIndicator, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/EditorEngine.h"));
				MetaData->SetValue(NewProp_UseSizingBox, TEXT("Category"), TEXT("Advanced"));
				MetaData->SetValue(NewProp_UseSizingBox, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/EditorEngine.h"));
				MetaData->SetValue(NewProp_UseSizingBox, TEXT("ToolTip"), TEXT("Advanced."));
				MetaData->SetValue(NewProp_DetailMode, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/EditorEngine.h"));
				MetaData->SetValue(NewProp_DetailMode, TEXT("ToolTip"), TEXT("Setting for the detail mode to show in the editor viewports"));
				MetaData->SetValue(NewProp_MouseMovement, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/EditorEngine.h"));
				MetaData->SetValue(NewProp_ClickPlane, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/EditorEngine.h"));
				MetaData->SetValue(NewProp_ClickLocation, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/EditorEngine.h"));
				MetaData->SetValue(NewProp_UnsnappedClickLocation, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/EditorEngine.h"));
				MetaData->SetValue(NewProp_ParentContext, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/EditorEngine.h"));
				MetaData->SetValue(NewProp_ClickFlags, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/EditorEngine.h"));
				MetaData->SetValue(NewProp_ClickFlags, TEXT("ToolTip"), TEXT("Other variables."));
				MetaData->SetValue(NewProp_IsImportingT3D, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/EditorEngine.h"));
				MetaData->SetValue(NewProp_bFastRebuild, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/EditorEngine.h"));
				MetaData->SetValue(NewProp_bFastRebuild, TEXT("ToolTip"), TEXT("Toggles."));
				MetaData->SetValue(NewProp_EditorCylinder, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/EditorEngine.h"));
				MetaData->SetValue(NewProp_EditorPlane, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/EditorEngine.h"));
				MetaData->SetValue(NewProp_EditorSphere, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/EditorEngine.h"));
				MetaData->SetValue(NewProp_EditorCube, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/EditorEngine.h"));
				MetaData->SetValue(NewProp_EditorCube, TEXT("ToolTip"), TEXT("Used in UnrealEd for showing materials"));
				MetaData->SetValue(NewProp_PreviewAudioComponent, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_PreviewAudioComponent, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/EditorEngine.h"));
				MetaData->SetValue(NewProp_PreviewSoundCue, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/EditorEngine.h"));
				MetaData->SetValue(NewProp_PreviewSoundCue, TEXT("ToolTip"), TEXT("Audio"));
				MetaData->SetValue(NewProp_EditorFont, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/EditorEngine.h"));
				MetaData->SetValue(NewProp_EditorFont, TEXT("ToolTip"), TEXT("Font used by Canvas-based editors"));
				MetaData->SetValue(NewProp_BkgndHi, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/EditorEngine.h"));
				MetaData->SetValue(NewProp_Bkgnd, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/EditorEngine.h"));
				MetaData->SetValue(NewProp_Bad, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/EditorEngine.h"));
				MetaData->SetValue(NewProp_Bad, TEXT("ToolTip"), TEXT("Textures."));
				MetaData->SetValue(NewProp_Trans, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/EditorEngine.h"));
				MetaData->SetValue(NewProp_ConversionTempModel, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/EditorEngine.h"));
				MetaData->SetValue(NewProp_TempModel, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/EditorEngine.h"));
				MetaData->SetValue(NewProp_TempModel, TEXT("ToolTip"), TEXT("Objects."));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UEditorEngine(Z_Construct_UClass_UEditorEngine, TEXT("UEditorEngine"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UEditorEngine);
	UEnum* Z_Construct_UEnum_UnrealEd_EWriteDisallowedWarningState()
	{
		UPackage* Outer=Z_Construct_UPackage_UnrealEd();
		extern uint32 Get_Z_Construct_UEnum_UnrealEd_EWriteDisallowedWarningState_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("EWriteDisallowedWarningState"), 0, Get_Z_Construct_UEnum_UnrealEd_EWriteDisallowedWarningState_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EWriteDisallowedWarningState"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("WDWS_PendingWarn")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("WDWS_Warned")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("WDWS_WarningUnnecessary")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("WDWS_MAX")), 3));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Regular);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/UnrealEdEngine.h"));
			MetaData->SetValue(ReturnEnum, TEXT("WDWS_PendingWarn.ToolTip"), TEXT("The user needs to be warned about the package."));
			MetaData->SetValue(ReturnEnum, TEXT("WDWS_Warned.ToolTip"), TEXT("The user has been warned about the package."));
			MetaData->SetValue(ReturnEnum, TEXT("WDWS_WarningUnnecessary.ToolTip"), TEXT("Warning for the package unnecessary."));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_UnrealEd_EWriteDisallowedWarningState_CRC() { return 635182065U; }
	UEnum* Z_Construct_UEnum_UnrealEd_EPackageNotifyState()
	{
		UPackage* Outer=Z_Construct_UPackage_UnrealEd();
		extern uint32 Get_Z_Construct_UEnum_UnrealEd_EPackageNotifyState_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("EPackageNotifyState"), 0, Get_Z_Construct_UEnum_UnrealEd_EPackageNotifyState_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EPackageNotifyState"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("NS_BalloonPrompted")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("NS_DialogPrompted")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("NS_PendingPrompt")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("NS_PendingWarning")), 3));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("NS_MAX")), 4));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Regular);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/UnrealEdEngine.h"));
			MetaData->SetValue(ReturnEnum, TEXT("NS_BalloonPrompted.ToolTip"), TEXT("The user has been prompted with the balloon taskbar message."));
			MetaData->SetValue(ReturnEnum, TEXT("NS_DialogPrompted.ToolTip"), TEXT("The user responded to the balloon task bar message and got the modal prompt to checkout dialog and responded to it."));
			MetaData->SetValue(ReturnEnum, TEXT("NS_PendingPrompt.ToolTip"), TEXT("The package has been marked dirty and is pending a balloon prompt."));
			MetaData->SetValue(ReturnEnum, TEXT("NS_PendingWarning.ToolTip"), TEXT("The package has been marked dirty but cannot be checked out, and is pending a modal warning dialog."));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_UnrealEd_EPackageNotifyState_CRC() { return 844472661U; }
	UScriptStruct* Z_Construct_UScriptStruct_FTemplateMapInfo()
	{
		UPackage* Outer=Z_Construct_UPackage_UnrealEd();
		extern uint32 Get_Z_Construct_UScriptStruct_FTemplateMapInfo_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("TemplateMapInfo"), sizeof(FTemplateMapInfo), Get_Z_Construct_UScriptStruct_FTemplateMapInfo_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("TemplateMapInfo"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FTemplateMapInfo>, EStructFlags(0x00000001));
			UProperty* NewProp_Map = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Map"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(Map, FTemplateMapInfo), 0x0000000000004000);
			UProperty* NewProp_ThumbnailTexture = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ThumbnailTexture"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(ThumbnailTexture, FTemplateMapInfo), 0x0000000000000000, Z_Construct_UClass_UTexture2D_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/UnrealEdEngine.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Used during asset renaming/duplication to specify class-specific package/group targets."));
			MetaData->SetValue(NewProp_Map, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/UnrealEdEngine.h"));
			MetaData->SetValue(NewProp_Map, TEXT("ToolTip"), TEXT("The object path to the template map"));
			MetaData->SetValue(NewProp_ThumbnailTexture, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/UnrealEdEngine.h"));
			MetaData->SetValue(NewProp_ThumbnailTexture, TEXT("ToolTip"), TEXT("The Texture2D associated with this map template"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FTemplateMapInfo_CRC() { return 1798746225U; }
	UScriptStruct* Z_Construct_UScriptStruct_FClassMoveInfo()
	{
		UPackage* Outer=Z_Construct_UPackage_UnrealEd();
		extern uint32 Get_Z_Construct_UScriptStruct_FClassMoveInfo_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("ClassMoveInfo"), sizeof(FClassMoveInfo), Get_Z_Construct_UScriptStruct_FClassMoveInfo_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ClassMoveInfo"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FClassMoveInfo>, EStructFlags(0x00000001));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bActive, FClassMoveInfo, uint8);
			UProperty* NewProp_bActive = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bActive"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bActive, FClassMoveInfo), 0x0000000000004000, CPP_BOOL_PROPERTY_BITMASK(bActive, FClassMoveInfo), sizeof(uint8), false);
			UProperty* NewProp_GroupName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("GroupName"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(GroupName, FClassMoveInfo), 0x0000000000004000);
			UProperty* NewProp_PackageName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("PackageName"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(PackageName, FClassMoveInfo), 0x0000000000004000);
			UProperty* NewProp_ClassName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ClassName"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(ClassName, FClassMoveInfo), 0x0000000000004000);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/UnrealEdEngine.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Used during asset renaming/duplication to specify class-specific package/group targets."));
			MetaData->SetValue(NewProp_bActive, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/UnrealEdEngine.h"));
			MetaData->SetValue(NewProp_bActive, TEXT("ToolTip"), TEXT("If true, this info is applied when moving/duplicating assets."));
			MetaData->SetValue(NewProp_GroupName, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/UnrealEdEngine.h"));
			MetaData->SetValue(NewProp_GroupName, TEXT("ToolTip"), TEXT("The target group info which assets of this type are moved/duplicated."));
			MetaData->SetValue(NewProp_PackageName, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/UnrealEdEngine.h"));
			MetaData->SetValue(NewProp_PackageName, TEXT("ToolTip"), TEXT("The target package info which assets of this type are moved/duplicated."));
			MetaData->SetValue(NewProp_ClassName, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/UnrealEdEngine.h"));
			MetaData->SetValue(NewProp_ClassName, TEXT("ToolTip"), TEXT("The type of asset this MoveInfo applies to."));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FClassMoveInfo_CRC() { return 858558057U; }
	UClass* Z_Construct_UClass_UUnrealEdEngine_NoRegister()
	{
		return UUnrealEdEngine::StaticClass();
	}
	UClass* Z_Construct_UClass_UUnrealEdEngine()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UEditorEngine();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UUnrealEdEngine::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x2090008E;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_CookServer = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CookServer"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(CookServer, UUnrealEdEngine), 0x0000000000000000, Z_Construct_UClass_UCookOnTheFlyServer_NoRegister());
				UProperty* NewProp_TemplateMapInfos = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("TemplateMapInfos"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(TemplateMapInfos, UUnrealEdEngine), 0x0000000000004000);
				UProperty* NewProp_TemplateMapInfos_Inner = new(EC_InternalUseOnlyConstructor, NewProp_TemplateMapInfos, TEXT("TemplateMapInfos"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000004000, Z_Construct_UScriptStruct_FTemplateMapInfo());
				UProperty* NewProp_SortedSpriteCategories = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SortedSpriteCategories"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(SortedSpriteCategories_DEPRECATED, UUnrealEdEngine), 0x0000000020000000);
				UProperty* NewProp_SortedSpriteCategories_Inner = new(EC_InternalUseOnlyConstructor, NewProp_SortedSpriteCategories, TEXT("SortedSpriteCategories"), RF_Public|RF_Transient|RF_Native) UStrProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000020000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bNeedWarningForWritePermission, UUnrealEdEngine, uint8);
				UProperty* NewProp_bNeedWarningForWritePermission = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bNeedWarningForWritePermission"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bNeedWarningForWritePermission, UUnrealEdEngine), 0x0000000000000000, CPP_BOOL_PROPERTY_BITMASK(bNeedWarningForWritePermission, UUnrealEdEngine), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bNeedWarningForPkgEngineVer, UUnrealEdEngine, uint8);
				UProperty* NewProp_bNeedWarningForPkgEngineVer = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bNeedWarningForPkgEngineVer"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bNeedWarningForPkgEngineVer, UUnrealEdEngine), 0x0000000000000000, CPP_BOOL_PROPERTY_BITMASK(bNeedWarningForPkgEngineVer, UUnrealEdEngine), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bNeedToPromptForCheckout, UUnrealEdEngine, uint8);
				UProperty* NewProp_bNeedToPromptForCheckout = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bNeedToPromptForCheckout"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bNeedToPromptForCheckout, UUnrealEdEngine), 0x0000000000000000, CPP_BOOL_PROPERTY_BITMASK(bNeedToPromptForCheckout, UUnrealEdEngine), sizeof(uint8), false);
				UProperty* NewProp_CurrentLODParentActor = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CurrentLODParentActor"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(CurrentLODParentActor, UUnrealEdEngine), 0x0000000000000000, Z_Construct_UClass_AActor_NoRegister());
				UProperty* NewProp_PackagesToBeFullyLoadedAtStartup = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("PackagesToBeFullyLoadedAtStartup"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(PackagesToBeFullyLoadedAtStartup, UUnrealEdEngine), 0x0000000000004000);
				UProperty* NewProp_PackagesToBeFullyLoadedAtStartup_Inner = new(EC_InternalUseOnlyConstructor, NewProp_PackagesToBeFullyLoadedAtStartup, TEXT("PackagesToBeFullyLoadedAtStartup"), RF_Public|RF_Transient|RF_Native) UStrProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000004000);
				UProperty* NewProp_AnimationCompressionAlgorithms = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AnimationCompressionAlgorithms"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(AnimationCompressionAlgorithms, UUnrealEdEngine), 0x0000000000000000);
				UProperty* NewProp_AnimationCompressionAlgorithms_Inner = new(EC_InternalUseOnlyConstructor, NewProp_AnimationCompressionAlgorithms, TEXT("AnimationCompressionAlgorithms"), RF_Public|RF_Transient|RF_Native) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UClass_UAnimCompress_NoRegister());
				UProperty* NewProp_SoundCueCopyPasteBuffer = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SoundCueCopyPasteBuffer"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(SoundCueCopyPasteBuffer, UUnrealEdEngine), 0x0000000000000000, Z_Construct_UClass_USoundCue_NoRegister());
				UProperty* NewProp_MatineeCopyPasteBuffer = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MatineeCopyPasteBuffer"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(MatineeCopyPasteBuffer, UUnrealEdEngine), 0x0000000000000000);
				UProperty* NewProp_MatineeCopyPasteBuffer_Inner = new(EC_InternalUseOnlyConstructor, NewProp_MatineeCopyPasteBuffer, TEXT("MatineeCopyPasteBuffer"), RF_Public|RF_Transient|RF_Native) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UClass_UObject_NoRegister());
				UProperty* NewProp_MaterialCopyPasteBuffer = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MaterialCopyPasteBuffer"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(MaterialCopyPasteBuffer, UUnrealEdEngine), 0x0000000000000000, Z_Construct_UClass_UMaterial_NoRegister());
				UProperty* NewProp_AutoReimportManager = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AutoReimportManager"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(AutoReimportManager, UUnrealEdEngine), 0x0000000000000000, Z_Construct_UClass_UAutoReimportManager_NoRegister());
				UProperty* NewProp_EditorOptionsInst = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("EditorOptionsInst"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(EditorOptionsInst, UUnrealEdEngine), 0x0000000000000000, Z_Construct_UClass_UUnrealEdOptions_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->ClassConfigName = FName(TEXT("Engine"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Editor/UnrealEdEngine.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/UnrealEdEngine.h"));
				MetaData->SetValue(NewProp_CookServer, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/UnrealEdEngine.h"));
				MetaData->SetValue(NewProp_CookServer, TEXT("ToolTip"), TEXT("Cooker server incase we want to cook ont he side while editing..."));
				MetaData->SetValue(NewProp_TemplateMapInfos, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/UnrealEdEngine.h"));
				MetaData->SetValue(NewProp_TemplateMapInfos, TEXT("ToolTip"), TEXT("List of info for all known template maps"));
				MetaData->SetValue(NewProp_SortedSpriteCategories, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/UnrealEdEngine.h"));
				MetaData->SetValue(NewProp_SortedSpriteCategories, TEXT("ToolTip"), TEXT("Array of sorted, localized editor sprite categories"));
				MetaData->SetValue(NewProp_bNeedWarningForWritePermission, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/UnrealEdEngine.h"));
				MetaData->SetValue(NewProp_bNeedWarningForWritePermission, TEXT("ToolTip"), TEXT("Whether the user needs to be prompted about a package being saved when the user does not have permission to write the file"));
				MetaData->SetValue(NewProp_bNeedWarningForPkgEngineVer, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/UnrealEdEngine.h"));
				MetaData->SetValue(NewProp_bNeedWarningForPkgEngineVer, TEXT("ToolTip"), TEXT("Whether the user needs to be prompted about a package being saved with an engine version newer than the current one or not"));
				MetaData->SetValue(NewProp_bNeedToPromptForCheckout, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/UnrealEdEngine.h"));
				MetaData->SetValue(NewProp_bNeedToPromptForCheckout, TEXT("ToolTip"), TEXT("If we have packages that are pending and we should notify the user that they need to be checked out"));
				MetaData->SetValue(NewProp_CurrentLODParentActor, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/UnrealEdEngine.h"));
				MetaData->SetValue(NewProp_CurrentLODParentActor, TEXT("ToolTip"), TEXT("Current target for LOD parenting operations (actors will use this as the replacement)"));
				MetaData->SetValue(NewProp_PackagesToBeFullyLoadedAtStartup, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/UnrealEdEngine.h"));
				MetaData->SetValue(NewProp_PackagesToBeFullyLoadedAtStartup, TEXT("ToolTip"), TEXT("Array of packages to be fully loaded at Editor startup."));
				MetaData->SetValue(NewProp_AnimationCompressionAlgorithms, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/UnrealEdEngine.h"));
				MetaData->SetValue(NewProp_AnimationCompressionAlgorithms, TEXT("ToolTip"), TEXT("Global list of instanced animation compression algorithms."));
				MetaData->SetValue(NewProp_SoundCueCopyPasteBuffer, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/UnrealEdEngine.h"));
				MetaData->SetValue(NewProp_SoundCueCopyPasteBuffer, TEXT("ToolTip"), TEXT("A buffer for implementing sound cue nodes copy/paste."));
				MetaData->SetValue(NewProp_MatineeCopyPasteBuffer, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/UnrealEdEngine.h"));
				MetaData->SetValue(NewProp_MatineeCopyPasteBuffer, TEXT("ToolTip"), TEXT("A buffer for implementing matinee track/group copy/paste."));
				MetaData->SetValue(NewProp_MaterialCopyPasteBuffer, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/UnrealEdEngine.h"));
				MetaData->SetValue(NewProp_MaterialCopyPasteBuffer, TEXT("ToolTip"), TEXT("A buffer for implementing material expression copy/paste."));
				MetaData->SetValue(NewProp_AutoReimportManager, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/UnrealEdEngine.h"));
				MetaData->SetValue(NewProp_AutoReimportManager, TEXT("ToolTip"), TEXT("Manager responsible for configuring auto reimport"));
				MetaData->SetValue(NewProp_EditorOptionsInst, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/UnrealEdEngine.h"));
				MetaData->SetValue(NewProp_EditorOptionsInst, TEXT("ToolTip"), TEXT("Global instance of the editor options class."));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UUnrealEdEngine(Z_Construct_UClass_UUnrealEdEngine, TEXT("UUnrealEdEngine"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UUnrealEdEngine);
	UClass* Z_Construct_UClass_UEditorExperimentalSettings_NoRegister()
	{
		return UEditorExperimentalSettings::StaticClass();
	}
	UClass* Z_Construct_UClass_UEditorExperimentalSettings()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UEditorExperimentalSettings::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100084;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bFeatureLevelES31Preview, UEditorExperimentalSettings, bool);
				UProperty* NewProp_bFeatureLevelES31Preview = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bFeatureLevelES31Preview"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bFeatureLevelES31Preview, UEditorExperimentalSettings), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(bFeatureLevelES31Preview, UEditorExperimentalSettings), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bEQSEditor, UEditorExperimentalSettings, bool);
				UProperty* NewProp_bEQSEditor = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bEQSEditor"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bEQSEditor, UEditorExperimentalSettings), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(bEQSEditor, UEditorExperimentalSettings), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bIterativeCookingForLaunchOn, UEditorExperimentalSettings, bool);
				UProperty* NewProp_bIterativeCookingForLaunchOn = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bIterativeCookingForLaunchOn"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bIterativeCookingForLaunchOn, UEditorExperimentalSettings), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(bIterativeCookingForLaunchOn, UEditorExperimentalSettings), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bDisableCookInEditor, UEditorExperimentalSettings, bool);
				UProperty* NewProp_bDisableCookInEditor = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bDisableCookInEditor"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bDisableCookInEditor, UEditorExperimentalSettings), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(bDisableCookInEditor, UEditorExperimentalSettings), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bContextMenuChunkAssignments, UEditorExperimentalSettings, bool);
				UProperty* NewProp_bContextMenuChunkAssignments = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bContextMenuChunkAssignments"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bContextMenuChunkAssignments, UEditorExperimentalSettings), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(bContextMenuChunkAssignments, UEditorExperimentalSettings), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bShowAudioStreamingOptions, UEditorExperimentalSettings, bool);
				UProperty* NewProp_bShowAudioStreamingOptions = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bShowAudioStreamingOptions"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bShowAudioStreamingOptions, UEditorExperimentalSettings), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(bShowAudioStreamingOptions, UEditorExperimentalSettings), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bDrawMidpointArrowsInBlueprints, UEditorExperimentalSettings, bool);
				UProperty* NewProp_bDrawMidpointArrowsInBlueprints = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bDrawMidpointArrowsInBlueprints"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bDrawMidpointArrowsInBlueprints, UEditorExperimentalSettings), 0x0000000000004000, CPP_BOOL_PROPERTY_BITMASK(bDrawMidpointArrowsInBlueprints, UEditorExperimentalSettings), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bBreakOnExceptions, UEditorExperimentalSettings, bool);
				UProperty* NewProp_bBreakOnExceptions = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bBreakOnExceptions"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bBreakOnExceptions, UEditorExperimentalSettings), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(bBreakOnExceptions, UEditorExperimentalSettings), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bToolbarCustomization, UEditorExperimentalSettings, bool);
				UProperty* NewProp_bToolbarCustomization = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bToolbarCustomization"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bToolbarCustomization, UEditorExperimentalSettings), 0x0000000000004000, CPP_BOOL_PROPERTY_BITMASK(bToolbarCustomization, UEditorExperimentalSettings), sizeof(bool), true);
				UProperty* NewProp_ConsoleForGamepadLabels = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ConsoleForGamepadLabels"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(ConsoleForGamepadLabels, UEditorExperimentalSettings), 0x0000000000004001, Z_Construct_UEnum_InputCore_EConsoleForGamepadLabels());
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bDeviceOutputLog, UEditorExperimentalSettings, bool);
				UProperty* NewProp_bDeviceOutputLog = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bDeviceOutputLog"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bDeviceOutputLog, UEditorExperimentalSettings), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(bDeviceOutputLog, UEditorExperimentalSettings), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bActorMerging, UEditorExperimentalSettings, bool);
				UProperty* NewProp_bActorMerging = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bActorMerging"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bActorMerging, UEditorExperimentalSettings), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(bActorMerging, UEditorExperimentalSettings), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bMessagingDebugger, UEditorExperimentalSettings, bool);
				UProperty* NewProp_bMessagingDebugger = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bMessagingDebugger"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bMessagingDebugger, UEditorExperimentalSettings), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(bMessagingDebugger, UEditorExperimentalSettings), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bBlueprintableComponents, UEditorExperimentalSettings, bool);
				UProperty* NewProp_bBlueprintableComponents = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bBlueprintableComponents"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bBlueprintableComponents, UEditorExperimentalSettings), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(bBlueprintableComponents, UEditorExperimentalSettings), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bUnifiedBlueprintEditor, UEditorExperimentalSettings, bool);
				UProperty* NewProp_bUnifiedBlueprintEditor = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bUnifiedBlueprintEditor"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bUnifiedBlueprintEditor, UEditorExperimentalSettings), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(bUnifiedBlueprintEditor, UEditorExperimentalSettings), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bEnableEditorUtilityBlueprints, UEditorExperimentalSettings, bool);
				UProperty* NewProp_bEnableEditorUtilityBlueprints = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bEnableEditorUtilityBlueprints"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bEnableEditorUtilityBlueprints, UEditorExperimentalSettings), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(bEnableEditorUtilityBlueprints, UEditorExperimentalSettings), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bEnableTranslationPicker, UEditorExperimentalSettings, bool);
				UProperty* NewProp_bEnableTranslationPicker = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bEnableTranslationPicker"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bEnableTranslationPicker, UEditorExperimentalSettings), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(bEnableTranslationPicker, UEditorExperimentalSettings), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bEnableLocalizationDashboard, UEditorExperimentalSettings, bool);
				UProperty* NewProp_bEnableLocalizationDashboard = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bEnableLocalizationDashboard"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bEnableLocalizationDashboard, UEditorExperimentalSettings), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(bEnableLocalizationDashboard, UEditorExperimentalSettings), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bProceduralFoliage, UEditorExperimentalSettings, bool);
				UProperty* NewProp_bProceduralFoliage = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bProceduralFoliage"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bProceduralFoliage, UEditorExperimentalSettings), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(bProceduralFoliage, UEditorExperimentalSettings), sizeof(bool), true);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->ClassConfigName = FName(TEXT("EditorPerProjectUserSettings"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Settings/EditorExperimentalSettings.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/EditorExperimentalSettings.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Implements Editor settings for experimental features."));
				MetaData->SetValue(NewProp_bFeatureLevelES31Preview, TEXT("Category"), TEXT("Rendering"));
				MetaData->SetValue(NewProp_bFeatureLevelES31Preview, TEXT("DisplayName"), TEXT("Enable Metal/High-end mobile rendering preview"));
				MetaData->SetValue(NewProp_bFeatureLevelES31Preview, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/EditorExperimentalSettings.h"));
				MetaData->SetValue(NewProp_bFeatureLevelES31Preview, TEXT("ToolTip"), TEXT("Enables Metal/High-end mobile rendering path previw on Desktop"));
				MetaData->SetValue(NewProp_bEQSEditor, TEXT("Category"), TEXT("AI"));
				MetaData->SetValue(NewProp_bEQSEditor, TEXT("DisplayName"), TEXT("Environment Querying System"));
				MetaData->SetValue(NewProp_bEQSEditor, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/EditorExperimentalSettings.h"));
				MetaData->SetValue(NewProp_bEQSEditor, TEXT("ToolTip"), TEXT("Enables Environment Queries editor"));
				MetaData->SetValue(NewProp_bIterativeCookingForLaunchOn, TEXT("Category"), TEXT("Cooking"));
				MetaData->SetValue(NewProp_bIterativeCookingForLaunchOn, TEXT("DisplayName"), TEXT("Iterative cooking for builds launched form the editor (launch on)"));
				MetaData->SetValue(NewProp_bIterativeCookingForLaunchOn, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/EditorExperimentalSettings.h"));
				MetaData->SetValue(NewProp_bIterativeCookingForLaunchOn, TEXT("ToolTip"), TEXT("Enable -iterate for launch on"));
				MetaData->SetValue(NewProp_bDisableCookInEditor, TEXT("Category"), TEXT("Cooking"));
				MetaData->SetValue(NewProp_bDisableCookInEditor, TEXT("ConfigRestartRequired"), TEXT("TRUE"));
				MetaData->SetValue(NewProp_bDisableCookInEditor, TEXT("DisplayName"), TEXT("Disable Cook In The Editor feature (cooks from launch on will be run in a separate process if disabled)"));
				MetaData->SetValue(NewProp_bDisableCookInEditor, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/EditorExperimentalSettings.h"));
				MetaData->SetValue(NewProp_bDisableCookInEditor, TEXT("ToolTip"), TEXT("Disable cook in the editor"));
				MetaData->SetValue(NewProp_bContextMenuChunkAssignments, TEXT("Category"), TEXT("UserInterface"));
				MetaData->SetValue(NewProp_bContextMenuChunkAssignments, TEXT("DisplayName"), TEXT("Allow ChunkID Assignments"));
				MetaData->SetValue(NewProp_bContextMenuChunkAssignments, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/EditorExperimentalSettings.h"));
				MetaData->SetValue(NewProp_bContextMenuChunkAssignments, TEXT("ToolTip"), TEXT("Allows ChunkIDs to be assigned to assets to via the content browser context menu."));
				MetaData->SetValue(NewProp_bShowAudioStreamingOptions, TEXT("Category"), TEXT("Audio"));
				MetaData->SetValue(NewProp_bShowAudioStreamingOptions, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/EditorExperimentalSettings.h"));
				MetaData->SetValue(NewProp_bShowAudioStreamingOptions, TEXT("ToolTip"), TEXT("Whether to show Audio Streaming options for SoundWaves (disabling will not stop all audio streaming)"));
				MetaData->SetValue(NewProp_bDrawMidpointArrowsInBlueprints, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/EditorExperimentalSettings.h"));
				MetaData->SetValue(NewProp_bDrawMidpointArrowsInBlueprints, TEXT("ToolTip"), TEXT(", Category=Blueprints, meta=(DisplayName=\"Draw midpoint arrows in Blueprints\")"));
				MetaData->SetValue(NewProp_bBreakOnExceptions, TEXT("Category"), TEXT("Blueprints"));
				MetaData->SetValue(NewProp_bBreakOnExceptions, TEXT("DisplayName"), TEXT("Blueprint Break on Exceptions"));
				MetaData->SetValue(NewProp_bBreakOnExceptions, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/EditorExperimentalSettings.h"));
				MetaData->SetValue(NewProp_bBreakOnExceptions, TEXT("ToolTip"), TEXT("Break on Exceptions allows you to trap Access Nones and other exceptional events in Blueprints."));
				MetaData->SetValue(NewProp_bToolbarCustomization, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/EditorExperimentalSettings.h"));
				MetaData->SetValue(NewProp_bToolbarCustomization, TEXT("ToolTip"), TEXT("Allows for customization of toolbars and menus throughout the editor"));
				MetaData->SetValue(NewProp_ConsoleForGamepadLabels, TEXT("Category"), TEXT("UserInterface"));
				MetaData->SetValue(NewProp_ConsoleForGamepadLabels, TEXT("DisplayName"), TEXT("Console for Gamepad Labels"));
				MetaData->SetValue(NewProp_ConsoleForGamepadLabels, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/EditorExperimentalSettings.h"));
				MetaData->SetValue(NewProp_ConsoleForGamepadLabels, TEXT("ToolTip"), TEXT("Specify which console-specific nomenclature to use for gamepad label text"));
				MetaData->SetValue(NewProp_bDeviceOutputLog, TEXT("Category"), TEXT("Tools"));
				MetaData->SetValue(NewProp_bDeviceOutputLog, TEXT("DisplayName"), TEXT("Device Output Log"));
				MetaData->SetValue(NewProp_bDeviceOutputLog, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/EditorExperimentalSettings.h"));
				MetaData->SetValue(NewProp_bDeviceOutputLog, TEXT("ToolTip"), TEXT("Device output log window (currently implemented for Android only)"));
				MetaData->SetValue(NewProp_bActorMerging, TEXT("Category"), TEXT("Tools"));
				MetaData->SetValue(NewProp_bActorMerging, TEXT("DisplayName"), TEXT("Actor Merging"));
				MetaData->SetValue(NewProp_bActorMerging, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/EditorExperimentalSettings.h"));
				MetaData->SetValue(NewProp_bActorMerging, TEXT("ToolTip"), TEXT("Allows to use actor merging utilities (Simplygon Proxy LOD, Grouping by Materials)"));
				MetaData->SetValue(NewProp_bMessagingDebugger, TEXT("Category"), TEXT("Tools"));
				MetaData->SetValue(NewProp_bMessagingDebugger, TEXT("DisplayName"), TEXT("Messaging Debugger"));
				MetaData->SetValue(NewProp_bMessagingDebugger, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/EditorExperimentalSettings.h"));
				MetaData->SetValue(NewProp_bMessagingDebugger, TEXT("ToolTip"), TEXT("The Messaging Debugger provides a visual utility for debugging the messaging system."));
				MetaData->SetValue(NewProp_bBlueprintableComponents, TEXT("Category"), TEXT("Tools"));
				MetaData->SetValue(NewProp_bBlueprintableComponents, TEXT("ConfigRestartRequired"), TEXT("TRUE"));
				MetaData->SetValue(NewProp_bBlueprintableComponents, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/EditorExperimentalSettings.h"));
				MetaData->SetValue(NewProp_bBlueprintableComponents, TEXT("ToolTip"), TEXT("Enable being able to subclass components in blueprints"));
				MetaData->SetValue(NewProp_bUnifiedBlueprintEditor, TEXT("Category"), TEXT("Tools"));
				MetaData->SetValue(NewProp_bUnifiedBlueprintEditor, TEXT("DisplayName"), TEXT("Single Layout Blueprint Editor"));
				MetaData->SetValue(NewProp_bUnifiedBlueprintEditor, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/EditorExperimentalSettings.h"));
				MetaData->SetValue(NewProp_bUnifiedBlueprintEditor, TEXT("ToolTip"), TEXT("Enable Single Layout BP Editor."));
				MetaData->SetValue(NewProp_bEnableEditorUtilityBlueprints, TEXT("Category"), TEXT("Tools"));
				MetaData->SetValue(NewProp_bEnableEditorUtilityBlueprints, TEXT("DisplayName"), TEXT("Editor Utility Blueprints (Blutility)"));
				MetaData->SetValue(NewProp_bEnableEditorUtilityBlueprints, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/EditorExperimentalSettings.h"));
				MetaData->SetValue(NewProp_bEnableEditorUtilityBlueprints, TEXT("ToolTip"), TEXT("The Blutility shelf holds editor utility Blueprints. Summon from the Workspace menu."));
				MetaData->SetValue(NewProp_bEnableTranslationPicker, TEXT("Category"), TEXT("Tools"));
				MetaData->SetValue(NewProp_bEnableTranslationPicker, TEXT("DisplayName"), TEXT("Translation Picker"));
				MetaData->SetValue(NewProp_bEnableTranslationPicker, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/EditorExperimentalSettings.h"));
				MetaData->SetValue(NewProp_bEnableTranslationPicker, TEXT("ToolTip"), TEXT("Allows usage of the Translation Picker"));
				MetaData->SetValue(NewProp_bEnableLocalizationDashboard, TEXT("Category"), TEXT("Tools"));
				MetaData->SetValue(NewProp_bEnableLocalizationDashboard, TEXT("DisplayName"), TEXT("Localization Dashboard"));
				MetaData->SetValue(NewProp_bEnableLocalizationDashboard, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/EditorExperimentalSettings.h"));
				MetaData->SetValue(NewProp_bEnableLocalizationDashboard, TEXT("ToolTip"), TEXT("Allows usage of the Localization Dashboard"));
				MetaData->SetValue(NewProp_bProceduralFoliage, TEXT("Category"), TEXT("Foliage"));
				MetaData->SetValue(NewProp_bProceduralFoliage, TEXT("DisplayName"), TEXT("Procedural Foliage"));
				MetaData->SetValue(NewProp_bProceduralFoliage, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/EditorExperimentalSettings.h"));
				MetaData->SetValue(NewProp_bProceduralFoliage, TEXT("ToolTip"), TEXT("Allows usage of the procedural foliage system"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UEditorExperimentalSettings(Z_Construct_UClass_UEditorExperimentalSettings, TEXT("UEditorExperimentalSettings"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UEditorExperimentalSettings);
	UEnum* Z_Construct_UEnum_UnrealEd_ELoadLevelAtStartup()
	{
		UPackage* Outer=Z_Construct_UPackage_UnrealEd();
		extern uint32 Get_Z_Construct_UEnum_UnrealEd_ELoadLevelAtStartup_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("ELoadLevelAtStartup"), 0, Get_Z_Construct_UEnum_UnrealEd_ELoadLevelAtStartup_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ELoadLevelAtStartup"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ELoadLevelAtStartup::None")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ELoadLevelAtStartup::ProjectDefault")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ELoadLevelAtStartup::LastOpened")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ELoadLevelAtStartup::ELoadLevelAtStartup_MAX")), 3));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/EditorLoadingSavingSettings.h"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_UnrealEd_ELoadLevelAtStartup_CRC() { return 3072378413U; }
	UScriptStruct* Z_Construct_UScriptStruct_FAutoReimportDirectoryConfig()
	{
		UPackage* Outer=Z_Construct_UPackage_UnrealEd();
		extern uint32 Get_Z_Construct_UScriptStruct_FAutoReimportDirectoryConfig_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("AutoReimportDirectoryConfig"), sizeof(FAutoReimportDirectoryConfig), Get_Z_Construct_UScriptStruct_FAutoReimportDirectoryConfig_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("AutoReimportDirectoryConfig"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FAutoReimportDirectoryConfig>, EStructFlags(0x00000001));
			UProperty* NewProp_Wildcards = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Wildcards"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(Wildcards, FAutoReimportDirectoryConfig), 0x0000000000004001);
			UProperty* NewProp_Wildcards_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Wildcards, TEXT("Wildcards"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000004000, Z_Construct_UScriptStruct_FAutoReimportWildcard());
			UProperty* NewProp_MountPoint = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("MountPoint"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(MountPoint, FAutoReimportDirectoryConfig), 0x0000000000004001);
			UProperty* NewProp_SourceDirectory = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("SourceDirectory"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(SourceDirectory, FAutoReimportDirectoryConfig), 0x0000000000004001);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/EditorLoadingSavingSettings.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Auto reimport settings for a specific directory"));
			MetaData->SetValue(NewProp_Wildcards, TEXT("Category"), TEXT("AutoReimport"));
			MetaData->SetValue(NewProp_Wildcards, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/EditorLoadingSavingSettings.h"));
			MetaData->SetValue(NewProp_Wildcards, TEXT("ToolTip"), TEXT("A set of wildcard filters to apply to this directory"));
			MetaData->SetValue(NewProp_MountPoint, TEXT("Category"), TEXT("AutoReimport"));
			MetaData->SetValue(NewProp_MountPoint, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/EditorLoadingSavingSettings.h"));
			MetaData->SetValue(NewProp_MountPoint, TEXT("ToolTip"), TEXT("Where SourceDirectory points to an ordinary file system path, MountPoint specifies the virtual mounted location to import new files to."));
			MetaData->SetValue(NewProp_SourceDirectory, TEXT("Category"), TEXT("AutoReimport"));
			MetaData->SetValue(NewProp_SourceDirectory, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/EditorLoadingSavingSettings.h"));
			MetaData->SetValue(NewProp_SourceDirectory, TEXT("ToolTip"), TEXT("The source directory to monitor. Either an absolute directory on the file system, or a virtual mounted path"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FAutoReimportDirectoryConfig_CRC() { return 2374158555U; }
	UScriptStruct* Z_Construct_UScriptStruct_FAutoReimportWildcard()
	{
		UPackage* Outer=Z_Construct_UPackage_UnrealEd();
		extern uint32 Get_Z_Construct_UScriptStruct_FAutoReimportWildcard_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("AutoReimportWildcard"), sizeof(FAutoReimportWildcard), Get_Z_Construct_UScriptStruct_FAutoReimportWildcard_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("AutoReimportWildcard"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FAutoReimportWildcard>, EStructFlags(0x00000001));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bInclude, FAutoReimportWildcard, bool);
			UProperty* NewProp_bInclude = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bInclude"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bInclude, FAutoReimportWildcard), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(bInclude, FAutoReimportWildcard), sizeof(bool), true);
			UProperty* NewProp_Wildcard = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Wildcard"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(Wildcard, FAutoReimportWildcard), 0x0000000000004001);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/EditorLoadingSavingSettings.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("A filter used by the auto reimport manager to explicitly include/exclude files matching the specified wildcard"));
			MetaData->SetValue(NewProp_bInclude, TEXT("Category"), TEXT("AutoReimport"));
			MetaData->SetValue(NewProp_bInclude, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/EditorLoadingSavingSettings.h"));
			MetaData->SetValue(NewProp_bInclude, TEXT("ToolTip"), TEXT("When true, files that match this wildcard will be included (if it doesn't fail any other filters), when false, matches will be excluded from the reimporter"));
			MetaData->SetValue(NewProp_Wildcard, TEXT("Category"), TEXT("AutoReimport"));
			MetaData->SetValue(NewProp_Wildcard, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/EditorLoadingSavingSettings.h"));
			MetaData->SetValue(NewProp_Wildcard, TEXT("ToolTip"), TEXT("The wildcard filter as a string. Files that match this wildcard will be included/excluded according to the bInclude member"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FAutoReimportWildcard_CRC() { return 3702030285U; }
	UClass* Z_Construct_UClass_UEditorLoadingSavingSettings_NoRegister()
	{
		return UEditorLoadingSavingSettings::StaticClass();
	}
	UClass* Z_Construct_UClass_UEditorLoadingSavingSettings()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UEditorLoadingSavingSettings::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100084;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_TextDiffToolPath = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("TextDiffToolPath"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(TextDiffToolPath, UEditorLoadingSavingSettings), 0x0000000000004001, Z_Construct_UScriptStruct_FFilePath());
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bSCCUseGlobalSettings, UEditorLoadingSavingSettings, uint8);
				UProperty* NewProp_bSCCUseGlobalSettings = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bSCCUseGlobalSettings"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bSCCUseGlobalSettings, UEditorLoadingSavingSettings), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(bSCCUseGlobalSettings, UEditorLoadingSavingSettings), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bSCCAutoAddNewFiles, UEditorLoadingSavingSettings, uint8);
				UProperty* NewProp_bSCCAutoAddNewFiles = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bSCCAutoAddNewFiles"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bSCCAutoAddNewFiles, UEditorLoadingSavingSettings), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(bSCCAutoAddNewFiles, UEditorLoadingSavingSettings), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bPromptForCheckoutOnAssetModification, UEditorLoadingSavingSettings, uint8);
				UProperty* NewProp_bPromptForCheckoutOnAssetModification = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bPromptForCheckoutOnAssetModification"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bPromptForCheckoutOnAssetModification, UEditorLoadingSavingSettings), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(bPromptForCheckoutOnAssetModification, UEditorLoadingSavingSettings), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bAutomaticallyCheckoutOnAssetModification, UEditorLoadingSavingSettings, uint8);
				UProperty* NewProp_bAutomaticallyCheckoutOnAssetModification = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bAutomaticallyCheckoutOnAssetModification"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bAutomaticallyCheckoutOnAssetModification, UEditorLoadingSavingSettings), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(bAutomaticallyCheckoutOnAssetModification, UEditorLoadingSavingSettings), sizeof(uint8), false);
				UProperty* NewProp_AutoSaveWarningInSeconds = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AutoSaveWarningInSeconds"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(AutoSaveWarningInSeconds, UEditorLoadingSavingSettings), 0x0000000000004001);
				UProperty* NewProp_AutoSaveTimeMinutes = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AutoSaveTimeMinutes"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(AutoSaveTimeMinutes, UEditorLoadingSavingSettings), 0x0000000000004001);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bAutoSaveContent, UEditorLoadingSavingSettings, uint8);
				UProperty* NewProp_bAutoSaveContent = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bAutoSaveContent"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bAutoSaveContent, UEditorLoadingSavingSettings), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(bAutoSaveContent, UEditorLoadingSavingSettings), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bAutoSaveMaps, UEditorLoadingSavingSettings, uint8);
				UProperty* NewProp_bAutoSaveMaps = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bAutoSaveMaps"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bAutoSaveMaps, UEditorLoadingSavingSettings), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(bAutoSaveMaps, UEditorLoadingSavingSettings), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bAutoSaveEnable, UEditorLoadingSavingSettings, uint8);
				UProperty* NewProp_bAutoSaveEnable = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bAutoSaveEnable"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bAutoSaveEnable, UEditorLoadingSavingSettings), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(bAutoSaveEnable, UEditorLoadingSavingSettings), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bDirtyMigratedBlueprints, UEditorLoadingSavingSettings, bool);
				UProperty* NewProp_bDirtyMigratedBlueprints = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bDirtyMigratedBlueprints"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bDirtyMigratedBlueprints, UEditorLoadingSavingSettings), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(bDirtyMigratedBlueprints, UEditorLoadingSavingSettings), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bAutoReimportCSV_DEPRECATED, UEditorLoadingSavingSettings, bool);
				UProperty* NewProp_bAutoReimportCSV = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bAutoReimportCSV"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bAutoReimportCSV_DEPRECATED, UEditorLoadingSavingSettings), 0x0000000020004000, CPP_BOOL_PROPERTY_BITMASK(bAutoReimportCSV_DEPRECATED, UEditorLoadingSavingSettings), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bAutoReimportTextures_DEPRECATED, UEditorLoadingSavingSettings, bool);
				UProperty* NewProp_bAutoReimportTextures = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bAutoReimportTextures"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bAutoReimportTextures_DEPRECATED, UEditorLoadingSavingSettings), 0x0000000020004000, CPP_BOOL_PROPERTY_BITMASK(bAutoReimportTextures_DEPRECATED, UEditorLoadingSavingSettings), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bDeleteSourceFilesWithAssets, UEditorLoadingSavingSettings, bool);
				UProperty* NewProp_bDeleteSourceFilesWithAssets = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bDeleteSourceFilesWithAssets"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bDeleteSourceFilesWithAssets, UEditorLoadingSavingSettings), 0x0000000000004000, CPP_BOOL_PROPERTY_BITMASK(bDeleteSourceFilesWithAssets, UEditorLoadingSavingSettings), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bDetectChangesOnRestart, UEditorLoadingSavingSettings, bool);
				UProperty* NewProp_bDetectChangesOnRestart = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bDetectChangesOnRestart"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bDetectChangesOnRestart, UEditorLoadingSavingSettings), 0x0000040000004001, CPP_BOOL_PROPERTY_BITMASK(bDetectChangesOnRestart, UEditorLoadingSavingSettings), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bAutoDeleteAssets, UEditorLoadingSavingSettings, bool);
				UProperty* NewProp_bAutoDeleteAssets = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bAutoDeleteAssets"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bAutoDeleteAssets, UEditorLoadingSavingSettings), 0x0000040000004001, CPP_BOOL_PROPERTY_BITMASK(bAutoDeleteAssets, UEditorLoadingSavingSettings), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bAutoCreateAssets, UEditorLoadingSavingSettings, bool);
				UProperty* NewProp_bAutoCreateAssets = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bAutoCreateAssets"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bAutoCreateAssets, UEditorLoadingSavingSettings), 0x0000040000004001, CPP_BOOL_PROPERTY_BITMASK(bAutoCreateAssets, UEditorLoadingSavingSettings), sizeof(bool), true);
				UProperty* NewProp_AutoReimportThreshold = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AutoReimportThreshold"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(AutoReimportThreshold, UEditorLoadingSavingSettings), 0x0000040000004001);
				UProperty* NewProp_AutoReimportDirectorySettings = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AutoReimportDirectorySettings"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(AutoReimportDirectorySettings, UEditorLoadingSavingSettings), 0x0000040000004001);
				UProperty* NewProp_AutoReimportDirectorySettings_Inner = new(EC_InternalUseOnlyConstructor, NewProp_AutoReimportDirectorySettings, TEXT("AutoReimportDirectorySettings"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000004000, Z_Construct_UScriptStruct_FAutoReimportDirectoryConfig());
				UProperty* NewProp_AutoReimportDirectories = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AutoReimportDirectories"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(AutoReimportDirectories_DEPRECATED, UEditorLoadingSavingSettings), 0x0000000020004000);
				UProperty* NewProp_AutoReimportDirectories_Inner = new(EC_InternalUseOnlyConstructor, NewProp_AutoReimportDirectories, TEXT("AutoReimportDirectories"), RF_Public|RF_Transient|RF_Native) UStrProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000020004000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bMonitorContentDirectories, UEditorLoadingSavingSettings, bool);
				UProperty* NewProp_bMonitorContentDirectories = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bMonitorContentDirectories"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bMonitorContentDirectories, UEditorLoadingSavingSettings), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(bMonitorContentDirectories, UEditorLoadingSavingSettings), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bEnableSourceControlCompatabilityCheck, UEditorLoadingSavingSettings, bool);
				UProperty* NewProp_bEnableSourceControlCompatabilityCheck = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bEnableSourceControlCompatabilityCheck"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bEnableSourceControlCompatabilityCheck, UEditorLoadingSavingSettings), 0x0000000000004000, CPP_BOOL_PROPERTY_BITMASK(bEnableSourceControlCompatabilityCheck, UEditorLoadingSavingSettings), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bRestoreOpenAssetTabsOnRestart, UEditorLoadingSavingSettings, uint8);
				UProperty* NewProp_bRestoreOpenAssetTabsOnRestart = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bRestoreOpenAssetTabsOnRestart"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bRestoreOpenAssetTabsOnRestart, UEditorLoadingSavingSettings), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(bRestoreOpenAssetTabsOnRestart, UEditorLoadingSavingSettings), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bForceCompilationAtStartup, UEditorLoadingSavingSettings, uint8);
				UProperty* NewProp_bForceCompilationAtStartup = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bForceCompilationAtStartup"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bForceCompilationAtStartup, UEditorLoadingSavingSettings), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(bForceCompilationAtStartup, UEditorLoadingSavingSettings), sizeof(uint8), false);
				UProperty* NewProp_LoadLevelAtStartup = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("LoadLevelAtStartup"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(LoadLevelAtStartup, UEditorLoadingSavingSettings), 0x0000000000004001, Z_Construct_UEnum_UnrealEd_ELoadLevelAtStartup());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->ClassConfigName = FName(TEXT("EditorPerProjectUserSettings"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("AutoExpandCategories"), TEXT("AutoSave AutoReimport Blueprints"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Settings/EditorLoadingSavingSettings.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/EditorLoadingSavingSettings.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Implements the Level Editor's loading and saving settings."));
				MetaData->SetValue(NewProp_TextDiffToolPath, TEXT("Category"), TEXT("SourceControl"));
				MetaData->SetValue(NewProp_TextDiffToolPath, TEXT("DisplayName"), TEXT("Tool for diff'ing text"));
				MetaData->SetValue(NewProp_TextDiffToolPath, TEXT("FilePathFilter"), TEXT("exe"));
				MetaData->SetValue(NewProp_TextDiffToolPath, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/EditorLoadingSavingSettings.h"));
				MetaData->SetValue(NewProp_TextDiffToolPath, TEXT("ToolTip"), TEXT("Specifies the file path to the tool to be used for diff'ing text files"));
				MetaData->SetValue(NewProp_bSCCUseGlobalSettings, TEXT("Category"), TEXT("SourceControl"));
				MetaData->SetValue(NewProp_bSCCUseGlobalSettings, TEXT("DisplayName"), TEXT("Use Global Settings"));
				MetaData->SetValue(NewProp_bSCCUseGlobalSettings, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/EditorLoadingSavingSettings.h"));
				MetaData->SetValue(NewProp_bSCCUseGlobalSettings, TEXT("ToolTip"), TEXT("Use global source control login settings, rather than per-project. Changing this will require you to login again"));
				MetaData->SetValue(NewProp_bSCCAutoAddNewFiles, TEXT("Category"), TEXT("SourceControl"));
				MetaData->SetValue(NewProp_bSCCAutoAddNewFiles, TEXT("DisplayName"), TEXT("Add New Files when Modified"));
				MetaData->SetValue(NewProp_bSCCAutoAddNewFiles, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/EditorLoadingSavingSettings.h"));
				MetaData->SetValue(NewProp_bSCCAutoAddNewFiles, TEXT("ToolTip"), TEXT("Auto add files to source control"));
				MetaData->SetValue(NewProp_bPromptForCheckoutOnAssetModification, TEXT("Category"), TEXT("SourceControl"));
				MetaData->SetValue(NewProp_bPromptForCheckoutOnAssetModification, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/EditorLoadingSavingSettings.h"));
				MetaData->SetValue(NewProp_bPromptForCheckoutOnAssetModification, TEXT("ToolTip"), TEXT("Whether to automatically prompt for SCC checkout on asset modification"));
				MetaData->SetValue(NewProp_bAutomaticallyCheckoutOnAssetModification, TEXT("Category"), TEXT("SourceControl"));
				MetaData->SetValue(NewProp_bAutomaticallyCheckoutOnAssetModification, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/EditorLoadingSavingSettings.h"));
				MetaData->SetValue(NewProp_bAutomaticallyCheckoutOnAssetModification, TEXT("ToolTip"), TEXT("Whether to automatically checkout on asset modification"));
				MetaData->SetValue(NewProp_AutoSaveWarningInSeconds, TEXT("Category"), TEXT("AutoSave"));
				MetaData->SetValue(NewProp_AutoSaveWarningInSeconds, TEXT("ClampMin"), TEXT("0"));
				MetaData->SetValue(NewProp_AutoSaveWarningInSeconds, TEXT("DisplayName"), TEXT("Warning in seconds"));
				MetaData->SetValue(NewProp_AutoSaveWarningInSeconds, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/EditorLoadingSavingSettings.h"));
				MetaData->SetValue(NewProp_AutoSaveWarningInSeconds, TEXT("ToolTip"), TEXT("The number of seconds warning before an autosave"));
				MetaData->SetValue(NewProp_AutoSaveWarningInSeconds, TEXT("UIMax"), TEXT("20"));
				MetaData->SetValue(NewProp_AutoSaveWarningInSeconds, TEXT("UIMin"), TEXT("0"));
				MetaData->SetValue(NewProp_AutoSaveTimeMinutes, TEXT("Category"), TEXT("AutoSave"));
				MetaData->SetValue(NewProp_AutoSaveTimeMinutes, TEXT("ClampMin"), TEXT("1"));
				MetaData->SetValue(NewProp_AutoSaveTimeMinutes, TEXT("DisplayName"), TEXT("Frequency in Minutes"));
				MetaData->SetValue(NewProp_AutoSaveTimeMinutes, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/EditorLoadingSavingSettings.h"));
				MetaData->SetValue(NewProp_AutoSaveTimeMinutes, TEXT("ToolTip"), TEXT("The time interval after which to auto save"));
				MetaData->SetValue(NewProp_bAutoSaveContent, TEXT("Category"), TEXT("AutoSave"));
				MetaData->SetValue(NewProp_bAutoSaveContent, TEXT("DisplayName"), TEXT("Save Content"));
				MetaData->SetValue(NewProp_bAutoSaveContent, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/EditorLoadingSavingSettings.h"));
				MetaData->SetValue(NewProp_bAutoSaveContent, TEXT("ToolTip"), TEXT("Whether to automatically save content packages during an autosave"));
				MetaData->SetValue(NewProp_bAutoSaveMaps, TEXT("Category"), TEXT("AutoSave"));
				MetaData->SetValue(NewProp_bAutoSaveMaps, TEXT("DisplayName"), TEXT("Save Maps"));
				MetaData->SetValue(NewProp_bAutoSaveMaps, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/EditorLoadingSavingSettings.h"));
				MetaData->SetValue(NewProp_bAutoSaveMaps, TEXT("ToolTip"), TEXT("Whether to automatically save maps during an autosave"));
				MetaData->SetValue(NewProp_bAutoSaveEnable, TEXT("Category"), TEXT("AutoSave"));
				MetaData->SetValue(NewProp_bAutoSaveEnable, TEXT("DisplayName"), TEXT("Enable AutoSave"));
				MetaData->SetValue(NewProp_bAutoSaveEnable, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/EditorLoadingSavingSettings.h"));
				MetaData->SetValue(NewProp_bAutoSaveEnable, TEXT("ToolTip"), TEXT("Whether to automatically save after a time interval"));
				MetaData->SetValue(NewProp_bDirtyMigratedBlueprints, TEXT("Category"), TEXT("Blueprints"));
				MetaData->SetValue(NewProp_bDirtyMigratedBlueprints, TEXT("DisplayName"), TEXT("Dirty Migrated Blueprints"));
				MetaData->SetValue(NewProp_bDirtyMigratedBlueprints, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/EditorLoadingSavingSettings.h"));
				MetaData->SetValue(NewProp_bDirtyMigratedBlueprints, TEXT("ToolTip"), TEXT("Whether to mark blueprints dirty if they are automatically migrated during loads"));
				MetaData->SetValue(NewProp_bAutoReimportCSV, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/EditorLoadingSavingSettings.h"));
				MetaData->SetValue(NewProp_bAutoReimportTextures, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/EditorLoadingSavingSettings.h"));
				MetaData->SetValue(NewProp_bAutoReimportTextures, TEXT("ToolTip"), TEXT("Deprecated properties - we automatically monitor all source file types that are supported by in memory factories now"));
				MetaData->SetValue(NewProp_bDeleteSourceFilesWithAssets, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/EditorLoadingSavingSettings.h"));
				MetaData->SetValue(NewProp_bDeleteSourceFilesWithAssets, TEXT("ToolTip"), TEXT("Internal setting to control whether we should ask the user whether we should automatically delete source files when their assets are deleted"));
				MetaData->SetValue(NewProp_bDetectChangesOnRestart, TEXT("Category"), TEXT("AutoReimport"));
				MetaData->SetValue(NewProp_bDetectChangesOnRestart, TEXT("DisplayName"), TEXT("Detect Changes On Restart"));
				MetaData->SetValue(NewProp_bDetectChangesOnRestart, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/EditorLoadingSavingSettings.h"));
				MetaData->SetValue(NewProp_bDetectChangesOnRestart, TEXT("ToolTip"), TEXT("When enabled, changes to monitored directories since UE4 was closed will be detected on restart.\n(Not recommended when working in collaboration with others using source control)."));
				MetaData->SetValue(NewProp_bAutoDeleteAssets, TEXT("Category"), TEXT("AutoReimport"));
				MetaData->SetValue(NewProp_bAutoDeleteAssets, TEXT("DisplayName"), TEXT("Auto Delete Assets"));
				MetaData->SetValue(NewProp_bAutoDeleteAssets, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/EditorLoadingSavingSettings.h"));
				MetaData->SetValue(NewProp_bAutoDeleteAssets, TEXT("ToolTip"), TEXT("When enabled, deleting a source content file will automatically prompt the deletion of any related assets."));
				MetaData->SetValue(NewProp_bAutoCreateAssets, TEXT("Category"), TEXT("AutoReimport"));
				MetaData->SetValue(NewProp_bAutoCreateAssets, TEXT("DisplayName"), TEXT("Auto Create Assets"));
				MetaData->SetValue(NewProp_bAutoCreateAssets, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/EditorLoadingSavingSettings.h"));
				MetaData->SetValue(NewProp_bAutoCreateAssets, TEXT("ToolTip"), TEXT("When enabled, newly added source content files will be automatically imported into new assets."));
				MetaData->SetValue(NewProp_AutoReimportThreshold, TEXT("Category"), TEXT("AutoReimport"));
				MetaData->SetValue(NewProp_AutoReimportThreshold, TEXT("ClampMax"), TEXT("60"));
				MetaData->SetValue(NewProp_AutoReimportThreshold, TEXT("ClampMin"), TEXT("0"));
				MetaData->SetValue(NewProp_AutoReimportThreshold, TEXT("DisplayName"), TEXT("Import Threshold Time"));
				MetaData->SetValue(NewProp_AutoReimportThreshold, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/EditorLoadingSavingSettings.h"));
				MetaData->SetValue(NewProp_AutoReimportThreshold, TEXT("ToolTip"), TEXT("Specifies an amount of time to wait before a specific file change is considered for auto reimport"));
				MetaData->SetValue(NewProp_AutoReimportDirectorySettings, TEXT("Category"), TEXT("AutoReimport"));
				MetaData->SetValue(NewProp_AutoReimportDirectorySettings, TEXT("DisplayName"), TEXT("Directories to Monitor"));
				MetaData->SetValue(NewProp_AutoReimportDirectorySettings, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/EditorLoadingSavingSettings.h"));
				MetaData->SetValue(NewProp_AutoReimportDirectorySettings, TEXT("ToolTip"), TEXT("Lists every directory to monitor for content changes. Can be virtual package paths (eg /Game/ or /MyPlugin/), or absolute paths on disk."));
				MetaData->SetValue(NewProp_AutoReimportDirectories, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/EditorLoadingSavingSettings.h"));
				MetaData->SetValue(NewProp_bMonitorContentDirectories, TEXT("Category"), TEXT("AutoReimport"));
				MetaData->SetValue(NewProp_bMonitorContentDirectories, TEXT("DisplayName"), TEXT("Monitor Content Directories"));
				MetaData->SetValue(NewProp_bMonitorContentDirectories, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/EditorLoadingSavingSettings.h"));
				MetaData->SetValue(NewProp_bMonitorContentDirectories, TEXT("ToolTip"), TEXT("When enabled, changes to made to source content files inside the content directories will automatically be reflected in the content browser."));
				MetaData->SetValue(NewProp_bEnableSourceControlCompatabilityCheck, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/EditorLoadingSavingSettings.h"));
				MetaData->SetValue(NewProp_bEnableSourceControlCompatabilityCheck, TEXT("ToolTip"), TEXT("true when CheckSourceControlCompatability is enabled"));
				MetaData->SetValue(NewProp_bRestoreOpenAssetTabsOnRestart, TEXT("Category"), TEXT("Startup"));
				MetaData->SetValue(NewProp_bRestoreOpenAssetTabsOnRestart, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/EditorLoadingSavingSettings.h"));
				MetaData->SetValue(NewProp_bRestoreOpenAssetTabsOnRestart, TEXT("ToolTip"), TEXT("Whether to restore previously open assets at startup"));
				MetaData->SetValue(NewProp_bForceCompilationAtStartup, TEXT("Category"), TEXT("Startup"));
				MetaData->SetValue(NewProp_bForceCompilationAtStartup, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/EditorLoadingSavingSettings.h"));
				MetaData->SetValue(NewProp_bForceCompilationAtStartup, TEXT("ToolTip"), TEXT("Force project compilation at startup"));
				MetaData->SetValue(NewProp_LoadLevelAtStartup, TEXT("Category"), TEXT("Startup"));
				MetaData->SetValue(NewProp_LoadLevelAtStartup, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/EditorLoadingSavingSettings.h"));
				MetaData->SetValue(NewProp_LoadLevelAtStartup, TEXT("ToolTip"), TEXT("Whether to load a default example map at startup"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UEditorLoadingSavingSettings(Z_Construct_UClass_UEditorLoadingSavingSettings, TEXT("UEditorLoadingSavingSettings"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UEditorLoadingSavingSettings);
	UClass* Z_Construct_UClass_UEditorMiscSettings_NoRegister()
	{
		return UEditorMiscSettings::StaticClass();
	}
	UClass* Z_Construct_UClass_UEditorMiscSettings()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UEditorMiscSettings::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;


				OuterClass->ClassConfigName = FName(TEXT("EditorPerProjectUserSettings"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Settings/EditorMiscSettings.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/EditorMiscSettings.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Implements the miscellaneous Editor settings."));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UEditorMiscSettings(Z_Construct_UClass_UEditorMiscSettings, TEXT("UEditorMiscSettings"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UEditorMiscSettings);
	UClass* Z_Construct_UClass_UEditorParentPlayerListObj_NoRegister()
	{
		return UEditorParentPlayerListObj::StaticClass();
	}
	UClass* Z_Construct_UClass_UEditorParentPlayerListObj()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UEditorParentPlayerListObj::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_Overrides = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Overrides"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(Overrides, UEditorParentPlayerListObj), 0x0000000000000001);
				UProperty* NewProp_Overrides_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Overrides, TEXT("Overrides"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FAnimParentNodeAssetOverride());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Animation/EditorParentPlayerListObj.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Animation/EditorParentPlayerListObj.h"));
				MetaData->SetValue(NewProp_Overrides, TEXT("Category"), TEXT("AnimationGraphOverrides"));
				MetaData->SetValue(NewProp_Overrides, TEXT("ModuleRelativePath"), TEXT("Classes/Animation/EditorParentPlayerListObj.h"));
				MetaData->SetValue(NewProp_Overrides, TEXT("ToolTip"), TEXT("List of possible overrides to display."));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UEditorParentPlayerListObj(Z_Construct_UClass_UEditorParentPlayerListObj, TEXT("UEditorParentPlayerListObj"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UEditorParentPlayerListObj);
	UEnum* Z_Construct_UEnum_UnrealEd_ELevelEditor2DAxis()
	{
		UPackage* Outer=Z_Construct_UPackage_UnrealEd();
		extern uint32 Get_Z_Construct_UEnum_UnrealEd_ELevelEditor2DAxis_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("ELevelEditor2DAxis"), 0, Get_Z_Construct_UEnum_UnrealEd_ELevelEditor2DAxis_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ELevelEditor2DAxis"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ELevelEditor2DAxis::X")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ELevelEditor2DAxis::Y")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ELevelEditor2DAxis::Z")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ELevelEditor2DAxis::ELevelEditor2DAxis_MAX")), 3));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::EnumClass);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Public/Settings/EditorProjectSettings.h"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_UnrealEd_ELevelEditor2DAxis_CRC() { return 2797112336U; }
	UEnum* Z_Construct_UEnum_UnrealEd_EDefaultLocationUnit()
	{
		UPackage* Outer=Z_Construct_UPackage_UnrealEd();
		extern uint32 Get_Z_Construct_UEnum_UnrealEd_EDefaultLocationUnit_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("EDefaultLocationUnit"), 0, Get_Z_Construct_UEnum_UnrealEd_EDefaultLocationUnit_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EDefaultLocationUnit"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EDefaultLocationUnit::Micrometers")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EDefaultLocationUnit::Millimeters")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EDefaultLocationUnit::Centimeters")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EDefaultLocationUnit::Meters")), 3));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EDefaultLocationUnit::Kilometers")), 4));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EDefaultLocationUnit::Inches")), 5));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EDefaultLocationUnit::Feet")), 6));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EDefaultLocationUnit::Yards")), 7));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EDefaultLocationUnit::Miles")), 8));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EDefaultLocationUnit::Invalid")), 9));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EDefaultLocationUnit::EDefaultLocationUnit_MAX")), 10));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::EnumClass);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Public/Settings/EditorProjectSettings.h"));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("UENUM to define the specific set of allowable default units"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_UnrealEd_EDefaultLocationUnit_CRC() { return 3671140196U; }
	UEnum* Z_Construct_UEnum_UnrealEd_EUnitDisplay()
	{
		UPackage* Outer=Z_Construct_UPackage_UnrealEd();
		extern uint32 Get_Z_Construct_UEnum_UnrealEd_EUnitDisplay_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("EUnitDisplay"), 0, Get_Z_Construct_UEnum_UnrealEd_EUnitDisplay_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EUnitDisplay"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EUnitDisplay::None")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EUnitDisplay::Metric")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EUnitDisplay::Imperial")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EUnitDisplay::Invalid")), 3));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EUnitDisplay::EUnitDisplay_MAX")), 4));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::EnumClass);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Public/Settings/EditorProjectSettings.h"));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("UENUM to define the specific set of allowable unit types"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_UnrealEd_EUnitDisplay_CRC() { return 3735424494U; }
	UScriptStruct* Z_Construct_UScriptStruct_FMode2DLayer()
	{
		UPackage* Outer=Z_Construct_UPackage_UnrealEd();
		extern uint32 Get_Z_Construct_UScriptStruct_FMode2DLayer_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("Mode2DLayer"), sizeof(FMode2DLayer), Get_Z_Construct_UScriptStruct_FMode2DLayer_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Mode2DLayer"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FMode2DLayer>, EStructFlags(0x00000201));
			UProperty* NewProp_Depth = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Depth"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(Depth, FMode2DLayer), 0x0000000000004001);
			UProperty* NewProp_Name = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Name"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(Name, FMode2DLayer), 0x0000000000004001);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Settings/EditorProjectSettings.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("2D layer settings"));
			MetaData->SetValue(NewProp_Depth, TEXT("Category"), TEXT("Layer"));
			MetaData->SetValue(NewProp_Depth, TEXT("ModuleRelativePath"), TEXT("Public/Settings/EditorProjectSettings.h"));
			MetaData->SetValue(NewProp_Depth, TEXT("ToolTip"), TEXT("The amount of depth to apply when snapping to surfaces"));
			MetaData->SetValue(NewProp_Name, TEXT("Category"), TEXT("Layer"));
			MetaData->SetValue(NewProp_Name, TEXT("ModuleRelativePath"), TEXT("Public/Settings/EditorProjectSettings.h"));
			MetaData->SetValue(NewProp_Name, TEXT("ToolTip"), TEXT("Whether snapping to surfaces in the world is enabled"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMode2DLayer_CRC() { return 93859105U; }
	UClass* Z_Construct_UClass_UEditorProjectAppearanceSettings_NoRegister()
	{
		return UEditorProjectAppearanceSettings::StaticClass();
	}
	UClass* Z_Construct_UClass_UEditorProjectAppearanceSettings()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UDeveloperSettings();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UEditorProjectAppearanceSettings::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100086;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_DefaultInputUnits = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("DefaultInputUnits"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(DefaultInputUnits_DEPRECATED, UEditorProjectAppearanceSettings), 0x0000000020004000, Z_Construct_UEnum_UnrealEd_EDefaultLocationUnit());
				UProperty* NewProp_UnitDisplay = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("UnitDisplay"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(UnitDisplay_DEPRECATED, UEditorProjectAppearanceSettings), 0x0000000020004000, Z_Construct_UEnum_UnrealEd_EUnitDisplay());
				UProperty* NewProp_ForceUnits = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ForceUnits"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(ForceUnits, UEditorProjectAppearanceSettings), 0x0000040000004001, Z_Construct_UEnum_CoreUObject_EUnit());
				UProperty* NewProp_TemperatureUnits = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("TemperatureUnits"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(TemperatureUnits, UEditorProjectAppearanceSettings), 0x0000040000004001, Z_Construct_UEnum_CoreUObject_EUnit());
				UProperty* NewProp_SpeedUnits = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SpeedUnits"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(SpeedUnits, UEditorProjectAppearanceSettings), 0x0000040000004001, Z_Construct_UEnum_CoreUObject_EUnit());
				UProperty* NewProp_AngleUnits = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AngleUnits"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(AngleUnits, UEditorProjectAppearanceSettings), 0x0000040000004001, Z_Construct_UEnum_CoreUObject_EUnit());
				UProperty* NewProp_TimeUnits = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("TimeUnits"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(TimeUnits, UEditorProjectAppearanceSettings), 0x0000040000004001);
				UProperty* NewProp_TimeUnits_Inner = new(EC_InternalUseOnlyConstructor, NewProp_TimeUnits, TEXT("TimeUnits"), RF_Public|RF_Transient|RF_Native) UByteProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000004000, Z_Construct_UEnum_CoreUObject_EUnit());
				UProperty* NewProp_MassUnits = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MassUnits"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(MassUnits, UEditorProjectAppearanceSettings), 0x0000040000004001);
				UProperty* NewProp_MassUnits_Inner = new(EC_InternalUseOnlyConstructor, NewProp_MassUnits, TEXT("MassUnits"), RF_Public|RF_Transient|RF_Native) UByteProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000004000, Z_Construct_UEnum_CoreUObject_EUnit());
				UProperty* NewProp_DistanceUnits = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("DistanceUnits"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(DistanceUnits, UEditorProjectAppearanceSettings), 0x0000040000004001);
				UProperty* NewProp_DistanceUnits_Inner = new(EC_InternalUseOnlyConstructor, NewProp_DistanceUnits, TEXT("DistanceUnits"), RF_Public|RF_Transient|RF_Native) UByteProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000004000, Z_Construct_UEnum_CoreUObject_EUnit());
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bDisplayUnits, UEditorProjectAppearanceSettings, bool);
				UProperty* NewProp_bDisplayUnits = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bDisplayUnits"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bDisplayUnits, UEditorProjectAppearanceSettings), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(bDisplayUnits, UEditorProjectAppearanceSettings), sizeof(bool), true);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->ClassConfigName = FName(TEXT("Editor"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("DisplayName"), TEXT("Appearance"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Settings/EditorProjectSettings.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Settings/EditorProjectSettings.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Editor project appearance settings. Stored in default config, per-project"));
				MetaData->SetValue(NewProp_DefaultInputUnits, TEXT("ModuleRelativePath"), TEXT("Public/Settings/EditorProjectSettings.h"));
				MetaData->SetValue(NewProp_UnitDisplay, TEXT("ModuleRelativePath"), TEXT("Public/Settings/EditorProjectSettings.h"));
				MetaData->SetValue(NewProp_ForceUnits, TEXT("Category"), TEXT("Units"));
				MetaData->SetValue(NewProp_ForceUnits, TEXT("DisplayName"), TEXT("Force"));
				MetaData->SetValue(NewProp_ForceUnits, TEXT("ModuleRelativePath"), TEXT("Public/Settings/EditorProjectSettings.h"));
				MetaData->SetValue(NewProp_ForceUnits, TEXT("Tooltip"), TEXT("Choose the units in which to display forces."));
				MetaData->SetValue(NewProp_ForceUnits, TEXT("ValidEnumValues"), TEXT("Newtons, PoundsForce, KilogramsForce"));
				MetaData->SetValue(NewProp_TemperatureUnits, TEXT("Category"), TEXT("Units"));
				MetaData->SetValue(NewProp_TemperatureUnits, TEXT("DisplayName"), TEXT("Temperature"));
				MetaData->SetValue(NewProp_TemperatureUnits, TEXT("ModuleRelativePath"), TEXT("Public/Settings/EditorProjectSettings.h"));
				MetaData->SetValue(NewProp_TemperatureUnits, TEXT("Tooltip"), TEXT("Choose the units in which to display temperatures."));
				MetaData->SetValue(NewProp_TemperatureUnits, TEXT("ValidEnumValues"), TEXT("Celsius, Farenheit, Kelvin"));
				MetaData->SetValue(NewProp_SpeedUnits, TEXT("Category"), TEXT("Units"));
				MetaData->SetValue(NewProp_SpeedUnits, TEXT("DisplayName"), TEXT("Speed/Velocity"));
				MetaData->SetValue(NewProp_SpeedUnits, TEXT("ModuleRelativePath"), TEXT("Public/Settings/EditorProjectSettings.h"));
				MetaData->SetValue(NewProp_SpeedUnits, TEXT("Tooltip"), TEXT("Choose the units in which to display speeds and velocities."));
				MetaData->SetValue(NewProp_SpeedUnits, TEXT("ValidEnumValues"), TEXT("MetersPerSecond, KilometersPerHour, MilesPerHour"));
				MetaData->SetValue(NewProp_AngleUnits, TEXT("Category"), TEXT("Units"));
				MetaData->SetValue(NewProp_AngleUnits, TEXT("DisplayName"), TEXT("Angles"));
				MetaData->SetValue(NewProp_AngleUnits, TEXT("ModuleRelativePath"), TEXT("Public/Settings/EditorProjectSettings.h"));
				MetaData->SetValue(NewProp_AngleUnits, TEXT("Tooltip"), TEXT("Choose the units in which to display angles."));
				MetaData->SetValue(NewProp_AngleUnits, TEXT("ValidEnumValues"), TEXT("Degrees, Radians"));
				MetaData->SetValue(NewProp_TimeUnits, TEXT("Category"), TEXT("Units"));
				MetaData->SetValue(NewProp_TimeUnits, TEXT("DisplayName"), TEXT("Time"));
				MetaData->SetValue(NewProp_TimeUnits, TEXT("ModuleRelativePath"), TEXT("Public/Settings/EditorProjectSettings.h"));
				MetaData->SetValue(NewProp_TimeUnits, TEXT("Tooltip"), TEXT("Choose the units in which to display time."));
				MetaData->SetValue(NewProp_MassUnits, TEXT("Category"), TEXT("Units"));
				MetaData->SetValue(NewProp_MassUnits, TEXT("DisplayName"), TEXT("Mass"));
				MetaData->SetValue(NewProp_MassUnits, TEXT("ModuleRelativePath"), TEXT("Public/Settings/EditorProjectSettings.h"));
				MetaData->SetValue(NewProp_MassUnits, TEXT("Tooltip"), TEXT("Choose a set of units in which to display masses."));
				MetaData->SetValue(NewProp_DistanceUnits, TEXT("Category"), TEXT("Units"));
				MetaData->SetValue(NewProp_DistanceUnits, TEXT("DisplayName"), TEXT("Distance/Length"));
				MetaData->SetValue(NewProp_DistanceUnits, TEXT("ModuleRelativePath"), TEXT("Public/Settings/EditorProjectSettings.h"));
				MetaData->SetValue(NewProp_DistanceUnits, TEXT("Tooltip"), TEXT("Choose a set of units in which to display distance/length values."));
				MetaData->SetValue(NewProp_bDisplayUnits, TEXT("Category"), TEXT("Units"));
				MetaData->SetValue(NewProp_bDisplayUnits, TEXT("DisplayName"), TEXT("Display Units on Applicable Properties"));
				MetaData->SetValue(NewProp_bDisplayUnits, TEXT("ModuleRelativePath"), TEXT("Public/Settings/EditorProjectSettings.h"));
				MetaData->SetValue(NewProp_bDisplayUnits, TEXT("Tooltip"), TEXT("Whether to display units on editor properties where the property has units set."));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UEditorProjectAppearanceSettings(Z_Construct_UClass_UEditorProjectAppearanceSettings, TEXT("UEditorProjectAppearanceSettings"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UEditorProjectAppearanceSettings);
	UClass* Z_Construct_UClass_ULevelEditor2DSettings_NoRegister()
	{
		return ULevelEditor2DSettings::StaticClass();
	}
	UClass* Z_Construct_UClass_ULevelEditor2DSettings()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UDeveloperSettings();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = ULevelEditor2DSettings::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100086;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_SnapLayers = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SnapLayers"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(SnapLayers, ULevelEditor2DSettings), 0x0000000000004001);
				UProperty* NewProp_SnapLayers_Inner = new(EC_InternalUseOnlyConstructor, NewProp_SnapLayers, TEXT("SnapLayers"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000004000, Z_Construct_UScriptStruct_FMode2DLayer());
				UProperty* NewProp_SnapAxis = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SnapAxis"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(SnapAxis, ULevelEditor2DSettings), 0x0000000000004001, Z_Construct_UEnum_UnrealEd_ELevelEditor2DAxis());
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bEnableSnapLayers, ULevelEditor2DSettings, bool);
				UProperty* NewProp_bEnableSnapLayers = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bEnableSnapLayers"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bEnableSnapLayers, ULevelEditor2DSettings), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(bEnableSnapLayers, ULevelEditor2DSettings), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bEnable2DWidget, ULevelEditor2DSettings, bool);
				UProperty* NewProp_bEnable2DWidget = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bEnable2DWidget"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bEnable2DWidget, ULevelEditor2DSettings), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(bEnable2DWidget, ULevelEditor2DSettings), sizeof(bool), true);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->ClassConfigName = FName(TEXT("Editor"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("DisplayName"), TEXT("2D"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Settings/EditorProjectSettings.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Settings/EditorProjectSettings.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Configure settings for the 2D Level Editor"));
				MetaData->SetValue(NewProp_SnapLayers, TEXT("Category"), TEXT("LayerSnapping"));
				MetaData->SetValue(NewProp_SnapLayers, TEXT("EditCondition"), TEXT("bEnableSnapLayers"));
				MetaData->SetValue(NewProp_SnapLayers, TEXT("ModuleRelativePath"), TEXT("Public/Settings/EditorProjectSettings.h"));
				MetaData->SetValue(NewProp_SnapLayers, TEXT("ToolTip"), TEXT("Snap layers that are displayed in the viewport toolbar"));
				MetaData->SetValue(NewProp_SnapAxis, TEXT("Category"), TEXT("LayerSnapping"));
				MetaData->SetValue(NewProp_SnapAxis, TEXT("EditCondition"), TEXT("bEnableSnapLayers"));
				MetaData->SetValue(NewProp_SnapAxis, TEXT("ModuleRelativePath"), TEXT("Public/Settings/EditorProjectSettings.h"));
				MetaData->SetValue(NewProp_SnapAxis, TEXT("ToolTip"), TEXT("Snap axis"));
				MetaData->SetValue(NewProp_bEnableSnapLayers, TEXT("Category"), TEXT("LayerSnapping"));
				MetaData->SetValue(NewProp_bEnableSnapLayers, TEXT("ModuleRelativePath"), TEXT("Public/Settings/EditorProjectSettings.h"));
				MetaData->SetValue(NewProp_bEnableSnapLayers, TEXT("ToolTip"), TEXT("If enabled will allow 2D mode"));
				MetaData->SetValue(NewProp_bEnable2DWidget, TEXT("Category"), TEXT("General"));
				MetaData->SetValue(NewProp_bEnable2DWidget, TEXT("DisplayName"), TEXT("Enable 2D combined translate + rotate widget"));
				MetaData->SetValue(NewProp_bEnable2DWidget, TEXT("ModuleRelativePath"), TEXT("Public/Settings/EditorProjectSettings.h"));
				MetaData->SetValue(NewProp_bEnable2DWidget, TEXT("ToolTip"), TEXT("If enabled will allow 2D mode"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_ULevelEditor2DSettings(Z_Construct_UClass_ULevelEditor2DSettings, TEXT("ULevelEditor2DSettings"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(ULevelEditor2DSettings);
	UClass* Z_Construct_UClass_UEditorSettings_NoRegister()
	{
		return UEditorSettings::StaticClass();
	}
	UClass* Z_Construct_UClass_UEditorSettings()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UEditorSettings::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100084;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_AutoScalabilityWorkScaleAmount = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AutoScalabilityWorkScaleAmount"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(AutoScalabilityWorkScaleAmount, UEditorSettings), 0x0000000000004000);
				UProperty* NewProp_InProgressSurveys = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("InProgressSurveys"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(InProgressSurveys, UEditorSettings), 0x0000000000004000);
				UProperty* NewProp_InProgressSurveys_Inner = new(EC_InternalUseOnlyConstructor, NewProp_InProgressSurveys, TEXT("InProgressSurveys"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000004000, Z_Construct_UScriptStruct_FGuid());
				UProperty* NewProp_CompletedSurveys = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CompletedSurveys"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(CompletedSurveys, UEditorSettings), 0x0000000000004000);
				UProperty* NewProp_CompletedSurveys_Inner = new(EC_InternalUseOnlyConstructor, NewProp_CompletedSurveys, TEXT("CompletedSurveys"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000004000, Z_Construct_UScriptStruct_FGuid());
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bCopyStarterContentPreference, UEditorSettings, bool);
				UProperty* NewProp_bCopyStarterContentPreference = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bCopyStarterContentPreference"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bCopyStarterContentPreference, UEditorSettings), 0x0000000000004000, CPP_BOOL_PROPERTY_BITMASK(bCopyStarterContentPreference, UEditorSettings), sizeof(bool), true);
				UProperty* NewProp_CreatedProjectPaths = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CreatedProjectPaths"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(CreatedProjectPaths, UEditorSettings), 0x0000000000004000);
				UProperty* NewProp_CreatedProjectPaths_Inner = new(EC_InternalUseOnlyConstructor, NewProp_CreatedProjectPaths, TEXT("CreatedProjectPaths"), RF_Public|RF_Transient|RF_Native) UStrProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000004000);
				UProperty* NewProp_RecentlyOpenedProjectFiles = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("RecentlyOpenedProjectFiles"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(RecentlyOpenedProjectFiles, UEditorSettings), 0x0000000000004000);
				UProperty* NewProp_RecentlyOpenedProjectFiles_Inner = new(EC_InternalUseOnlyConstructor, NewProp_RecentlyOpenedProjectFiles, TEXT("RecentlyOpenedProjectFiles"), RF_Public|RF_Transient|RF_Native) UStrProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000004000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bEditorAnalyticsEnabled_DEPRECATED, UEditorSettings, bool);
				UProperty* NewProp_bEditorAnalyticsEnabled = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bEditorAnalyticsEnabled"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bEditorAnalyticsEnabled_DEPRECATED, UEditorSettings), 0x0000000020000000, CPP_BOOL_PROPERTY_BITMASK(bEditorAnalyticsEnabled_DEPRECATED, UEditorSettings), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bLoadTheMostRecentlyLoadedProjectAtStartup, UEditorSettings, bool);
				UProperty* NewProp_bLoadTheMostRecentlyLoadedProjectAtStartup = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bLoadTheMostRecentlyLoadedProjectAtStartup"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bLoadTheMostRecentlyLoadedProjectAtStartup, UEditorSettings), 0x0000000000000001, CPP_BOOL_PROPERTY_BITMASK(bLoadTheMostRecentlyLoadedProjectAtStartup, UEditorSettings), sizeof(bool), true);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->ClassConfigName = FName(TEXT("EditorSettings"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Settings/EditorSettings.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Settings/EditorSettings.h"));
				MetaData->SetValue(NewProp_AutoScalabilityWorkScaleAmount, TEXT("ModuleRelativePath"), TEXT("Public/Settings/EditorSettings.h"));
				MetaData->SetValue(NewProp_InProgressSurveys, TEXT("ModuleRelativePath"), TEXT("Public/Settings/EditorSettings.h"));
				MetaData->SetValue(NewProp_InProgressSurveys, TEXT("ToolTip"), TEXT("The id's of the surveys currently in-progress"));
				MetaData->SetValue(NewProp_CompletedSurveys, TEXT("ModuleRelativePath"), TEXT("Public/Settings/EditorSettings.h"));
				MetaData->SetValue(NewProp_CompletedSurveys, TEXT("ToolTip"), TEXT("The id's of the surveys completed"));
				MetaData->SetValue(NewProp_bCopyStarterContentPreference, TEXT("ModuleRelativePath"), TEXT("Public/Settings/EditorSettings.h"));
				MetaData->SetValue(NewProp_CreatedProjectPaths, TEXT("ModuleRelativePath"), TEXT("Public/Settings/EditorSettings.h"));
				MetaData->SetValue(NewProp_CreatedProjectPaths, TEXT("ToolTip"), TEXT("The paths of projects created with the new project wizard. This is used to populate the \"Path\" field of the new project dialog."));
				MetaData->SetValue(NewProp_RecentlyOpenedProjectFiles, TEXT("ModuleRelativePath"), TEXT("Public/Settings/EditorSettings.h"));
				MetaData->SetValue(NewProp_RecentlyOpenedProjectFiles, TEXT("ToolTip"), TEXT("Game project files that were recently opened in the editor"));
				MetaData->SetValue(NewProp_bEditorAnalyticsEnabled, TEXT("ModuleRelativePath"), TEXT("Public/Settings/EditorSettings.h"));
				MetaData->SetValue(NewProp_bEditorAnalyticsEnabled, TEXT("ToolTip"), TEXT("Can the editor report usage analytics (types of assets being spawned, etc...) back to Epic in order for us to improve the editor user experience?  Note: The editor must be restarted for changes to take effect."));
				MetaData->SetValue(NewProp_bLoadTheMostRecentlyLoadedProjectAtStartup, TEXT("Category"), TEXT("General"));
				MetaData->SetValue(NewProp_bLoadTheMostRecentlyLoadedProjectAtStartup, TEXT("ModuleRelativePath"), TEXT("Public/Settings/EditorSettings.h"));
				MetaData->SetValue(NewProp_bLoadTheMostRecentlyLoadedProjectAtStartup, TEXT("ToolTip"), TEXT("When checked, the most recently loaded project will be auto-loaded at editor startup if no other project was specified on the command line"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UEditorSettings(Z_Construct_UClass_UEditorSettings, TEXT("UEditorSettings"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UEditorSettings);
	UScriptStruct* Z_Construct_UScriptStruct_FSkeletonNotifyDependentAnimations()
	{
		UPackage* Outer=Z_Construct_UPackage_UnrealEd();
		extern uint32 Get_Z_Construct_UScriptStruct_FSkeletonNotifyDependentAnimations_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("SkeletonNotifyDependentAnimations"), sizeof(FSkeletonNotifyDependentAnimations), Get_Z_Construct_UScriptStruct_FSkeletonNotifyDependentAnimations_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SkeletonNotifyDependentAnimations"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FSkeletonNotifyDependentAnimations>, EStructFlags(0x00000001));
			UProperty* NewProp_Animations = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Animations"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(Animations, FSkeletonNotifyDependentAnimations), 0x0000000000000005);
			UProperty* NewProp_Animations_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Animations, TEXT("Animations"), RF_Public|RF_Transient|RF_Native) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UClass_UAnimSequenceBase_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/Animation/EditorSkeletonNotifyObj.h"));
			MetaData->SetValue(NewProp_Animations, TEXT("Category"), TEXT("SkeletonNotifies"));
			MetaData->SetValue(NewProp_Animations, TEXT("ModuleRelativePath"), TEXT("Classes/Animation/EditorSkeletonNotifyObj.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FSkeletonNotifyDependentAnimations_CRC() { return 1425887005U; }
	UClass* Z_Construct_UClass_UEditorSkeletonNotifyObj_NoRegister()
	{
		return UEditorSkeletonNotifyObj::StaticClass();
	}
	UClass* Z_Construct_UClass_UEditorSkeletonNotifyObj()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UEditorSkeletonNotifyObj::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_Name = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Name"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(Name, UEditorSkeletonNotifyObj), 0x0000000000020001);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Animation/EditorSkeletonNotifyObj.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Animation/EditorSkeletonNotifyObj.h"));
				MetaData->SetValue(NewProp_Name, TEXT("Category"), TEXT("SkeletonNotifies"));
				MetaData->SetValue(NewProp_Name, TEXT("ModuleRelativePath"), TEXT("Classes/Animation/EditorSkeletonNotifyObj.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UEditorSkeletonNotifyObj(Z_Construct_UClass_UEditorSkeletonNotifyObj, TEXT("UEditorSkeletonNotifyObj"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UEditorSkeletonNotifyObj);
	UClass* Z_Construct_UClass_UExportTextContainer_NoRegister()
	{
		return UExportTextContainer::StaticClass();
	}
	UClass* Z_Construct_UClass_UExportTextContainer()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UExportTextContainer::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_ExportText = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ExportText"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(ExportText, UExportTextContainer), 0x0000000000000000);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Exporters/ExportTextContainer.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Exporters/ExportTextContainer.h"));
				MetaData->SetValue(NewProp_ExportText, TEXT("ModuleRelativePath"), TEXT("Classes/Exporters/ExportTextContainer.h"));
				MetaData->SetValue(NewProp_ExportText, TEXT("ToolTip"), TEXT("ExportText representation of one or more objects"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UExportTextContainer(Z_Construct_UClass_UExportTextContainer, TEXT("UExportTextContainer"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UExportTextContainer);
	UClass* Z_Construct_UClass_UFactory_NoRegister()
	{
		return UFactory::StaticClass();
	}
	UClass* Z_Construct_UClass_UFactory()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UFactory::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100081;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_ImportPriority = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ImportPriority"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(ImportPriority, UFactory), 0x0000000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bText, UFactory, uint8);
				UProperty* NewProp_bText = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bText"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bText, UFactory), 0x0000000000000000, CPP_BOOL_PROPERTY_BITMASK(bText, UFactory), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bEditorImport, UFactory, uint8);
				UProperty* NewProp_bEditorImport = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bEditorImport"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bEditorImport, UFactory), 0x0000000000000000, CPP_BOOL_PROPERTY_BITMASK(bEditorImport, UFactory), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bEditAfterNew, UFactory, uint8);
				UProperty* NewProp_bEditAfterNew = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bEditAfterNew"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bEditAfterNew, UFactory), 0x0000000000000000, CPP_BOOL_PROPERTY_BITMASK(bEditAfterNew, UFactory), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bCreateNew, UFactory, uint8);
				UProperty* NewProp_bCreateNew = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bCreateNew"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bCreateNew, UFactory), 0x0000080000000000, CPP_BOOL_PROPERTY_BITMASK(bCreateNew, UFactory), sizeof(uint8), false);
				UProperty* NewProp_Formats = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Formats"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(Formats, UFactory), 0x0000000000000000);
				UProperty* NewProp_Formats_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Formats, TEXT("Formats"), RF_Public|RF_Transient|RF_Native) UStrProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000);
				UProperty* NewProp_ContextClass = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ContextClass"), RF_Public|RF_Transient|RF_Native) UClassProperty(CPP_PROPERTY_BASE(ContextClass, UFactory), 0x0004000000000000, Z_Construct_UClass_UObject_NoRegister());
				UProperty* NewProp_SupportedClass = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SupportedClass"), RF_Public|RF_Transient|RF_Native) UClassProperty(CPP_PROPERTY_BASE(SupportedClass, UFactory), 0x0004000000000000, Z_Construct_UClass_UObject_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Factories/Factory.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/Factory.h"));
				MetaData->SetValue(NewProp_ImportPriority, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/Factory.h"));
				MetaData->SetValue(NewProp_ImportPriority, TEXT("ToolTip"), TEXT("Determines the order in which factories are tried when importing or reimporting an object.\n              Factories with higher priority values will go first. Factories with negative priorities will be excluded."));
				MetaData->SetValue(NewProp_bText, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/Factory.h"));
				MetaData->SetValue(NewProp_bText, TEXT("ToolTip"), TEXT("true if the factory imports objects from text."));
				MetaData->SetValue(NewProp_bEditorImport, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/Factory.h"));
				MetaData->SetValue(NewProp_bEditorImport, TEXT("ToolTip"), TEXT("true if the factory imports objects from files."));
				MetaData->SetValue(NewProp_bEditAfterNew, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/Factory.h"));
				MetaData->SetValue(NewProp_bEditAfterNew, TEXT("ToolTip"), TEXT("true if the associated editor should be opened after creating a new object."));
				MetaData->SetValue(NewProp_bCreateNew, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/Factory.h"));
				MetaData->SetValue(NewProp_bCreateNew, TEXT("ToolTip"), TEXT("The default value to return from CanCreateNew()"));
				MetaData->SetValue(NewProp_Formats, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/Factory.h"));
				MetaData->SetValue(NewProp_Formats, TEXT("ToolTip"), TEXT("List of formats supported by the factory. Each entry is of the form \"ext;Description\" where ext is the file extension."));
				MetaData->SetValue(NewProp_ContextClass, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/Factory.h"));
				MetaData->SetValue(NewProp_ContextClass, TEXT("ToolTip"), TEXT("Class of the context object used to help create the object."));
				MetaData->SetValue(NewProp_SupportedClass, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/Factory.h"));
				MetaData->SetValue(NewProp_SupportedClass, TEXT("ToolTip"), TEXT("The class manufactured by this factory."));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UFactory(Z_Construct_UClass_UFactory, TEXT("UFactory"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UFactory);
	UClass* Z_Construct_UClass_UAnimBlueprintFactory_NoRegister()
	{
		return UAnimBlueprintFactory::StaticClass();
	}
	UClass* Z_Construct_UClass_UAnimBlueprintFactory()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UFactory();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UAnimBlueprintFactory::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_TargetSkeleton = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("TargetSkeleton"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(TargetSkeleton, UAnimBlueprintFactory), 0x0000000000000001, Z_Construct_UClass_USkeleton_NoRegister());
				UProperty* NewProp_ParentClass = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ParentClass"), RF_Public|RF_Transient|RF_Native) UClassProperty(CPP_PROPERTY_BASE(ParentClass, UAnimBlueprintFactory), 0x0004000000000001, Z_Construct_UClass_UAnimInstance_NoRegister());
				UProperty* NewProp_BlueprintType = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("BlueprintType"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(BlueprintType, UAnimBlueprintFactory), 0x0000000000000001, Z_Construct_UEnum_Engine_EBlueprintType());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Factories/AnimBlueprintFactory.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/AnimBlueprintFactory.h"));
				MetaData->SetValue(NewProp_TargetSkeleton, TEXT("Category"), TEXT("AnimBlueprintFactory"));
				MetaData->SetValue(NewProp_TargetSkeleton, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/AnimBlueprintFactory.h"));
				MetaData->SetValue(NewProp_TargetSkeleton, TEXT("ToolTip"), TEXT("The kind of skeleton that animation graphs compiled from the blueprint will animate"));
				MetaData->SetValue(NewProp_ParentClass, TEXT("AllowAbstract"), TEXT(""));
				MetaData->SetValue(NewProp_ParentClass, TEXT("Category"), TEXT("AnimBlueprintFactory"));
				MetaData->SetValue(NewProp_ParentClass, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/AnimBlueprintFactory.h"));
				MetaData->SetValue(NewProp_ParentClass, TEXT("ToolTip"), TEXT("The parent class of the created blueprint"));
				MetaData->SetValue(NewProp_BlueprintType, TEXT("Category"), TEXT("AnimBlueprintFactory"));
				MetaData->SetValue(NewProp_BlueprintType, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/AnimBlueprintFactory.h"));
				MetaData->SetValue(NewProp_BlueprintType, TEXT("ToolTip"), TEXT("The type of blueprint that will be created"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAnimBlueprintFactory(Z_Construct_UClass_UAnimBlueprintFactory, TEXT("UAnimBlueprintFactory"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAnimBlueprintFactory);
	UClass* Z_Construct_UClass_UAnimCompositeFactory_NoRegister()
	{
		return UAnimCompositeFactory::StaticClass();
	}
	UClass* Z_Construct_UClass_UAnimCompositeFactory()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UFactory();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UAnimCompositeFactory::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_SourceAnimation = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SourceAnimation"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(SourceAnimation, UAnimCompositeFactory), 0x0000000000000000, Z_Construct_UClass_UAnimSequence_NoRegister());
				UProperty* NewProp_TargetSkeleton = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("TargetSkeleton"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(TargetSkeleton, UAnimCompositeFactory), 0x0000000000000000, Z_Construct_UClass_USkeleton_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Factories/AnimCompositeFactory.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/AnimCompositeFactory.h"));
				MetaData->SetValue(NewProp_SourceAnimation, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/AnimCompositeFactory.h"));
				MetaData->SetValue(NewProp_SourceAnimation, TEXT("ToolTip"), TEXT("Used when creating a composite from an AnimSequence, becomes the only AnimSequence contained"));
				MetaData->SetValue(NewProp_TargetSkeleton, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/AnimCompositeFactory.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAnimCompositeFactory(Z_Construct_UClass_UAnimCompositeFactory, TEXT("UAnimCompositeFactory"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAnimCompositeFactory);
	UClass* Z_Construct_UClass_UAnimMontageFactory_NoRegister()
	{
		return UAnimMontageFactory::StaticClass();
	}
	UClass* Z_Construct_UClass_UAnimMontageFactory()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UFactory();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UAnimMontageFactory::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_SourceAnimation = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SourceAnimation"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(SourceAnimation, UAnimMontageFactory), 0x0000000000000000, Z_Construct_UClass_UAnimSequence_NoRegister());
				UProperty* NewProp_TargetSkeleton = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("TargetSkeleton"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(TargetSkeleton, UAnimMontageFactory), 0x0000000000000000, Z_Construct_UClass_USkeleton_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Factories/AnimMontageFactory.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/AnimMontageFactory.h"));
				MetaData->SetValue(NewProp_SourceAnimation, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/AnimMontageFactory.h"));
				MetaData->SetValue(NewProp_SourceAnimation, TEXT("ToolTip"), TEXT("Used when creating a montage from an AnimSequence, becomes the only AnimSequence contained"));
				MetaData->SetValue(NewProp_TargetSkeleton, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/AnimMontageFactory.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAnimMontageFactory(Z_Construct_UClass_UAnimMontageFactory, TEXT("UAnimMontageFactory"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAnimMontageFactory);
	UClass* Z_Construct_UClass_UAnimSequenceFactory_NoRegister()
	{
		return UAnimSequenceFactory::StaticClass();
	}
	UClass* Z_Construct_UClass_UAnimSequenceFactory()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UFactory();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UAnimSequenceFactory::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_TargetSkeleton = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("TargetSkeleton"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(TargetSkeleton, UAnimSequenceFactory), 0x0000000000000000, Z_Construct_UClass_USkeleton_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Factories/AnimSequenceFactory.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/AnimSequenceFactory.h"));
				MetaData->SetValue(NewProp_TargetSkeleton, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/AnimSequenceFactory.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAnimSequenceFactory(Z_Construct_UClass_UAnimSequenceFactory, TEXT("UAnimSequenceFactory"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAnimSequenceFactory);
	UClass* Z_Construct_UClass_UBlendSpaceFactory1D_NoRegister()
	{
		return UBlendSpaceFactory1D::StaticClass();
	}
	UClass* Z_Construct_UClass_UBlendSpaceFactory1D()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UFactory();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UBlendSpaceFactory1D::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_TargetSkeleton = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("TargetSkeleton"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(TargetSkeleton, UBlendSpaceFactory1D), 0x0000000000000000, Z_Construct_UClass_USkeleton_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Factories/BlendSpaceFactory1D.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/BlendSpaceFactory1D.h"));
				MetaData->SetValue(NewProp_TargetSkeleton, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/BlendSpaceFactory1D.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UBlendSpaceFactory1D(Z_Construct_UClass_UBlendSpaceFactory1D, TEXT("UBlendSpaceFactory1D"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UBlendSpaceFactory1D);
	UClass* Z_Construct_UClass_UAimOffsetBlendSpaceFactory1D_NoRegister()
	{
		return UAimOffsetBlendSpaceFactory1D::StaticClass();
	}
	UClass* Z_Construct_UClass_UAimOffsetBlendSpaceFactory1D()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UBlendSpaceFactory1D();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UAimOffsetBlendSpaceFactory1D::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Factories/AimOffsetBlendSpaceFactory1D.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/AimOffsetBlendSpaceFactory1D.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAimOffsetBlendSpaceFactory1D(Z_Construct_UClass_UAimOffsetBlendSpaceFactory1D, TEXT("UAimOffsetBlendSpaceFactory1D"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAimOffsetBlendSpaceFactory1D);
	UClass* Z_Construct_UClass_UBlendSpaceFactoryNew_NoRegister()
	{
		return UBlendSpaceFactoryNew::StaticClass();
	}
	UClass* Z_Construct_UClass_UBlendSpaceFactoryNew()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UFactory();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UBlendSpaceFactoryNew::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_TargetSkeleton = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("TargetSkeleton"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(TargetSkeleton, UBlendSpaceFactoryNew), 0x0000000000000000, Z_Construct_UClass_USkeleton_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Factories/BlendSpaceFactoryNew.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/BlendSpaceFactoryNew.h"));
				MetaData->SetValue(NewProp_TargetSkeleton, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/BlendSpaceFactoryNew.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UBlendSpaceFactoryNew(Z_Construct_UClass_UBlendSpaceFactoryNew, TEXT("UBlendSpaceFactoryNew"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UBlendSpaceFactoryNew);
	UClass* Z_Construct_UClass_UAimOffsetBlendSpaceFactoryNew_NoRegister()
	{
		return UAimOffsetBlendSpaceFactoryNew::StaticClass();
	}
	UClass* Z_Construct_UClass_UAimOffsetBlendSpaceFactoryNew()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UBlendSpaceFactoryNew();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UAimOffsetBlendSpaceFactoryNew::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Factories/AimOffsetBlendSpaceFactoryNew.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/AimOffsetBlendSpaceFactoryNew.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAimOffsetBlendSpaceFactoryNew(Z_Construct_UClass_UAimOffsetBlendSpaceFactoryNew, TEXT("UAimOffsetBlendSpaceFactoryNew"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAimOffsetBlendSpaceFactoryNew);
	UClass* Z_Construct_UClass_UBlueprintFactory_NoRegister()
	{
		return UBlueprintFactory::StaticClass();
	}
	UClass* Z_Construct_UClass_UBlueprintFactory()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UFactory();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UBlueprintFactory::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20102080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_ParentClass = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ParentClass"), RF_Public|RF_Transient|RF_Native) UClassProperty(CPP_PROPERTY_BASE(ParentClass, UBlueprintFactory), 0x0004000000000001, Z_Construct_UClass_UObject_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Factories/BlueprintFactory.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/BlueprintFactory.h"));
				MetaData->SetValue(NewProp_ParentClass, TEXT("AllowAbstract"), TEXT(""));
				MetaData->SetValue(NewProp_ParentClass, TEXT("BlueprintBaseOnly"), TEXT(""));
				MetaData->SetValue(NewProp_ParentClass, TEXT("Category"), TEXT("BlueprintFactory"));
				MetaData->SetValue(NewProp_ParentClass, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/BlueprintFactory.h"));
				MetaData->SetValue(NewProp_ParentClass, TEXT("ToolTip"), TEXT("The parent class of the created blueprint"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UBlueprintFactory(Z_Construct_UClass_UBlueprintFactory, TEXT("UBlueprintFactory"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UBlueprintFactory);
	UClass* Z_Construct_UClass_UBlueprintFunctionLibraryFactory_NoRegister()
	{
		return UBlueprintFunctionLibraryFactory::StaticClass();
	}
	UClass* Z_Construct_UClass_UBlueprintFunctionLibraryFactory()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UBlueprintFactory();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UBlueprintFunctionLibraryFactory::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20002080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Factories/BlueprintFunctionLibraryFactory.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/BlueprintFunctionLibraryFactory.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UBlueprintFunctionLibraryFactory(Z_Construct_UClass_UBlueprintFunctionLibraryFactory, TEXT("UBlueprintFunctionLibraryFactory"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UBlueprintFunctionLibraryFactory);
	UClass* Z_Construct_UClass_UBlueprintMacroFactory_NoRegister()
	{
		return UBlueprintMacroFactory::StaticClass();
	}
	UClass* Z_Construct_UClass_UBlueprintMacroFactory()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UBlueprintFactory();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UBlueprintMacroFactory::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20002080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Factories/BlueprintMacroFactory.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/BlueprintMacroFactory.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UBlueprintMacroFactory(Z_Construct_UClass_UBlueprintMacroFactory, TEXT("UBlueprintMacroFactory"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UBlueprintMacroFactory);
	UClass* Z_Construct_UClass_UBlueprintInterfaceFactory_NoRegister()
	{
		return UBlueprintInterfaceFactory::StaticClass();
	}
	UClass* Z_Construct_UClass_UBlueprintInterfaceFactory()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UFactory();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UBlueprintInterfaceFactory::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20002080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Factories/BlueprintInterfaceFactory.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/BlueprintInterfaceFactory.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UBlueprintInterfaceFactory(Z_Construct_UClass_UBlueprintInterfaceFactory, TEXT("UBlueprintInterfaceFactory"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UBlueprintInterfaceFactory);
	UClass* Z_Construct_UClass_UCameraAnimFactory_NoRegister()
	{
		return UCameraAnimFactory::StaticClass();
	}
	UClass* Z_Construct_UClass_UCameraAnimFactory()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UFactory();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UCameraAnimFactory::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Factories/CameraAnimFactory.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/CameraAnimFactory.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UCameraAnimFactory(Z_Construct_UClass_UCameraAnimFactory, TEXT("UCameraAnimFactory"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UCameraAnimFactory);
	UClass* Z_Construct_UClass_UCSVImportFactory_NoRegister()
	{
		return UCSVImportFactory::StaticClass();
	}
	UClass* Z_Construct_UClass_UCSVImportFactory()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UFactory();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UCSVImportFactory::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Factories/CSVImportFactory.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/CSVImportFactory.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UCSVImportFactory(Z_Construct_UClass_UCSVImportFactory, TEXT("UCSVImportFactory"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UCSVImportFactory);
	UClass* Z_Construct_UClass_UReimportCurveFactory_NoRegister()
	{
		return UReimportCurveFactory::StaticClass();
	}
	UClass* Z_Construct_UClass_UReimportCurveFactory()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UCSVImportFactory();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UReimportCurveFactory::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Factories/ReimportCurveFactory.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/ReimportCurveFactory.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UReimportCurveFactory(Z_Construct_UClass_UReimportCurveFactory, TEXT("UReimportCurveFactory"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UReimportCurveFactory);
	UClass* Z_Construct_UClass_UReimportCurveTableFactory_NoRegister()
	{
		return UReimportCurveTableFactory::StaticClass();
	}
	UClass* Z_Construct_UClass_UReimportCurveTableFactory()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UCSVImportFactory();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UReimportCurveTableFactory::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Factories/ReimportCurveTableFactory.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/ReimportCurveTableFactory.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UReimportCurveTableFactory(Z_Construct_UClass_UReimportCurveTableFactory, TEXT("UReimportCurveTableFactory"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UReimportCurveTableFactory);
	UClass* Z_Construct_UClass_UReimportDataTableFactory_NoRegister()
	{
		return UReimportDataTableFactory::StaticClass();
	}
	UClass* Z_Construct_UClass_UReimportDataTableFactory()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UCSVImportFactory();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UReimportDataTableFactory::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Factories/ReimportDataTableFactory.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/ReimportDataTableFactory.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UReimportDataTableFactory(Z_Construct_UClass_UReimportDataTableFactory, TEXT("UReimportDataTableFactory"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UReimportDataTableFactory);
	UClass* Z_Construct_UClass_UCurveFactory_NoRegister()
	{
		return UCurveFactory::StaticClass();
	}
	UClass* Z_Construct_UClass_UCurveFactory()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UFactory();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UCurveFactory::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_CurveClass = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CurveClass"), RF_Public|RF_Transient|RF_Native) UClassProperty(CPP_PROPERTY_BASE(CurveClass, UCurveFactory), 0x0004000000000001, Z_Construct_UClass_UCurveBase_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Factories/CurveFactory.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/CurveFactory.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Factory that creates curve assets, prompting to pick the kind of curve at creation time"));
				MetaData->SetValue(NewProp_CurveClass, TEXT("Category"), TEXT("CurveFactory"));
				MetaData->SetValue(NewProp_CurveClass, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/CurveFactory.h"));
				MetaData->SetValue(NewProp_CurveClass, TEXT("ToolTip"), TEXT("The type of blueprint that will be created"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UCurveFactory(Z_Construct_UClass_UCurveFactory, TEXT("UCurveFactory"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UCurveFactory);
	UClass* Z_Construct_UClass_UCurveFloatFactory_NoRegister()
	{
		return UCurveFloatFactory::StaticClass();
	}
	UClass* Z_Construct_UClass_UCurveFloatFactory()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UCurveFactory();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UCurveFloatFactory::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Factories/CurveFactory.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/CurveFactory.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Factory that creates float curve assets"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UCurveFloatFactory(Z_Construct_UClass_UCurveFloatFactory, TEXT("UCurveFloatFactory"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UCurveFloatFactory);
	UClass* Z_Construct_UClass_UCurveImportFactory_NoRegister()
	{
		return UCurveImportFactory::StaticClass();
	}
	UClass* Z_Construct_UClass_UCurveImportFactory()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UFactory();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UCurveImportFactory::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Factories/CurveImportFactory.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/CurveImportFactory.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UCurveImportFactory(Z_Construct_UClass_UCurveImportFactory, TEXT("UCurveImportFactory"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UCurveImportFactory);
	UClass* Z_Construct_UClass_UDataAssetFactory_NoRegister()
	{
		return UDataAssetFactory::StaticClass();
	}
	UClass* Z_Construct_UClass_UDataAssetFactory()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UFactory();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UDataAssetFactory::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_DataAssetClass = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("DataAssetClass"), RF_Public|RF_Transient|RF_Native) UClassProperty(CPP_PROPERTY_BASE(DataAssetClass, UDataAssetFactory), 0x0004000000000001, Z_Construct_UClass_UDataAsset_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Factories/DataAssetFactory.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/DataAssetFactory.h"));
				MetaData->SetValue(NewProp_DataAssetClass, TEXT("Category"), TEXT("DataAsset"));
				MetaData->SetValue(NewProp_DataAssetClass, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/DataAssetFactory.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UDataAssetFactory(Z_Construct_UClass_UDataAssetFactory, TEXT("UDataAssetFactory"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UDataAssetFactory);
	UClass* Z_Construct_UClass_UDataTableFactory_NoRegister()
	{
		return UDataTableFactory::StaticClass();
	}
	UClass* Z_Construct_UClass_UDataTableFactory()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UFactory();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UDataTableFactory::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_Struct = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Struct"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(Struct, UDataTableFactory), 0x0000000000000000, UScriptStruct::StaticClass());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Factories/DataTableFactory.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/DataTableFactory.h"));
				MetaData->SetValue(NewProp_Struct, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/DataTableFactory.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UDataTableFactory(Z_Construct_UClass_UDataTableFactory, TEXT("UDataTableFactory"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UDataTableFactory);
	UClass* Z_Construct_UClass_UDestructibleMeshFactory_NoRegister()
	{
		return UDestructibleMeshFactory::StaticClass();
	}
	UClass* Z_Construct_UClass_UDestructibleMeshFactory()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UFactory();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UDestructibleMeshFactory::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Factories/DestructibleMeshFactory.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/DestructibleMeshFactory.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UDestructibleMeshFactory(Z_Construct_UClass_UDestructibleMeshFactory, TEXT("UDestructibleMeshFactory"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UDestructibleMeshFactory);
	UClass* Z_Construct_UClass_UReimportDestructibleMeshFactory_NoRegister()
	{
		return UReimportDestructibleMeshFactory::StaticClass();
	}
	UClass* Z_Construct_UClass_UReimportDestructibleMeshFactory()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UDestructibleMeshFactory();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UReimportDestructibleMeshFactory::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Factories/ReimportDestructibleMeshFactory.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/ReimportDestructibleMeshFactory.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UReimportDestructibleMeshFactory(Z_Construct_UClass_UReimportDestructibleMeshFactory, TEXT("UReimportDestructibleMeshFactory"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UReimportDestructibleMeshFactory);
	UClass* Z_Construct_UClass_UDialogueVoiceFactory_NoRegister()
	{
		return UDialogueVoiceFactory::StaticClass();
	}
	UClass* Z_Construct_UClass_UDialogueVoiceFactory()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UFactory();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UDialogueVoiceFactory::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Factories/DialogueVoiceFactory.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/DialogueVoiceFactory.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UDialogueVoiceFactory(Z_Construct_UClass_UDialogueVoiceFactory, TEXT("UDialogueVoiceFactory"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UDialogueVoiceFactory);
	UClass* Z_Construct_UClass_UDialogueWaveFactory_NoRegister()
	{
		return UDialogueWaveFactory::StaticClass();
	}
	UClass* Z_Construct_UClass_UDialogueWaveFactory()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UFactory();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UDialogueWaveFactory::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Factories/DialogueWaveFactory.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/DialogueWaveFactory.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UDialogueWaveFactory(Z_Construct_UClass_UDialogueWaveFactory, TEXT("UDialogueWaveFactory"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UDialogueWaveFactory);
	UClass* Z_Construct_UClass_UEnumFactory_NoRegister()
	{
		return UEnumFactory::StaticClass();
	}
	UClass* Z_Construct_UClass_UEnumFactory()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UFactory();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UEnumFactory::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Factories/EnumFactory.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/EnumFactory.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UEnumFactory(Z_Construct_UClass_UEnumFactory, TEXT("UEnumFactory"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UEnumFactory);
	UClass* Z_Construct_UClass_UFbxFactory_NoRegister()
	{
		return UFbxFactory::StaticClass();
	}
	UClass* Z_Construct_UClass_UFbxFactory()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UFactory();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UFbxFactory::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_ImportUI = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ImportUI"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(ImportUI, UFbxFactory), 0x0000000000000000, Z_Construct_UClass_UFbxImportUI_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Factories/FbxFactory.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/FbxFactory.h"));
				MetaData->SetValue(NewProp_ImportUI, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/FbxFactory.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UFbxFactory(Z_Construct_UClass_UFbxFactory, TEXT("UFbxFactory"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UFbxFactory);
	UClass* Z_Construct_UClass_UReimportFbxAnimSequenceFactory_NoRegister()
	{
		return UReimportFbxAnimSequenceFactory::StaticClass();
	}
	UClass* Z_Construct_UClass_UReimportFbxAnimSequenceFactory()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UFbxFactory();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UReimportFbxAnimSequenceFactory::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20002080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Factories/ReimportFbxAnimSequenceFactory.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/ReimportFbxAnimSequenceFactory.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UReimportFbxAnimSequenceFactory(Z_Construct_UClass_UReimportFbxAnimSequenceFactory, TEXT("UReimportFbxAnimSequenceFactory"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UReimportFbxAnimSequenceFactory);
	UClass* Z_Construct_UClass_UReimportFbxSkeletalMeshFactory_NoRegister()
	{
		return UReimportFbxSkeletalMeshFactory::StaticClass();
	}
	UClass* Z_Construct_UClass_UReimportFbxSkeletalMeshFactory()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UFbxFactory();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UReimportFbxSkeletalMeshFactory::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20002080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Factories/ReimportFbxSkeletalMeshFactory.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/ReimportFbxSkeletalMeshFactory.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UReimportFbxSkeletalMeshFactory(Z_Construct_UClass_UReimportFbxSkeletalMeshFactory, TEXT("UReimportFbxSkeletalMeshFactory"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UReimportFbxSkeletalMeshFactory);
	UClass* Z_Construct_UClass_UReimportFbxStaticMeshFactory_NoRegister()
	{
		return UReimportFbxStaticMeshFactory::StaticClass();
	}
	UClass* Z_Construct_UClass_UReimportFbxStaticMeshFactory()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UFbxFactory();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UReimportFbxStaticMeshFactory::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20002080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Factories/ReimportFbxStaticMeshFactory.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/ReimportFbxStaticMeshFactory.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UReimportFbxStaticMeshFactory(Z_Construct_UClass_UReimportFbxStaticMeshFactory, TEXT("UReimportFbxStaticMeshFactory"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UReimportFbxStaticMeshFactory);
	UClass* Z_Construct_UClass_UFontFactory_NoRegister()
	{
		return UFontFactory::StaticClass();
	}
	UClass* Z_Construct_UClass_UFontFactory()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UFactory();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UFontFactory::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Factories/FontFactory.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/FontFactory.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UFontFactory(Z_Construct_UClass_UFontFactory, TEXT("UFontFactory"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UFontFactory);
	UClass* Z_Construct_UClass_UFontFileImportFactory_NoRegister()
	{
		return UFontFileImportFactory::StaticClass();
	}
	UClass* Z_Construct_UClass_UFontFileImportFactory()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UFactory();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UFontFileImportFactory::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Factories/FontFileImportFactory.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/FontFileImportFactory.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UFontFileImportFactory(Z_Construct_UClass_UFontFileImportFactory, TEXT("UFontFileImportFactory"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UFontFileImportFactory);
	UClass* Z_Construct_UClass_UForceFeedbackEffectFactory_NoRegister()
	{
		return UForceFeedbackEffectFactory::StaticClass();
	}
	UClass* Z_Construct_UClass_UForceFeedbackEffectFactory()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UFactory();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UForceFeedbackEffectFactory::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Factories/ForceFeedbackEffectFactory.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/ForceFeedbackEffectFactory.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UForceFeedbackEffectFactory(Z_Construct_UClass_UForceFeedbackEffectFactory, TEXT("UForceFeedbackEffectFactory"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UForceFeedbackEffectFactory);
	UClass* Z_Construct_UClass_UHapticFeedbackEffectFactory_NoRegister()
	{
		return UHapticFeedbackEffectFactory::StaticClass();
	}
	UClass* Z_Construct_UClass_UHapticFeedbackEffectFactory()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UFactory();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UHapticFeedbackEffectFactory::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Factories/HapticFeedbackEffectFactory.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/HapticFeedbackEffectFactory.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UHapticFeedbackEffectFactory(Z_Construct_UClass_UHapticFeedbackEffectFactory, TEXT("UHapticFeedbackEffectFactory"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UHapticFeedbackEffectFactory);
	UClass* Z_Construct_UClass_UInterpDataFactoryNew_NoRegister()
	{
		return UInterpDataFactoryNew::StaticClass();
	}
	UClass* Z_Construct_UClass_UInterpDataFactoryNew()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UFactory();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UInterpDataFactoryNew::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Factories/InterpDataFactoryNew.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/InterpDataFactoryNew.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UInterpDataFactoryNew(Z_Construct_UClass_UInterpDataFactoryNew, TEXT("UInterpDataFactoryNew"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UInterpDataFactoryNew);
	UClass* Z_Construct_UClass_ULevelFactory_NoRegister()
	{
		return ULevelFactory::StaticClass();
	}
	UClass* Z_Construct_UClass_ULevelFactory()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UFactory();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = ULevelFactory::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Factories/LevelFactory.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/LevelFactory.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_ULevelFactory(Z_Construct_UClass_ULevelFactory, TEXT("ULevelFactory"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(ULevelFactory);
	UClass* Z_Construct_UClass_UMaterialFactoryNew_NoRegister()
	{
		return UMaterialFactoryNew::StaticClass();
	}
	UClass* Z_Construct_UClass_UMaterialFactoryNew()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UFactory();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UMaterialFactoryNew::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20082080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_InitialTexture = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("InitialTexture"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(InitialTexture, UMaterialFactoryNew), 0x0000000000000000, Z_Construct_UClass_UTexture_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Factories/MaterialFactoryNew.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/MaterialFactoryNew.h"));
				MetaData->SetValue(NewProp_InitialTexture, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/MaterialFactoryNew.h"));
				MetaData->SetValue(NewProp_InitialTexture, TEXT("ToolTip"), TEXT("An initial texture to place in the newly created material"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UMaterialFactoryNew(Z_Construct_UClass_UMaterialFactoryNew, TEXT("UMaterialFactoryNew"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UMaterialFactoryNew);
	UClass* Z_Construct_UClass_UMaterialFunctionFactoryNew_NoRegister()
	{
		return UMaterialFunctionFactoryNew::StaticClass();
	}
	UClass* Z_Construct_UClass_UMaterialFunctionFactoryNew()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UFactory();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UMaterialFunctionFactoryNew::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20002080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Factories/MaterialFunctionFactoryNew.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/MaterialFunctionFactoryNew.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UMaterialFunctionFactoryNew(Z_Construct_UClass_UMaterialFunctionFactoryNew, TEXT("UMaterialFunctionFactoryNew"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UMaterialFunctionFactoryNew);
	UClass* Z_Construct_UClass_UMaterialInstanceConstantFactoryNew_NoRegister()
	{
		return UMaterialInstanceConstantFactoryNew::StaticClass();
	}
	UClass* Z_Construct_UClass_UMaterialInstanceConstantFactoryNew()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UFactory();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UMaterialInstanceConstantFactoryNew::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20082080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_InitialParent = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("InitialParent"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(InitialParent, UMaterialInstanceConstantFactoryNew), 0x0000000000000000, Z_Construct_UClass_UMaterialInterface_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Factories/MaterialInstanceConstantFactoryNew.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/MaterialInstanceConstantFactoryNew.h"));
				MetaData->SetValue(NewProp_InitialParent, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/MaterialInstanceConstantFactoryNew.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UMaterialInstanceConstantFactoryNew(Z_Construct_UClass_UMaterialInstanceConstantFactoryNew, TEXT("UMaterialInstanceConstantFactoryNew"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UMaterialInstanceConstantFactoryNew);
	UClass* Z_Construct_UClass_UMaterialParameterCollectionFactoryNew_NoRegister()
	{
		return UMaterialParameterCollectionFactoryNew::StaticClass();
	}
	UClass* Z_Construct_UClass_UMaterialParameterCollectionFactoryNew()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UFactory();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UMaterialParameterCollectionFactoryNew::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20002080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Factories/MaterialParameterCollectionFactoryNew.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/MaterialParameterCollectionFactoryNew.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UMaterialParameterCollectionFactoryNew(Z_Construct_UClass_UMaterialParameterCollectionFactoryNew, TEXT("UMaterialParameterCollectionFactoryNew"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UMaterialParameterCollectionFactoryNew);
	UClass* Z_Construct_UClass_UModelFactory_NoRegister()
	{
		return UModelFactory::StaticClass();
	}
	UClass* Z_Construct_UClass_UModelFactory()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UFactory();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UModelFactory::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Factories/ModelFactory.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/ModelFactory.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UModelFactory(Z_Construct_UClass_UModelFactory, TEXT("UModelFactory"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UModelFactory);
	UClass* Z_Construct_UClass_UNiagaraEffectFactoryNew_NoRegister()
	{
		return UNiagaraEffectFactoryNew::StaticClass();
	}
	UClass* Z_Construct_UClass_UNiagaraEffectFactoryNew()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UFactory();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UNiagaraEffectFactoryNew::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Factories/NiagaraEffectFactoryNew.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/NiagaraEffectFactoryNew.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UNiagaraEffectFactoryNew(Z_Construct_UClass_UNiagaraEffectFactoryNew, TEXT("UNiagaraEffectFactoryNew"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UNiagaraEffectFactoryNew);
	UClass* Z_Construct_UClass_UNiagaraScriptFactoryNew_NoRegister()
	{
		return UNiagaraScriptFactoryNew::StaticClass();
	}
	UClass* Z_Construct_UClass_UNiagaraScriptFactoryNew()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UFactory();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UNiagaraScriptFactoryNew::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Factories/NiagaraScriptFactoryNew.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/NiagaraScriptFactoryNew.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UNiagaraScriptFactoryNew(Z_Construct_UClass_UNiagaraScriptFactoryNew, TEXT("UNiagaraScriptFactoryNew"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UNiagaraScriptFactoryNew);
	UClass* Z_Construct_UClass_UObjectLibraryFactory_NoRegister()
	{
		return UObjectLibraryFactory::StaticClass();
	}
	UClass* Z_Construct_UClass_UObjectLibraryFactory()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UFactory();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UObjectLibraryFactory::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Factories/ObjectLibraryFactory.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/ObjectLibraryFactory.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UObjectLibraryFactory(Z_Construct_UClass_UObjectLibraryFactory, TEXT("UObjectLibraryFactory"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UObjectLibraryFactory);
	UClass* Z_Construct_UClass_UPackageFactory_NoRegister()
	{
		return UPackageFactory::StaticClass();
	}
	UClass* Z_Construct_UClass_UPackageFactory()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UFactory();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UPackageFactory::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Factories/PackageFactory.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/PackageFactory.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UPackageFactory(Z_Construct_UClass_UPackageFactory, TEXT("UPackageFactory"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UPackageFactory);
	UClass* Z_Construct_UClass_UPackFactory_NoRegister()
	{
		return UPackFactory::StaticClass();
	}
	UClass* Z_Construct_UClass_UPackFactory()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UFactory();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UPackFactory::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Factories/PackFactory.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/PackFactory.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Factory for unpacking upack files"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UPackFactory(Z_Construct_UClass_UPackFactory, TEXT("UPackFactory"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UPackFactory);
	UClass* Z_Construct_UClass_UParticleSystemFactoryNew_NoRegister()
	{
		return UParticleSystemFactoryNew::StaticClass();
	}
	UClass* Z_Construct_UClass_UParticleSystemFactoryNew()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UFactory();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UParticleSystemFactoryNew::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Factories/ParticleSystemFactoryNew.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/ParticleSystemFactoryNew.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UParticleSystemFactoryNew(Z_Construct_UClass_UParticleSystemFactoryNew, TEXT("UParticleSystemFactoryNew"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UParticleSystemFactoryNew);
	UClass* Z_Construct_UClass_UPhysicalMaterialFactoryNew_NoRegister()
	{
		return UPhysicalMaterialFactoryNew::StaticClass();
	}
	UClass* Z_Construct_UClass_UPhysicalMaterialFactoryNew()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UFactory();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UPhysicalMaterialFactoryNew::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Factories/PhysicalMaterialFactoryNew.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/PhysicalMaterialFactoryNew.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UPhysicalMaterialFactoryNew(Z_Construct_UClass_UPhysicalMaterialFactoryNew, TEXT("UPhysicalMaterialFactoryNew"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UPhysicalMaterialFactoryNew);
	UClass* Z_Construct_UClass_UPolysFactory_NoRegister()
	{
		return UPolysFactory::StaticClass();
	}
	UClass* Z_Construct_UClass_UPolysFactory()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UFactory();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UPolysFactory::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Factories/PolysFactory.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/PolysFactory.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UPolysFactory(Z_Construct_UClass_UPolysFactory, TEXT("UPolysFactory"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UPolysFactory);
	UClass* Z_Construct_UClass_UReverbEffectFactory_NoRegister()
	{
		return UReverbEffectFactory::StaticClass();
	}
	UClass* Z_Construct_UClass_UReverbEffectFactory()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UFactory();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UReverbEffectFactory::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Factories/ReverbEffectFactory.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/ReverbEffectFactory.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UReverbEffectFactory(Z_Construct_UClass_UReverbEffectFactory, TEXT("UReverbEffectFactory"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UReverbEffectFactory);
	UClass* Z_Construct_UClass_USkeletonFactory_NoRegister()
	{
		return USkeletonFactory::StaticClass();
	}
	UClass* Z_Construct_UClass_USkeletonFactory()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UFactory();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = USkeletonFactory::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_TargetSkeletalMesh = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("TargetSkeletalMesh"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(TargetSkeletalMesh, USkeletonFactory), 0x0000000000000000, Z_Construct_UClass_USkeletalMesh_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Factories/SkeletonFactory.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/SkeletonFactory.h"));
				MetaData->SetValue(NewProp_TargetSkeletalMesh, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/SkeletonFactory.h"));
				MetaData->SetValue(NewProp_TargetSkeletalMesh, TEXT("ToolTip"), TEXT("The skeletal mesh with which to initialize this skeleton."));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_USkeletonFactory(Z_Construct_UClass_USkeletonFactory, TEXT("USkeletonFactory"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(USkeletonFactory);
	UClass* Z_Construct_UClass_USlateBrushAssetFactory_NoRegister()
	{
		return USlateBrushAssetFactory::StaticClass();
	}
	UClass* Z_Construct_UClass_USlateBrushAssetFactory()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UFactory();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = USlateBrushAssetFactory::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_InitialTexture = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("InitialTexture"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(InitialTexture, USlateBrushAssetFactory), 0x0000000000000000, Z_Construct_UClass_UTexture2D_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Factories/SlateBrushAssetFactory.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/SlateBrushAssetFactory.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Factory for creating SlateBrushAssets"));
				MetaData->SetValue(NewProp_InitialTexture, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/SlateBrushAssetFactory.h"));
				MetaData->SetValue(NewProp_InitialTexture, TEXT("ToolTip"), TEXT("An initial texture to assign to the newly created slate brush"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_USlateBrushAssetFactory(Z_Construct_UClass_USlateBrushAssetFactory, TEXT("USlateBrushAssetFactory"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(USlateBrushAssetFactory);
	UClass* Z_Construct_UClass_USlateWidgetStyleAssetFactory_NoRegister()
	{
		return USlateWidgetStyleAssetFactory::StaticClass();
	}
	UClass* Z_Construct_UClass_USlateWidgetStyleAssetFactory()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UFactory();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = USlateWidgetStyleAssetFactory::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_StyleType = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("StyleType"), RF_Public|RF_Transient|RF_Native) UClassProperty(CPP_PROPERTY_BASE(StyleType, USlateWidgetStyleAssetFactory), 0x0004000000000001, Z_Construct_UClass_USlateWidgetStyleContainerBase_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Factories/SlateWidgetStyleAssetFactory.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/SlateWidgetStyleAssetFactory.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Factory for creating SlateStyles"));
				MetaData->SetValue(NewProp_StyleType, TEXT("Category"), TEXT("StyleType"));
				MetaData->SetValue(NewProp_StyleType, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/SlateWidgetStyleAssetFactory.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_USlateWidgetStyleAssetFactory(Z_Construct_UClass_USlateWidgetStyleAssetFactory, TEXT("USlateWidgetStyleAssetFactory"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(USlateWidgetStyleAssetFactory);
	UClass* Z_Construct_UClass_USoundAttenuationFactory_NoRegister()
	{
		return USoundAttenuationFactory::StaticClass();
	}
	UClass* Z_Construct_UClass_USoundAttenuationFactory()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UFactory();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = USoundAttenuationFactory::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Factories/SoundAttenuationFactory.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/SoundAttenuationFactory.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_USoundAttenuationFactory(Z_Construct_UClass_USoundAttenuationFactory, TEXT("USoundAttenuationFactory"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(USoundAttenuationFactory);
	UClass* Z_Construct_UClass_USoundClassFactory_NoRegister()
	{
		return USoundClassFactory::StaticClass();
	}
	UClass* Z_Construct_UClass_USoundClassFactory()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UFactory();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = USoundClassFactory::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Factories/SoundClassFactory.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/SoundClassFactory.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_USoundClassFactory(Z_Construct_UClass_USoundClassFactory, TEXT("USoundClassFactory"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(USoundClassFactory);
	UClass* Z_Construct_UClass_USoundCueFactoryNew_NoRegister()
	{
		return USoundCueFactoryNew::StaticClass();
	}
	UClass* Z_Construct_UClass_USoundCueFactoryNew()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UFactory();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = USoundCueFactoryNew::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_InitialSoundWave = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("InitialSoundWave"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(InitialSoundWave, USoundCueFactoryNew), 0x0000000000000000, Z_Construct_UClass_USoundWave_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Factories/SoundCueFactoryNew.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/SoundCueFactoryNew.h"));
				MetaData->SetValue(NewProp_InitialSoundWave, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/SoundCueFactoryNew.h"));
				MetaData->SetValue(NewProp_InitialSoundWave, TEXT("ToolTip"), TEXT("An initial sound wave to place in the newly created cue"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_USoundCueFactoryNew(Z_Construct_UClass_USoundCueFactoryNew, TEXT("USoundCueFactoryNew"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(USoundCueFactoryNew);
	UClass* Z_Construct_UClass_USoundFactory_NoRegister()
	{
		return USoundFactory::StaticClass();
	}
	UClass* Z_Construct_UClass_USoundFactory()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UFactory();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = USoundFactory::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_CuePackageSuffix = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CuePackageSuffix"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(CuePackageSuffix, USoundFactory), 0x0000000000000001);
				UProperty* NewProp_CueVolume = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CueVolume"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(CueVolume, USoundFactory), 0x0000000000000001);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bIncludeModulatorNode, USoundFactory, uint8);
				UProperty* NewProp_bIncludeModulatorNode = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bIncludeModulatorNode"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bIncludeModulatorNode, USoundFactory), 0x0000000000000001, CPP_BOOL_PROPERTY_BITMASK(bIncludeModulatorNode, USoundFactory), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bIncludeLoopingNode, USoundFactory, uint8);
				UProperty* NewProp_bIncludeLoopingNode = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bIncludeLoopingNode"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bIncludeLoopingNode, USoundFactory), 0x0000000000000001, CPP_BOOL_PROPERTY_BITMASK(bIncludeLoopingNode, USoundFactory), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bIncludeAttenuationNode, USoundFactory, uint8);
				UProperty* NewProp_bIncludeAttenuationNode = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bIncludeAttenuationNode"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bIncludeAttenuationNode, USoundFactory), 0x0000000000000001, CPP_BOOL_PROPERTY_BITMASK(bIncludeAttenuationNode, USoundFactory), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bAutoCreateCue, USoundFactory, uint8);
				UProperty* NewProp_bAutoCreateCue = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bAutoCreateCue"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bAutoCreateCue, USoundFactory), 0x0000000000000001, CPP_BOOL_PROPERTY_BITMASK(bAutoCreateCue, USoundFactory), sizeof(uint8), false);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Factories/SoundFactory.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/SoundFactory.h"));
				MetaData->SetValue(NewProp_CuePackageSuffix, TEXT("Category"), TEXT("SoundFactory"));
				MetaData->SetValue(NewProp_CuePackageSuffix, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/SoundFactory.h"));
				MetaData->SetValue(NewProp_CuePackageSuffix, TEXT("ToolTip"), TEXT("If not empty, generated SoundCues will be placed in PackageCuePackageSuffix, but only if bAutoCreateCue is true"));
				MetaData->SetValue(NewProp_CueVolume, TEXT("Category"), TEXT("SoundFactory"));
				MetaData->SetValue(NewProp_CueVolume, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/SoundFactory.h"));
				MetaData->SetValue(NewProp_CueVolume, TEXT("ToolTip"), TEXT("The volume of the created sound cue"));
				MetaData->SetValue(NewProp_bIncludeModulatorNode, TEXT("Category"), TEXT("SoundFactory"));
				MetaData->SetValue(NewProp_bIncludeModulatorNode, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/SoundFactory.h"));
				MetaData->SetValue(NewProp_bIncludeModulatorNode, TEXT("ToolTip"), TEXT("If enabled, the created sound cue will include a modulator node"));
				MetaData->SetValue(NewProp_bIncludeLoopingNode, TEXT("Category"), TEXT("SoundFactory"));
				MetaData->SetValue(NewProp_bIncludeLoopingNode, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/SoundFactory.h"));
				MetaData->SetValue(NewProp_bIncludeLoopingNode, TEXT("ToolTip"), TEXT("If enabled, the created sound cue will include a looping node"));
				MetaData->SetValue(NewProp_bIncludeAttenuationNode, TEXT("Category"), TEXT("SoundFactory"));
				MetaData->SetValue(NewProp_bIncludeAttenuationNode, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/SoundFactory.h"));
				MetaData->SetValue(NewProp_bIncludeAttenuationNode, TEXT("ToolTip"), TEXT("If enabled, the created sound cue will include a attenuation node"));
				MetaData->SetValue(NewProp_bAutoCreateCue, TEXT("Category"), TEXT("SoundFactory"));
				MetaData->SetValue(NewProp_bAutoCreateCue, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/SoundFactory.h"));
				MetaData->SetValue(NewProp_bAutoCreateCue, TEXT("ToolTip"), TEXT("If enabled, a sound cue will automatically be created for the sound"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_USoundFactory(Z_Construct_UClass_USoundFactory, TEXT("USoundFactory"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(USoundFactory);
	UClass* Z_Construct_UClass_UReimportSoundFactory_NoRegister()
	{
		return UReimportSoundFactory::StaticClass();
	}
	UClass* Z_Construct_UClass_UReimportSoundFactory()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_USoundFactory();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UReimportSoundFactory::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20002080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Factories/ReimportSoundFactory.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/ReimportSoundFactory.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UReimportSoundFactory(Z_Construct_UClass_UReimportSoundFactory, TEXT("UReimportSoundFactory"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UReimportSoundFactory);
	UClass* Z_Construct_UClass_USoundMixFactory_NoRegister()
	{
		return USoundMixFactory::StaticClass();
	}
	UClass* Z_Construct_UClass_USoundMixFactory()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UFactory();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = USoundMixFactory::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Factories/SoundMixFactory.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/SoundMixFactory.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_USoundMixFactory(Z_Construct_UClass_USoundMixFactory, TEXT("USoundMixFactory"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(USoundMixFactory);
	UClass* Z_Construct_UClass_USoundSurroundFactory_NoRegister()
	{
		return USoundSurroundFactory::StaticClass();
	}
	UClass* Z_Construct_UClass_USoundSurroundFactory()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UFactory();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = USoundSurroundFactory::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_CueVolume = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CueVolume"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(CueVolume, USoundSurroundFactory), 0x0000000000000000);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Factories/SoundSurroundFactory.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/SoundSurroundFactory.h"));
				MetaData->SetValue(NewProp_CueVolume, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/SoundSurroundFactory.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_USoundSurroundFactory(Z_Construct_UClass_USoundSurroundFactory, TEXT("USoundSurroundFactory"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(USoundSurroundFactory);
	UClass* Z_Construct_UClass_UReimportSoundSurroundFactory_NoRegister()
	{
		return UReimportSoundSurroundFactory::StaticClass();
	}
	UClass* Z_Construct_UClass_UReimportSoundSurroundFactory()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_USoundSurroundFactory();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UReimportSoundSurroundFactory::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20002080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_ReimportPaths = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ReimportPaths"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(ReimportPaths, UReimportSoundSurroundFactory), 0x0000000000000000);
				UProperty* NewProp_ReimportPaths_Inner = new(EC_InternalUseOnlyConstructor, NewProp_ReimportPaths, TEXT("ReimportPaths"), RF_Public|RF_Transient|RF_Native) UStrProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Factories/ReimportSoundSurroundFactory.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/ReimportSoundSurroundFactory.h"));
				MetaData->SetValue(NewProp_ReimportPaths, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/ReimportSoundSurroundFactory.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UReimportSoundSurroundFactory(Z_Construct_UClass_UReimportSoundSurroundFactory, TEXT("UReimportSoundSurroundFactory"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UReimportSoundSurroundFactory);
	UClass* Z_Construct_UClass_UStructureFactory_NoRegister()
	{
		return UStructureFactory::StaticClass();
	}
	UClass* Z_Construct_UClass_UStructureFactory()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UFactory();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UStructureFactory::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Factories/StructureFactory.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/StructureFactory.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UStructureFactory(Z_Construct_UClass_UStructureFactory, TEXT("UStructureFactory"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UStructureFactory);
	UClass* Z_Construct_UClass_USubsurfaceProfileFactory_NoRegister()
	{
		return USubsurfaceProfileFactory::StaticClass();
	}
	UClass* Z_Construct_UClass_USubsurfaceProfileFactory()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UFactory();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = USubsurfaceProfileFactory::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Factories/SubsurfaceProfileFactory.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/SubsurfaceProfileFactory.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_USubsurfaceProfileFactory(Z_Construct_UClass_USubsurfaceProfileFactory, TEXT("USubsurfaceProfileFactory"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(USubsurfaceProfileFactory);
	UClass* Z_Construct_UClass_UTexture2DFactoryNew_NoRegister()
	{
		return UTexture2DFactoryNew::StaticClass();
	}
	UClass* Z_Construct_UClass_UTexture2DFactoryNew()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UFactory();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UTexture2DFactoryNew::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_Height = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Height"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(Height, UTexture2DFactoryNew), 0x0000000000000000);
				UProperty* NewProp_Width = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Width"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(Width, UTexture2DFactoryNew), 0x0000000000000000);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Factories/Texture2dFactoryNew.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/Texture2dFactoryNew.h"));
				MetaData->SetValue(NewProp_Height, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/Texture2dFactoryNew.h"));
				MetaData->SetValue(NewProp_Height, TEXT("ToolTip"), TEXT("height of new texture"));
				MetaData->SetValue(NewProp_Width, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/Texture2dFactoryNew.h"));
				MetaData->SetValue(NewProp_Width, TEXT("ToolTip"), TEXT("width of new texture"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UTexture2DFactoryNew(Z_Construct_UClass_UTexture2DFactoryNew, TEXT("UTexture2DFactoryNew"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UTexture2DFactoryNew);
	UClass* Z_Construct_UClass_UTextureFactory_NoRegister()
	{
		return UTextureFactory::StaticClass();
	}
	UClass* Z_Construct_UClass_UTextureFactory()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UFactory();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UTextureFactory::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20102080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bUsingExistingSettings, UTextureFactory, uint8);
				UProperty* NewProp_bUsingExistingSettings = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bUsingExistingSettings"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bUsingExistingSettings, UTextureFactory), 0x0000000000002000, CPP_BOOL_PROPERTY_BITMASK(bUsingExistingSettings, UTextureFactory), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bFlipNormalMapGreenChannel, UTextureFactory, uint8);
				UProperty* NewProp_bFlipNormalMapGreenChannel = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bFlipNormalMapGreenChannel"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bFlipNormalMapGreenChannel, UTextureFactory), 0x0000000000000001, CPP_BOOL_PROPERTY_BITMASK(bFlipNormalMapGreenChannel, UTextureFactory), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bPreserveBorder, UTextureFactory, uint8);
				UProperty* NewProp_bPreserveBorder = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bPreserveBorder"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bPreserveBorder, UTextureFactory), 0x0000000000000001, CPP_BOOL_PROPERTY_BITMASK(bPreserveBorder, UTextureFactory), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bDitherMipMapAlpha, UTextureFactory, uint8);
				UProperty* NewProp_bDitherMipMapAlpha = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bDitherMipMapAlpha"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bDitherMipMapAlpha, UTextureFactory), 0x0000000000000001, CPP_BOOL_PROPERTY_BITMASK(bDitherMipMapAlpha, UTextureFactory), sizeof(uint8), false);
				UProperty* NewProp_LODGroup = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("LODGroup"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(LODGroup, UTextureFactory), 0x0000000000000001, Z_Construct_UEnum_Engine_TextureGroup());
				UProperty* NewProp_MipGenSettings = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MipGenSettings"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(MipGenSettings, UTextureFactory), 0x0000000000000001, Z_Construct_UEnum_Engine_TextureMipGenSettings());
				UProperty* NewProp_ShadingModel = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ShadingModel"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(ShadingModel, UTextureFactory), 0x0000000000000001, Z_Construct_UEnum_Engine_EMaterialShadingModel());
				UProperty* NewProp_Blending = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Blending"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(Blending, UTextureFactory), 0x0000000000000001, Z_Construct_UEnum_Engine_EBlendMode());
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bTwoSided, UTextureFactory, uint8);
				UProperty* NewProp_bTwoSided = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bTwoSided"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bTwoSided, UTextureFactory), 0x0000000000000001, CPP_BOOL_PROPERTY_BITMASK(bTwoSided, UTextureFactory), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bAlphaToOpacityMask, UTextureFactory, uint8);
				UProperty* NewProp_bAlphaToOpacityMask = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bAlphaToOpacityMask"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bAlphaToOpacityMask, UTextureFactory), 0x0000000000000001, CPP_BOOL_PROPERTY_BITMASK(bAlphaToOpacityMask, UTextureFactory), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bAlphaToOpacity, UTextureFactory, uint8);
				UProperty* NewProp_bAlphaToOpacity = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bAlphaToOpacity"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bAlphaToOpacity, UTextureFactory), 0x0000000000000001, CPP_BOOL_PROPERTY_BITMASK(bAlphaToOpacity, UTextureFactory), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bAlphaToEmissive, UTextureFactory, uint8);
				UProperty* NewProp_bAlphaToEmissive = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bAlphaToEmissive"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bAlphaToEmissive, UTextureFactory), 0x0000000000000001, CPP_BOOL_PROPERTY_BITMASK(bAlphaToEmissive, UTextureFactory), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bAlphaToRoughness, UTextureFactory, uint8);
				UProperty* NewProp_bAlphaToRoughness = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bAlphaToRoughness"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bAlphaToRoughness, UTextureFactory), 0x0000000000000001, CPP_BOOL_PROPERTY_BITMASK(bAlphaToRoughness, UTextureFactory), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bRGBToEmissive, UTextureFactory, uint8);
				UProperty* NewProp_bRGBToEmissive = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bRGBToEmissive"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bRGBToEmissive, UTextureFactory), 0x0000000000000001, CPP_BOOL_PROPERTY_BITMASK(bRGBToEmissive, UTextureFactory), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bRGBToBaseColor, UTextureFactory, uint8);
				UProperty* NewProp_bRGBToBaseColor = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bRGBToBaseColor"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bRGBToBaseColor, UTextureFactory), 0x0000000000000001, CPP_BOOL_PROPERTY_BITMASK(bRGBToBaseColor, UTextureFactory), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bCreateMaterial, UTextureFactory, uint8);
				UProperty* NewProp_bCreateMaterial = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bCreateMaterial"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bCreateMaterial, UTextureFactory), 0x0000000000000001, CPP_BOOL_PROPERTY_BITMASK(bCreateMaterial, UTextureFactory), sizeof(uint8), false);
				UProperty* NewProp_CompressionSettings = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CompressionSettings"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(CompressionSettings, UTextureFactory), 0x0000000000000001, Z_Construct_UEnum_Engine_TextureCompressionSettings());
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bDeferCompression, UTextureFactory, uint8);
				UProperty* NewProp_bDeferCompression = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bDeferCompression"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bDeferCompression, UTextureFactory), 0x0000000000000001, CPP_BOOL_PROPERTY_BITMASK(bDeferCompression, UTextureFactory), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(NoAlpha, UTextureFactory, uint8);
				UProperty* NewProp_NoAlpha = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("NoAlpha"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(NoAlpha, UTextureFactory), 0x0000000000000001, CPP_BOOL_PROPERTY_BITMASK(NoAlpha, UTextureFactory), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(NoCompression, UTextureFactory, uint8);
				UProperty* NewProp_NoCompression = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("NoCompression"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(NoCompression, UTextureFactory), 0x0000000000000000, CPP_BOOL_PROPERTY_BITMASK(NoCompression, UTextureFactory), sizeof(uint8), false);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Factories/TextureFactory.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/TextureFactory.h"));
				MetaData->SetValue(NewProp_bUsingExistingSettings, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/TextureFactory.h"));
				MetaData->SetValue(NewProp_bUsingExistingSettings, TEXT("ToolTip"), TEXT("If enabled, we are using the existing settings for a texture that already existed."));
				MetaData->SetValue(NewProp_bFlipNormalMapGreenChannel, TEXT("Category"), TEXT("NormalMap"));
				MetaData->SetValue(NewProp_bFlipNormalMapGreenChannel, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/TextureFactory.h"));
				MetaData->SetValue(NewProp_bFlipNormalMapGreenChannel, TEXT("ToolTip"), TEXT("If enabled, the texture's green channel will be inverted. This is useful for some normal maps"));
				MetaData->SetValue(NewProp_bPreserveBorder, TEXT("Category"), TEXT("PreserveBorder"));
				MetaData->SetValue(NewProp_bPreserveBorder, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/TextureFactory.h"));
				MetaData->SetValue(NewProp_bPreserveBorder, TEXT("ToolTip"), TEXT("If enabled, preserve the value of border pixels when creating mip-maps"));
				MetaData->SetValue(NewProp_bDitherMipMapAlpha, TEXT("Category"), TEXT("DitherMipMaps"));
				MetaData->SetValue(NewProp_bDitherMipMapAlpha, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/TextureFactory.h"));
				MetaData->SetValue(NewProp_bDitherMipMapAlpha, TEXT("ToolTip"), TEXT("If enabled, mip-map alpha values will be dithered for smooth transitions"));
				MetaData->SetValue(NewProp_LODGroup, TEXT("Category"), TEXT("LODGroup"));
				MetaData->SetValue(NewProp_LODGroup, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/TextureFactory.h"));
				MetaData->SetValue(NewProp_LODGroup, TEXT("ToolTip"), TEXT("The group the texture belongs to"));
				MetaData->SetValue(NewProp_MipGenSettings, TEXT("Category"), TEXT("TextureFactory"));
				MetaData->SetValue(NewProp_MipGenSettings, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/TextureFactory.h"));
				MetaData->SetValue(NewProp_MipGenSettings, TEXT("ToolTip"), TEXT("The mip-map generation settings for the texture; Allows customization of the content of the mip-map chain"));
				MetaData->SetValue(NewProp_ShadingModel, TEXT("Category"), TEXT("CreateMaterial"));
				MetaData->SetValue(NewProp_ShadingModel, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/TextureFactory.h"));
				MetaData->SetValue(NewProp_ShadingModel, TEXT("ToolTip"), TEXT("The shading model of the created material"));
				MetaData->SetValue(NewProp_Blending, TEXT("Category"), TEXT("CreateMaterial"));
				MetaData->SetValue(NewProp_Blending, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/TextureFactory.h"));
				MetaData->SetValue(NewProp_Blending, TEXT("ToolTip"), TEXT("The blend mode of the created material"));
				MetaData->SetValue(NewProp_bTwoSided, TEXT("Category"), TEXT("CreateMaterial"));
				MetaData->SetValue(NewProp_bTwoSided, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/TextureFactory.h"));
				MetaData->SetValue(NewProp_bTwoSided, TEXT("ToolTip"), TEXT("If enabled, the created material will be two-sided"));
				MetaData->SetValue(NewProp_bAlphaToOpacityMask, TEXT("Category"), TEXT("CreateMaterial"));
				MetaData->SetValue(NewProp_bAlphaToOpacityMask, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/TextureFactory.h"));
				MetaData->SetValue(NewProp_bAlphaToOpacityMask, TEXT("ToolTip"), TEXT("If enabled, link the texture's alpha to the created material's opacity mask"));
				MetaData->SetValue(NewProp_bAlphaToOpacity, TEXT("Category"), TEXT("CreateMaterial"));
				MetaData->SetValue(NewProp_bAlphaToOpacity, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/TextureFactory.h"));
				MetaData->SetValue(NewProp_bAlphaToOpacity, TEXT("ToolTip"), TEXT("If enabled, link the texture's alpha to the created material's opacity"));
				MetaData->SetValue(NewProp_bAlphaToEmissive, TEXT("Category"), TEXT("CreateMaterial"));
				MetaData->SetValue(NewProp_bAlphaToEmissive, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/TextureFactory.h"));
				MetaData->SetValue(NewProp_bAlphaToEmissive, TEXT("ToolTip"), TEXT("If enabled, link the texture's alpha to the created material's emissive color"));
				MetaData->SetValue(NewProp_bAlphaToRoughness, TEXT("Category"), TEXT("CreateMaterial"));
				MetaData->SetValue(NewProp_bAlphaToRoughness, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/TextureFactory.h"));
				MetaData->SetValue(NewProp_bAlphaToRoughness, TEXT("ToolTip"), TEXT("If enabled, link the texture's alpha to the created material's roughness"));
				MetaData->SetValue(NewProp_bRGBToEmissive, TEXT("Category"), TEXT("CreateMaterial"));
				MetaData->SetValue(NewProp_bRGBToEmissive, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/TextureFactory.h"));
				MetaData->SetValue(NewProp_bRGBToEmissive, TEXT("ToolTip"), TEXT("If enabled, link the texture to the created material's emissive color"));
				MetaData->SetValue(NewProp_bRGBToBaseColor, TEXT("Category"), TEXT("CreateMaterial"));
				MetaData->SetValue(NewProp_bRGBToBaseColor, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/TextureFactory.h"));
				MetaData->SetValue(NewProp_bRGBToBaseColor, TEXT("ToolTip"), TEXT("If enabled, link the texture to the created material's base color"));
				MetaData->SetValue(NewProp_bCreateMaterial, TEXT("Category"), TEXT("TextureFactory"));
				MetaData->SetValue(NewProp_bCreateMaterial, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/TextureFactory.h"));
				MetaData->SetValue(NewProp_bCreateMaterial, TEXT("ToolTip"), TEXT("If enabled, a material will automatically be created for the texture"));
				MetaData->SetValue(NewProp_CompressionSettings, TEXT("Category"), TEXT("Compression"));
				MetaData->SetValue(NewProp_CompressionSettings, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/TextureFactory.h"));
				MetaData->SetValue(NewProp_CompressionSettings, TEXT("ToolTip"), TEXT("Compression settings for the texture"));
				MetaData->SetValue(NewProp_bDeferCompression, TEXT("Category"), TEXT("Compression"));
				MetaData->SetValue(NewProp_bDeferCompression, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/TextureFactory.h"));
				MetaData->SetValue(NewProp_bDeferCompression, TEXT("ToolTip"), TEXT("If enabled, compression is deferred until the texture is saved"));
				MetaData->SetValue(NewProp_NoAlpha, TEXT("Category"), TEXT("Compression"));
				MetaData->SetValue(NewProp_NoAlpha, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/TextureFactory.h"));
				MetaData->SetValue(NewProp_NoAlpha, TEXT("ToolTip"), TEXT("If enabled, the texture's alpha channel will be discarded during compression"));
				MetaData->SetValue(NewProp_NoCompression, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/TextureFactory.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UTextureFactory(Z_Construct_UClass_UTextureFactory, TEXT("UTextureFactory"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UTextureFactory);
	UClass* Z_Construct_UClass_UReimportTextureFactory_NoRegister()
	{
		return UReimportTextureFactory::StaticClass();
	}
	UClass* Z_Construct_UClass_UReimportTextureFactory()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UTextureFactory();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UReimportTextureFactory::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20002080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_pOriginalTex = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("pOriginalTex"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(pOriginalTex, UReimportTextureFactory), 0x0000000000000000, Z_Construct_UClass_UTexture_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("LightMap DitherMipMaps LODGroup Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Factories/ReimportTextureFactory.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/ReimportTextureFactory.h"));
				MetaData->SetValue(NewProp_pOriginalTex, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/ReimportTextureFactory.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UReimportTextureFactory(Z_Construct_UClass_UReimportTextureFactory, TEXT("UReimportTextureFactory"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UReimportTextureFactory);
	UClass* Z_Construct_UClass_UTrueTypeFontFactory_NoRegister()
	{
		return UTrueTypeFontFactory::StaticClass();
	}
	UClass* Z_Construct_UClass_UTrueTypeFontFactory()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UTextureFactory();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UTrueTypeFontFactory::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20902080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bFontSelected, UTrueTypeFontFactory, bool);
				UProperty* NewProp_bFontSelected = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bFontSelected"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bFontSelected, UTrueTypeFontFactory), 0x0000000000000000, CPP_BOOL_PROPERTY_BITMASK(bFontSelected, UTrueTypeFontFactory), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bPropertiesConfigured, UTrueTypeFontFactory, bool);
				UProperty* NewProp_bPropertiesConfigured = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bPropertiesConfigured"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bPropertiesConfigured, UTrueTypeFontFactory), 0x0000000000000000, CPP_BOOL_PROPERTY_BITMASK(bPropertiesConfigured, UTrueTypeFontFactory), sizeof(bool), true);
				UProperty* NewProp_ImportOptions = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ImportOptions"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(ImportOptions, UTrueTypeFontFactory), 0x0002000000080009, Z_Construct_UClass_UFontImportOptions_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Factories/TrueTypeFontFactory.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/TrueTypeFontFactory.h"));
				MetaData->SetValue(NewProp_bFontSelected, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/TrueTypeFontFactory.h"));
				MetaData->SetValue(NewProp_bFontSelected, TEXT("ToolTip"), TEXT("True if a font was selected during the non-legacy creation process"));
				MetaData->SetValue(NewProp_bPropertiesConfigured, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/TrueTypeFontFactory.h"));
				MetaData->SetValue(NewProp_bPropertiesConfigured, TEXT("ToolTip"), TEXT("True when the font dialog was shown for this factory during the non-legacy creation process"));
				MetaData->SetValue(NewProp_ImportOptions, TEXT("Category"), TEXT("TrueTypeFontFactory"));
				MetaData->SetValue(NewProp_ImportOptions, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_ImportOptions, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/TrueTypeFontFactory.h"));
				MetaData->SetValue(NewProp_ImportOptions, TEXT("ToolTip"), TEXT("Import options for the font"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UTrueTypeFontFactory(Z_Construct_UClass_UTrueTypeFontFactory, TEXT("UTrueTypeFontFactory"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UTrueTypeFontFactory);
	UClass* Z_Construct_UClass_UTextureRenderTargetCubeFactoryNew_NoRegister()
	{
		return UTextureRenderTargetCubeFactoryNew::StaticClass();
	}
	UClass* Z_Construct_UClass_UTextureRenderTargetCubeFactoryNew()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UFactory();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UTextureRenderTargetCubeFactoryNew::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_Format = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Format"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(Format, UTextureRenderTargetCubeFactoryNew), 0x0000000000000000);
				UProperty* NewProp_Width = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Width"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(Width, UTextureRenderTargetCubeFactoryNew), 0x0000000000000000);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object Texture"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Factories/TextureRenderTargetCubeFactoryNew.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/TextureRenderTargetCubeFactoryNew.h"));
				MetaData->SetValue(NewProp_Format, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/TextureRenderTargetCubeFactoryNew.h"));
				MetaData->SetValue(NewProp_Format, TEXT("ToolTip"), TEXT("Pixel format of the texture render target"));
				MetaData->SetValue(NewProp_Width, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/TextureRenderTargetCubeFactoryNew.h"));
				MetaData->SetValue(NewProp_Width, TEXT("ToolTip"), TEXT("Width of the texture render target"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UTextureRenderTargetCubeFactoryNew(Z_Construct_UClass_UTextureRenderTargetCubeFactoryNew, TEXT("UTextureRenderTargetCubeFactoryNew"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UTextureRenderTargetCubeFactoryNew);
	UClass* Z_Construct_UClass_UTextureRenderTargetFactoryNew_NoRegister()
	{
		return UTextureRenderTargetFactoryNew::StaticClass();
	}
	UClass* Z_Construct_UClass_UTextureRenderTargetFactoryNew()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UFactory();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UTextureRenderTargetFactoryNew::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_Format = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Format"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(Format, UTextureRenderTargetFactoryNew), 0x0000000000000000);
				UProperty* NewProp_Height = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Height"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(Height, UTextureRenderTargetFactoryNew), 0x0000000000000000);
				UProperty* NewProp_Width = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Width"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(Width, UTextureRenderTargetFactoryNew), 0x0000000000000000);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object Texture"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Factories/TextureRenderTargetFactoryNew.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/TextureRenderTargetFactoryNew.h"));
				MetaData->SetValue(NewProp_Format, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/TextureRenderTargetFactoryNew.h"));
				MetaData->SetValue(NewProp_Format, TEXT("ToolTip"), TEXT("Pixel format of the texture render target"));
				MetaData->SetValue(NewProp_Height, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/TextureRenderTargetFactoryNew.h"));
				MetaData->SetValue(NewProp_Height, TEXT("ToolTip"), TEXT("Height of the texture render target"));
				MetaData->SetValue(NewProp_Width, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/TextureRenderTargetFactoryNew.h"));
				MetaData->SetValue(NewProp_Width, TEXT("ToolTip"), TEXT("Width of the texture render target"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UTextureRenderTargetFactoryNew(Z_Construct_UClass_UTextureRenderTargetFactoryNew, TEXT("UTextureRenderTargetFactoryNew"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UTextureRenderTargetFactoryNew);
	UClass* Z_Construct_UClass_UTouchInterfaceFactory_NoRegister()
	{
		return UTouchInterfaceFactory::StaticClass();
	}
	UClass* Z_Construct_UClass_UTouchInterfaceFactory()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UFactory();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UTouchInterfaceFactory::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Factories/TouchInterfaceFactory.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/TouchInterfaceFactory.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UTouchInterfaceFactory(Z_Construct_UClass_UTouchInterfaceFactory, TEXT("UTouchInterfaceFactory"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UTouchInterfaceFactory);
	UClass* Z_Construct_UClass_UVectorFieldStaticFactory_NoRegister()
	{
		return UVectorFieldStaticFactory::StaticClass();
	}
	UClass* Z_Construct_UClass_UVectorFieldStaticFactory()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UFactory();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UVectorFieldStaticFactory::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Factories/VectorFieldStaticFactory.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/VectorFieldStaticFactory.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UVectorFieldStaticFactory(Z_Construct_UClass_UVectorFieldStaticFactory, TEXT("UVectorFieldStaticFactory"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UVectorFieldStaticFactory);
	UClass* Z_Construct_UClass_UReimportVectorFieldStaticFactory_NoRegister()
	{
		return UReimportVectorFieldStaticFactory::StaticClass();
	}
	UClass* Z_Construct_UClass_UReimportVectorFieldStaticFactory()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UVectorFieldStaticFactory();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UReimportVectorFieldStaticFactory::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Factories/ReimportVectorFieldStaticFactory.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/ReimportVectorFieldStaticFactory.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UReimportVectorFieldStaticFactory(Z_Construct_UClass_UReimportVectorFieldStaticFactory, TEXT("UReimportVectorFieldStaticFactory"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UReimportVectorFieldStaticFactory);
	UClass* Z_Construct_UClass_UWorldFactory_NoRegister()
	{
		return UWorldFactory::StaticClass();
	}
	UClass* Z_Construct_UClass_UWorldFactory()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UFactory();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UWorldFactory::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Factories/WorldFactory.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/WorldFactory.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UWorldFactory(Z_Construct_UClass_UWorldFactory, TEXT("UWorldFactory"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UWorldFactory);
	UClass* Z_Construct_UClass_UFbxAssetImportData_NoRegister()
	{
		return UFbxAssetImportData::StaticClass();
	}
	UClass* Z_Construct_UClass_UFbxAssetImportData()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UAssetImportData();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UFbxAssetImportData::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100081;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_ImportUniformScale = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ImportUniformScale"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(ImportUniformScale, UFbxAssetImportData), 0x0000000000000001);
				UProperty* NewProp_ImportRotation = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ImportRotation"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(ImportRotation, UFbxAssetImportData), 0x0000000000000001, Z_Construct_UScriptStruct_FRotator());
				UProperty* NewProp_ImportTranslation = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ImportTranslation"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(ImportTranslation, UFbxAssetImportData), 0x0000000000000001, Z_Construct_UScriptStruct_FVector());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->ClassConfigName = FName(TEXT("EditorPerProjectUserSettings"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Factories/FbxAssetImportData.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/FbxAssetImportData.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Base class for import data and options used when importing any asset from FBX"));
				MetaData->SetValue(NewProp_ImportUniformScale, TEXT("Category"), TEXT("Transform"));
				MetaData->SetValue(NewProp_ImportUniformScale, TEXT("ImportCategory"), TEXT("Transform"));
				MetaData->SetValue(NewProp_ImportUniformScale, TEXT("ImportType"), TEXT("StaticMesh|SkeletalMesh|Animation"));
				MetaData->SetValue(NewProp_ImportUniformScale, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/FbxAssetImportData.h"));
				MetaData->SetValue(NewProp_ImportRotation, TEXT("Category"), TEXT("Transform"));
				MetaData->SetValue(NewProp_ImportRotation, TEXT("ImportCategory"), TEXT("Transform"));
				MetaData->SetValue(NewProp_ImportRotation, TEXT("ImportType"), TEXT("StaticMesh|SkeletalMesh|Animation"));
				MetaData->SetValue(NewProp_ImportRotation, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/FbxAssetImportData.h"));
				MetaData->SetValue(NewProp_ImportTranslation, TEXT("Category"), TEXT("Transform"));
				MetaData->SetValue(NewProp_ImportTranslation, TEXT("ImportCategory"), TEXT("Transform"));
				MetaData->SetValue(NewProp_ImportTranslation, TEXT("ImportType"), TEXT("StaticMesh|SkeletalMesh|Animation"));
				MetaData->SetValue(NewProp_ImportTranslation, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/FbxAssetImportData.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UFbxAssetImportData(Z_Construct_UClass_UFbxAssetImportData, TEXT("UFbxAssetImportData"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UFbxAssetImportData);
	UEnum* Z_Construct_UEnum_UnrealEd_EFBXAnimationLengthImportType()
	{
		UPackage* Outer=Z_Construct_UPackage_UnrealEd();
		extern uint32 Get_Z_Construct_UEnum_UnrealEd_EFBXAnimationLengthImportType_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("EFBXAnimationLengthImportType"), 0, Get_Z_Construct_UEnum_UnrealEd_EFBXAnimationLengthImportType_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EFBXAnimationLengthImportType"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("FBXALIT_ExportedTime")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("FBXALIT_AnimatedKey")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("FBXALIT_SetRange")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("FBXALIT_MAX")), 3));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Regular);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("FBXALIT_AnimatedKey.DisplayName"), TEXT("Animated Time"));
			MetaData->SetValue(ReturnEnum, TEXT("FBXALIT_ExportedTime.DisplayName"), TEXT("Exported Time"));
			MetaData->SetValue(ReturnEnum, TEXT("FBXALIT_SetRange.DisplayName"), TEXT("Set Range"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/FbxAnimSequenceImportData.h"));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("Animation length type when importing"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_UnrealEd_EFBXAnimationLengthImportType_CRC() { return 2907361894U; }
	UClass* Z_Construct_UClass_UFbxAnimSequenceImportData_NoRegister()
	{
		return UFbxAnimSequenceImportData::StaticClass();
	}
	UClass* Z_Construct_UClass_UFbxAnimSequenceImportData()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UFbxAssetImportData();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UFbxAnimSequenceImportData::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100084;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bDeleteExistingMorphTargetCurves, UFbxAnimSequenceImportData, bool);
				UProperty* NewProp_bDeleteExistingMorphTargetCurves = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bDeleteExistingMorphTargetCurves"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bDeleteExistingMorphTargetCurves, UFbxAnimSequenceImportData), 0x0000040000004001, CPP_BOOL_PROPERTY_BITMASK(bDeleteExistingMorphTargetCurves, UFbxAnimSequenceImportData), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bPreserveLocalTransform, UFbxAnimSequenceImportData, bool);
				UProperty* NewProp_bPreserveLocalTransform = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bPreserveLocalTransform"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bPreserveLocalTransform, UFbxAnimSequenceImportData), 0x0000040000004001, CPP_BOOL_PROPERTY_BITMASK(bPreserveLocalTransform, UFbxAnimSequenceImportData), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bImportCustomAttribute, UFbxAnimSequenceImportData, bool);
				UProperty* NewProp_bImportCustomAttribute = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bImportCustomAttribute"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bImportCustomAttribute, UFbxAnimSequenceImportData), 0x0000040000004001, CPP_BOOL_PROPERTY_BITMASK(bImportCustomAttribute, UFbxAnimSequenceImportData), sizeof(bool), true);
				UProperty* NewProp_SourceAnimationName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SourceAnimationName"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(SourceAnimationName, UFbxAnimSequenceImportData), 0x0000000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bUseDefaultSampleRate, UFbxAnimSequenceImportData, bool);
				UProperty* NewProp_bUseDefaultSampleRate = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bUseDefaultSampleRate"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bUseDefaultSampleRate, UFbxAnimSequenceImportData), 0x0000040000004001, CPP_BOOL_PROPERTY_BITMASK(bUseDefaultSampleRate, UFbxAnimSequenceImportData), sizeof(bool), true);
				UProperty* NewProp_EndFrame = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("EndFrame"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(EndFrame, UFbxAnimSequenceImportData), 0x0000040000000001);
				UProperty* NewProp_StartFrame = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("StartFrame"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(StartFrame, UFbxAnimSequenceImportData), 0x0000040000000001);
				UProperty* NewProp_AnimationLength = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AnimationLength"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(AnimationLength, UFbxAnimSequenceImportData), 0x0000000000000001, Z_Construct_UEnum_UnrealEd_EFBXAnimationLengthImportType());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->ClassConfigName = FName(TEXT("EditorPerProjectUserSettings"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Factories/FbxAnimSequenceImportData.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/FbxAnimSequenceImportData.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Import data and options used when importing any mesh from FBX"));
				MetaData->SetValue(NewProp_bDeleteExistingMorphTargetCurves, TEXT("Category"), TEXT("ImportSettings"));
				MetaData->SetValue(NewProp_bDeleteExistingMorphTargetCurves, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/FbxAnimSequenceImportData.h"));
				MetaData->SetValue(NewProp_bDeleteExistingMorphTargetCurves, TEXT("ToolTip"), TEXT("Type of asset to import from the FBX file"));
				MetaData->SetValue(NewProp_bPreserveLocalTransform, TEXT("Category"), TEXT("ImportSettings"));
				MetaData->SetValue(NewProp_bPreserveLocalTransform, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/FbxAnimSequenceImportData.h"));
				MetaData->SetValue(NewProp_bPreserveLocalTransform, TEXT("ToolTip"), TEXT("Type of asset to import from the FBX file"));
				MetaData->SetValue(NewProp_bImportCustomAttribute, TEXT("Category"), TEXT("ImportSettings"));
				MetaData->SetValue(NewProp_bImportCustomAttribute, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/FbxAnimSequenceImportData.h"));
				MetaData->SetValue(NewProp_bImportCustomAttribute, TEXT("ToolTip"), TEXT("Import if custom attribute as a curve within the animation *"));
				MetaData->SetValue(NewProp_SourceAnimationName, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/FbxAnimSequenceImportData.h"));
				MetaData->SetValue(NewProp_SourceAnimationName, TEXT("ToolTip"), TEXT("Name of source animation that was imported, used to reimport correct animation from the FBX file"));
				MetaData->SetValue(NewProp_bUseDefaultSampleRate, TEXT("Category"), TEXT("ImportSettings"));
				MetaData->SetValue(NewProp_bUseDefaultSampleRate, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/FbxAnimSequenceImportData.h"));
				MetaData->SetValue(NewProp_bUseDefaultSampleRate, TEXT("ToolTip"), TEXT("If enabled, samples all animation curves to 30 FPS"));
				MetaData->SetValue(NewProp_EndFrame, TEXT("Category"), TEXT("ImportSettings"));
				MetaData->SetValue(NewProp_EndFrame, TEXT("DisplayName"), TEXT("End Frame"));
				MetaData->SetValue(NewProp_EndFrame, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/FbxAnimSequenceImportData.h"));
				MetaData->SetValue(NewProp_EndFrame, TEXT("ToolTip"), TEXT("Type of asset to import from the FBX file"));
				MetaData->SetValue(NewProp_StartFrame, TEXT("Category"), TEXT("ImportSettings"));
				MetaData->SetValue(NewProp_StartFrame, TEXT("DisplayName"), TEXT("Start Frame"));
				MetaData->SetValue(NewProp_StartFrame, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/FbxAnimSequenceImportData.h"));
				MetaData->SetValue(NewProp_StartFrame, TEXT("ToolTip"), TEXT("Type of asset to import from the FBX file"));
				MetaData->SetValue(NewProp_AnimationLength, TEXT("Category"), TEXT("ImportSettings"));
				MetaData->SetValue(NewProp_AnimationLength, TEXT("DisplayName"), TEXT("Animation Length"));
				MetaData->SetValue(NewProp_AnimationLength, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/FbxAnimSequenceImportData.h"));
				MetaData->SetValue(NewProp_AnimationLength, TEXT("ToolTip"), TEXT("Type of asset to import from the FBX file"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UFbxAnimSequenceImportData(Z_Construct_UClass_UFbxAnimSequenceImportData, TEXT("UFbxAnimSequenceImportData"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UFbxAnimSequenceImportData);
	UEnum* Z_Construct_UEnum_UnrealEd_EFBXNormalGenerationMethod()
	{
		UPackage* Outer=Z_Construct_UPackage_UnrealEd();
		extern uint32 Get_Z_Construct_UEnum_UnrealEd_EFBXNormalGenerationMethod_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("EFBXNormalGenerationMethod"), 0, Get_Z_Construct_UEnum_UnrealEd_EFBXNormalGenerationMethod_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EFBXNormalGenerationMethod"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EFBXNormalGenerationMethod::BuiltIn")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EFBXNormalGenerationMethod::MikkTSpace")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EFBXNormalGenerationMethod::EFBXNormalGenerationMethod_MAX")), 2));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("BuiltIn.ToolTip"), TEXT("Use the legacy built in method to generate normals (faster in some cases)"));
			MetaData->SetValue(ReturnEnum, TEXT("MikkTSpace.ToolTip"), TEXT("Use MikkTSpace to generate normals and tangents"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/FbxMeshImportData.h"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_UnrealEd_EFBXNormalGenerationMethod_CRC() { return 4245684789U; }
	UEnum* Z_Construct_UEnum_UnrealEd_EFBXNormalImportMethod()
	{
		UPackage* Outer=Z_Construct_UPackage_UnrealEd();
		extern uint32 Get_Z_Construct_UEnum_UnrealEd_EFBXNormalImportMethod_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("EFBXNormalImportMethod"), 0, Get_Z_Construct_UEnum_UnrealEd_EFBXNormalImportMethod_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EFBXNormalImportMethod"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("FBXNIM_ComputeNormals")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("FBXNIM_ImportNormals")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("FBXNIM_ImportNormalsAndTangents")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("FBXNIM_MAX")), 3));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Regular);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("FBXNIM_ComputeNormals.DisplayName"), TEXT("Compute Normals"));
			MetaData->SetValue(ReturnEnum, TEXT("FBXNIM_ImportNormals.DisplayName"), TEXT("Import Normals"));
			MetaData->SetValue(ReturnEnum, TEXT("FBXNIM_ImportNormalsAndTangents.DisplayName"), TEXT("Import Normals and Tangents"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/FbxMeshImportData.h"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_UnrealEd_EFBXNormalImportMethod_CRC() { return 1212403480U; }
	UClass* Z_Construct_UClass_UFbxMeshImportData_NoRegister()
	{
		return UFbxMeshImportData::StaticClass();
	}
	UClass* Z_Construct_UClass_UFbxMeshImportData()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UFbxAssetImportData();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UFbxMeshImportData::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x60000085;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_NormalGenerationMethod = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("NormalGenerationMethod"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(NormalGenerationMethod, UFbxMeshImportData), 0x0000040000004001, Z_Construct_UEnum_UnrealEd_EFBXNormalGenerationMethod());
				UProperty* NewProp_NormalImportMethod = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("NormalImportMethod"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(NormalImportMethod, UFbxMeshImportData), 0x0000040000004001, Z_Construct_UEnum_UnrealEd_EFBXNormalImportMethod());
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bImportMeshLODs, UFbxMeshImportData, uint8);
				UProperty* NewProp_bImportMeshLODs = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bImportMeshLODs"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bImportMeshLODs, UFbxMeshImportData), 0x0000040000004001, CPP_BOOL_PROPERTY_BITMASK(bImportMeshLODs, UFbxMeshImportData), sizeof(uint8), false);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->ClassConfigName = FName(TEXT("EditorPerProjectUserSettings"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Factories/FbxMeshImportData.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/FbxMeshImportData.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Import data and options used when importing any mesh from FBX"));
				MetaData->SetValue(NewProp_NormalGenerationMethod, TEXT("Category"), TEXT("ImportSettings"));
				MetaData->SetValue(NewProp_NormalGenerationMethod, TEXT("ImportType"), TEXT("StaticMesh"));
				MetaData->SetValue(NewProp_NormalGenerationMethod, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/FbxMeshImportData.h"));
				MetaData->SetValue(NewProp_NormalGenerationMethod, TEXT("ToolTip"), TEXT("Use the MikkTSpace tangent space generator for generating normals and tangents on the mesh"));
				MetaData->SetValue(NewProp_NormalImportMethod, TEXT("Category"), TEXT("ImportSettings"));
				MetaData->SetValue(NewProp_NormalImportMethod, TEXT("ImportType"), TEXT("Mesh"));
				MetaData->SetValue(NewProp_NormalImportMethod, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/FbxMeshImportData.h"));
				MetaData->SetValue(NewProp_NormalImportMethod, TEXT("ToolTip"), TEXT("Enabling this option will read the tangents(tangent,binormal,normal) from FBX file instead of generating them automatically."));
				MetaData->SetValue(NewProp_bImportMeshLODs, TEXT("Category"), TEXT("ImportSettings"));
				MetaData->SetValue(NewProp_bImportMeshLODs, TEXT("ImportType"), TEXT("Mesh"));
				MetaData->SetValue(NewProp_bImportMeshLODs, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/FbxMeshImportData.h"));
				MetaData->SetValue(NewProp_bImportMeshLODs, TEXT("OBJRestrict"), TEXT("true"));
				MetaData->SetValue(NewProp_bImportMeshLODs, TEXT("ToolTip"), TEXT("If enabled, creates LOD models for Unreal meshes from LODs in the import file; If not enabled, only the base mesh from the LOD group is imported"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UFbxMeshImportData(Z_Construct_UClass_UFbxMeshImportData, TEXT("UFbxMeshImportData"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UFbxMeshImportData);
	UClass* Z_Construct_UClass_UFbxSkeletalMeshImportData_NoRegister()
	{
		return UFbxSkeletalMeshImportData::StaticClass();
	}
	UClass* Z_Construct_UClass_UFbxSkeletalMeshImportData()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UFbxMeshImportData();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UFbxSkeletalMeshImportData::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x60000084;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bKeepOverlappingVertices, UFbxSkeletalMeshImportData, uint8);
				UProperty* NewProp_bKeepOverlappingVertices = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bKeepOverlappingVertices"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bKeepOverlappingVertices, UFbxSkeletalMeshImportData), 0x0000040000004001, CPP_BOOL_PROPERTY_BITMASK(bKeepOverlappingVertices, UFbxSkeletalMeshImportData), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bImportMorphTargets, UFbxSkeletalMeshImportData, uint8);
				UProperty* NewProp_bImportMorphTargets = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bImportMorphTargets"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bImportMorphTargets, UFbxSkeletalMeshImportData), 0x0000040000004001, CPP_BOOL_PROPERTY_BITMASK(bImportMorphTargets, UFbxSkeletalMeshImportData), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bImportMeshesInBoneHierarchy, UFbxSkeletalMeshImportData, uint8);
				UProperty* NewProp_bImportMeshesInBoneHierarchy = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bImportMeshesInBoneHierarchy"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bImportMeshesInBoneHierarchy, UFbxSkeletalMeshImportData), 0x0000040000004001, CPP_BOOL_PROPERTY_BITMASK(bImportMeshesInBoneHierarchy, UFbxSkeletalMeshImportData), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bPreserveSmoothingGroups, UFbxSkeletalMeshImportData, uint8);
				UProperty* NewProp_bPreserveSmoothingGroups = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bPreserveSmoothingGroups"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bPreserveSmoothingGroups, UFbxSkeletalMeshImportData), 0x0000040000004001, CPP_BOOL_PROPERTY_BITMASK(bPreserveSmoothingGroups, UFbxSkeletalMeshImportData), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bUseT0AsRefPose, UFbxSkeletalMeshImportData, uint8);
				UProperty* NewProp_bUseT0AsRefPose = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bUseT0AsRefPose"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bUseT0AsRefPose, UFbxSkeletalMeshImportData), 0x0000040000004001, CPP_BOOL_PROPERTY_BITMASK(bUseT0AsRefPose, UFbxSkeletalMeshImportData), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bUpdateSkeletonReferencePose, UFbxSkeletalMeshImportData, uint8);
				UProperty* NewProp_bUpdateSkeletonReferencePose = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bUpdateSkeletonReferencePose"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bUpdateSkeletonReferencePose, UFbxSkeletalMeshImportData), 0x0000040000000001, CPP_BOOL_PROPERTY_BITMASK(bUpdateSkeletonReferencePose, UFbxSkeletalMeshImportData), sizeof(uint8), false);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->ClassConfigName = FName(TEXT("EditorPerProjectUserSettings"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Factories/FbxSkeletalMeshImportData.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/FbxSkeletalMeshImportData.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Import data and options used when importing a static mesh from fbx"));
				MetaData->SetValue(NewProp_bKeepOverlappingVertices, TEXT("Category"), TEXT("ImportSettings"));
				MetaData->SetValue(NewProp_bKeepOverlappingVertices, TEXT("ImportType"), TEXT("SkeletalMesh"));
				MetaData->SetValue(NewProp_bKeepOverlappingVertices, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/FbxSkeletalMeshImportData.h"));
				MetaData->SetValue(NewProp_bKeepOverlappingVertices, TEXT("ToolTip"), TEXT("If checked, do not filter same vertices. Keep all vertices even if they have exact same properties"));
				MetaData->SetValue(NewProp_bImportMorphTargets, TEXT("Category"), TEXT("ImportSettings"));
				MetaData->SetValue(NewProp_bImportMorphTargets, TEXT("ImportType"), TEXT("SkeletalMesh"));
				MetaData->SetValue(NewProp_bImportMorphTargets, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/FbxSkeletalMeshImportData.h"));
				MetaData->SetValue(NewProp_bImportMorphTargets, TEXT("ToolTip"), TEXT("If enabled, creates Unreal morph objects for the imported meshes"));
				MetaData->SetValue(NewProp_bImportMeshesInBoneHierarchy, TEXT("Category"), TEXT("ImportSettings"));
				MetaData->SetValue(NewProp_bImportMeshesInBoneHierarchy, TEXT("ImportType"), TEXT("SkeletalMesh"));
				MetaData->SetValue(NewProp_bImportMeshesInBoneHierarchy, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/FbxSkeletalMeshImportData.h"));
				MetaData->SetValue(NewProp_bImportMeshesInBoneHierarchy, TEXT("ToolTip"), TEXT("If checked, meshes nested in bone hierarchies will be imported instead of being converted to bones."));
				MetaData->SetValue(NewProp_bPreserveSmoothingGroups, TEXT("Category"), TEXT("ImportSettings"));
				MetaData->SetValue(NewProp_bPreserveSmoothingGroups, TEXT("ImportType"), TEXT("SkeletalMesh"));
				MetaData->SetValue(NewProp_bPreserveSmoothingGroups, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/FbxSkeletalMeshImportData.h"));
				MetaData->SetValue(NewProp_bPreserveSmoothingGroups, TEXT("ToolTip"), TEXT("If checked, triangles with non-matching smoothing groups will be physically split."));
				MetaData->SetValue(NewProp_bUseT0AsRefPose, TEXT("Category"), TEXT("ImportSettings"));
				MetaData->SetValue(NewProp_bUseT0AsRefPose, TEXT("ImportType"), TEXT("SkeletalMesh"));
				MetaData->SetValue(NewProp_bUseT0AsRefPose, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/FbxSkeletalMeshImportData.h"));
				MetaData->SetValue(NewProp_bUseT0AsRefPose, TEXT("ToolTip"), TEXT("Enable this option to use frame 0 as reference pose"));
				MetaData->SetValue(NewProp_bUpdateSkeletonReferencePose, TEXT("Category"), TEXT("ImportSettings"));
				MetaData->SetValue(NewProp_bUpdateSkeletonReferencePose, TEXT("ImportType"), TEXT("SkeletalMesh"));
				MetaData->SetValue(NewProp_bUpdateSkeletonReferencePose, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/FbxSkeletalMeshImportData.h"));
				MetaData->SetValue(NewProp_bUpdateSkeletonReferencePose, TEXT("ToolTip"), TEXT("If enabled, update the Skeleton (of the mesh being imported)'s reference pose."));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UFbxSkeletalMeshImportData(Z_Construct_UClass_UFbxSkeletalMeshImportData, TEXT("UFbxSkeletalMeshImportData"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UFbxSkeletalMeshImportData);
	UEnum* Z_Construct_UEnum_UnrealEd_EVertexColorImportOption()
	{
		UPackage* Outer=Z_Construct_UPackage_UnrealEd();
		extern uint32 Get_Z_Construct_UEnum_UnrealEd_EVertexColorImportOption_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("EVertexColorImportOption"), 0, Get_Z_Construct_UEnum_UnrealEd_EVertexColorImportOption_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EVertexColorImportOption"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EVertexColorImportOption::Replace")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EVertexColorImportOption::Ignore")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EVertexColorImportOption::Override")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EVertexColorImportOption::EVertexColorImportOption_MAX")), 3));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("Ignore.ToolTip"), TEXT("Ignore vertex colors from the FBX file, and keep the existing mesh vertex colors."));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/FbxStaticMeshImportData.h"));
			MetaData->SetValue(ReturnEnum, TEXT("Override.ToolTip"), TEXT("Override all vertex colors with the specified color."));
			MetaData->SetValue(ReturnEnum, TEXT("Replace.ToolTip"), TEXT("Import the static mesh using the vertex colors from the FBX file."));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_UnrealEd_EVertexColorImportOption_CRC() { return 3083890659U; }
	UClass* Z_Construct_UClass_UFbxStaticMeshImportData_NoRegister()
	{
		return UFbxStaticMeshImportData::StaticClass();
	}
	UClass* Z_Construct_UClass_UFbxStaticMeshImportData()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UFbxMeshImportData();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UFbxStaticMeshImportData::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x60080084;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bAutoGenerateCollision, UFbxStaticMeshImportData, uint8);
				UProperty* NewProp_bAutoGenerateCollision = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bAutoGenerateCollision"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bAutoGenerateCollision, UFbxStaticMeshImportData), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(bAutoGenerateCollision, UFbxStaticMeshImportData), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bOneConvexHullPerUCX, UFbxStaticMeshImportData, uint8);
				UProperty* NewProp_bOneConvexHullPerUCX = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bOneConvexHullPerUCX"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bOneConvexHullPerUCX, UFbxStaticMeshImportData), 0x0000040000004001, CPP_BOOL_PROPERTY_BITMASK(bOneConvexHullPerUCX, UFbxStaticMeshImportData), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bGenerateLightmapUVs, UFbxStaticMeshImportData, uint8);
				UProperty* NewProp_bGenerateLightmapUVs = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bGenerateLightmapUVs"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bGenerateLightmapUVs, UFbxStaticMeshImportData), 0x0000040000004001, CPP_BOOL_PROPERTY_BITMASK(bGenerateLightmapUVs, UFbxStaticMeshImportData), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bBuildAdjacencyBuffer, UFbxStaticMeshImportData, uint8);
				UProperty* NewProp_bBuildAdjacencyBuffer = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bBuildAdjacencyBuffer"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bBuildAdjacencyBuffer, UFbxStaticMeshImportData), 0x0000040000000001, CPP_BOOL_PROPERTY_BITMASK(bBuildAdjacencyBuffer, UFbxStaticMeshImportData), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bRemoveDegenerates, UFbxStaticMeshImportData, uint8);
				UProperty* NewProp_bRemoveDegenerates = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bRemoveDegenerates"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bRemoveDegenerates, UFbxStaticMeshImportData), 0x0000040000000001, CPP_BOOL_PROPERTY_BITMASK(bRemoveDegenerates, UFbxStaticMeshImportData), sizeof(uint8), false);
				UProperty* NewProp_VertexOverrideColor = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("VertexOverrideColor"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(VertexOverrideColor, UFbxStaticMeshImportData), 0x0000040000004001, Z_Construct_UScriptStruct_FColor());
				UProperty* NewProp_VertexColorImportOption = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("VertexColorImportOption"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(VertexColorImportOption, UFbxStaticMeshImportData), 0x0000040000004001, Z_Construct_UEnum_UnrealEd_EVertexColorImportOption());
				UProperty* NewProp_StaticMeshLODGroup = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("StaticMeshLODGroup"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(StaticMeshLODGroup, UFbxStaticMeshImportData), 0x0000040000000001);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->ClassConfigName = FName(TEXT("EditorPerProjectUserSettings"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("AutoExpandCategories"), TEXT("Options"));
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Factories/FbxStaticMeshImportData.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/FbxStaticMeshImportData.h"));
				MetaData->SetValue(NewProp_bAutoGenerateCollision, TEXT("Category"), TEXT("ImportSettings"));
				MetaData->SetValue(NewProp_bAutoGenerateCollision, TEXT("ImportType"), TEXT("StaticMesh"));
				MetaData->SetValue(NewProp_bAutoGenerateCollision, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/FbxStaticMeshImportData.h"));
				MetaData->SetValue(NewProp_bAutoGenerateCollision, TEXT("OBJRestrict"), TEXT("true"));
				MetaData->SetValue(NewProp_bAutoGenerateCollision, TEXT("ToolTip"), TEXT("If checked, collision will automatically be generated (ignored if custom collision is imported or used)."));
				MetaData->SetValue(NewProp_bOneConvexHullPerUCX, TEXT("Category"), TEXT("ImportSettings"));
				MetaData->SetValue(NewProp_bOneConvexHullPerUCX, TEXT("ImportType"), TEXT("StaticMesh"));
				MetaData->SetValue(NewProp_bOneConvexHullPerUCX, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/FbxStaticMeshImportData.h"));
				MetaData->SetValue(NewProp_bOneConvexHullPerUCX, TEXT("OBJRestrict"), TEXT("true"));
				MetaData->SetValue(NewProp_bOneConvexHullPerUCX, TEXT("ToolTip"), TEXT("If checked, one convex hull per UCX_ prefixed collision mesh will be generated instead of decomposing into multiple hulls"));
				MetaData->SetValue(NewProp_bGenerateLightmapUVs, TEXT("Category"), TEXT("ImportSettings"));
				MetaData->SetValue(NewProp_bGenerateLightmapUVs, TEXT("ImportType"), TEXT("StaticMesh"));
				MetaData->SetValue(NewProp_bGenerateLightmapUVs, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/FbxStaticMeshImportData.h"));
				MetaData->SetValue(NewProp_bBuildAdjacencyBuffer, TEXT("Category"), TEXT("ImportSettings"));
				MetaData->SetValue(NewProp_bBuildAdjacencyBuffer, TEXT("ImportType"), TEXT("StaticMesh"));
				MetaData->SetValue(NewProp_bBuildAdjacencyBuffer, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/FbxStaticMeshImportData.h"));
				MetaData->SetValue(NewProp_bBuildAdjacencyBuffer, TEXT("ToolTip"), TEXT("Required for PNT tessellation but can be slow. Recommend disabling for larger meshes."));
				MetaData->SetValue(NewProp_bRemoveDegenerates, TEXT("Category"), TEXT("ImportSettings"));
				MetaData->SetValue(NewProp_bRemoveDegenerates, TEXT("ImportType"), TEXT("StaticMesh"));
				MetaData->SetValue(NewProp_bRemoveDegenerates, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/FbxStaticMeshImportData.h"));
				MetaData->SetValue(NewProp_bRemoveDegenerates, TEXT("ToolTip"), TEXT("Disabling this option will keep degenerate triangles found.  In general you should leave this option on."));
				MetaData->SetValue(NewProp_VertexOverrideColor, TEXT("Category"), TEXT("ImportSettings"));
				MetaData->SetValue(NewProp_VertexOverrideColor, TEXT("ImportType"), TEXT("StaticMesh"));
				MetaData->SetValue(NewProp_VertexOverrideColor, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/FbxStaticMeshImportData.h"));
				MetaData->SetValue(NewProp_VertexOverrideColor, TEXT("OBJRestrict"), TEXT("true"));
				MetaData->SetValue(NewProp_VertexOverrideColor, TEXT("ToolTip"), TEXT("Specify override color in the case that VertexColorImportOption is set to Override"));
				MetaData->SetValue(NewProp_VertexColorImportOption, TEXT("Category"), TEXT("ImportSettings"));
				MetaData->SetValue(NewProp_VertexColorImportOption, TEXT("ImportType"), TEXT("StaticMesh"));
				MetaData->SetValue(NewProp_VertexColorImportOption, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/FbxStaticMeshImportData.h"));
				MetaData->SetValue(NewProp_VertexColorImportOption, TEXT("OBJRestrict"), TEXT("true"));
				MetaData->SetValue(NewProp_VertexColorImportOption, TEXT("ToolTip"), TEXT("Specify how vertex colors should be imported"));
				MetaData->SetValue(NewProp_StaticMeshLODGroup, TEXT("Category"), TEXT("ImportSettings"));
				MetaData->SetValue(NewProp_StaticMeshLODGroup, TEXT("ImportType"), TEXT("StaticMesh"));
				MetaData->SetValue(NewProp_StaticMeshLODGroup, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/FbxStaticMeshImportData.h"));
				MetaData->SetValue(NewProp_StaticMeshLODGroup, TEXT("ToolTip"), TEXT("For static meshes, enabling this option will combine all meshes in the FBX into a single monolithic mesh in Unreal"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UFbxStaticMeshImportData(Z_Construct_UClass_UFbxStaticMeshImportData, TEXT("UFbxStaticMeshImportData"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UFbxStaticMeshImportData);
	UClass* Z_Construct_UClass_UFbxTextureImportData_NoRegister()
	{
		return UFbxTextureImportData::StaticClass();
	}
	UClass* Z_Construct_UClass_UFbxTextureImportData()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UFbxAssetImportData();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UFbxTextureImportData::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100084;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bInvertNormalMaps, UFbxTextureImportData, uint8);
				UProperty* NewProp_bInvertNormalMaps = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bInvertNormalMaps"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bInvertNormalMaps, UFbxTextureImportData), 0x0000040000004001, CPP_BOOL_PROPERTY_BITMASK(bInvertNormalMaps, UFbxTextureImportData), sizeof(uint8), false);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->ClassConfigName = FName(TEXT("EditorPerProjectUserSettings"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("AutoExpandCategories"), TEXT("Texture"));
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Factories/FbxTextureImportData.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/FbxTextureImportData.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Import data and options used when importing any mesh from FBX"));
				MetaData->SetValue(NewProp_bInvertNormalMaps, TEXT("Category"), TEXT("ImportSettings"));
				MetaData->SetValue(NewProp_bInvertNormalMaps, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/FbxTextureImportData.h"));
				MetaData->SetValue(NewProp_bInvertNormalMaps, TEXT("OBJRestrict"), TEXT("true"));
				MetaData->SetValue(NewProp_bInvertNormalMaps, TEXT("ToolTip"), TEXT("If either importing of textures (or materials) is enabled, this option will cause normal map values to be inverted"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UFbxTextureImportData(Z_Construct_UClass_UFbxTextureImportData, TEXT("UFbxTextureImportData"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UFbxTextureImportData);
	UEnum* Z_Construct_UEnum_UnrealEd_EFBXImportType()
	{
		UPackage* Outer=Z_Construct_UPackage_UnrealEd();
		extern uint32 Get_Z_Construct_UEnum_UnrealEd_EFBXImportType_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("EFBXImportType"), 0, Get_Z_Construct_UEnum_UnrealEd_EFBXImportType_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EFBXImportType"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("FBXIT_StaticMesh")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("FBXIT_SkeletalMesh")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("FBXIT_Animation")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("FBXIT_MAX")), 3));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Regular);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("FBXIT_Animation.DisplayName"), TEXT("Animation"));
			MetaData->SetValue(ReturnEnum, TEXT("FBXIT_Animation.ToolTip"), TEXT("Select Animation if you'd like to import only animation."));
			MetaData->SetValue(ReturnEnum, TEXT("FBXIT_SkeletalMesh.DisplayName"), TEXT("Skeletal Mesh"));
			MetaData->SetValue(ReturnEnum, TEXT("FBXIT_SkeletalMesh.ToolTip"), TEXT("Select Skeletal Mesh if you'd like to import skeletal mesh."));
			MetaData->SetValue(ReturnEnum, TEXT("FBXIT_StaticMesh.DisplayName"), TEXT("Static Mesh"));
			MetaData->SetValue(ReturnEnum, TEXT("FBXIT_StaticMesh.ToolTip"), TEXT("Select Static Mesh if you'd like to import static mesh."));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/FbxImportUI.h"));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("Import mesh type"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_UnrealEd_EFBXImportType_CRC() { return 867983504U; }
	UClass* Z_Construct_UClass_UFbxImportUI_NoRegister()
	{
		return UFbxImportUI::StaticClass();
	}
	UClass* Z_Construct_UClass_UFbxImportUI()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UFbxImportUI::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20880084;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_TextureImportData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("TextureImportData"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(TextureImportData, UFbxImportUI), 0x0002000000080009, Z_Construct_UClass_UFbxTextureImportData_NoRegister());
				UProperty* NewProp_AnimSequenceImportData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AnimSequenceImportData"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(AnimSequenceImportData, UFbxImportUI), 0x0002000000080009, Z_Construct_UClass_UFbxAnimSequenceImportData_NoRegister());
				UProperty* NewProp_SkeletalMeshImportData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SkeletalMeshImportData"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(SkeletalMeshImportData, UFbxImportUI), 0x0002000000080009, Z_Construct_UClass_UFbxSkeletalMeshImportData_NoRegister());
				UProperty* NewProp_StaticMeshImportData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("StaticMeshImportData"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(StaticMeshImportData, UFbxImportUI), 0x0002000000080009, Z_Construct_UClass_UFbxStaticMeshImportData_NoRegister());
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bImportTextures, UFbxImportUI, uint8);
				UProperty* NewProp_bImportTextures = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bImportTextures"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bImportTextures, UFbxImportUI), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(bImportTextures, UFbxImportUI), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bImportMaterials, UFbxImportUI, uint8);
				UProperty* NewProp_bImportMaterials = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bImportMaterials"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bImportMaterials, UFbxImportUI), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(bImportMaterials, UFbxImportUI), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bImportRigidMesh, UFbxImportUI, uint8);
				UProperty* NewProp_bImportRigidMesh = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bImportRigidMesh"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bImportRigidMesh, UFbxImportUI), 0x0000000000000000, CPP_BOOL_PROPERTY_BITMASK(bImportRigidMesh, UFbxImportUI), sizeof(uint8), false);
				UProperty* NewProp_AnimationName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AnimationName"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(AnimationName, UFbxImportUI), 0x0000040000000001);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bImportAnimations, UFbxImportUI, uint8);
				UProperty* NewProp_bImportAnimations = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bImportAnimations"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bImportAnimations, UFbxImportUI), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(bImportAnimations, UFbxImportUI), sizeof(uint8), false);
				UProperty* NewProp_PhysicsAsset = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("PhysicsAsset"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(PhysicsAsset, UFbxImportUI), 0x0000040000000001, Z_Construct_UClass_UPhysicsAsset_NoRegister());
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bCreatePhysicsAsset, UFbxImportUI, uint8);
				UProperty* NewProp_bCreatePhysicsAsset = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bCreatePhysicsAsset"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bCreatePhysicsAsset, UFbxImportUI), 0x0000040000004001, CPP_BOOL_PROPERTY_BITMASK(bCreatePhysicsAsset, UFbxImportUI), sizeof(uint8), false);
				UProperty* NewProp_Skeleton = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Skeleton"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(Skeleton, UFbxImportUI), 0x0000000000000001, Z_Construct_UClass_USkeleton_NoRegister());
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bCombineMeshes, UFbxImportUI, uint8);
				UProperty* NewProp_bCombineMeshes = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bCombineMeshes"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bCombineMeshes, UFbxImportUI), 0x0000040000004001, CPP_BOOL_PROPERTY_BITMASK(bCombineMeshes, UFbxImportUI), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bImportMesh, UFbxImportUI, bool);
				UProperty* NewProp_bImportMesh = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bImportMesh"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bImportMesh, UFbxImportUI), 0x0000000000000001, CPP_BOOL_PROPERTY_BITMASK(bImportMesh, UFbxImportUI), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bImportAsSkeletal, UFbxImportUI, bool);
				UProperty* NewProp_bImportAsSkeletal = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bImportAsSkeletal"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bImportAsSkeletal, UFbxImportUI), 0x0000000000000001, CPP_BOOL_PROPERTY_BITMASK(bImportAsSkeletal, UFbxImportUI), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bConvertScene, UFbxImportUI, uint8);
				UProperty* NewProp_bConvertScene = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bConvertScene"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bConvertScene, UFbxImportUI), 0x0000040000004001, CPP_BOOL_PROPERTY_BITMASK(bConvertScene, UFbxImportUI), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bOverrideFullName, UFbxImportUI, uint8);
				UProperty* NewProp_bOverrideFullName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bOverrideFullName"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bOverrideFullName, UFbxImportUI), 0x0000040000004001, CPP_BOOL_PROPERTY_BITMASK(bOverrideFullName, UFbxImportUI), sizeof(uint8), false);
				UProperty* NewProp_MeshTypeToImport = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MeshTypeToImport"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(MeshTypeToImport, UFbxImportUI), 0x0000000000000000, Z_Construct_UEnum_UnrealEd_EFBXImportType());
				UProperty* NewProp_OriginalImportType = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OriginalImportType"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(OriginalImportType, UFbxImportUI), 0x0000000000000000, Z_Construct_UEnum_UnrealEd_EFBXImportType());
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bIsObjImport, UFbxImportUI, bool);
				UProperty* NewProp_bIsObjImport = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bIsObjImport"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bIsObjImport, UFbxImportUI), 0x0000000000000000, CPP_BOOL_PROPERTY_BITMASK(bIsObjImport, UFbxImportUI), sizeof(bool), true);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->ClassConfigName = FName(TEXT("EditorPerProjectUserSettings"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("AutoExpandCategories"), TEXT("FTransform"));
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Factories/FbxImportUI.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/FbxImportUI.h"));
				MetaData->SetValue(NewProp_TextureImportData, TEXT("Category"), TEXT("Material"));
				MetaData->SetValue(NewProp_TextureImportData, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_TextureImportData, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/FbxImportUI.h"));
				MetaData->SetValue(NewProp_TextureImportData, TEXT("ToolTip"), TEXT("Import data used when importing textures"));
				MetaData->SetValue(NewProp_AnimSequenceImportData, TEXT("Category"), TEXT("Animation"));
				MetaData->SetValue(NewProp_AnimSequenceImportData, TEXT("editcondition"), TEXT("bImportAnimations"));
				MetaData->SetValue(NewProp_AnimSequenceImportData, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_AnimSequenceImportData, TEXT("ImportType"), TEXT("Animation"));
				MetaData->SetValue(NewProp_AnimSequenceImportData, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/FbxImportUI.h"));
				MetaData->SetValue(NewProp_AnimSequenceImportData, TEXT("ToolTip"), TEXT("Import data used when importing animations"));
				MetaData->SetValue(NewProp_SkeletalMeshImportData, TEXT("Category"), TEXT("Mesh"));
				MetaData->SetValue(NewProp_SkeletalMeshImportData, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_SkeletalMeshImportData, TEXT("ImportType"), TEXT("SkeletalMesh"));
				MetaData->SetValue(NewProp_SkeletalMeshImportData, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/FbxImportUI.h"));
				MetaData->SetValue(NewProp_SkeletalMeshImportData, TEXT("ToolTip"), TEXT("Import data used when importing skeletal meshes"));
				MetaData->SetValue(NewProp_StaticMeshImportData, TEXT("Category"), TEXT("Mesh"));
				MetaData->SetValue(NewProp_StaticMeshImportData, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_StaticMeshImportData, TEXT("ImportType"), TEXT("StaticMesh"));
				MetaData->SetValue(NewProp_StaticMeshImportData, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/FbxImportUI.h"));
				MetaData->SetValue(NewProp_StaticMeshImportData, TEXT("ToolTip"), TEXT("Import data used when importing static meshes"));
				MetaData->SetValue(NewProp_bImportTextures, TEXT("Category"), TEXT("Material"));
				MetaData->SetValue(NewProp_bImportTextures, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/FbxImportUI.h"));
				MetaData->SetValue(NewProp_bImportTextures, TEXT("OBJRestrict"), TEXT("true"));
				MetaData->SetValue(NewProp_bImportTextures, TEXT("ToolTip"), TEXT("The option works only when option \"Import UMaterial\" is OFF. If \"Import UMaterial\" is ON, textures are always imported."));
				MetaData->SetValue(NewProp_bImportMaterials, TEXT("Category"), TEXT("Material"));
				MetaData->SetValue(NewProp_bImportMaterials, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/FbxImportUI.h"));
				MetaData->SetValue(NewProp_bImportMaterials, TEXT("OBJRestrict"), TEXT("true"));
				MetaData->SetValue(NewProp_bImportMaterials, TEXT("ToolTip"), TEXT("Whether to automatically create Unreal materials for materials found in the FBX scene"));
				MetaData->SetValue(NewProp_bImportRigidMesh, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/FbxImportUI.h"));
				MetaData->SetValue(NewProp_bImportRigidMesh, TEXT("ToolTip"), TEXT("Enables importing of 'rigid skeletalmesh' (unskinned, hierarchy-based animation) from this FBX file, no longer shown, used behind the scenes"));
				MetaData->SetValue(NewProp_AnimationName, TEXT("Category"), TEXT("Animation"));
				MetaData->SetValue(NewProp_AnimationName, TEXT("editcondition"), TEXT("bImportAnimations"));
				MetaData->SetValue(NewProp_AnimationName, TEXT("ImportType"), TEXT("SkeletalMesh"));
				MetaData->SetValue(NewProp_AnimationName, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/FbxImportUI.h"));
				MetaData->SetValue(NewProp_AnimationName, TEXT("ToolTip"), TEXT("Override for the name of the animation to import *"));
				MetaData->SetValue(NewProp_bImportAnimations, TEXT("Category"), TEXT("Animation"));
				MetaData->SetValue(NewProp_bImportAnimations, TEXT("ImportType"), TEXT("SkeletalMesh|Animation"));
				MetaData->SetValue(NewProp_bImportAnimations, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/FbxImportUI.h"));
				MetaData->SetValue(NewProp_bImportAnimations, TEXT("ToolTip"), TEXT("True to import animations from the FBX File"));
				MetaData->SetValue(NewProp_PhysicsAsset, TEXT("Category"), TEXT("Mesh"));
				MetaData->SetValue(NewProp_PhysicsAsset, TEXT("editcondition"), TEXT("!bCreatePhysicsAsset"));
				MetaData->SetValue(NewProp_PhysicsAsset, TEXT("ImportType"), TEXT("SkeletalMesh"));
				MetaData->SetValue(NewProp_PhysicsAsset, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/FbxImportUI.h"));
				MetaData->SetValue(NewProp_PhysicsAsset, TEXT("ToolTip"), TEXT("If this is set, use this PhysicsAsset. It is possible bCreatePhysicsAsset == false, and PhysicsAsset == NULL. It is possible they do not like to create anything."));
				MetaData->SetValue(NewProp_bCreatePhysicsAsset, TEXT("Category"), TEXT("Mesh"));
				MetaData->SetValue(NewProp_bCreatePhysicsAsset, TEXT("ImportType"), TEXT("SkeletalMesh"));
				MetaData->SetValue(NewProp_bCreatePhysicsAsset, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/FbxImportUI.h"));
				MetaData->SetValue(NewProp_bCreatePhysicsAsset, TEXT("ToolTip"), TEXT("If checked, create new PhysicsAsset if it doesn't have it"));
				MetaData->SetValue(NewProp_Skeleton, TEXT("Category"), TEXT("Mesh"));
				MetaData->SetValue(NewProp_Skeleton, TEXT("ImportType"), TEXT("SkeletalMesh|Animation"));
				MetaData->SetValue(NewProp_Skeleton, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/FbxImportUI.h"));
				MetaData->SetValue(NewProp_Skeleton, TEXT("ToolTip"), TEXT("Skeleton to use for imported asset. When importing a mesh, leaving this as \"None\" will create a new skeleton. When importing and animation this MUST be specified to import the asset."));
				MetaData->SetValue(NewProp_bCombineMeshes, TEXT("Category"), TEXT("Mesh"));
				MetaData->SetValue(NewProp_bCombineMeshes, TEXT("ImportType"), TEXT("StaticMesh"));
				MetaData->SetValue(NewProp_bCombineMeshes, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/FbxImportUI.h"));
				MetaData->SetValue(NewProp_bCombineMeshes, TEXT("ToolTip"), TEXT("If enabled, combines all meshes into a single mesh"));
				MetaData->SetValue(NewProp_bImportMesh, TEXT("Category"), TEXT("Mesh"));
				MetaData->SetValue(NewProp_bImportMesh, TEXT("ImportType"), TEXT("SkeletalMesh"));
				MetaData->SetValue(NewProp_bImportMesh, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/FbxImportUI.h"));
				MetaData->SetValue(NewProp_bImportMesh, TEXT("ToolTip"), TEXT("Whether to import the mesh. Allows animation only import when importing a skeletal mesh."));
				MetaData->SetValue(NewProp_bImportAsSkeletal, TEXT("Category"), TEXT("Mesh"));
				MetaData->SetValue(NewProp_bImportAsSkeletal, TEXT("ImportType"), TEXT("StaticMesh|SkeletalMesh"));
				MetaData->SetValue(NewProp_bImportAsSkeletal, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/FbxImportUI.h"));
				MetaData->SetValue(NewProp_bImportAsSkeletal, TEXT("ToolTip"), TEXT("Whether to import the incoming FBX as a skeletal object"));
				MetaData->SetValue(NewProp_bConvertScene, TEXT("Category"), TEXT("Miscellaneous"));
				MetaData->SetValue(NewProp_bConvertScene, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/FbxImportUI.h"));
				MetaData->SetValue(NewProp_bConvertScene, TEXT("OBJRestrict"), TEXT("true"));
				MetaData->SetValue(NewProp_bConvertScene, TEXT("ToolTip"), TEXT("Convert the scene from FBX coordinate system to UE4 coordinate system"));
				MetaData->SetValue(NewProp_bOverrideFullName, TEXT("Category"), TEXT("Miscellaneous"));
				MetaData->SetValue(NewProp_bOverrideFullName, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/FbxImportUI.h"));
				MetaData->SetValue(NewProp_bOverrideFullName, TEXT("OBJRestrict"), TEXT("true"));
				MetaData->SetValue(NewProp_bOverrideFullName, TEXT("ToolTip"), TEXT("Use the string in \"Name\" field as full name of mesh. The option only works when the scene contains one mesh."));
				MetaData->SetValue(NewProp_MeshTypeToImport, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/FbxImportUI.h"));
				MetaData->SetValue(NewProp_MeshTypeToImport, TEXT("ToolTip"), TEXT("Type of asset to import from the FBX file"));
				MetaData->SetValue(NewProp_OriginalImportType, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/FbxImportUI.h"));
				MetaData->SetValue(NewProp_OriginalImportType, TEXT("ToolTip"), TEXT("The original detected type of this import"));
				MetaData->SetValue(NewProp_bIsObjImport, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/FbxImportUI.h"));
				MetaData->SetValue(NewProp_bIsObjImport, TEXT("ToolTip"), TEXT("Whether or not the imported file is in OBJ format"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UFbxImportUI(Z_Construct_UClass_UFbxImportUI, TEXT("UFbxImportUI"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UFbxImportUI);
	UClass* Z_Construct_UClass_UFileServerCommandlet_NoRegister()
	{
		return UFileServerCommandlet::StaticClass();
	}
	UClass* Z_Construct_UClass_UFileServerCommandlet()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UCommandlet();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UFileServerCommandlet::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000088;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Commandlets/FileServerCommandlet.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Commandlets/FileServerCommandlet.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Implements a file server commandlet."));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UFileServerCommandlet(Z_Construct_UClass_UFileServerCommandlet, TEXT("UFileServerCommandlet"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UFileServerCommandlet);
	UClass* Z_Construct_UClass_UFixupRedirectsCommandlet_NoRegister()
	{
		return UFixupRedirectsCommandlet::StaticClass();
	}
	UClass* Z_Construct_UClass_UFixupRedirectsCommandlet()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UCommandlet();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UFixupRedirectsCommandlet::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000088;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Commandlets/FixupRedirectsCommandlet.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Commandlets/FixupRedirectsCommandlet.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UFixupRedirectsCommandlet(Z_Construct_UClass_UFixupRedirectsCommandlet, TEXT("UFixupRedirectsCommandlet"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UFixupRedirectsCommandlet);
	UClass* Z_Construct_UClass_UGatherTextCommandletBase_NoRegister()
	{
		return UGatherTextCommandletBase::StaticClass();
	}
	UClass* Z_Construct_UClass_UGatherTextCommandletBase()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UCommandlet();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UGatherTextCommandletBase::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000088;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Commandlets/GatherTextCommandletBase.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Commandlets/GatherTextCommandletBase.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGatherTextCommandletBase(Z_Construct_UClass_UGatherTextCommandletBase, TEXT("UGatherTextCommandletBase"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGatherTextCommandletBase);
	UClass* Z_Construct_UClass_UGatherTextCommandlet_NoRegister()
	{
		return UGatherTextCommandlet::StaticClass();
	}
	UClass* Z_Construct_UClass_UGatherTextCommandlet()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UGatherTextCommandletBase();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UGatherTextCommandlet::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000088;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Commandlets/GatherTextCommandlet.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Commandlets/GatherTextCommandlet.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("UGatherTextCommandlet: One commandlet to rule them all. This commandlet loads a config file and then calls other localization commandlets. Allows localization system to be easily extendable and flexible."));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGatherTextCommandlet(Z_Construct_UClass_UGatherTextCommandlet, TEXT("UGatherTextCommandlet"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGatherTextCommandlet);
	UClass* Z_Construct_UClass_UGatherTextFromAssetsCommandlet_NoRegister()
	{
		return UGatherTextFromAssetsCommandlet::StaticClass();
	}
	UClass* Z_Construct_UClass_UGatherTextFromAssetsCommandlet()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UGatherTextCommandletBase();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UGatherTextFromAssetsCommandlet::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000088;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Commandlets/GatherTextFromAssetsCommandlet.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Commandlets/GatherTextFromAssetsCommandlet.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("UGatherTextFromAssetsCommandlet: Localization commandlet that collects all text to be localized from the game assets."));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGatherTextFromAssetsCommandlet(Z_Construct_UClass_UGatherTextFromAssetsCommandlet, TEXT("UGatherTextFromAssetsCommandlet"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGatherTextFromAssetsCommandlet);
	UClass* Z_Construct_UClass_UGatherTextFromMetaDataCommandlet_NoRegister()
	{
		return UGatherTextFromMetaDataCommandlet::StaticClass();
	}
	UClass* Z_Construct_UClass_UGatherTextFromMetaDataCommandlet()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UGatherTextCommandletBase();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UGatherTextFromMetaDataCommandlet::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000088;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Commandlets/GatherTextFromMetadataCommandlet.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Commandlets/GatherTextFromMetadataCommandlet.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("UGatherTextFromMetaDataCommandlet: Localization commandlet that collects all text to be localized from generated metadata."));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGatherTextFromMetaDataCommandlet(Z_Construct_UClass_UGatherTextFromMetaDataCommandlet, TEXT("UGatherTextFromMetaDataCommandlet"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGatherTextFromMetaDataCommandlet);
	UClass* Z_Construct_UClass_UGatherTextFromSourceCommandlet_NoRegister()
	{
		return UGatherTextFromSourceCommandlet::StaticClass();
	}
	UClass* Z_Construct_UClass_UGatherTextFromSourceCommandlet()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UGatherTextCommandletBase();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UGatherTextFromSourceCommandlet::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000088;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Commandlets/GatherTextFromSourceCommandlet.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Commandlets/GatherTextFromSourceCommandlet.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("UGatherTextFromSourceCommandlet: Localization commandlet that collects all text to be localized from the source code."));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGatherTextFromSourceCommandlet(Z_Construct_UClass_UGatherTextFromSourceCommandlet, TEXT("UGatherTextFromSourceCommandlet"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGatherTextFromSourceCommandlet);
	UClass* Z_Construct_UClass_UGenerateGatherArchiveCommandlet_NoRegister()
	{
		return UGenerateGatherArchiveCommandlet::StaticClass();
	}
	UClass* Z_Construct_UClass_UGenerateGatherArchiveCommandlet()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UGatherTextCommandletBase();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UGenerateGatherArchiveCommandlet::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000088;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Commandlets/GenerateGatherArchiveCommandlet.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Commandlets/GenerateGatherArchiveCommandlet.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("UGenerateGatherArchiveCommandlet: Generates a localisation archive; generally used as a gather step."));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGenerateGatherArchiveCommandlet(Z_Construct_UClass_UGenerateGatherArchiveCommandlet, TEXT("UGenerateGatherArchiveCommandlet"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGenerateGatherArchiveCommandlet);
	UClass* Z_Construct_UClass_UGenerateGatherManifestCommandlet_NoRegister()
	{
		return UGenerateGatherManifestCommandlet::StaticClass();
	}
	UClass* Z_Construct_UClass_UGenerateGatherManifestCommandlet()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UGatherTextCommandletBase();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UGenerateGatherManifestCommandlet::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000088;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Commandlets/GenerateGatherManifestCommandlet.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Commandlets/GenerateGatherManifestCommandlet.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("UGenerateGatherManifestCommandlet: Generates a localisation manifest; generally used as a gather step."));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGenerateGatherManifestCommandlet(Z_Construct_UClass_UGenerateGatherManifestCommandlet, TEXT("UGenerateGatherManifestCommandlet"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGenerateGatherManifestCommandlet);
	UClass* Z_Construct_UClass_UGenerateTextLocalizationReportCommandlet_NoRegister()
	{
		return UGenerateTextLocalizationReportCommandlet::StaticClass();
	}
	UClass* Z_Construct_UClass_UGenerateTextLocalizationReportCommandlet()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UGatherTextCommandletBase();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UGenerateTextLocalizationReportCommandlet::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000088;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Commandlets/GenerateTextLocalizationReportCommandlet.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Commandlets/GenerateTextLocalizationReportCommandlet.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGenerateTextLocalizationReportCommandlet(Z_Construct_UClass_UGenerateTextLocalizationReportCommandlet, TEXT("UGenerateTextLocalizationReportCommandlet"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGenerateTextLocalizationReportCommandlet);
	UClass* Z_Construct_UClass_UGenerateTextLocalizationResourceCommandlet_NoRegister()
	{
		return UGenerateTextLocalizationResourceCommandlet::StaticClass();
	}
	UClass* Z_Construct_UClass_UGenerateTextLocalizationResourceCommandlet()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UGatherTextCommandletBase();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UGenerateTextLocalizationResourceCommandlet::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000088;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Commandlets/GenerateTextLocalizationResourceCommandlet.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Commandlets/GenerateTextLocalizationResourceCommandlet.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("UGenerateTextLocalizationResourceCommandlet: Localization commandlet that generates a table of FText keys to localized string values."));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGenerateTextLocalizationResourceCommandlet(Z_Construct_UClass_UGenerateTextLocalizationResourceCommandlet, TEXT("UGenerateTextLocalizationResourceCommandlet"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGenerateTextLocalizationResourceCommandlet);
	UClass* Z_Construct_UClass_UInternationalizationConditioningCommandlet_NoRegister()
	{
		return UInternationalizationConditioningCommandlet::StaticClass();
	}
	UClass* Z_Construct_UClass_UInternationalizationConditioningCommandlet()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UGatherTextCommandletBase();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UInternationalizationConditioningCommandlet::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000088;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Commandlets/InternationalizationConditioningCommandlet.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Commandlets/InternationalizationConditioningCommandlet.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("UInternationalizationConditioningCommandlet: Commandlet that contains various misc functionality to prepare, modify, and condition Internationalization manifest\nand archive data."));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UInternationalizationConditioningCommandlet(Z_Construct_UClass_UInternationalizationConditioningCommandlet, TEXT("UInternationalizationConditioningCommandlet"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UInternationalizationConditioningCommandlet);
	UClass* Z_Construct_UClass_UInternationalizationExportCommandlet_NoRegister()
	{
		return UInternationalizationExportCommandlet::StaticClass();
	}
	UClass* Z_Construct_UClass_UInternationalizationExportCommandlet()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UGatherTextCommandletBase();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UInternationalizationExportCommandlet::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000088;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Commandlets/InternationalizationExportCommandlet.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Commandlets/InternationalizationExportCommandlet.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("UInternationalizationExportCommandlet: Commandlet used to export internationalization data to various standard formats."));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UInternationalizationExportCommandlet(Z_Construct_UClass_UInternationalizationExportCommandlet, TEXT("UInternationalizationExportCommandlet"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UInternationalizationExportCommandlet);
	UClass* Z_Construct_UClass_URepairLocalizationDataCommandlet_NoRegister()
	{
		return URepairLocalizationDataCommandlet::StaticClass();
	}
	UClass* Z_Construct_UClass_URepairLocalizationDataCommandlet()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UGatherTextCommandletBase();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = URepairLocalizationDataCommandlet::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000088;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Commandlets/RepairLocalizationDataCommandlet.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Commandlets/RepairLocalizationDataCommandlet.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_URepairLocalizationDataCommandlet(Z_Construct_UClass_URepairLocalizationDataCommandlet, TEXT("URepairLocalizationDataCommandlet"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(URepairLocalizationDataCommandlet);
	UClass* Z_Construct_UClass_UGenerateBlueprintAPICommandlet_NoRegister()
	{
		return UGenerateBlueprintAPICommandlet::StaticClass();
	}
	UClass* Z_Construct_UClass_UGenerateBlueprintAPICommandlet()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UCommandlet();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UGenerateBlueprintAPICommandlet::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000088;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Commandlets/GenerateBlueprintAPICommandlet.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Commandlets/GenerateBlueprintAPICommandlet.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGenerateBlueprintAPICommandlet(Z_Construct_UClass_UGenerateBlueprintAPICommandlet, TEXT("UGenerateBlueprintAPICommandlet"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGenerateBlueprintAPICommandlet);
	UClass* Z_Construct_UClass_UGenerateDistillFileSetsCommandlet_NoRegister()
	{
		return UGenerateDistillFileSetsCommandlet::StaticClass();
	}
	UClass* Z_Construct_UClass_UGenerateDistillFileSetsCommandlet()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UCommandlet();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UGenerateDistillFileSetsCommandlet::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000088;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Commandlets/GenerateDistillFileSetsCommandlet.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Commandlets/GenerateDistillFileSetsCommandlet.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGenerateDistillFileSetsCommandlet(Z_Construct_UClass_UGenerateDistillFileSetsCommandlet, TEXT("UGenerateDistillFileSetsCommandlet"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGenerateDistillFileSetsCommandlet);
	UClass* Z_Construct_UClass_AGroupActor_NoRegister()
	{
		return AGroupActor::StaticClass();
	}
	UClass* Z_Construct_UClass_AGroupActor()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AActor();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = AGroupActor::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x24880280;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
#if WITH_EDITORONLY_DATA
				UProperty* NewProp_SubGroups = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SubGroups"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(SubGroups, AGroupActor), 0x0000000800000000);
				UProperty* NewProp_SubGroups_Inner = new(EC_InternalUseOnlyConstructor, NewProp_SubGroups, TEXT("SubGroups"), RF_Public|RF_Transient|RF_Native) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000800000000, Z_Construct_UClass_AGroupActor_NoRegister());
				UProperty* NewProp_GroupActors = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("GroupActors"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(GroupActors, AGroupActor), 0x0000000800000000);
				UProperty* NewProp_GroupActors_Inner = new(EC_InternalUseOnlyConstructor, NewProp_GroupActors, TEXT("GroupActors"), RF_Public|RF_Transient|RF_Native) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000800000000, Z_Construct_UClass_AActor_NoRegister());
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bLocked, AGroupActor, uint8);
				UProperty* NewProp_bLocked = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bLocked"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bLocked, AGroupActor), 0x0000000800000000, CPP_BOOL_PROPERTY_BITMASK(bLocked, AGroupActor), sizeof(uint8), false);
#endif // WITH_EDITORONLY_DATA
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Editor/GroupActor.h"));
				MetaData->SetValue(OuterClass, TEXT("IsBlueprintBase"), TEXT("false"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/GroupActor.h"));
				MetaData->SetValue(NewProp_SubGroups, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/GroupActor.h"));
				MetaData->SetValue(NewProp_GroupActors, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/GroupActor.h"));
				MetaData->SetValue(NewProp_bLocked, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/GroupActor.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AGroupActor(Z_Construct_UClass_AGroupActor, TEXT("AGroupActor"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(AGroupActor);
	UClass* Z_Construct_UClass_AHierarchicalLODVolume_NoRegister()
	{
		return AHierarchicalLODVolume::StaticClass();
	}
	UClass* Z_Construct_UClass_AHierarchicalLODVolume()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AVolume();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = AHierarchicalLODVolume::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Brush Physics Object Display Rendering Physics Input Blueprint"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("HierarchicalLODVolume.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/HierarchicalLODVolume.h"));
				MetaData->SetValue(OuterClass, TEXT("ShowCategories"), TEXT("Input|MouseInput Input|TouchInput"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("An invisible volume used to manually define/create a HLOD cluster."));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AHierarchicalLODVolume(Z_Construct_UClass_AHierarchicalLODVolume, TEXT("AHierarchicalLODVolume"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(AHierarchicalLODVolume);
	UClass* Z_Construct_UClass_ULevelEditorMiscSettings_NoRegister()
	{
		return ULevelEditorMiscSettings::StaticClass();
	}
	UClass* Z_Construct_UClass_ULevelEditorMiscSettings()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UDeveloperSettings();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = ULevelEditorMiscSettings::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100084;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_DefaultLevelStreamingClass = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("DefaultLevelStreamingClass"), RF_Public|RF_Transient|RF_Native) UClassProperty(CPP_PROPERTY_BASE(DefaultLevelStreamingClass, ULevelEditorMiscSettings), 0x0004000000004001, Z_Construct_UClass_ULevelStreaming_NoRegister());
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bEnableEditorSounds, ULevelEditorMiscSettings, uint8);
				UProperty* NewProp_bEnableEditorSounds = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bEnableEditorSounds"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bEnableEditorSounds, ULevelEditorMiscSettings), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(bEnableEditorSounds, ULevelEditorMiscSettings), sizeof(uint8), false);
				UProperty* NewProp_EditorVolumeLevel = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("EditorVolumeLevel"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(EditorVolumeLevel, ULevelEditorMiscSettings), 0x0000000000004000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bEnableRealTimeAudio, ULevelEditorMiscSettings, uint8);
				UProperty* NewProp_bEnableRealTimeAudio = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bEnableRealTimeAudio"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bEnableRealTimeAudio, ULevelEditorMiscSettings), 0x0000000000004000, CPP_BOOL_PROPERTY_BITMASK(bEnableRealTimeAudio, ULevelEditorMiscSettings), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bAllowBackgroundAudio, ULevelEditorMiscSettings, uint8);
				UProperty* NewProp_bAllowBackgroundAudio = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bAllowBackgroundAudio"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bAllowBackgroundAudio, ULevelEditorMiscSettings), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(bAllowBackgroundAudio, ULevelEditorMiscSettings), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bReplaceRespectsScale, ULevelEditorMiscSettings, uint8);
				UProperty* NewProp_bReplaceRespectsScale = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bReplaceRespectsScale"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bReplaceRespectsScale, ULevelEditorMiscSettings), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(bReplaceRespectsScale, ULevelEditorMiscSettings), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bNavigationAutoUpdate, ULevelEditorMiscSettings, uint8);
				UProperty* NewProp_bNavigationAutoUpdate = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bNavigationAutoUpdate"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bNavigationAutoUpdate, ULevelEditorMiscSettings), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(bNavigationAutoUpdate, ULevelEditorMiscSettings), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bBSPAutoUpdate, ULevelEditorMiscSettings, uint8);
				UProperty* NewProp_bBSPAutoUpdate = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bBSPAutoUpdate"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bBSPAutoUpdate, ULevelEditorMiscSettings), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(bBSPAutoUpdate, ULevelEditorMiscSettings), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bAutoApplyLightingEnable, ULevelEditorMiscSettings, uint8);
				UProperty* NewProp_bAutoApplyLightingEnable = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bAutoApplyLightingEnable"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bAutoApplyLightingEnable, ULevelEditorMiscSettings), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(bAutoApplyLightingEnable, ULevelEditorMiscSettings), sizeof(uint8), false);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->ClassConfigName = FName(TEXT("EditorPerProjectUserSettings"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("DisplayName"), TEXT("Miscellaneous"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Settings/LevelEditorMiscSettings.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorMiscSettings.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Configure miscellaneous settings for the Level Editor."));
				MetaData->SetValue(NewProp_DefaultLevelStreamingClass, TEXT("Category"), TEXT("Levels"));
				MetaData->SetValue(NewProp_DefaultLevelStreamingClass, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorMiscSettings.h"));
				MetaData->SetValue(NewProp_DefaultLevelStreamingClass, TEXT("ToolTip"), TEXT("The default level streaming class to use when adding new streaming levels"));
				MetaData->SetValue(NewProp_bEnableEditorSounds, TEXT("Category"), TEXT("Sound"));
				MetaData->SetValue(NewProp_bEnableEditorSounds, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorMiscSettings.h"));
				MetaData->SetValue(NewProp_bEnableEditorSounds, TEXT("ToolTip"), TEXT("Enables audio feedback for certain operations in Unreal Editor, such as entering and exiting Play mode"));
				MetaData->SetValue(NewProp_EditorVolumeLevel, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorMiscSettings.h"));
				MetaData->SetValue(NewProp_EditorVolumeLevel, TEXT("ToolTip"), TEXT("Global volume setting for the editor"));
				MetaData->SetValue(NewProp_bEnableRealTimeAudio, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorMiscSettings.h"));
				MetaData->SetValue(NewProp_bEnableRealTimeAudio, TEXT("ToolTip"), TEXT("If true audio will be enabled in the editor. Does not affect PIE *"));
				MetaData->SetValue(NewProp_bAllowBackgroundAudio, TEXT("Category"), TEXT("Sound"));
				MetaData->SetValue(NewProp_bAllowBackgroundAudio, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorMiscSettings.h"));
				MetaData->SetValue(NewProp_bAllowBackgroundAudio, TEXT("ToolTip"), TEXT("If checked audio playing in the editor will continue to play even if the editor is in the background"));
				MetaData->SetValue(NewProp_bReplaceRespectsScale, TEXT("Category"), TEXT("Editing"));
				MetaData->SetValue(NewProp_bReplaceRespectsScale, TEXT("DisplayName"), TEXT("Preserve Actor Scale on Replace"));
				MetaData->SetValue(NewProp_bReplaceRespectsScale, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorMiscSettings.h"));
				MetaData->SetValue(NewProp_bReplaceRespectsScale, TEXT("ToolTip"), TEXT("If enabled, replacing actors will respect the scale of the original actor.  Otherwise, the replaced actors will have a scale of 1.0"));
				MetaData->SetValue(NewProp_bNavigationAutoUpdate, TEXT("Category"), TEXT("Editing"));
				MetaData->SetValue(NewProp_bNavigationAutoUpdate, TEXT("DisplayName"), TEXT("Update Navigation Automatically"));
				MetaData->SetValue(NewProp_bNavigationAutoUpdate, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorMiscSettings.h"));
				MetaData->SetValue(NewProp_bNavigationAutoUpdate, TEXT("ToolTip"), TEXT("If true, Navigation will auto-update"));
				MetaData->SetValue(NewProp_bBSPAutoUpdate, TEXT("Category"), TEXT("Editing"));
				MetaData->SetValue(NewProp_bBSPAutoUpdate, TEXT("DisplayName"), TEXT("Update BSP Automatically"));
				MetaData->SetValue(NewProp_bBSPAutoUpdate, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorMiscSettings.h"));
				MetaData->SetValue(NewProp_bBSPAutoUpdate, TEXT("ToolTip"), TEXT("If true, BSP will auto-update"));
				MetaData->SetValue(NewProp_bAutoApplyLightingEnable, TEXT("Category"), TEXT("Editing"));
				MetaData->SetValue(NewProp_bAutoApplyLightingEnable, TEXT("DisplayName"), TEXT("Apply Lighting Automatically"));
				MetaData->SetValue(NewProp_bAutoApplyLightingEnable, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/LevelEditorMiscSettings.h"));
				MetaData->SetValue(NewProp_bAutoApplyLightingEnable, TEXT("ToolTip"), TEXT("If checked lighting will be automatically applied to the level after a static lighting build is complete.\nOtherwise you will be prompted to apply it"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_ULevelEditorMiscSettings(Z_Construct_UClass_ULevelEditorMiscSettings, TEXT("ULevelEditorMiscSettings"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(ULevelEditorMiscSettings);
	UClass* Z_Construct_UClass_ULevelExporterFBX_NoRegister()
	{
		return ULevelExporterFBX::StaticClass();
	}
	UClass* Z_Construct_UClass_ULevelExporterFBX()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UExporter();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = ULevelExporterFBX::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000088;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Exporters/LevelExporterFBX.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Exporters/LevelExporterFBX.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_ULevelExporterFBX(Z_Construct_UClass_ULevelExporterFBX, TEXT("ULevelExporterFBX"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(ULevelExporterFBX);
	UClass* Z_Construct_UClass_ULevelExporterLOD_NoRegister()
	{
		return ULevelExporterLOD::StaticClass();
	}
	UClass* Z_Construct_UClass_ULevelExporterLOD()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UExporter();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = ULevelExporterLOD::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000088;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Exporters/LevelExporterLOD.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Exporters/LevelExporterLOD.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_ULevelExporterLOD(Z_Construct_UClass_ULevelExporterLOD, TEXT("ULevelExporterLOD"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(ULevelExporterLOD);
	UClass* Z_Construct_UClass_ULevelExporterOBJ_NoRegister()
	{
		return ULevelExporterOBJ::StaticClass();
	}
	UClass* Z_Construct_UClass_ULevelExporterOBJ()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UExporter();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = ULevelExporterOBJ::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000088;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Exporters/LevelExporterOBJ.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Exporters/LevelExporterOBJ.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_ULevelExporterOBJ(Z_Construct_UClass_ULevelExporterOBJ, TEXT("ULevelExporterOBJ"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(ULevelExporterOBJ);
	UClass* Z_Construct_UClass_ULevelExporterSTL_NoRegister()
	{
		return ULevelExporterSTL::StaticClass();
	}
	UClass* Z_Construct_UClass_ULevelExporterSTL()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UExporter();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = ULevelExporterSTL::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000088;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Exporters/LevelExporterSTL.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Exporters/LevelExporterSTL.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_ULevelExporterSTL(Z_Construct_UClass_ULevelExporterSTL, TEXT("ULevelExporterSTL"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(ULevelExporterSTL);
	UClass* Z_Construct_UClass_ULevelExporterT3D_NoRegister()
	{
		return ULevelExporterT3D::StaticClass();
	}
	UClass* Z_Construct_UClass_ULevelExporterT3D()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UExporter();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = ULevelExporterT3D::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000088;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Exporters/LevelExporterT3D.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Exporters/LevelExporterT3D.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_ULevelExporterT3D(Z_Construct_UClass_ULevelExporterT3D, TEXT("ULevelExporterT3D"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(ULevelExporterT3D);
	UClass* Z_Construct_UClass_ULightmassOptionsObject_NoRegister()
	{
		return ULightmassOptionsObject::StaticClass();
	}
	UClass* Z_Construct_UClass_ULightmassOptionsObject()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = ULightmassOptionsObject::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20001080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_SwarmSettings = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SwarmSettings"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(SwarmSettings, ULightmassOptionsObject), 0x0000000000000001, Z_Construct_UScriptStruct_FSwarmDebugOptions());
				UProperty* NewProp_DebugSettings = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("DebugSettings"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(DebugSettings, ULightmassOptionsObject), 0x0000000000000001, Z_Construct_UScriptStruct_FLightmassDebugOptions());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Preferences/LightmassOptionsObject.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/LightmassOptionsObject.h"));
				MetaData->SetValue(NewProp_SwarmSettings, TEXT("Category"), TEXT("Swarm"));
				MetaData->SetValue(NewProp_SwarmSettings, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/LightmassOptionsObject.h"));
				MetaData->SetValue(NewProp_DebugSettings, TEXT("Category"), TEXT("Debug"));
				MetaData->SetValue(NewProp_DebugSettings, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/LightmassOptionsObject.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_ULightmassOptionsObject(Z_Construct_UClass_ULightmassOptionsObject, TEXT("ULightmassOptionsObject"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(ULightmassOptionsObject);
	UClass* Z_Construct_UClass_UListMaterialsUsedWithMeshEmittersCommandlet_NoRegister()
	{
		return UListMaterialsUsedWithMeshEmittersCommandlet::StaticClass();
	}
	UClass* Z_Construct_UClass_UListMaterialsUsedWithMeshEmittersCommandlet()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UCommandlet();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UListMaterialsUsedWithMeshEmittersCommandlet::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000088;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Commandlets/ListMaterialsUsedWithMeshEmittersCommandlet.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Commandlets/ListMaterialsUsedWithMeshEmittersCommandlet.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UListMaterialsUsedWithMeshEmittersCommandlet(Z_Construct_UClass_UListMaterialsUsedWithMeshEmittersCommandlet, TEXT("UListMaterialsUsedWithMeshEmittersCommandlet"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UListMaterialsUsedWithMeshEmittersCommandlet);
	UClass* Z_Construct_UClass_UListStaticMeshesImportedFromSpeedTreesCommandlet_NoRegister()
	{
		return UListStaticMeshesImportedFromSpeedTreesCommandlet::StaticClass();
	}
	UClass* Z_Construct_UClass_UListStaticMeshesImportedFromSpeedTreesCommandlet()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UCommandlet();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UListStaticMeshesImportedFromSpeedTreesCommandlet::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000088;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Commandlets/ListStaticMeshesImportedFromSpeedTreesCommandlet.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Commandlets/ListStaticMeshesImportedFromSpeedTreesCommandlet.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UListStaticMeshesImportedFromSpeedTreesCommandlet(Z_Construct_UClass_UListStaticMeshesImportedFromSpeedTreesCommandlet, TEXT("UListStaticMeshesImportedFromSpeedTreesCommandlet"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UListStaticMeshesImportedFromSpeedTreesCommandlet);
	UClass* Z_Construct_UClass_ULoadPackageCommandlet_NoRegister()
	{
		return ULoadPackageCommandlet::StaticClass();
	}
	UClass* Z_Construct_UClass_ULoadPackageCommandlet()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UCommandlet();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = ULoadPackageCommandlet::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000088;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Commandlets/LoadPackageCommandlet.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Commandlets/LoadPackageCommandlet.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_ULoadPackageCommandlet(Z_Construct_UClass_ULoadPackageCommandlet, TEXT("ULoadPackageCommandlet"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(ULoadPackageCommandlet);
	UScriptStruct* Z_Construct_UScriptStruct_FEditorStaticComponentMaskParameterValue()
	{
		UPackage* Outer=Z_Construct_UPackage_UnrealEd();
		extern uint32 Get_Z_Construct_UScriptStruct_FEditorStaticComponentMaskParameterValue_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("EditorStaticComponentMaskParameterValue"), sizeof(FEditorStaticComponentMaskParameterValue), Get_Z_Construct_UScriptStruct_FEditorStaticComponentMaskParameterValue_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EditorStaticComponentMaskParameterValue"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), Z_Construct_UScriptStruct_FEditorParameterValue(), new UScriptStruct::TCppStructOps<FEditorStaticComponentMaskParameterValue>, EStructFlags(0x00000001));
			UProperty* NewProp_ParameterValue = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ParameterValue"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(ParameterValue, FEditorStaticComponentMaskParameterValue), 0x0000000000000001, Z_Construct_UScriptStruct_FComponentMaskParameter());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/MaterialEditor/MaterialEditorInstanceConstant.h"));
			MetaData->SetValue(NewProp_ParameterValue, TEXT("Category"), TEXT("EditorStaticComponentMaskParameterValue"));
			MetaData->SetValue(NewProp_ParameterValue, TEXT("ModuleRelativePath"), TEXT("Classes/MaterialEditor/MaterialEditorInstanceConstant.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FEditorStaticComponentMaskParameterValue_CRC() { return 2886859583U; }
	UScriptStruct* Z_Construct_UScriptStruct_FComponentMaskParameter()
	{
		UPackage* Outer=Z_Construct_UPackage_UnrealEd();
		extern uint32 Get_Z_Construct_UScriptStruct_FComponentMaskParameter_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("ComponentMaskParameter"), sizeof(FComponentMaskParameter), Get_Z_Construct_UScriptStruct_FComponentMaskParameter_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ComponentMaskParameter"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FComponentMaskParameter>, EStructFlags(0x00000001));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(A, FComponentMaskParameter, uint8);
			UProperty* NewProp_A = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("A"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(A, FComponentMaskParameter), 0x0000000000000001, CPP_BOOL_PROPERTY_BITMASK(A, FComponentMaskParameter), sizeof(uint8), false);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(B, FComponentMaskParameter, uint8);
			UProperty* NewProp_B = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("B"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(B, FComponentMaskParameter), 0x0000000000000001, CPP_BOOL_PROPERTY_BITMASK(B, FComponentMaskParameter), sizeof(uint8), false);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(G, FComponentMaskParameter, uint8);
			UProperty* NewProp_G = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("G"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(G, FComponentMaskParameter), 0x0000000000000001, CPP_BOOL_PROPERTY_BITMASK(G, FComponentMaskParameter), sizeof(uint8), false);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(R, FComponentMaskParameter, uint8);
			UProperty* NewProp_R = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("R"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(R, FComponentMaskParameter), 0x0000000000000001, CPP_BOOL_PROPERTY_BITMASK(R, FComponentMaskParameter), sizeof(uint8), false);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/MaterialEditor/MaterialEditorInstanceConstant.h"));
			MetaData->SetValue(NewProp_A, TEXT("Category"), TEXT("ComponentMaskParameter"));
			MetaData->SetValue(NewProp_A, TEXT("ModuleRelativePath"), TEXT("Classes/MaterialEditor/MaterialEditorInstanceConstant.h"));
			MetaData->SetValue(NewProp_B, TEXT("Category"), TEXT("ComponentMaskParameter"));
			MetaData->SetValue(NewProp_B, TEXT("ModuleRelativePath"), TEXT("Classes/MaterialEditor/MaterialEditorInstanceConstant.h"));
			MetaData->SetValue(NewProp_G, TEXT("Category"), TEXT("ComponentMaskParameter"));
			MetaData->SetValue(NewProp_G, TEXT("ModuleRelativePath"), TEXT("Classes/MaterialEditor/MaterialEditorInstanceConstant.h"));
			MetaData->SetValue(NewProp_R, TEXT("Category"), TEXT("ComponentMaskParameter"));
			MetaData->SetValue(NewProp_R, TEXT("ModuleRelativePath"), TEXT("Classes/MaterialEditor/MaterialEditorInstanceConstant.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FComponentMaskParameter_CRC() { return 2070859521U; }
	UScriptStruct* Z_Construct_UScriptStruct_FEditorStaticSwitchParameterValue()
	{
		UPackage* Outer=Z_Construct_UPackage_UnrealEd();
		extern uint32 Get_Z_Construct_UScriptStruct_FEditorStaticSwitchParameterValue_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("EditorStaticSwitchParameterValue"), sizeof(FEditorStaticSwitchParameterValue), Get_Z_Construct_UScriptStruct_FEditorStaticSwitchParameterValue_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EditorStaticSwitchParameterValue"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), Z_Construct_UScriptStruct_FEditorParameterValue(), new UScriptStruct::TCppStructOps<FEditorStaticSwitchParameterValue>, EStructFlags(0x00000001));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ParameterValue, FEditorStaticSwitchParameterValue, uint8);
			UProperty* NewProp_ParameterValue = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ParameterValue"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ParameterValue, FEditorStaticSwitchParameterValue), 0x0000000000000001, CPP_BOOL_PROPERTY_BITMASK(ParameterValue, FEditorStaticSwitchParameterValue), sizeof(uint8), false);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/MaterialEditor/MaterialEditorInstanceConstant.h"));
			MetaData->SetValue(NewProp_ParameterValue, TEXT("Category"), TEXT("EditorStaticSwitchParameterValue"));
			MetaData->SetValue(NewProp_ParameterValue, TEXT("ModuleRelativePath"), TEXT("Classes/MaterialEditor/MaterialEditorInstanceConstant.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FEditorStaticSwitchParameterValue_CRC() { return 1915412049U; }
	UScriptStruct* Z_Construct_UScriptStruct_FEditorFontParameterValue()
	{
		UPackage* Outer=Z_Construct_UPackage_UnrealEd();
		extern uint32 Get_Z_Construct_UScriptStruct_FEditorFontParameterValue_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("EditorFontParameterValue"), sizeof(FEditorFontParameterValue), Get_Z_Construct_UScriptStruct_FEditorFontParameterValue_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EditorFontParameterValue"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), Z_Construct_UScriptStruct_FEditorParameterValue(), new UScriptStruct::TCppStructOps<FEditorFontParameterValue>, EStructFlags(0x00000001));
			UProperty* NewProp_FontPage = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("FontPage"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(FontPage, FEditorFontParameterValue), 0x0000000000000001);
			UProperty* NewProp_FontValue = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("FontValue"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(FontValue, FEditorFontParameterValue), 0x0000000000000001, Z_Construct_UClass_UFont_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/MaterialEditor/MaterialEditorInstanceConstant.h"));
			MetaData->SetValue(NewProp_FontPage, TEXT("Category"), TEXT("EditorFontParameterValue"));
			MetaData->SetValue(NewProp_FontPage, TEXT("ModuleRelativePath"), TEXT("Classes/MaterialEditor/MaterialEditorInstanceConstant.h"));
			MetaData->SetValue(NewProp_FontValue, TEXT("Category"), TEXT("EditorFontParameterValue"));
			MetaData->SetValue(NewProp_FontValue, TEXT("ModuleRelativePath"), TEXT("Classes/MaterialEditor/MaterialEditorInstanceConstant.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FEditorFontParameterValue_CRC() { return 1508969402U; }
	UScriptStruct* Z_Construct_UScriptStruct_FEditorTextureParameterValue()
	{
		UPackage* Outer=Z_Construct_UPackage_UnrealEd();
		extern uint32 Get_Z_Construct_UScriptStruct_FEditorTextureParameterValue_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("EditorTextureParameterValue"), sizeof(FEditorTextureParameterValue), Get_Z_Construct_UScriptStruct_FEditorTextureParameterValue_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EditorTextureParameterValue"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), Z_Construct_UScriptStruct_FEditorParameterValue(), new UScriptStruct::TCppStructOps<FEditorTextureParameterValue>, EStructFlags(0x00000001));
			UProperty* NewProp_ParameterValue = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ParameterValue"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(ParameterValue, FEditorTextureParameterValue), 0x0000000000000001, Z_Construct_UClass_UTexture_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/MaterialEditor/MaterialEditorInstanceConstant.h"));
			MetaData->SetValue(NewProp_ParameterValue, TEXT("Category"), TEXT("EditorTextureParameterValue"));
			MetaData->SetValue(NewProp_ParameterValue, TEXT("ModuleRelativePath"), TEXT("Classes/MaterialEditor/MaterialEditorInstanceConstant.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FEditorTextureParameterValue_CRC() { return 3506192683U; }
	UScriptStruct* Z_Construct_UScriptStruct_FEditorScalarParameterValue()
	{
		UPackage* Outer=Z_Construct_UPackage_UnrealEd();
		extern uint32 Get_Z_Construct_UScriptStruct_FEditorScalarParameterValue_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("EditorScalarParameterValue"), sizeof(FEditorScalarParameterValue), Get_Z_Construct_UScriptStruct_FEditorScalarParameterValue_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EditorScalarParameterValue"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), Z_Construct_UScriptStruct_FEditorParameterValue(), new UScriptStruct::TCppStructOps<FEditorScalarParameterValue>, EStructFlags(0x00000001));
			UProperty* NewProp_ParameterValue = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ParameterValue"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(ParameterValue, FEditorScalarParameterValue), 0x0000000000000001);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/MaterialEditor/MaterialEditorInstanceConstant.h"));
			MetaData->SetValue(NewProp_ParameterValue, TEXT("Category"), TEXT("EditorScalarParameterValue"));
			MetaData->SetValue(NewProp_ParameterValue, TEXT("ModuleRelativePath"), TEXT("Classes/MaterialEditor/MaterialEditorInstanceConstant.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FEditorScalarParameterValue_CRC() { return 71353397U; }
	UScriptStruct* Z_Construct_UScriptStruct_FEditorVectorParameterValue()
	{
		UPackage* Outer=Z_Construct_UPackage_UnrealEd();
		extern uint32 Get_Z_Construct_UScriptStruct_FEditorVectorParameterValue_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("EditorVectorParameterValue"), sizeof(FEditorVectorParameterValue), Get_Z_Construct_UScriptStruct_FEditorVectorParameterValue_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EditorVectorParameterValue"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), Z_Construct_UScriptStruct_FEditorParameterValue(), new UScriptStruct::TCppStructOps<FEditorVectorParameterValue>, EStructFlags(0x00000001));
			UProperty* NewProp_ParameterValue = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ParameterValue"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(ParameterValue, FEditorVectorParameterValue), 0x0000000000000001, Z_Construct_UScriptStruct_FLinearColor());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/MaterialEditor/MaterialEditorInstanceConstant.h"));
			MetaData->SetValue(NewProp_ParameterValue, TEXT("Category"), TEXT("EditorVectorParameterValue"));
			MetaData->SetValue(NewProp_ParameterValue, TEXT("ModuleRelativePath"), TEXT("Classes/MaterialEditor/MaterialEditorInstanceConstant.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FEditorVectorParameterValue_CRC() { return 1717048360U; }
	UScriptStruct* Z_Construct_UScriptStruct_FEditorParameterValue()
	{
		UPackage* Outer=Z_Construct_UPackage_UnrealEd();
		extern uint32 Get_Z_Construct_UScriptStruct_FEditorParameterValue_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("EditorParameterValue"), sizeof(FEditorParameterValue), Get_Z_Construct_UScriptStruct_FEditorParameterValue_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EditorParameterValue"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FEditorParameterValue>, EStructFlags(0x00000001));
			UProperty* NewProp_ExpressionId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ExpressionId"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(ExpressionId, FEditorParameterValue), 0x0000000000000000, Z_Construct_UScriptStruct_FGuid());
			UProperty* NewProp_ParameterName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ParameterName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(ParameterName, FEditorParameterValue), 0x0000000000000001);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bOverride, FEditorParameterValue, uint8);
			UProperty* NewProp_bOverride = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bOverride"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bOverride, FEditorParameterValue), 0x0000000000000001, CPP_BOOL_PROPERTY_BITMASK(bOverride, FEditorParameterValue), sizeof(uint8), false);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/MaterialEditor/MaterialEditorInstanceConstant.h"));
			MetaData->SetValue(NewProp_ExpressionId, TEXT("ModuleRelativePath"), TEXT("Classes/MaterialEditor/MaterialEditorInstanceConstant.h"));
			MetaData->SetValue(NewProp_ParameterName, TEXT("Category"), TEXT("EditorParameterValue"));
			MetaData->SetValue(NewProp_ParameterName, TEXT("ModuleRelativePath"), TEXT("Classes/MaterialEditor/MaterialEditorInstanceConstant.h"));
			MetaData->SetValue(NewProp_bOverride, TEXT("Category"), TEXT("EditorParameterValue"));
			MetaData->SetValue(NewProp_bOverride, TEXT("ModuleRelativePath"), TEXT("Classes/MaterialEditor/MaterialEditorInstanceConstant.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FEditorParameterValue_CRC() { return 201861783U; }
	UScriptStruct* Z_Construct_UScriptStruct_FEditorParameterGroup()
	{
		UPackage* Outer=Z_Construct_UPackage_UnrealEd();
		extern uint32 Get_Z_Construct_UScriptStruct_FEditorParameterGroup_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("EditorParameterGroup"), sizeof(FEditorParameterGroup), Get_Z_Construct_UScriptStruct_FEditorParameterGroup_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EditorParameterGroup"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FEditorParameterGroup>, EStructFlags(0x00000005));
			UProperty* NewProp_Parameters = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Parameters"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(Parameters, FEditorParameterGroup), 0x0000008000000049);
			UProperty* NewProp_Parameters_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Parameters, TEXT("Parameters"), RF_Public|RF_Transient|RF_Native) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0002000000080008, Z_Construct_UClass_UDEditorParameterValue_NoRegister());
			UProperty* NewProp_GroupName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("GroupName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(GroupName, FEditorParameterGroup), 0x0000000000000000);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/MaterialEditor/MaterialEditorInstanceConstant.h"));
			MetaData->SetValue(NewProp_Parameters, TEXT("Category"), TEXT("EditorParameterGroup"));
			MetaData->SetValue(NewProp_Parameters, TEXT("EditInline"), TEXT("true"));
			MetaData->SetValue(NewProp_Parameters, TEXT("ModuleRelativePath"), TEXT("Classes/MaterialEditor/MaterialEditorInstanceConstant.h"));
			MetaData->SetValue(NewProp_Parameters_Inner, TEXT("Category"), TEXT("EditorParameterGroup"));
			MetaData->SetValue(NewProp_Parameters_Inner, TEXT("EditInline"), TEXT("true"));
			MetaData->SetValue(NewProp_Parameters_Inner, TEXT("ModuleRelativePath"), TEXT("Classes/MaterialEditor/MaterialEditorInstanceConstant.h"));
			MetaData->SetValue(NewProp_GroupName, TEXT("ModuleRelativePath"), TEXT("Classes/MaterialEditor/MaterialEditorInstanceConstant.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FEditorParameterGroup_CRC() { return 4180618365U; }
	UClass* Z_Construct_UClass_UMaterialEditorInstanceConstant_NoRegister()
	{
		return UMaterialEditorInstanceConstant::StaticClass();
	}
	UClass* Z_Construct_UClass_UMaterialEditorInstanceConstant()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UMaterialEditorInstanceConstant::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20902080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bUseOldStyleMICEditorGroups, UMaterialEditorInstanceConstant, uint8);
				UProperty* NewProp_bUseOldStyleMICEditorGroups = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bUseOldStyleMICEditorGroups"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bUseOldStyleMICEditorGroups, UMaterialEditorInstanceConstant), 0x0000000000000001, CPP_BOOL_PROPERTY_BITMASK(bUseOldStyleMICEditorGroups, UMaterialEditorInstanceConstant), sizeof(uint8), false);
				UProperty* NewProp_LightmassSettings = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("LightmassSettings"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(LightmassSettings, UMaterialEditorInstanceConstant), 0x0000000000000001, Z_Construct_UScriptStruct_FLightmassParameterizedMaterialSettings());
				UProperty* NewProp_VisibleExpressions = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("VisibleExpressions"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(VisibleExpressions, UMaterialEditorInstanceConstant), 0x0000000000202000);
				UProperty* NewProp_VisibleExpressions_Inner = new(EC_InternalUseOnlyConstructor, NewProp_VisibleExpressions, TEXT("VisibleExpressions"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FGuid());
				UProperty* NewProp_SourceInstance = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SourceInstance"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(SourceInstance, UMaterialEditorInstanceConstant), 0x0000000000000000, Z_Construct_UClass_UMaterialInstanceConstant_NoRegister());
				UProperty* NewProp_BasePropertyOverrides = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("BasePropertyOverrides"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(BasePropertyOverrides, UMaterialEditorInstanceConstant), 0x0000000000000001, Z_Construct_UScriptStruct_FMaterialInstanceBasePropertyOverrides());
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bOverrideBaseProperties_DEPRECATED, UMaterialEditorInstanceConstant, uint8);
				UProperty* NewProp_bOverrideBaseProperties = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bOverrideBaseProperties"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bOverrideBaseProperties_DEPRECATED, UMaterialEditorInstanceConstant), 0x0000000020000000, CPP_BOOL_PROPERTY_BITMASK(bOverrideBaseProperties_DEPRECATED, UMaterialEditorInstanceConstant), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bOverrideSubsurfaceProfile, UMaterialEditorInstanceConstant, uint8);
				UProperty* NewProp_bOverrideSubsurfaceProfile = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bOverrideSubsurfaceProfile"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bOverrideSubsurfaceProfile, UMaterialEditorInstanceConstant), 0x0000000000000001, CPP_BOOL_PROPERTY_BITMASK(bOverrideSubsurfaceProfile, UMaterialEditorInstanceConstant), sizeof(uint8), false);
				UProperty* NewProp_SubsurfaceProfile = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SubsurfaceProfile"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(SubsurfaceProfile, UMaterialEditorInstanceConstant), 0x0000000000000015, Z_Construct_UClass_USubsurfaceProfile_NoRegister());
				UProperty* NewProp_RefractionDepthBias = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("RefractionDepthBias"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(RefractionDepthBias, UMaterialEditorInstanceConstant), 0x0000000000000001);
				UProperty* NewProp_ParameterGroups = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ParameterGroups"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(ParameterGroups, UMaterialEditorInstanceConstant), 0x0000008000000041);
				UProperty* NewProp_ParameterGroups_Inner = new(EC_InternalUseOnlyConstructor, NewProp_ParameterGroups, TEXT("ParameterGroups"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000008000000000, Z_Construct_UScriptStruct_FEditorParameterGroup());
				UProperty* NewProp_Parent = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Parent"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(Parent, UMaterialEditorInstanceConstant), 0x0000000000000001, Z_Construct_UClass_UMaterialInterface_NoRegister());
				UProperty* NewProp_PhysMaterial = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("PhysMaterial"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(PhysMaterial, UMaterialEditorInstanceConstant), 0x0000000000000001, Z_Construct_UClass_UPhysicalMaterial_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("MaterialEditor/MaterialEditorInstanceConstant.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/MaterialEditor/MaterialEditorInstanceConstant.h"));
				MetaData->SetValue(NewProp_bUseOldStyleMICEditorGroups, TEXT("Category"), TEXT("MaterialEditorInstanceConstant"));
				MetaData->SetValue(NewProp_bUseOldStyleMICEditorGroups, TEXT("ModuleRelativePath"), TEXT("Classes/MaterialEditor/MaterialEditorInstanceConstant.h"));
				MetaData->SetValue(NewProp_bUseOldStyleMICEditorGroups, TEXT("ToolTip"), TEXT("Should we use old style typed arrays for unassigned parameters instead of a None group (new style)?"));
				MetaData->SetValue(NewProp_LightmassSettings, TEXT("Category"), TEXT("Lightmass"));
				MetaData->SetValue(NewProp_LightmassSettings, TEXT("ModuleRelativePath"), TEXT("Classes/MaterialEditor/MaterialEditorInstanceConstant.h"));
				MetaData->SetValue(NewProp_LightmassSettings, TEXT("ToolTip"), TEXT("The Lightmass override settings for this object."));
				MetaData->SetValue(NewProp_VisibleExpressions, TEXT("ModuleRelativePath"), TEXT("Classes/MaterialEditor/MaterialEditorInstanceConstant.h"));
				MetaData->SetValue(NewProp_SourceInstance, TEXT("ModuleRelativePath"), TEXT("Classes/MaterialEditor/MaterialEditorInstanceConstant.h"));
				MetaData->SetValue(NewProp_BasePropertyOverrides, TEXT("Category"), TEXT("MaterialOverrides"));
				MetaData->SetValue(NewProp_BasePropertyOverrides, TEXT("ModuleRelativePath"), TEXT("Classes/MaterialEditor/MaterialEditorInstanceConstant.h"));
				MetaData->SetValue(NewProp_bOverrideBaseProperties, TEXT("ModuleRelativePath"), TEXT("Classes/MaterialEditor/MaterialEditorInstanceConstant.h"));
				MetaData->SetValue(NewProp_bOverrideSubsurfaceProfile, TEXT("Category"), TEXT("MaterialEditorInstanceConstant"));
				MetaData->SetValue(NewProp_bOverrideSubsurfaceProfile, TEXT("ModuleRelativePath"), TEXT("Classes/MaterialEditor/MaterialEditorInstanceConstant.h"));
				MetaData->SetValue(NewProp_bOverrideSubsurfaceProfile, TEXT("ToolTip"), TEXT("Defines if SubsurfaceProfile from tis instance is used or it uses the parent one."));
				MetaData->SetValue(NewProp_SubsurfaceProfile, TEXT("Category"), TEXT("Material"));
				MetaData->SetValue(NewProp_SubsurfaceProfile, TEXT("DisplayName"), TEXT("Subsurface Profile"));
				MetaData->SetValue(NewProp_SubsurfaceProfile, TEXT("ModuleRelativePath"), TEXT("Classes/MaterialEditor/MaterialEditorInstanceConstant.h"));
				MetaData->SetValue(NewProp_SubsurfaceProfile, TEXT("ToolTip"), TEXT("SubsurfaceProfile, for Screen Space Subsurface Scattering"));
				MetaData->SetValue(NewProp_RefractionDepthBias, TEXT("Category"), TEXT("MaterialEditorInstanceConstant"));
				MetaData->SetValue(NewProp_RefractionDepthBias, TEXT("ModuleRelativePath"), TEXT("Classes/MaterialEditor/MaterialEditorInstanceConstant.h"));
				MetaData->SetValue(NewProp_RefractionDepthBias, TEXT("ToolTip"), TEXT("This is the refraction depth bias, larger values offset distortion to prevent closer objects from rendering into the distorted surface at acute viewing angles but increases the disconnect between surface and where the refraction starts."));
				MetaData->SetValue(NewProp_ParameterGroups, TEXT("Category"), TEXT("MaterialEditorInstanceConstant"));
				MetaData->SetValue(NewProp_ParameterGroups, TEXT("ModuleRelativePath"), TEXT("Classes/MaterialEditor/MaterialEditorInstanceConstant.h"));
				MetaData->SetValue(NewProp_Parent, TEXT("Category"), TEXT("MaterialEditorInstanceConstant"));
				MetaData->SetValue(NewProp_Parent, TEXT("DisplayThumbnail"), TEXT("true"));
				MetaData->SetValue(NewProp_Parent, TEXT("ModuleRelativePath"), TEXT("Classes/MaterialEditor/MaterialEditorInstanceConstant.h"));
				MetaData->SetValue(NewProp_Parent, TEXT("ToolTip"), TEXT("since the Parent may point across levels and the property editor needs to import this text, it must be marked lazy so it doesn't set itself to NULL in FindImportedObject"));
				MetaData->SetValue(NewProp_PhysMaterial, TEXT("Category"), TEXT("MaterialEditorInstanceConstant"));
				MetaData->SetValue(NewProp_PhysMaterial, TEXT("ModuleRelativePath"), TEXT("Classes/MaterialEditor/MaterialEditorInstanceConstant.h"));
				MetaData->SetValue(NewProp_PhysMaterial, TEXT("ToolTip"), TEXT("Physical material to use for this graphics material. Used for sounds, effects etc."));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UMaterialEditorInstanceConstant(Z_Construct_UClass_UMaterialEditorInstanceConstant, TEXT("UMaterialEditorInstanceConstant"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UMaterialEditorInstanceConstant);
	UClass* Z_Construct_UClass_UMaterialEditorMeshComponent_NoRegister()
	{
		return UMaterialEditorMeshComponent::StaticClass();
	}
	UClass* Z_Construct_UClass_UMaterialEditorMeshComponent()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UStaticMeshComponent();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UMaterialEditorMeshComponent::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20B01080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object Activation Components|Activation Trigger ComponentReplication"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("MaterialEditor/MaterialEditorMeshComponent.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/MaterialEditor/MaterialEditorMeshComponent.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UMaterialEditorMeshComponent(Z_Construct_UClass_UMaterialEditorMeshComponent, TEXT("UMaterialEditorMeshComponent"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UMaterialEditorMeshComponent);
	UClass* Z_Construct_UClass_UMaterialEditorOptions_NoRegister()
	{
		return UMaterialEditorOptions::StaticClass();
	}
	UClass* Z_Construct_UClass_UMaterialEditorOptions()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UMaterialEditorOptions::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100084;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_FavoriteExpressions = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("FavoriteExpressions"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(FavoriteExpressions, UMaterialEditorOptions), 0x0000000000004001);
				UProperty* NewProp_FavoriteExpressions_Inner = new(EC_InternalUseOnlyConstructor, NewProp_FavoriteExpressions, TEXT("FavoriteExpressions"), RF_Public|RF_Transient|RF_Native) UStrProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000004000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bShowMobileStats, UMaterialEditorOptions, uint8);
				UProperty* NewProp_bShowMobileStats = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bShowMobileStats"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bShowMobileStats, UMaterialEditorOptions), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(bShowMobileStats, UMaterialEditorOptions), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bUseUnsortedMenus, UMaterialEditorOptions, uint8);
				UProperty* NewProp_bUseUnsortedMenus = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bUseUnsortedMenus"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bUseUnsortedMenus, UMaterialEditorOptions), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(bUseUnsortedMenus, UMaterialEditorOptions), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bAlwaysRefreshAllPreviews, UMaterialEditorOptions, uint8);
				UProperty* NewProp_bAlwaysRefreshAllPreviews = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bAlwaysRefreshAllPreviews"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bAlwaysRefreshAllPreviews, UMaterialEditorOptions), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(bAlwaysRefreshAllPreviews, UMaterialEditorOptions), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bLivePreviewUpdate, UMaterialEditorOptions, uint8);
				UProperty* NewProp_bLivePreviewUpdate = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bLivePreviewUpdate"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bLivePreviewUpdate, UMaterialEditorOptions), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(bLivePreviewUpdate, UMaterialEditorOptions), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bRealtimeExpressionViewport, UMaterialEditorOptions, uint8);
				UProperty* NewProp_bRealtimeExpressionViewport = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bRealtimeExpressionViewport"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bRealtimeExpressionViewport, UMaterialEditorOptions), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(bRealtimeExpressionViewport, UMaterialEditorOptions), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bRealtimeMaterialViewport, UMaterialEditorOptions, uint8);
				UProperty* NewProp_bRealtimeMaterialViewport = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bRealtimeMaterialViewport"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bRealtimeMaterialViewport, UMaterialEditorOptions), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(bRealtimeMaterialViewport, UMaterialEditorOptions), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bHideUnusedConnectors, UMaterialEditorOptions, uint8);
				UProperty* NewProp_bHideUnusedConnectors = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bHideUnusedConnectors"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bHideUnusedConnectors, UMaterialEditorOptions), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(bHideUnusedConnectors, UMaterialEditorOptions), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bShowBackground, UMaterialEditorOptions, uint8);
				UProperty* NewProp_bShowBackground = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bShowBackground"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bShowBackground, UMaterialEditorOptions), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(bShowBackground, UMaterialEditorOptions), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bShowGrid, UMaterialEditorOptions, uint8);
				UProperty* NewProp_bShowGrid = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bShowGrid"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bShowGrid, UMaterialEditorOptions), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(bShowGrid, UMaterialEditorOptions), sizeof(uint8), false);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->ClassConfigName = FName(TEXT("EditorPerProjectUserSettings"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Preferences/MaterialEditorOptions.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/MaterialEditorOptions.h"));
				MetaData->SetValue(NewProp_FavoriteExpressions, TEXT("Category"), TEXT("Options"));
				MetaData->SetValue(NewProp_FavoriteExpressions, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/MaterialEditorOptions.h"));
				MetaData->SetValue(NewProp_FavoriteExpressions, TEXT("ToolTip"), TEXT("The users favorite material expressions."));
				MetaData->SetValue(NewProp_bShowMobileStats, TEXT("Category"), TEXT("Options"));
				MetaData->SetValue(NewProp_bShowMobileStats, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/MaterialEditorOptions.h"));
				MetaData->SetValue(NewProp_bShowMobileStats, TEXT("ToolTip"), TEXT("If true, show mobile statis and errors."));
				MetaData->SetValue(NewProp_bUseUnsortedMenus, TEXT("Category"), TEXT("Options"));
				MetaData->SetValue(NewProp_bUseUnsortedMenus, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/MaterialEditorOptions.h"));
				MetaData->SetValue(NewProp_bUseUnsortedMenus, TEXT("ToolTip"), TEXT("If false, use expression categorized menus."));
				MetaData->SetValue(NewProp_bAlwaysRefreshAllPreviews, TEXT("Category"), TEXT("Options"));
				MetaData->SetValue(NewProp_bAlwaysRefreshAllPreviews, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/MaterialEditorOptions.h"));
				MetaData->SetValue(NewProp_bAlwaysRefreshAllPreviews, TEXT("ToolTip"), TEXT("If true, always refresh all expression previews."));
				MetaData->SetValue(NewProp_bLivePreviewUpdate, TEXT("Category"), TEXT("Options"));
				MetaData->SetValue(NewProp_bLivePreviewUpdate, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/MaterialEditorOptions.h"));
				MetaData->SetValue(NewProp_bLivePreviewUpdate, TEXT("ToolTip"), TEXT("If true, always refresh the material preview."));
				MetaData->SetValue(NewProp_bRealtimeExpressionViewport, TEXT("Category"), TEXT("Options"));
				MetaData->SetValue(NewProp_bRealtimeExpressionViewport, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/MaterialEditorOptions.h"));
				MetaData->SetValue(NewProp_bRealtimeExpressionViewport, TEXT("ToolTip"), TEXT("If true, the linked object viewport updates in realtime."));
				MetaData->SetValue(NewProp_bRealtimeMaterialViewport, TEXT("Category"), TEXT("Options"));
				MetaData->SetValue(NewProp_bRealtimeMaterialViewport, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/MaterialEditorOptions.h"));
				MetaData->SetValue(NewProp_bRealtimeMaterialViewport, TEXT("ToolTip"), TEXT("If true, the 3D material preview viewport updates in realtime."));
				MetaData->SetValue(NewProp_bHideUnusedConnectors, TEXT("Category"), TEXT("Options"));
				MetaData->SetValue(NewProp_bHideUnusedConnectors, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/MaterialEditorOptions.h"));
				MetaData->SetValue(NewProp_bHideUnusedConnectors, TEXT("ToolTip"), TEXT("If true, don't render connectors that are not connected to anything."));
				MetaData->SetValue(NewProp_bShowBackground, TEXT("Category"), TEXT("Options"));
				MetaData->SetValue(NewProp_bShowBackground, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/MaterialEditorOptions.h"));
				MetaData->SetValue(NewProp_bShowBackground, TEXT("ToolTip"), TEXT("If true, render background object in the preview scene."));
				MetaData->SetValue(NewProp_bShowGrid, TEXT("Category"), TEXT("Options"));
				MetaData->SetValue(NewProp_bShowGrid, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/MaterialEditorOptions.h"));
				MetaData->SetValue(NewProp_bShowGrid, TEXT("ToolTip"), TEXT("If true, render grid the preview scene."));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UMaterialEditorOptions(Z_Construct_UClass_UMaterialEditorOptions, TEXT("UMaterialEditorOptions"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UMaterialEditorOptions);
	UClass* Z_Construct_UClass_UMaterialGraphNode_Base_NoRegister()
	{
		return UMaterialGraphNode_Base::StaticClass();
	}
	UClass* Z_Construct_UClass_UMaterialGraphNode_Base()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UEdGraphNode();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UMaterialGraphNode_Base::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("MaterialGraph/MaterialGraphNode_Base.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/MaterialGraph/MaterialGraphNode_Base.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UMaterialGraphNode_Base(Z_Construct_UClass_UMaterialGraphNode_Base, TEXT("UMaterialGraphNode_Base"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UMaterialGraphNode_Base);
	UClass* Z_Construct_UClass_UMaterialGraphNode_NoRegister()
	{
		return UMaterialGraphNode::StaticClass();
	}
	UClass* Z_Construct_UClass_UMaterialGraphNode()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UMaterialGraphNode_Base();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UMaterialGraphNode::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_MaterialExpression = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MaterialExpression"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(MaterialExpression, UMaterialGraphNode), 0x0000000000000000, Z_Construct_UClass_UMaterialExpression_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("MaterialGraph/MaterialGraphNode.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/MaterialGraph/MaterialGraphNode.h"));
				MetaData->SetValue(NewProp_MaterialExpression, TEXT("ModuleRelativePath"), TEXT("Classes/MaterialGraph/MaterialGraphNode.h"));
				MetaData->SetValue(NewProp_MaterialExpression, TEXT("ToolTip"), TEXT("Material Expression this node is representing"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UMaterialGraphNode(Z_Construct_UClass_UMaterialGraphNode, TEXT("UMaterialGraphNode"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UMaterialGraphNode);
	UClass* Z_Construct_UClass_UMaterialGraphNode_Root_NoRegister()
	{
		return UMaterialGraphNode_Root::StaticClass();
	}
	UClass* Z_Construct_UClass_UMaterialGraphNode_Root()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UMaterialGraphNode_Base();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UMaterialGraphNode_Root::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_Material = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Material"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(Material, UMaterialGraphNode_Root), 0x0000000000000000, Z_Construct_UClass_UMaterial_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("MaterialGraph/MaterialGraphNode_Root.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/MaterialGraph/MaterialGraphNode_Root.h"));
				MetaData->SetValue(NewProp_Material, TEXT("ModuleRelativePath"), TEXT("Classes/MaterialGraph/MaterialGraphNode_Root.h"));
				MetaData->SetValue(NewProp_Material, TEXT("ToolTip"), TEXT("Material whose inputs this root node represents"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UMaterialGraphNode_Root(Z_Construct_UClass_UMaterialGraphNode_Root, TEXT("UMaterialGraphNode_Root"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UMaterialGraphNode_Root);
	UScriptStruct* Z_Construct_UScriptStruct_FMaterialGraphSchemaAction_Paste()
	{
		UPackage* Outer=Z_Construct_UPackage_UnrealEd();
		extern uint32 Get_Z_Construct_UScriptStruct_FMaterialGraphSchemaAction_Paste_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("MaterialGraphSchemaAction_Paste"), sizeof(FMaterialGraphSchemaAction_Paste), Get_Z_Construct_UScriptStruct_FMaterialGraphSchemaAction_Paste_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("MaterialGraphSchemaAction_Paste"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), Z_Construct_UScriptStruct_FEdGraphSchemaAction(), new UScriptStruct::TCppStructOps<FMaterialGraphSchemaAction_Paste>, EStructFlags(0x00000201));
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/MaterialGraph/MaterialGraphSchema.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Action to paste clipboard contents into the graph"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMaterialGraphSchemaAction_Paste_CRC() { return 1446010981U; }
	UScriptStruct* Z_Construct_UScriptStruct_FMaterialGraphSchemaAction_NewComment()
	{
		UPackage* Outer=Z_Construct_UPackage_UnrealEd();
		extern uint32 Get_Z_Construct_UScriptStruct_FMaterialGraphSchemaAction_NewComment_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("MaterialGraphSchemaAction_NewComment"), sizeof(FMaterialGraphSchemaAction_NewComment), Get_Z_Construct_UScriptStruct_FMaterialGraphSchemaAction_NewComment_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("MaterialGraphSchemaAction_NewComment"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), Z_Construct_UScriptStruct_FEdGraphSchemaAction(), new UScriptStruct::TCppStructOps<FMaterialGraphSchemaAction_NewComment>, EStructFlags(0x00000201));
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/MaterialGraph/MaterialGraphSchema.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Action to add a comment node to the graph"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMaterialGraphSchemaAction_NewComment_CRC() { return 548737589U; }
	UScriptStruct* Z_Construct_UScriptStruct_FMaterialGraphSchemaAction_NewFunctionCall()
	{
		UPackage* Outer=Z_Construct_UPackage_UnrealEd();
		extern uint32 Get_Z_Construct_UScriptStruct_FMaterialGraphSchemaAction_NewFunctionCall_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("MaterialGraphSchemaAction_NewFunctionCall"), sizeof(FMaterialGraphSchemaAction_NewFunctionCall), Get_Z_Construct_UScriptStruct_FMaterialGraphSchemaAction_NewFunctionCall_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("MaterialGraphSchemaAction_NewFunctionCall"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), Z_Construct_UScriptStruct_FEdGraphSchemaAction(), new UScriptStruct::TCppStructOps<FMaterialGraphSchemaAction_NewFunctionCall>, EStructFlags(0x00000201));
			UProperty* NewProp_FunctionPath = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("FunctionPath"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(FunctionPath, FMaterialGraphSchemaAction_NewFunctionCall), 0x0000000000000000);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/MaterialGraph/MaterialGraphSchema.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Action to add a Material Function call to the graph"));
			MetaData->SetValue(NewProp_FunctionPath, TEXT("ModuleRelativePath"), TEXT("Classes/MaterialGraph/MaterialGraphSchema.h"));
			MetaData->SetValue(NewProp_FunctionPath, TEXT("ToolTip"), TEXT("Path to function that we want to call"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMaterialGraphSchemaAction_NewFunctionCall_CRC() { return 3236188388U; }
	UScriptStruct* Z_Construct_UScriptStruct_FMaterialGraphSchemaAction_NewNode()
	{
		UPackage* Outer=Z_Construct_UPackage_UnrealEd();
		extern uint32 Get_Z_Construct_UScriptStruct_FMaterialGraphSchemaAction_NewNode_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("MaterialGraphSchemaAction_NewNode"), sizeof(FMaterialGraphSchemaAction_NewNode), Get_Z_Construct_UScriptStruct_FMaterialGraphSchemaAction_NewNode_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("MaterialGraphSchemaAction_NewNode"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), Z_Construct_UScriptStruct_FEdGraphSchemaAction(), new UScriptStruct::TCppStructOps<FMaterialGraphSchemaAction_NewNode>, EStructFlags(0x00000201));
			UProperty* NewProp_MaterialExpressionClass = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("MaterialExpressionClass"), RF_Public|RF_Transient|RF_Native) UClassProperty(CPP_PROPERTY_BASE(MaterialExpressionClass, FMaterialGraphSchemaAction_NewNode), 0x0000000000000000, Z_Construct_UClass_UObject_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/MaterialGraph/MaterialGraphSchema.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Action to add an expression node to the graph"));
			MetaData->SetValue(NewProp_MaterialExpressionClass, TEXT("ModuleRelativePath"), TEXT("Classes/MaterialGraph/MaterialGraphSchema.h"));
			MetaData->SetValue(NewProp_MaterialExpressionClass, TEXT("ToolTip"), TEXT("Class of expression we want to create"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMaterialGraphSchemaAction_NewNode_CRC() { return 3036105934U; }
	UClass* Z_Construct_UClass_UMaterialGraphSchema_NoRegister()
	{
		return UMaterialGraphSchema::StaticClass();
	}
	UClass* Z_Construct_UClass_UMaterialGraphSchema()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UEdGraphSchema();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UMaterialGraphSchema::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_AlphaPinColor = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AlphaPinColor"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(AlphaPinColor, UMaterialGraphSchema), 0x0000000000000000, Z_Construct_UScriptStruct_FLinearColor());
				UProperty* NewProp_InactivePinColor = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("InactivePinColor"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(InactivePinColor, UMaterialGraphSchema), 0x0000000000000000, Z_Construct_UScriptStruct_FLinearColor());
				UProperty* NewProp_ActivePinColor = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ActivePinColor"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(ActivePinColor, UMaterialGraphSchema), 0x0000000000000000, Z_Construct_UScriptStruct_FLinearColor());
				UProperty* NewProp_PSC_Alpha = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("PSC_Alpha"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(PSC_Alpha, UMaterialGraphSchema), 0x0000000000000000);
				UProperty* NewProp_PSC_Blue = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("PSC_Blue"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(PSC_Blue, UMaterialGraphSchema), 0x0000000000000000);
				UProperty* NewProp_PSC_Green = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("PSC_Green"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(PSC_Green, UMaterialGraphSchema), 0x0000000000000000);
				UProperty* NewProp_PSC_Red = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("PSC_Red"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(PSC_Red, UMaterialGraphSchema), 0x0000000000000000);
				UProperty* NewProp_PC_MaterialInput = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("PC_MaterialInput"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(PC_MaterialInput, UMaterialGraphSchema), 0x0000000000000000);
				UProperty* NewProp_PC_Optional = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("PC_Optional"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(PC_Optional, UMaterialGraphSchema), 0x0000000000000000);
				UProperty* NewProp_PC_Required = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("PC_Required"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(PC_Required, UMaterialGraphSchema), 0x0000000000000000);
				UProperty* NewProp_PC_Mask = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("PC_Mask"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(PC_Mask, UMaterialGraphSchema), 0x0000000000000000);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("MaterialGraph/MaterialGraphSchema.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/MaterialGraph/MaterialGraphSchema.h"));
				MetaData->SetValue(NewProp_AlphaPinColor, TEXT("ModuleRelativePath"), TEXT("Classes/MaterialGraph/MaterialGraphSchema.h"));
				MetaData->SetValue(NewProp_InactivePinColor, TEXT("ModuleRelativePath"), TEXT("Classes/MaterialGraph/MaterialGraphSchema.h"));
				MetaData->SetValue(NewProp_ActivePinColor, TEXT("ModuleRelativePath"), TEXT("Classes/MaterialGraph/MaterialGraphSchema.h"));
				MetaData->SetValue(NewProp_ActivePinColor, TEXT("ToolTip"), TEXT("Color of certain pins/connections"));
				MetaData->SetValue(NewProp_PSC_Alpha, TEXT("ModuleRelativePath"), TEXT("Classes/MaterialGraph/MaterialGraphSchema.h"));
				MetaData->SetValue(NewProp_PSC_Blue, TEXT("ModuleRelativePath"), TEXT("Classes/MaterialGraph/MaterialGraphSchema.h"));
				MetaData->SetValue(NewProp_PSC_Green, TEXT("ModuleRelativePath"), TEXT("Classes/MaterialGraph/MaterialGraphSchema.h"));
				MetaData->SetValue(NewProp_PSC_Red, TEXT("ModuleRelativePath"), TEXT("Classes/MaterialGraph/MaterialGraphSchema.h"));
				MetaData->SetValue(NewProp_PSC_Red, TEXT("ToolTip"), TEXT("Common PinType.PinSubCategory values"));
				MetaData->SetValue(NewProp_PC_MaterialInput, TEXT("ModuleRelativePath"), TEXT("Classes/MaterialGraph/MaterialGraphSchema.h"));
				MetaData->SetValue(NewProp_PC_Optional, TEXT("ModuleRelativePath"), TEXT("Classes/MaterialGraph/MaterialGraphSchema.h"));
				MetaData->SetValue(NewProp_PC_Required, TEXT("ModuleRelativePath"), TEXT("Classes/MaterialGraph/MaterialGraphSchema.h"));
				MetaData->SetValue(NewProp_PC_Mask, TEXT("ModuleRelativePath"), TEXT("Classes/MaterialGraph/MaterialGraphSchema.h"));
				MetaData->SetValue(NewProp_PC_Mask, TEXT("ToolTip"), TEXT("Allowable PinType.PinCategory values"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UMaterialGraphSchema(Z_Construct_UClass_UMaterialGraphSchema, TEXT("UMaterialGraphSchema"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UMaterialGraphSchema);
	UClass* Z_Construct_UClass_UModelExporterT3D_NoRegister()
	{
		return UModelExporterT3D::StaticClass();
	}
	UClass* Z_Construct_UClass_UModelExporterT3D()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UExporter();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UModelExporterT3D::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000088;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Exporters/ModelExporterT3D.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Exporters/ModelExporterT3D.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UModelExporterT3D(Z_Construct_UClass_UModelExporterT3D, TEXT("UModelExporterT3D"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UModelExporterT3D);
	UClass* Z_Construct_UClass_UNiagaraGraph_NoRegister()
	{
		return UNiagaraGraph::StaticClass();
	}
	UClass* Z_Construct_UClass_UNiagaraGraph()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UEdGraph();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UNiagaraGraph::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Niagara/NiagaraGraph.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Niagara/NiagaraGraph.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UNiagaraGraph(Z_Construct_UClass_UNiagaraGraph, TEXT("UNiagaraGraph"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UNiagaraGraph);
	UClass* Z_Construct_UClass_UNiagaraNode_NoRegister()
	{
		return UNiagaraNode::StaticClass();
	}
	UClass* Z_Construct_UClass_UNiagaraNode()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UEdGraphNode();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UNiagaraNode::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Niagara/NiagaraNode.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Niagara/NiagaraNode.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UNiagaraNode(Z_Construct_UClass_UNiagaraNode, TEXT("UNiagaraNode"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UNiagaraNode);
	UClass* Z_Construct_UClass_UDEPRECATED_NiagaraNodeConstant_NoRegister()
	{
		return UDEPRECATED_NiagaraNodeConstant::StaticClass();
	}
	UClass* Z_Construct_UClass_UDEPRECATED_NiagaraNodeConstant()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UNiagaraNode();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UDEPRECATED_NiagaraNodeConstant::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x22080280;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bExposeToEffectEditor, UDEPRECATED_NiagaraNodeConstant, uint8);
				UProperty* NewProp_bExposeToEffectEditor = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bExposeToEffectEditor"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bExposeToEffectEditor, UDEPRECATED_NiagaraNodeConstant), 0x0000000000000001, CPP_BOOL_PROPERTY_BITMASK(bExposeToEffectEditor, UDEPRECATED_NiagaraNodeConstant), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bNeedsDefault, UDEPRECATED_NiagaraNodeConstant, uint8);
				UProperty* NewProp_bNeedsDefault = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bNeedsDefault"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bNeedsDefault, UDEPRECATED_NiagaraNodeConstant), 0x0000000000000001, CPP_BOOL_PROPERTY_BITMASK(bNeedsDefault, UDEPRECATED_NiagaraNodeConstant), sizeof(uint8), false);
				UProperty* NewProp_DataType = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("DataType"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(DataType, UDEPRECATED_NiagaraNodeConstant), 0x0000000000000001, Z_Construct_UEnum_Niagara_ENiagaraDataType());
				UProperty* NewProp_ConstName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ConstName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(ConstName, UDEPRECATED_NiagaraNodeConstant), 0x0000000000000001);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Niagara/NiagaraNodeConstant.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Niagara/NiagaraNodeConstant.h"));
				MetaData->SetValue(NewProp_bExposeToEffectEditor, TEXT("Category"), TEXT("Constant"));
				MetaData->SetValue(NewProp_bExposeToEffectEditor, TEXT("ModuleRelativePath"), TEXT("Classes/Niagara/NiagaraNodeConstant.h"));
				MetaData->SetValue(NewProp_bNeedsDefault, TEXT("Category"), TEXT("Constant"));
				MetaData->SetValue(NewProp_bNeedsDefault, TEXT("ModuleRelativePath"), TEXT("Classes/Niagara/NiagaraNodeConstant.h"));
				MetaData->SetValue(NewProp_DataType, TEXT("Category"), TEXT("Constant"));
				MetaData->SetValue(NewProp_DataType, TEXT("ModuleRelativePath"), TEXT("Classes/Niagara/NiagaraNodeConstant.h"));
				MetaData->SetValue(NewProp_DataType, TEXT("ToolTip"), TEXT("The type of the constant we're creating."));
				MetaData->SetValue(NewProp_ConstName, TEXT("Category"), TEXT("Constant"));
				MetaData->SetValue(NewProp_ConstName, TEXT("DisplayName"), TEXT("Name"));
				MetaData->SetValue(NewProp_ConstName, TEXT("ModuleRelativePath"), TEXT("Classes/Niagara/NiagaraNodeConstant.h"));
				MetaData->SetValue(NewProp_ConstName, TEXT("ToolTip"), TEXT("The type of the constant we're creating."));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UDEPRECATED_NiagaraNodeConstant(Z_Construct_UClass_UDEPRECATED_NiagaraNodeConstant, TEXT("UDEPRECATED_NiagaraNodeConstant"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UDEPRECATED_NiagaraNodeConstant);
	UClass* Z_Construct_UClass_UNiagaraNodeFunctionCall_NoRegister()
	{
		return UNiagaraNodeFunctionCall::StaticClass();
	}
	UClass* Z_Construct_UClass_UNiagaraNodeFunctionCall()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UNiagaraNode();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UNiagaraNodeFunctionCall::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_FunctionScript = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("FunctionScript"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(FunctionScript, UNiagaraNodeFunctionCall), 0x0000000000000001, Z_Construct_UClass_UNiagaraScript_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Niagara/NiagaraNodeFunctionCall.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Niagara/NiagaraNodeFunctionCall.h"));
				MetaData->SetValue(NewProp_FunctionScript, TEXT("Category"), TEXT("Function"));
				MetaData->SetValue(NewProp_FunctionScript, TEXT("ModuleRelativePath"), TEXT("Classes/Niagara/NiagaraNodeFunctionCall.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UNiagaraNodeFunctionCall(Z_Construct_UClass_UNiagaraNodeFunctionCall, TEXT("UNiagaraNodeFunctionCall"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UNiagaraNodeFunctionCall);
	UClass* Z_Construct_UClass_UDEPRECATED_NiagaraNodeGetAttr_NoRegister()
	{
		return UDEPRECATED_NiagaraNodeGetAttr::StaticClass();
	}
	UClass* Z_Construct_UClass_UDEPRECATED_NiagaraNodeGetAttr()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UNiagaraNode();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UDEPRECATED_NiagaraNodeGetAttr::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x22080280;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_AttrName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AttrName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(AttrName, UDEPRECATED_NiagaraNodeGetAttr), 0x0000000000000000);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Niagara/NiagaraNodeGetAttr.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Niagara/NiagaraNodeGetAttr.h"));
				MetaData->SetValue(NewProp_AttrName, TEXT("ModuleRelativePath"), TEXT("Classes/Niagara/NiagaraNodeGetAttr.h"));
				MetaData->SetValue(NewProp_AttrName, TEXT("ToolTip"), TEXT("Name of attribute we are getting"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UDEPRECATED_NiagaraNodeGetAttr(Z_Construct_UClass_UDEPRECATED_NiagaraNodeGetAttr, TEXT("UDEPRECATED_NiagaraNodeGetAttr"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UDEPRECATED_NiagaraNodeGetAttr);
	UClass* Z_Construct_UClass_UNiagaraNodeInput_NoRegister()
	{
		return UNiagaraNodeInput::StaticClass();
	}
	UClass* Z_Construct_UClass_UNiagaraNodeInput()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UNiagaraNode();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UNiagaraNodeInput::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20880080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bExposeWhenConstant, UNiagaraNodeInput, uint8);
				UProperty* NewProp_bExposeWhenConstant = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bExposeWhenConstant"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bExposeWhenConstant, UNiagaraNodeInput), 0x0000000000000001, CPP_BOOL_PROPERTY_BITMASK(bExposeWhenConstant, UNiagaraNodeInput), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bCanBeExposed, UNiagaraNodeInput, uint8);
				UProperty* NewProp_bCanBeExposed = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bCanBeExposed"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bCanBeExposed, UNiagaraNodeInput), 0x0000000000000000, CPP_BOOL_PROPERTY_BITMASK(bCanBeExposed, UNiagaraNodeInput), sizeof(uint8), false);
				UProperty* NewProp_DataObjectDefault = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("DataObjectDefault"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(DataObjectDefault, UNiagaraNodeInput), 0x0002000000080009, Z_Construct_UClass_UNiagaraDataObject_NoRegister());
				UProperty* NewProp_MatrixDefault = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MatrixDefault"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(MatrixDefault, UNiagaraNodeInput), 0x0000000000000001, Z_Construct_UScriptStruct_FMatrix());
				UProperty* NewProp_VectorDefault = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("VectorDefault"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(VectorDefault, UNiagaraNodeInput), 0x0000000000000001, Z_Construct_UScriptStruct_FVector4());
				UProperty* NewProp_FloatDefault = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("FloatDefault"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(FloatDefault, UNiagaraNodeInput), 0x0000000000000001);
				UProperty* NewProp_Input = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Input"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Input, UNiagaraNodeInput), 0x0000000000000001, Z_Construct_UScriptStruct_FNiagaraVariableInfo());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Niagara/NiagaraNodeInput.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Niagara/NiagaraNodeInput.h"));
				MetaData->SetValue(NewProp_bExposeWhenConstant, TEXT("Category"), TEXT("Constant"));
				MetaData->SetValue(NewProp_bExposeWhenConstant, TEXT("editcondition"), TEXT("bCanBeExposed"));
				MetaData->SetValue(NewProp_bExposeWhenConstant, TEXT("ModuleRelativePath"), TEXT("Classes/Niagara/NiagaraNodeInput.h"));
				MetaData->SetValue(NewProp_bExposeWhenConstant, TEXT("ToolTip"), TEXT("When true, and this input is a constant, the input is exposed to the effect editor."));
				MetaData->SetValue(NewProp_bCanBeExposed, TEXT("ModuleRelativePath"), TEXT("Classes/Niagara/NiagaraNodeInput.h"));
				MetaData->SetValue(NewProp_bCanBeExposed, TEXT("ToolTip"), TEXT("Allows code to explicitly disable exposing of certain inputs e.g. system constants such as Delta Time."));
				MetaData->SetValue(NewProp_DataObjectDefault, TEXT("Category"), TEXT("Constant"));
				MetaData->SetValue(NewProp_DataObjectDefault, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_DataObjectDefault, TEXT("ModuleRelativePath"), TEXT("Classes/Niagara/NiagaraNodeInput.h"));
				MetaData->SetValue(NewProp_MatrixDefault, TEXT("Category"), TEXT("Constant"));
				MetaData->SetValue(NewProp_MatrixDefault, TEXT("ModuleRelativePath"), TEXT("Classes/Niagara/NiagaraNodeInput.h"));
				MetaData->SetValue(NewProp_VectorDefault, TEXT("Category"), TEXT("Constant"));
				MetaData->SetValue(NewProp_VectorDefault, TEXT("ModuleRelativePath"), TEXT("Classes/Niagara/NiagaraNodeInput.h"));
				MetaData->SetValue(NewProp_FloatDefault, TEXT("Category"), TEXT("Constant"));
				MetaData->SetValue(NewProp_FloatDefault, TEXT("ModuleRelativePath"), TEXT("Classes/Niagara/NiagaraNodeInput.h"));
				MetaData->SetValue(NewProp_FloatDefault, TEXT("ToolTip"), TEXT("TODO: Customize the details for this and hide these when they're not relevant."));
				MetaData->SetValue(NewProp_Input, TEXT("Category"), TEXT("Input"));
				MetaData->SetValue(NewProp_Input, TEXT("ModuleRelativePath"), TEXT("Classes/Niagara/NiagaraNodeInput.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UNiagaraNodeInput(Z_Construct_UClass_UNiagaraNodeInput, TEXT("UNiagaraNodeInput"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UNiagaraNodeInput);
	UClass* Z_Construct_UClass_UNiagaraNodeOp_NoRegister()
	{
		return UNiagaraNodeOp::StaticClass();
	}
	UClass* Z_Construct_UClass_UNiagaraNodeOp()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UNiagaraNode();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UNiagaraNodeOp::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_OpName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OpName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(OpName, UNiagaraNodeOp), 0x0000000000000000);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Niagara/NiagaraNodeOp.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Niagara/NiagaraNodeOp.h"));
				MetaData->SetValue(NewProp_OpName, TEXT("ModuleRelativePath"), TEXT("Classes/Niagara/NiagaraNodeOp.h"));
				MetaData->SetValue(NewProp_OpName, TEXT("ToolTip"), TEXT("Name of operation"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UNiagaraNodeOp(Z_Construct_UClass_UNiagaraNodeOp, TEXT("UNiagaraNodeOp"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UNiagaraNodeOp);
	UClass* Z_Construct_UClass_UNiagaraNodeOutput_NoRegister()
	{
		return UNiagaraNodeOutput::StaticClass();
	}
	UClass* Z_Construct_UClass_UNiagaraNodeOutput()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UNiagaraNode();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UNiagaraNodeOutput::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_Outputs = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Outputs"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(Outputs, UNiagaraNodeOutput), 0x0000000000000001);
				UProperty* NewProp_Outputs_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Outputs, TEXT("Outputs"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FNiagaraVariableInfo());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Niagara/NiagaraNodeOutput.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Niagara/NiagaraNodeOutput.h"));
				MetaData->SetValue(NewProp_Outputs, TEXT("Category"), TEXT("Output"));
				MetaData->SetValue(NewProp_Outputs, TEXT("ModuleRelativePath"), TEXT("Classes/Niagara/NiagaraNodeOutput.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UNiagaraNodeOutput(Z_Construct_UClass_UNiagaraNodeOutput, TEXT("UNiagaraNodeOutput"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UNiagaraNodeOutput);
	UClass* Z_Construct_UClass_UDEPRECATED_NiagaraNodeOutputUpdate_NoRegister()
	{
		return UDEPRECATED_NiagaraNodeOutputUpdate::StaticClass();
	}
	UClass* Z_Construct_UClass_UDEPRECATED_NiagaraNodeOutputUpdate()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UNiagaraNode();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UDEPRECATED_NiagaraNodeOutputUpdate::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x22080280;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Niagara/NiagaraNodeOutputUpdate.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Niagara/NiagaraNodeOutputUpdate.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UDEPRECATED_NiagaraNodeOutputUpdate(Z_Construct_UClass_UDEPRECATED_NiagaraNodeOutputUpdate, TEXT("UDEPRECATED_NiagaraNodeOutputUpdate"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UDEPRECATED_NiagaraNodeOutputUpdate);
	UClass* Z_Construct_UClass_UNiagaraScriptSource_NoRegister()
	{
		return UNiagaraScriptSource::StaticClass();
	}
	UClass* Z_Construct_UClass_UNiagaraScriptSource()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UNiagaraScriptSourceBase();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UNiagaraScriptSource::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_NodeGraph = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("NodeGraph"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(NodeGraph, UNiagaraScriptSource), 0x0000000000000000, Z_Construct_UClass_UNiagaraGraph_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Niagara/NiagaraScriptSource.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Niagara/NiagaraScriptSource.h"));
				MetaData->SetValue(NewProp_NodeGraph, TEXT("ModuleRelativePath"), TEXT("Classes/Niagara/NiagaraScriptSource.h"));
				MetaData->SetValue(NewProp_NodeGraph, TEXT("ToolTip"), TEXT("Graph for particle update expression"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UNiagaraScriptSource(Z_Construct_UClass_UNiagaraScriptSource, TEXT("UNiagaraScriptSource"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UNiagaraScriptSource);
	UClass* Z_Construct_UClass_UObjectExporterT3D_NoRegister()
	{
		return UObjectExporterT3D::StaticClass();
	}
	UClass* Z_Construct_UClass_UObjectExporterT3D()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UExporter();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UObjectExporterT3D::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000088;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Exporters/ObjectExporterT3D.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Exporters/ObjectExporterT3D.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UObjectExporterT3D(Z_Construct_UClass_UObjectExporterT3D, TEXT("UObjectExporterT3D"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UObjectExporterT3D);
	UClass* Z_Construct_UClass_UParticleSystemAuditCommandlet_NoRegister()
	{
		return UParticleSystemAuditCommandlet::StaticClass();
	}
	UClass* Z_Construct_UClass_UParticleSystemAuditCommandlet()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UCommandlet();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UParticleSystemAuditCommandlet::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x2000008C;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_FarLODDistanceTheshold = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("FarLODDistanceTheshold"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(FarLODDistanceTheshold, UParticleSystemAuditCommandlet), 0x0000000000004000);
				UProperty* NewProp_HighSpawnRateOrBurstThreshold = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("HighSpawnRateOrBurstThreshold"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(HighSpawnRateOrBurstThreshold, UParticleSystemAuditCommandlet), 0x0000000000004000);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->ClassConfigName = FName(TEXT("Editor"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Commandlets/ParticleSystemAuditCommandlet.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Commandlets/ParticleSystemAuditCommandlet.h"));
				MetaData->SetValue(NewProp_FarLODDistanceTheshold, TEXT("ModuleRelativePath"), TEXT("Classes/Commandlets/ParticleSystemAuditCommandlet.h"));
				MetaData->SetValue(NewProp_FarLODDistanceTheshold, TEXT("ToolTip"), TEXT("If a particle system has an LODDistance larger than this value, it will be reported"));
				MetaData->SetValue(NewProp_HighSpawnRateOrBurstThreshold, TEXT("ModuleRelativePath"), TEXT("Classes/Commandlets/ParticleSystemAuditCommandlet.h"));
				MetaData->SetValue(NewProp_HighSpawnRateOrBurstThreshold, TEXT("ToolTip"), TEXT("If a particle system has a spawn rate or burst count greater than this value, it will be reported"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UParticleSystemAuditCommandlet(Z_Construct_UClass_UParticleSystemAuditCommandlet, TEXT("UParticleSystemAuditCommandlet"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UParticleSystemAuditCommandlet);
	UClass* Z_Construct_UClass_UPersonaOptions_NoRegister()
	{
		return UPersonaOptions::StaticClass();
	}
	UClass* Z_Construct_UClass_UPersonaOptions()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UPersonaOptions::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100084;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_BranchingPointTimingNodeColor = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("BranchingPointTimingNodeColor"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(BranchingPointTimingNodeColor, UPersonaOptions), 0x0000000000004001, Z_Construct_UScriptStruct_FLinearColor());
				UProperty* NewProp_NotifyTimingNodeColor = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("NotifyTimingNodeColor"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(NotifyTimingNodeColor, UPersonaOptions), 0x0000000000004001, Z_Construct_UScriptStruct_FLinearColor());
				UProperty* NewProp_SectionTimingNodeColor = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SectionTimingNodeColor"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(SectionTimingNodeColor, UPersonaOptions), 0x0000000000004001, Z_Construct_UScriptStruct_FLinearColor());
				UProperty* NewProp_DefaultLocalAxesSelection = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("DefaultLocalAxesSelection"), RF_Public|RF_Transient|RF_Native) UUInt32Property(CPP_PROPERTY_BASE(DefaultLocalAxesSelection, UPersonaOptions), 0x0000000000004001);
				UProperty* NewProp_ViewFOV = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ViewFOV"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(ViewFOV, UPersonaOptions), 0x0000000000004001);
				UProperty* NewProp_ViewportBackgroundColor = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ViewportBackgroundColor"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(ViewportBackgroundColor, UPersonaOptions), 0x0000000000004001, Z_Construct_UScriptStruct_FLinearColor());
				UProperty* NewProp_ViewModeIndex = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ViewModeIndex"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(ViewModeIndex, UPersonaOptions), 0x0000000000004001, Z_Construct_UEnum_Engine_EViewModeIndex());
				UProperty* NewProp_GridSize = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("GridSize"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(GridSize, UPersonaOptions), 0x0000000000004001);
				UProperty* NewProp_ShowMeshStats = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ShowMeshStats"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(ShowMeshStats, UPersonaOptions), 0x0000000000004001);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bMuteAudio, UPersonaOptions, uint8);
				UProperty* NewProp_bMuteAudio = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bMuteAudio"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bMuteAudio, UPersonaOptions), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(bMuteAudio, UPersonaOptions), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bHighlightOrigin, UPersonaOptions, uint8);
				UProperty* NewProp_bHighlightOrigin = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bHighlightOrigin"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bHighlightOrigin, UPersonaOptions), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(bHighlightOrigin, UPersonaOptions), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bShowGrid, UPersonaOptions, uint8);
				UProperty* NewProp_bShowGrid = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bShowGrid"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bShowGrid, UPersonaOptions), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(bShowGrid, UPersonaOptions), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bShowSky, UPersonaOptions, uint8);
				UProperty* NewProp_bShowSky = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bShowSky"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bShowSky, UPersonaOptions), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(bShowSky, UPersonaOptions), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bShowFloor, UPersonaOptions, uint8);
				UProperty* NewProp_bShowFloor = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bShowFloor"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bShowFloor, UPersonaOptions), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(bShowFloor, UPersonaOptions), sizeof(uint8), false);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->ClassConfigName = FName(TEXT("EditorPerProjectUserSettings"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Preferences/PersonaOptions.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/PersonaOptions.h"));
				MetaData->SetValue(NewProp_BranchingPointTimingNodeColor, TEXT("Category"), TEXT("Options"));
				MetaData->SetValue(NewProp_BranchingPointTimingNodeColor, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/PersonaOptions.h"));
				MetaData->SetValue(NewProp_NotifyTimingNodeColor, TEXT("Category"), TEXT("Options"));
				MetaData->SetValue(NewProp_NotifyTimingNodeColor, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/PersonaOptions.h"));
				MetaData->SetValue(NewProp_SectionTimingNodeColor, TEXT("Category"), TEXT("Options"));
				MetaData->SetValue(NewProp_SectionTimingNodeColor, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/PersonaOptions.h"));
				MetaData->SetValue(NewProp_DefaultLocalAxesSelection, TEXT("Category"), TEXT("Options"));
				MetaData->SetValue(NewProp_DefaultLocalAxesSelection, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/PersonaOptions.h"));
				MetaData->SetValue(NewProp_ViewFOV, TEXT("Category"), TEXT("Options"));
				MetaData->SetValue(NewProp_ViewFOV, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/PersonaOptions.h"));
				MetaData->SetValue(NewProp_ViewportBackgroundColor, TEXT("Category"), TEXT("Options"));
				MetaData->SetValue(NewProp_ViewportBackgroundColor, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/PersonaOptions.h"));
				MetaData->SetValue(NewProp_ViewModeIndex, TEXT("Category"), TEXT("Options"));
				MetaData->SetValue(NewProp_ViewModeIndex, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/PersonaOptions.h"));
				MetaData->SetValue(NewProp_GridSize, TEXT("Category"), TEXT("Options"));
				MetaData->SetValue(NewProp_GridSize, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/PersonaOptions.h"));
				MetaData->SetValue(NewProp_ShowMeshStats, TEXT("Category"), TEXT("Options"));
				MetaData->SetValue(NewProp_ShowMeshStats, TEXT("ClampMax"), TEXT("2"));
				MetaData->SetValue(NewProp_ShowMeshStats, TEXT("ClampMin"), TEXT("0"));
				MetaData->SetValue(NewProp_ShowMeshStats, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/PersonaOptions.h"));
				MetaData->SetValue(NewProp_ShowMeshStats, TEXT("ToolTip"), TEXT("currently Stats can have None, Basic and Detailed. Please refer to EDisplayInfoMode."));
				MetaData->SetValue(NewProp_ShowMeshStats, TEXT("UIMax"), TEXT("2"));
				MetaData->SetValue(NewProp_ShowMeshStats, TEXT("UIMin"), TEXT("0"));
				MetaData->SetValue(NewProp_bMuteAudio, TEXT("Category"), TEXT("Options"));
				MetaData->SetValue(NewProp_bMuteAudio, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/PersonaOptions.h"));
				MetaData->SetValue(NewProp_bHighlightOrigin, TEXT("Category"), TEXT("Options"));
				MetaData->SetValue(NewProp_bHighlightOrigin, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/PersonaOptions.h"));
				MetaData->SetValue(NewProp_bShowGrid, TEXT("Category"), TEXT("Options"));
				MetaData->SetValue(NewProp_bShowGrid, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/PersonaOptions.h"));
				MetaData->SetValue(NewProp_bShowSky, TEXT("Category"), TEXT("Options"));
				MetaData->SetValue(NewProp_bShowSky, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/PersonaOptions.h"));
				MetaData->SetValue(NewProp_bShowFloor, TEXT("Category"), TEXT("Options"));
				MetaData->SetValue(NewProp_bShowFloor, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/PersonaOptions.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UPersonaOptions(Z_Construct_UClass_UPersonaOptions, TEXT("UPersonaOptions"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UPersonaOptions);
	UClass* Z_Construct_UClass_UPhATSimOptions_NoRegister()
	{
		return UPhATSimOptions::StaticClass();
	}
	UClass* Z_Construct_UClass_UPhATSimOptions()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UPhATSimOptions::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100084;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_ConstraintDrawSize = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ConstraintDrawSize"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(ConstraintDrawSize, UPhATSimOptions), 0x0000000000004001);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bShowNamesInHierarchy, UPhATSimOptions, uint8);
				UProperty* NewProp_bShowNamesInHierarchy = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bShowNamesInHierarchy"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bShowNamesInHierarchy, UPhATSimOptions), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(bShowNamesInHierarchy, UPhATSimOptions), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bShowConstraintsAsPoints, UPhATSimOptions, uint8);
				UProperty* NewProp_bShowConstraintsAsPoints = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bShowConstraintsAsPoints"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bShowConstraintsAsPoints, UPhATSimOptions), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(bShowConstraintsAsPoints, UPhATSimOptions), sizeof(uint8), false);
				UProperty* NewProp_PokeStrength = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("PokeStrength"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(PokeStrength, UPhATSimOptions), 0x0000000000004001);
				UProperty* NewProp_InterpolationSpeed = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("InterpolationSpeed"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(InterpolationSpeed, UPhATSimOptions), 0x0000000000004001);
				UProperty* NewProp_HandleAngularStiffness = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("HandleAngularStiffness"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(HandleAngularStiffness, UPhATSimOptions), 0x0000000000004001);
				UProperty* NewProp_HandleAngularDamping = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("HandleAngularDamping"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(HandleAngularDamping, UPhATSimOptions), 0x0000000000004001);
				UProperty* NewProp_HandleLinearStiffness = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("HandleLinearStiffness"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(HandleLinearStiffness, UPhATSimOptions), 0x0000000000004001);
				UProperty* NewProp_HandleLinearDamping = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("HandleLinearDamping"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(HandleLinearDamping, UPhATSimOptions), 0x0000000000004001);
				UProperty* NewProp_TimeDilation = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("TimeDilation"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(TimeDilation, UPhATSimOptions), 0x0000000000004001);
				UProperty* NewProp_MaxFPS = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MaxFPS"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(MaxFPS, UPhATSimOptions), 0x0000000000004001);
				UProperty* NewProp_GravScale = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("GravScale"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(GravScale, UPhATSimOptions), 0x0000000000004001);
				UProperty* NewProp_FloorGap = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("FloorGap"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(FloorGap, UPhATSimOptions), 0x0000000000024001);
				UProperty* NewProp_PokeBlendTime = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("PokeBlendTime"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(PokeBlendTime, UPhATSimOptions), 0x0000000000004001);
				UProperty* NewProp_PokePauseTime = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("PokePauseTime"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(PokePauseTime, UPhATSimOptions), 0x0000000000004001);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bUpdateJointsFromAnimation, UPhATSimOptions, bool);
				UProperty* NewProp_bUpdateJointsFromAnimation = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bUpdateJointsFromAnimation"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bUpdateJointsFromAnimation, UPhATSimOptions), 0x0000000000002001, CPP_BOOL_PROPERTY_BITMASK(bUpdateJointsFromAnimation, UPhATSimOptions), sizeof(bool), true);
				UProperty* NewProp_PhysicsBlend = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("PhysicsBlend"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(PhysicsBlend, UPhATSimOptions), 0x0000000000002001);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->ClassConfigName = FName(TEXT("EditorPerProjectUserSettings"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Preferences/PhATSimOptions.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/PhATSimOptions.h"));
				MetaData->SetValue(NewProp_ConstraintDrawSize, TEXT("Category"), TEXT("Drawing"));
				MetaData->SetValue(NewProp_ConstraintDrawSize, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/PhATSimOptions.h"));
				MetaData->SetValue(NewProp_ConstraintDrawSize, TEXT("ToolTip"), TEXT("Controls how large constraints are drawn in PhAT"));
				MetaData->SetValue(NewProp_bShowNamesInHierarchy, TEXT("Category"), TEXT("Advanced"));
				MetaData->SetValue(NewProp_bShowNamesInHierarchy, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/PhATSimOptions.h"));
				MetaData->SetValue(NewProp_bShowNamesInHierarchy, TEXT("ToolTip"), TEXT("Whether to draw bone names in the viewport"));
				MetaData->SetValue(NewProp_bShowConstraintsAsPoints, TEXT("Category"), TEXT("Advanced"));
				MetaData->SetValue(NewProp_bShowConstraintsAsPoints, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/PhATSimOptions.h"));
				MetaData->SetValue(NewProp_bShowConstraintsAsPoints, TEXT("ToolTip"), TEXT("Whether to draw constraints as points"));
				MetaData->SetValue(NewProp_PokeStrength, TEXT("Category"), TEXT("Poking"));
				MetaData->SetValue(NewProp_PokeStrength, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/PhATSimOptions.h"));
				MetaData->SetValue(NewProp_PokeStrength, TEXT("ToolTip"), TEXT("Strength of the impulse used when poking with left mouse button"));
				MetaData->SetValue(NewProp_InterpolationSpeed, TEXT("Category"), TEXT("MouseSpring"));
				MetaData->SetValue(NewProp_InterpolationSpeed, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/PhATSimOptions.h"));
				MetaData->SetValue(NewProp_InterpolationSpeed, TEXT("ToolTip"), TEXT("How quickly we interpolate the physics target transform for mouse spring forces"));
				MetaData->SetValue(NewProp_HandleAngularStiffness, TEXT("Category"), TEXT("MouseSpring"));
				MetaData->SetValue(NewProp_HandleAngularStiffness, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/PhATSimOptions.h"));
				MetaData->SetValue(NewProp_HandleAngularStiffness, TEXT("ToolTip"), TEXT("Angular stiffness of mouse spring forces"));
				MetaData->SetValue(NewProp_HandleAngularDamping, TEXT("Category"), TEXT("MouseSpring"));
				MetaData->SetValue(NewProp_HandleAngularDamping, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/PhATSimOptions.h"));
				MetaData->SetValue(NewProp_HandleAngularDamping, TEXT("ToolTip"), TEXT("Angular damping of mouse spring forces"));
				MetaData->SetValue(NewProp_HandleLinearStiffness, TEXT("Category"), TEXT("MouseSpring"));
				MetaData->SetValue(NewProp_HandleLinearStiffness, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/PhATSimOptions.h"));
				MetaData->SetValue(NewProp_HandleLinearStiffness, TEXT("ToolTip"), TEXT("Linear stiffness of mouse spring forces"));
				MetaData->SetValue(NewProp_HandleLinearDamping, TEXT("Category"), TEXT("MouseSpring"));
				MetaData->SetValue(NewProp_HandleLinearDamping, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/PhATSimOptions.h"));
				MetaData->SetValue(NewProp_HandleLinearDamping, TEXT("ToolTip"), TEXT("Linear damping of mouse spring forces"));
				MetaData->SetValue(NewProp_TimeDilation, TEXT("Category"), TEXT("Simulation"));
				MetaData->SetValue(NewProp_TimeDilation, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/PhATSimOptions.h"));
				MetaData->SetValue(NewProp_TimeDilation, TEXT("ToolTip"), TEXT("Dilate time by scale"));
				MetaData->SetValue(NewProp_TimeDilation, TEXT("UIMin"), TEXT("0"));
				MetaData->SetValue(NewProp_MaxFPS, TEXT("Category"), TEXT("Simulation"));
				MetaData->SetValue(NewProp_MaxFPS, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/PhATSimOptions.h"));
				MetaData->SetValue(NewProp_MaxFPS, TEXT("ToolTip"), TEXT("Max FPS for simulation in PhAT. This is helpful for targeting the same FPS as your game. -1 means disabled"));
				MetaData->SetValue(NewProp_GravScale, TEXT("Category"), TEXT("Simulation"));
				MetaData->SetValue(NewProp_GravScale, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/PhATSimOptions.h"));
				MetaData->SetValue(NewProp_GravScale, TEXT("ToolTip"), TEXT("Scale factor for the gravity used in the simulation"));
				MetaData->SetValue(NewProp_FloorGap, TEXT("Category"), TEXT("Simulation"));
				MetaData->SetValue(NewProp_FloorGap, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/PhATSimOptions.h"));
				MetaData->SetValue(NewProp_FloorGap, TEXT("ToolTip"), TEXT("The gap between the floor & physics object (requires restart of PhAT)"));
				MetaData->SetValue(NewProp_PokeBlendTime, TEXT("Category"), TEXT("Anim"));
				MetaData->SetValue(NewProp_PokeBlendTime, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/PhATSimOptions.h"));
				MetaData->SetValue(NewProp_PokeBlendTime, TEXT("ToolTip"), TEXT("Time taken to blend from physics to animation."));
				MetaData->SetValue(NewProp_PokePauseTime, TEXT("Category"), TEXT("Anim"));
				MetaData->SetValue(NewProp_PokePauseTime, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/PhATSimOptions.h"));
				MetaData->SetValue(NewProp_PokePauseTime, TEXT("ToolTip"), TEXT("Time between poking ragdoll and starting to blend back."));
				MetaData->SetValue(NewProp_bUpdateJointsFromAnimation, TEXT("Category"), TEXT("Anim"));
				MetaData->SetValue(NewProp_bUpdateJointsFromAnimation, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/PhATSimOptions.h"));
				MetaData->SetValue(NewProp_bUpdateJointsFromAnimation, TEXT("ToolTip"), TEXT("Lets you manually control the physics/animation"));
				MetaData->SetValue(NewProp_PhysicsBlend, TEXT("Category"), TEXT("Anim"));
				MetaData->SetValue(NewProp_PhysicsBlend, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/PhATSimOptions.h"));
				MetaData->SetValue(NewProp_PhysicsBlend, TEXT("ToolTip"), TEXT("Lets you manually control the physics/animation"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UPhATSimOptions(Z_Construct_UClass_UPhATSimOptions, TEXT("UPhATSimOptions"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UPhATSimOptions);
	UClass* Z_Construct_UClass_UPkgInfoCommandlet_NoRegister()
	{
		return UPkgInfoCommandlet::StaticClass();
	}
	UClass* Z_Construct_UClass_UPkgInfoCommandlet()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UCommandlet();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UPkgInfoCommandlet::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000088;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Commandlets/PkgInfoCommandlet.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Commandlets/PkgInfoCommandlet.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UPkgInfoCommandlet(Z_Construct_UClass_UPkgInfoCommandlet, TEXT("UPkgInfoCommandlet"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UPkgInfoCommandlet);
	UClass* Z_Construct_UClass_UPolysExporterOBJ_NoRegister()
	{
		return UPolysExporterOBJ::StaticClass();
	}
	UClass* Z_Construct_UClass_UPolysExporterOBJ()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UExporter();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UPolysExporterOBJ::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000088;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Exporters/PolysExporterOBJ.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Exporters/PolysExporterOBJ.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UPolysExporterOBJ(Z_Construct_UClass_UPolysExporterOBJ, TEXT("UPolysExporterOBJ"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UPolysExporterOBJ);
	UClass* Z_Construct_UClass_UPolysExporterT3D_NoRegister()
	{
		return UPolysExporterT3D::StaticClass();
	}
	UClass* Z_Construct_UClass_UPolysExporterT3D()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UExporter();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UPolysExporterT3D::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000088;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Exporters/PolysExporterT3D.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Exporters/PolysExporterT3D.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UPolysExporterT3D(Z_Construct_UClass_UPolysExporterT3D, TEXT("UPolysExporterT3D"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UPolysExporterT3D);
	UClass* Z_Construct_UClass_UPreviewMaterial_NoRegister()
	{
		return UPreviewMaterial::StaticClass();
	}
	UClass* Z_Construct_UClass_UPreviewMaterial()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UMaterial();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UPreviewMaterial::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("MaterialEditor/PreviewMaterial.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/MaterialEditor/PreviewMaterial.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UPreviewMaterial(Z_Construct_UClass_UPreviewMaterial, TEXT("UPreviewMaterial"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UPreviewMaterial);
	UEnum* Z_Construct_UEnum_UnrealEd_EProjectPackagingInternationalizationPresets()
	{
		UPackage* Outer=Z_Construct_UPackage_UnrealEd();
		extern uint32 Get_Z_Construct_UEnum_UnrealEd_EProjectPackagingInternationalizationPresets_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("EProjectPackagingInternationalizationPresets"), 0, Get_Z_Construct_UEnum_UnrealEd_EProjectPackagingInternationalizationPresets_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EProjectPackagingInternationalizationPresets"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EProjectPackagingInternationalizationPresets::English")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EProjectPackagingInternationalizationPresets::EFIGS")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EProjectPackagingInternationalizationPresets::EFIGSCJK")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EProjectPackagingInternationalizationPresets::CJK")), 3));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EProjectPackagingInternationalizationPresets::All")), 4));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EProjectPackagingInternationalizationPresets::EProjectPackagingInternationalizationPresets_MAX")), 5));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::EnumClass);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("All.ToolTip"), TEXT("All known cultures."));
			MetaData->SetValue(ReturnEnum, TEXT("CJK.ToolTip"), TEXT("Chinese, Japanese, Korean."));
			MetaData->SetValue(ReturnEnum, TEXT("EFIGS.ToolTip"), TEXT("English, French, Italian, German, Spanish."));
			MetaData->SetValue(ReturnEnum, TEXT("EFIGSCJK.ToolTip"), TEXT("English, French, Italian, German, Spanish, Chinese, Japanese, Korean."));
			MetaData->SetValue(ReturnEnum, TEXT("English.ToolTip"), TEXT("English only."));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/ProjectPackagingSettings.h"));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("Enumerates the the available internationalization data presets for project packaging."));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_UnrealEd_EProjectPackagingInternationalizationPresets_CRC() { return 4262530666U; }
	UEnum* Z_Construct_UEnum_UnrealEd_EProjectPackagingBuildConfigurations()
	{
		UPackage* Outer=Z_Construct_UPackage_UnrealEd();
		extern uint32 Get_Z_Construct_UEnum_UnrealEd_EProjectPackagingBuildConfigurations_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("EProjectPackagingBuildConfigurations"), 0, Get_Z_Construct_UEnum_UnrealEd_EProjectPackagingBuildConfigurations_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EProjectPackagingBuildConfigurations"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("PPBC_DebugGame")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("PPBC_Development")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("PPBC_Shipping")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("PPBC_MAX")), 3));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Regular);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/ProjectPackagingSettings.h"));
			MetaData->SetValue(ReturnEnum, TEXT("PPBC_DebugGame.DisplayName"), TEXT("DebugGame"));
			MetaData->SetValue(ReturnEnum, TEXT("PPBC_DebugGame.ToolTip"), TEXT("Debug configuration."));
			MetaData->SetValue(ReturnEnum, TEXT("PPBC_Development.DisplayName"), TEXT("Development"));
			MetaData->SetValue(ReturnEnum, TEXT("PPBC_Development.ToolTip"), TEXT("Development configuration."));
			MetaData->SetValue(ReturnEnum, TEXT("PPBC_Shipping.DisplayName"), TEXT("Shipping"));
			MetaData->SetValue(ReturnEnum, TEXT("PPBC_Shipping.ToolTip"), TEXT("Shipping configuration."));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("Enumerates the available build configurations for project packaging."));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_UnrealEd_EProjectPackagingBuildConfigurations_CRC() { return 2457604130U; }
	UClass* Z_Construct_UClass_UProjectPackagingSettings_NoRegister()
	{
		return UProjectPackagingSettings::StaticClass();
	}
	UClass* Z_Construct_UClass_UProjectPackagingSettings()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UProjectPackagingSettings::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100086;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_DirectoriesToAlwaysStageAsNonUFS = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("DirectoriesToAlwaysStageAsNonUFS"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(DirectoriesToAlwaysStageAsNonUFS, UProjectPackagingSettings), 0x0000040000004001);
				UProperty* NewProp_DirectoriesToAlwaysStageAsNonUFS_Inner = new(EC_InternalUseOnlyConstructor, NewProp_DirectoriesToAlwaysStageAsNonUFS, TEXT("DirectoriesToAlwaysStageAsNonUFS"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000004000, Z_Construct_UScriptStruct_FDirectoryPath());
				UProperty* NewProp_DirectoriesToAlwaysStageAsUFS = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("DirectoriesToAlwaysStageAsUFS"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(DirectoriesToAlwaysStageAsUFS, UProjectPackagingSettings), 0x0000040000004001);
				UProperty* NewProp_DirectoriesToAlwaysStageAsUFS_Inner = new(EC_InternalUseOnlyConstructor, NewProp_DirectoriesToAlwaysStageAsUFS, TEXT("DirectoriesToAlwaysStageAsUFS"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000004000, Z_Construct_UScriptStruct_FDirectoryPath());
				UProperty* NewProp_DirectoriesToAlwaysCook = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("DirectoriesToAlwaysCook"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(DirectoriesToAlwaysCook, UProjectPackagingSettings), 0x0000040000004001);
				UProperty* NewProp_DirectoriesToAlwaysCook_Inner = new(EC_InternalUseOnlyConstructor, NewProp_DirectoriesToAlwaysCook, TEXT("DirectoriesToAlwaysCook"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000004000, Z_Construct_UScriptStruct_FDirectoryPath());
				UProperty* NewProp_MapsToCook = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MapsToCook"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(MapsToCook, UProjectPackagingSettings), 0x0000040000004001);
				UProperty* NewProp_MapsToCook_Inner = new(EC_InternalUseOnlyConstructor, NewProp_MapsToCook, TEXT("MapsToCook"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000004000, Z_Construct_UScriptStruct_FFilePath());
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bCompressed, UProjectPackagingSettings, bool);
				UProperty* NewProp_bCompressed = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bCompressed"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bCompressed, UProjectPackagingSettings), 0x0000040000004001, CPP_BOOL_PROPERTY_BITMASK(bCompressed, UProjectPackagingSettings), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bCookMapsOnly, UProjectPackagingSettings, bool);
				UProperty* NewProp_bCookMapsOnly = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bCookMapsOnly"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bCookMapsOnly, UProjectPackagingSettings), 0x0000040000004001, CPP_BOOL_PROPERTY_BITMASK(bCookMapsOnly, UProjectPackagingSettings), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bCookAll, UProjectPackagingSettings, bool);
				UProperty* NewProp_bCookAll = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bCookAll"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bCookAll, UProjectPackagingSettings), 0x0000040000004001, CPP_BOOL_PROPERTY_BITMASK(bCookAll, UProjectPackagingSettings), sizeof(bool), true);
				UProperty* NewProp_DefaultCulture = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("DefaultCulture"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(DefaultCulture, UProjectPackagingSettings), 0x0000040000004001);
				UProperty* NewProp_CulturesToStage = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CulturesToStage"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(CulturesToStage, UProjectPackagingSettings), 0x0000040000004001);
				UProperty* NewProp_CulturesToStage_Inner = new(EC_InternalUseOnlyConstructor, NewProp_CulturesToStage, TEXT("CulturesToStage"), RF_Public|RF_Transient|RF_Native) UStrProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000004000);
				UProperty* NewProp_InternationalizationPreset = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("InternationalizationPreset"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(InternationalizationPreset, UProjectPackagingSettings), 0x0000040000004001, Z_Construct_UEnum_UnrealEd_EProjectPackagingInternationalizationPresets());
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(IncludeCrashReporter, UProjectPackagingSettings, bool);
				UProperty* NewProp_IncludeCrashReporter = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("IncludeCrashReporter"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(IncludeCrashReporter, UProjectPackagingSettings), 0x0000040000004001, CPP_BOOL_PROPERTY_BITMASK(IncludeCrashReporter, UProjectPackagingSettings), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(IncludePrerequisites, UProjectPackagingSettings, bool);
				UProperty* NewProp_IncludePrerequisites = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("IncludePrerequisites"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(IncludePrerequisites, UProjectPackagingSettings), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(IncludePrerequisites, UProjectPackagingSettings), sizeof(bool), true);
				UProperty* NewProp_HttpChunkInstallDataVersion = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("HttpChunkInstallDataVersion"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(HttpChunkInstallDataVersion, UProjectPackagingSettings), 0x0000000000004001);
				UProperty* NewProp_HttpChunkInstallDataDirectory = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("HttpChunkInstallDataDirectory"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(HttpChunkInstallDataDirectory, UProjectPackagingSettings), 0x0000000000004001, Z_Construct_UScriptStruct_FDirectoryPath());
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bBuildHttpChunkInstallData, UProjectPackagingSettings, bool);
				UProperty* NewProp_bBuildHttpChunkInstallData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bBuildHttpChunkInstallData"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bBuildHttpChunkInstallData, UProjectPackagingSettings), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(bBuildHttpChunkInstallData, UProjectPackagingSettings), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bGenerateChunks, UProjectPackagingSettings, bool);
				UProperty* NewProp_bGenerateChunks = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bGenerateChunks"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bGenerateChunks, UProjectPackagingSettings), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(bGenerateChunks, UProjectPackagingSettings), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(UsePakFile, UProjectPackagingSettings, bool);
				UProperty* NewProp_UsePakFile = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("UsePakFile"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(UsePakFile, UProjectPackagingSettings), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(UsePakFile, UProjectPackagingSettings), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(IncludeDebugFiles, UProjectPackagingSettings, bool);
				UProperty* NewProp_IncludeDebugFiles = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("IncludeDebugFiles"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(IncludeDebugFiles, UProjectPackagingSettings), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(IncludeDebugFiles, UProjectPackagingSettings), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(ForDistribution, UProjectPackagingSettings, bool);
				UProperty* NewProp_ForDistribution = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ForDistribution"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ForDistribution, UProjectPackagingSettings), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(ForDistribution, UProjectPackagingSettings), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(FullRebuild, UProjectPackagingSettings, bool);
				UProperty* NewProp_FullRebuild = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("FullRebuild"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(FullRebuild, UProjectPackagingSettings), 0x0000000000004001, CPP_BOOL_PROPERTY_BITMASK(FullRebuild, UProjectPackagingSettings), sizeof(bool), true);
				UProperty* NewProp_StagingDirectory = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("StagingDirectory"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(StagingDirectory, UProjectPackagingSettings), 0x0000000000004001, Z_Construct_UScriptStruct_FDirectoryPath());
				UProperty* NewProp_BuildConfiguration = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("BuildConfiguration"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(BuildConfiguration, UProjectPackagingSettings), 0x0000000000004001, Z_Construct_UEnum_UnrealEd_EProjectPackagingBuildConfigurations());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->ClassConfigName = FName(TEXT("Game"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Settings/ProjectPackagingSettings.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/ProjectPackagingSettings.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Implements the Editor's user settings."));
				MetaData->SetValue(NewProp_DirectoriesToAlwaysStageAsNonUFS, TEXT("Category"), TEXT("Packaging"));
				MetaData->SetValue(NewProp_DirectoriesToAlwaysStageAsNonUFS, TEXT("DisplayName"), TEXT("Additional Non-Asset Directories To Copy"));
				MetaData->SetValue(NewProp_DirectoriesToAlwaysStageAsNonUFS, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/ProjectPackagingSettings.h"));
				MetaData->SetValue(NewProp_DirectoriesToAlwaysStageAsNonUFS, TEXT("RelativeToGameContentDir"), TEXT(""));
				MetaData->SetValue(NewProp_DirectoriesToAlwaysStageAsNonUFS, TEXT("ToolTip"), TEXT("Directories containing files that should always be copied when packaging your project, but are not supposed to be part of the .pak file\nThis is used to stage additional files that you manually load without using the UFS (Unreal File System) file IO API, eg, third-party libraries that perform their own internal file IO\nNote: These paths are relative to your project Content directory"));
				MetaData->SetValue(NewProp_DirectoriesToAlwaysStageAsUFS, TEXT("Category"), TEXT("Packaging"));
				MetaData->SetValue(NewProp_DirectoriesToAlwaysStageAsUFS, TEXT("DisplayName"), TEXT("Additional Non-Asset Directories to Package"));
				MetaData->SetValue(NewProp_DirectoriesToAlwaysStageAsUFS, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/ProjectPackagingSettings.h"));
				MetaData->SetValue(NewProp_DirectoriesToAlwaysStageAsUFS, TEXT("RelativeToGameContentDir"), TEXT(""));
				MetaData->SetValue(NewProp_DirectoriesToAlwaysStageAsUFS, TEXT("ToolTip"), TEXT("Directories containing files that should always be added to the .pak file (if using a .pak file; otherwise they're copied as individual files)\nThis is used to stage additional files that you manually load via the UFS (Unreal File System) file IO API\nNote: These paths are relative to your project Content directory"));
				MetaData->SetValue(NewProp_DirectoriesToAlwaysCook, TEXT("Category"), TEXT("Packaging"));
				MetaData->SetValue(NewProp_DirectoriesToAlwaysCook, TEXT("DisplayName"), TEXT("Additional Asset Directories to Cook"));
				MetaData->SetValue(NewProp_DirectoriesToAlwaysCook, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/ProjectPackagingSettings.h"));
				MetaData->SetValue(NewProp_DirectoriesToAlwaysCook, TEXT("RelativeToGameContentDir"), TEXT(""));
				MetaData->SetValue(NewProp_DirectoriesToAlwaysCook, TEXT("ToolTip"), TEXT("Directories containing .uasset files that should always be cooked regardless of whether they're referenced by anything in your project\nNote: These paths are relative to your project Content directory"));
				MetaData->SetValue(NewProp_MapsToCook, TEXT("Category"), TEXT("Packaging"));
				MetaData->SetValue(NewProp_MapsToCook, TEXT("DisplayName"), TEXT("List of maps to include in a packaged build"));
				MetaData->SetValue(NewProp_MapsToCook, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/ProjectPackagingSettings.h"));
				MetaData->SetValue(NewProp_MapsToCook, TEXT("RelativeToGameContentDir"), TEXT(""));
				MetaData->SetValue(NewProp_MapsToCook, TEXT("ToolTip"), TEXT("List of maps to include when no other map list is specified on commandline"));
				MetaData->SetValue(NewProp_bCompressed, TEXT("Category"), TEXT("Packaging"));
				MetaData->SetValue(NewProp_bCompressed, TEXT("DisplayName"), TEXT("Create compressed cooked packages"));
				MetaData->SetValue(NewProp_bCompressed, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/ProjectPackagingSettings.h"));
				MetaData->SetValue(NewProp_bCompressed, TEXT("ToolTip"), TEXT("Create compressed cooked packages (decreased deployment size)"));
				MetaData->SetValue(NewProp_bCookMapsOnly, TEXT("Category"), TEXT("Packaging"));
				MetaData->SetValue(NewProp_bCookMapsOnly, TEXT("DisplayName"), TEXT("Cook only maps (this only affects cookall)"));
				MetaData->SetValue(NewProp_bCookMapsOnly, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/ProjectPackagingSettings.h"));
				MetaData->SetValue(NewProp_bCookMapsOnly, TEXT("ToolTip"), TEXT("Cook only maps (this only affects the cookall flag)"));
				MetaData->SetValue(NewProp_bCookAll, TEXT("Category"), TEXT("Packaging"));
				MetaData->SetValue(NewProp_bCookAll, TEXT("DisplayName"), TEXT("Cook everything in the project content directory (ignore list of maps below)"));
				MetaData->SetValue(NewProp_bCookAll, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/ProjectPackagingSettings.h"));
				MetaData->SetValue(NewProp_bCookAll, TEXT("ToolTip"), TEXT("Cook all things in the project content directory"));
				MetaData->SetValue(NewProp_DefaultCulture, TEXT("Category"), TEXT("Packaging"));
				MetaData->SetValue(NewProp_DefaultCulture, TEXT("DisplayName"), TEXT("Package default localization"));
				MetaData->SetValue(NewProp_DefaultCulture, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/ProjectPackagingSettings.h"));
				MetaData->SetValue(NewProp_DefaultCulture, TEXT("ToolTip"), TEXT("Culture to use if no matching culture is found."));
				MetaData->SetValue(NewProp_CulturesToStage, TEXT("Category"), TEXT("Packaging"));
				MetaData->SetValue(NewProp_CulturesToStage, TEXT("DisplayName"), TEXT("Localizations to Package"));
				MetaData->SetValue(NewProp_CulturesToStage, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/ProjectPackagingSettings.h"));
				MetaData->SetValue(NewProp_CulturesToStage, TEXT("ToolTip"), TEXT("Cultures whose data should be cooked, staged, and packaged."));
				MetaData->SetValue(NewProp_InternationalizationPreset, TEXT("Category"), TEXT("Packaging"));
				MetaData->SetValue(NewProp_InternationalizationPreset, TEXT("DisplayName"), TEXT("Internationalization Support"));
				MetaData->SetValue(NewProp_InternationalizationPreset, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/ProjectPackagingSettings.h"));
				MetaData->SetValue(NewProp_InternationalizationPreset, TEXT("ToolTip"), TEXT("Predefined sets of culture whose internationalization data should be packaged."));
				MetaData->SetValue(NewProp_IncludeCrashReporter, TEXT("Category"), TEXT("Packaging"));
				MetaData->SetValue(NewProp_IncludeCrashReporter, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/ProjectPackagingSettings.h"));
				MetaData->SetValue(NewProp_IncludeCrashReporter, TEXT("ToolTip"), TEXT("Specifies whether to include the crash reporter in the packaged project.\nThis is included by default for Blueprint based projects, but can optionally be disabled."));
				MetaData->SetValue(NewProp_IncludePrerequisites, TEXT("Category"), TEXT("Packaging"));
				MetaData->SetValue(NewProp_IncludePrerequisites, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/ProjectPackagingSettings.h"));
				MetaData->SetValue(NewProp_IncludePrerequisites, TEXT("ToolTip"), TEXT("Specifies whether to include prerequisites of packaged games, such as redistributable operating system components, whenever possible."));
				MetaData->SetValue(NewProp_HttpChunkInstallDataVersion, TEXT("Category"), TEXT("Packaging"));
				MetaData->SetValue(NewProp_HttpChunkInstallDataVersion, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/ProjectPackagingSettings.h"));
				MetaData->SetValue(NewProp_HttpChunkInstallDataVersion, TEXT("ToolTip"), TEXT("Version name for HTTP Chunk Install Data."));
				MetaData->SetValue(NewProp_HttpChunkInstallDataDirectory, TEXT("Category"), TEXT("Packaging"));
				MetaData->SetValue(NewProp_HttpChunkInstallDataDirectory, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/ProjectPackagingSettings.h"));
				MetaData->SetValue(NewProp_HttpChunkInstallDataDirectory, TEXT("ToolTip"), TEXT("When \"Build HTTP Chunk Install Data\" is enabled this is the directory where the data will be build to."));
				MetaData->SetValue(NewProp_bBuildHttpChunkInstallData, TEXT("Category"), TEXT("Packaging"));
				MetaData->SetValue(NewProp_bBuildHttpChunkInstallData, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/ProjectPackagingSettings.h"));
				MetaData->SetValue(NewProp_bBuildHttpChunkInstallData, TEXT("ToolTip"), TEXT("If enabled, will generate data for HTTP Chunk Installer. This data can be hosted on webserver to be installed at runtime. Requires \"Generate Chunks\" enabled."));
				MetaData->SetValue(NewProp_bGenerateChunks, TEXT("Category"), TEXT("Packaging"));
				MetaData->SetValue(NewProp_bGenerateChunks, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/ProjectPackagingSettings.h"));
				MetaData->SetValue(NewProp_bGenerateChunks, TEXT("ToolTip"), TEXT("If enabled, will generate pak file chunks.  Assets can be assigned to chunks in the editor or via a delegate (See ShooterGameDelegates.cpp).\nCan be used for streaming installs (PS4 Playgo, XboxOne Streaming Install, etc)"));
				MetaData->SetValue(NewProp_UsePakFile, TEXT("Category"), TEXT("Packaging"));
				MetaData->SetValue(NewProp_UsePakFile, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/ProjectPackagingSettings.h"));
				MetaData->SetValue(NewProp_UsePakFile, TEXT("ToolTip"), TEXT("If enabled, all content will be put into a single .pak file instead of many individual files (default = enabled)."));
				MetaData->SetValue(NewProp_IncludeDebugFiles, TEXT("Category"), TEXT("Project"));
				MetaData->SetValue(NewProp_IncludeDebugFiles, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/ProjectPackagingSettings.h"));
				MetaData->SetValue(NewProp_IncludeDebugFiles, TEXT("ToolTip"), TEXT("If enabled, debug files will be included in the packaged game"));
				MetaData->SetValue(NewProp_ForDistribution, TEXT("Category"), TEXT("Project"));
				MetaData->SetValue(NewProp_ForDistribution, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/ProjectPackagingSettings.h"));
				MetaData->SetValue(NewProp_ForDistribution, TEXT("ToolTip"), TEXT("If enabled, a distribution build will be created and the shipping configuration will be used\nIf disabled, a development build will be created\nDistribution builds are for publishing to the App Store"));
				MetaData->SetValue(NewProp_FullRebuild, TEXT("Category"), TEXT("Project"));
				MetaData->SetValue(NewProp_FullRebuild, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/ProjectPackagingSettings.h"));
				MetaData->SetValue(NewProp_FullRebuild, TEXT("ToolTip"), TEXT("If enabled, a full rebuild will be enforced each time the project is being packaged.\nIf disabled, only modified files will be built, which can improve iteration time.\nUnless you iterate on packaging, we recommend full rebuilds when packaging."));
				MetaData->SetValue(NewProp_StagingDirectory, TEXT("Category"), TEXT("Project"));
				MetaData->SetValue(NewProp_StagingDirectory, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/ProjectPackagingSettings.h"));
				MetaData->SetValue(NewProp_StagingDirectory, TEXT("ToolTip"), TEXT("The directory to which the packaged project will be copied."));
				MetaData->SetValue(NewProp_BuildConfiguration, TEXT("Category"), TEXT("Project"));
				MetaData->SetValue(NewProp_BuildConfiguration, TEXT("ModuleRelativePath"), TEXT("Classes/Settings/ProjectPackagingSettings.h"));
				MetaData->SetValue(NewProp_BuildConfiguration, TEXT("ToolTip"), TEXT("The build configuration for which the project is packaged."));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UProjectPackagingSettings(Z_Construct_UClass_UProjectPackagingSettings, TEXT("UProjectPackagingSettings"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UProjectPackagingSettings);
	UEnum* Z_Construct_UEnum_UnrealEd_ArrayLabelEnum()
	{
		UPackage* Outer=Z_Construct_UPackage_UnrealEd();
		extern uint32 Get_Z_Construct_UEnum_UnrealEd_ArrayLabelEnum_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("ArrayLabelEnum"), 0, Get_Z_Construct_UEnum_UnrealEd_ArrayLabelEnum_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ArrayLabelEnum"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ArrayIndex0")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ArrayIndex1")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ArrayIndex2")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ArrayIndex3")), 3));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ArrayIndex4")), 4));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ArrayIndex5")), 5));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ArrayIndex_MAX")), 6));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ArrayLabelEnum_MAX")), 7));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Regular);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/PropertyEditorTestObject.h"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_UnrealEd_ArrayLabelEnum_CRC() { return 250715380U; }
	UEnum* Z_Construct_UEnum_UnrealEd_PropertEditorTestEnum()
	{
		UPackage* Outer=Z_Construct_UPackage_UnrealEd();
		extern uint32 Get_Z_Construct_UEnum_UnrealEd_PropertEditorTestEnum_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("PropertEditorTestEnum"), 0, Get_Z_Construct_UEnum_UnrealEd_PropertEditorTestEnum_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("PropertEditorTestEnum"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("PropertyEditorTest_Enum1")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("PropertyEditorTest_Enum2")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("PropertyEditorTest_Enum3")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("PropertyEditorTest_Enum4")), 3));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("PropertyEditorTest_Enum5")), 4));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("PropertyEditorTest_Enum6")), 5));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("PropertyEditorTest_MAX")), 6));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Regular);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/PropertyEditorTestObject.h"));
			MetaData->SetValue(ReturnEnum, TEXT("PropertyEditorTest_Enum1.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("PropertyEditorTest_Enum1.ToolTip"), TEXT("This comment should appear above enum 1"));
			MetaData->SetValue(ReturnEnum, TEXT("PropertyEditorTest_Enum2.ToolTip"), TEXT("This comment should appear above enum 2"));
			MetaData->SetValue(ReturnEnum, TEXT("PropertyEditorTest_Enum3.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("PropertyEditorTest_Enum3.ToolTip"), TEXT("This comment should appear above enum 3"));
			MetaData->SetValue(ReturnEnum, TEXT("PropertyEditorTest_Enum4.ToolTip"), TEXT("This comment should appear above enum 4"));
			MetaData->SetValue(ReturnEnum, TEXT("PropertyEditorTest_Enum5.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("PropertyEditorTest_Enum5.ToolTip"), TEXT("This comment should appear above enum 5"));
			MetaData->SetValue(ReturnEnum, TEXT("PropertyEditorTest_Enum6.ToolTip"), TEXT("This comment should appear above enum 6"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_UnrealEd_PropertEditorTestEnum_CRC() { return 4104645530U; }
	UScriptStruct* Z_Construct_UScriptStruct_FPropertyEditorTestBasicStruct()
	{
		UPackage* Outer=Z_Construct_UPackage_UnrealEd();
		extern uint32 Get_Z_Construct_UScriptStruct_FPropertyEditorTestBasicStruct_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("PropertyEditorTestBasicStruct"), sizeof(FPropertyEditorTestBasicStruct), Get_Z_Construct_UScriptStruct_FPropertyEditorTestBasicStruct_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("PropertyEditorTestBasicStruct"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FPropertyEditorTestBasicStruct>, EStructFlags(0x00000001));
			UProperty* NewProp_InnerStruct = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("InnerStruct"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(InnerStruct, FPropertyEditorTestBasicStruct), 0x0000000000000001, Z_Construct_UScriptStruct_FPropertyEditorTestSubStruct());
			UProperty* NewProp_ObjectPropertyInsideAStruct = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ObjectPropertyInsideAStruct"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(ObjectPropertyInsideAStruct, FPropertyEditorTestBasicStruct), 0x0000000000000001, Z_Construct_UClass_UObject_NoRegister());
			UProperty* NewProp_FloatPropertyInsideAStruct = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("FloatPropertyInsideAStruct"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(FloatPropertyInsideAStruct, FPropertyEditorTestBasicStruct), 0x0000000000000001);
			UProperty* NewProp_IntPropertyInsideAStruct = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("IntPropertyInsideAStruct"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(IntPropertyInsideAStruct, FPropertyEditorTestBasicStruct), 0x0000000000000001);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/PropertyEditorTestObject.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("This structs properties should be pushed out to categories inside its parent category unless it is in an array"));
			MetaData->SetValue(NewProp_InnerStruct, TEXT("Category"), TEXT("InnerStructCategoryWithPushedOutProps"));
			MetaData->SetValue(NewProp_InnerStruct, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/PropertyEditorTestObject.h"));
			MetaData->SetValue(NewProp_ObjectPropertyInsideAStruct, TEXT("Category"), TEXT("InnerStructCategoryWithPushedOutProps"));
			MetaData->SetValue(NewProp_ObjectPropertyInsideAStruct, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/PropertyEditorTestObject.h"));
			MetaData->SetValue(NewProp_FloatPropertyInsideAStruct, TEXT("Category"), TEXT("InnerStructCategoryWithPushedOutProps"));
			MetaData->SetValue(NewProp_FloatPropertyInsideAStruct, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/PropertyEditorTestObject.h"));
			MetaData->SetValue(NewProp_IntPropertyInsideAStruct, TEXT("Category"), TEXT("InnerStructCategoryWithPushedOutProps"));
			MetaData->SetValue(NewProp_IntPropertyInsideAStruct, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/PropertyEditorTestObject.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FPropertyEditorTestBasicStruct_CRC() { return 3372412655U; }
	UScriptStruct* Z_Construct_UScriptStruct_FPropertyEditorTestSubStruct()
	{
		UPackage* Outer=Z_Construct_UPackage_UnrealEd();
		extern uint32 Get_Z_Construct_UScriptStruct_FPropertyEditorTestSubStruct_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("PropertyEditorTestSubStruct"), sizeof(FPropertyEditorTestSubStruct), Get_Z_Construct_UScriptStruct_FPropertyEditorTestSubStruct_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("PropertyEditorTestSubStruct"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FPropertyEditorTestSubStruct>, EStructFlags(0x00000001));
			UProperty* NewProp_CustomizedStructInsideUncustomizedStruct2 = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("CustomizedStructInsideUncustomizedStruct2"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(CustomizedStructInsideUncustomizedStruct2, FPropertyEditorTestSubStruct), 0x0000000000000001, Z_Construct_UScriptStruct_FStringAssetReference());
			UProperty* NewProp_CustomizedStructInsideUncustomizedStruct = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("CustomizedStructInsideUncustomizedStruct"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(CustomizedStructInsideUncustomizedStruct, FPropertyEditorTestSubStruct), 0x0000000000000001, Z_Construct_UScriptStruct_FLinearColor());
			UProperty* NewProp_SecondProperty = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("SecondProperty"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(SecondProperty, FPropertyEditorTestSubStruct), 0x0000000000000001);
			UProperty* NewProp_FirstProperty = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("FirstProperty"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(FirstProperty, FPropertyEditorTestSubStruct), 0x0000000000000001);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/PropertyEditorTestObject.h"));
			MetaData->SetValue(NewProp_CustomizedStructInsideUncustomizedStruct2, TEXT("Category"), TEXT("PropertyEditorTestSubStruct"));
			MetaData->SetValue(NewProp_CustomizedStructInsideUncustomizedStruct2, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/PropertyEditorTestObject.h"));
			MetaData->SetValue(NewProp_CustomizedStructInsideUncustomizedStruct, TEXT("Category"), TEXT("PropertyEditorTestSubStruct"));
			MetaData->SetValue(NewProp_CustomizedStructInsideUncustomizedStruct, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/PropertyEditorTestObject.h"));
			MetaData->SetValue(NewProp_SecondProperty, TEXT("Category"), TEXT("PropertyEditorTestSubStruct"));
			MetaData->SetValue(NewProp_SecondProperty, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/PropertyEditorTestObject.h"));
			MetaData->SetValue(NewProp_FirstProperty, TEXT("Category"), TEXT("PropertyEditorTestSubStruct"));
			MetaData->SetValue(NewProp_FirstProperty, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/PropertyEditorTestObject.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FPropertyEditorTestSubStruct_CRC() { return 3666840705U; }
	UClass* Z_Construct_UClass_UPropertyEditorTestObject_NoRegister()
	{
		return UPropertyEditorTestObject::StaticClass();
	}
	UClass* Z_Construct_UClass_UPropertyEditorTestObject()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UPropertyEditorTestObject::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800088;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_OnlyActorsAllowed = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnlyActorsAllowed"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(OnlyActorsAllowed, UPropertyEditorTestObject), 0x0000000000000001, Z_Construct_UClass_AActor_NoRegister());
				UProperty* NewProp_AnyMaterialInterface = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AnyMaterialInterface"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(AnyMaterialInterface, UPropertyEditorTestObject), 0x0000000000000001, Z_Construct_UClass_UMaterialInterface_NoRegister());
				UProperty* NewProp_StaticMeshProp = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("StaticMeshProp"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(StaticMeshProp, UPropertyEditorTestObject), 0x0000000000000001, Z_Construct_UClass_UStaticMesh_NoRegister());
				UProperty* NewProp_TextureProp = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("TextureProp"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(TextureProp, UPropertyEditorTestObject), 0x0000000000000001, Z_Construct_UClass_UTexture_NoRegister());
				UProperty* NewProp_ArrayOfEditInlineNewSMCs = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ArrayOfEditInlineNewSMCs"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(ArrayOfEditInlineNewSMCs, UPropertyEditorTestObject), 0x0000008000000009);
				UProperty* NewProp_ArrayOfEditInlineNewSMCs_Inner = new(EC_InternalUseOnlyConstructor, NewProp_ArrayOfEditInlineNewSMCs, TEXT("ArrayOfEditInlineNewSMCs"), RF_Public|RF_Transient|RF_Native) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000080008, Z_Construct_UClass_UStaticMeshComponent_NoRegister());
				UProperty* NewProp_EditInlineNewStaticMeshComponent = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("EditInlineNewStaticMeshComponent"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(EditInlineNewStaticMeshComponent, UPropertyEditorTestObject), 0x0000000000080009, Z_Construct_UClass_UStaticMeshComponent_NoRegister());
				UProperty* NewProp_ArrayOfStructs = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ArrayOfStructs"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(ArrayOfStructs, UPropertyEditorTestObject), 0x0000000000000001);
				UProperty* NewProp_ArrayOfStructs_Inner = new(EC_InternalUseOnlyConstructor, NewProp_ArrayOfStructs, TEXT("ArrayOfStructs"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FPropertyEditorTestBasicStruct());
				UProperty* NewProp_AssetReferenceCustomStructWithEditCondition = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AssetReferenceCustomStructWithEditCondition"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(AssetReferenceCustomStructWithEditCondition, UPropertyEditorTestObject), 0x0000000000000001, Z_Construct_UScriptStruct_FStringAssetReference());
				UProperty* NewProp_SimplePropertyWithEditCondition = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SimplePropertyWithEditCondition"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(SimplePropertyWithEditCondition, UPropertyEditorTestObject), 0x0000000000000001);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bEditCondition, UPropertyEditorTestObject, bool);
				UProperty* NewProp_bEditCondition = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bEditCondition"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bEditCondition, UPropertyEditorTestObject), 0x0000000000000000, CPP_BOOL_PROPERTY_BITMASK(bEditCondition, UPropertyEditorTestObject), sizeof(bool), true);
				UProperty* NewProp_AssetReferenceCustomStructWithThumbnail = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AssetReferenceCustomStructWithThumbnail"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(AssetReferenceCustomStructWithThumbnail, UPropertyEditorTestObject), 0x0000000000000001, Z_Construct_UScriptStruct_FStringAssetReference());
				UProperty* NewProp_AssetReferenceCustomStruct = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AssetReferenceCustomStruct"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(AssetReferenceCustomStruct, UPropertyEditorTestObject), 0x0000000000000001, Z_Construct_UScriptStruct_FStringAssetReference());
				UProperty* NewProp_StructWithMultipleInstances2 = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("StructWithMultipleInstances2"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(StructWithMultipleInstances2, UPropertyEditorTestObject), 0x0000000000000001, Z_Construct_UScriptStruct_FPropertyEditorTestBasicStruct());
				UProperty* NewProp_StructWithMultipleInstances1 = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("StructWithMultipleInstances1"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(StructWithMultipleInstances1, UPropertyEditorTestObject), 0x0000000000000001, Z_Construct_UScriptStruct_FPropertyEditorTestBasicStruct());
				UProperty* NewProp_ThisIsBrokenIfItsVisibleInADetailsView = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ThisIsBrokenIfItsVisibleInADetailsView"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(ThisIsBrokenIfItsVisibleInADetailsView, UPropertyEditorTestObject), 0x0000000000000001, Z_Construct_UScriptStruct_FPropertyEditorTestBasicStruct());
				UProperty* NewProp_ObjectThatCannotBeChanged = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ObjectThatCannotBeChanged"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(ObjectThatCannotBeChanged, UPropertyEditorTestObject), 0x00000000000a0009, Z_Construct_UClass_UPrimitiveComponent_NoRegister());
				UProperty* NewProp_StringThatCannotBeChanged = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("StringThatCannotBeChanged"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(StringThatCannotBeChanged, UPropertyEditorTestObject), 0x0000000000020001);
				UProperty* NewProp_IntThatCannotBeChanged = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("IntThatCannotBeChanged"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(IntThatCannotBeChanged, UPropertyEditorTestObject), 0x0000000000020001);
				UProperty* NewProp_IntPropertyWithClampedRange = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("IntPropertyWithClampedRange"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(IntPropertyWithClampedRange, UPropertyEditorTestObject), 0x0000000000000001);
				UProperty* NewProp_FloatPropertyWithClampedRange = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("FloatPropertyWithClampedRange"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(FloatPropertyWithClampedRange, UPropertyEditorTestObject), 0x0000000000000001);
				UProperty* NewProp_StaticArrayOfIntsWithEnumLabels = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("StaticArrayOfIntsWithEnumLabels"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(StaticArrayOfIntsWithEnumLabels, UPropertyEditorTestObject), 0x0000000000000001);
				NewProp_StaticArrayOfIntsWithEnumLabels->ArrayDim = CPP_ARRAY_DIM(StaticArrayOfIntsWithEnumLabels, UPropertyEditorTestObject);
				UProperty* NewProp_StaticArrayOfInts = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("StaticArrayOfInts"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(StaticArrayOfInts, UPropertyEditorTestObject), 0x0000000000000001);
				NewProp_StaticArrayOfInts->ArrayDim = CPP_ARRAY_DIM(StaticArrayOfInts, UPropertyEditorTestObject);
				UProperty* NewProp_FixedArrayOfInts = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("FixedArrayOfInts"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(FixedArrayOfInts, UPropertyEditorTestObject), 0x0000000000000041);
				UProperty* NewProp_FixedArrayOfInts_Inner = new(EC_InternalUseOnlyConstructor, NewProp_FixedArrayOfInts, TEXT("FixedArrayOfInts"), RF_Public|RF_Transient|RF_Native) UIntProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000);
				UProperty* NewProp_StructPropertyArray = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("StructPropertyArray"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(StructPropertyArray, UPropertyEditorTestObject), 0x0000000000000001);
				UProperty* NewProp_StructPropertyArray_Inner = new(EC_InternalUseOnlyConstructor, NewProp_StructPropertyArray, TEXT("StructPropertyArray"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FPropertyEditorTestBasicStruct());
				UProperty* NewProp_EnumPropertyArray = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("EnumPropertyArray"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(EnumPropertyArray, UPropertyEditorTestObject), 0x0000000000000001);
				UProperty* NewProp_EnumPropertyArray_Inner = new(EC_InternalUseOnlyConstructor, NewProp_EnumPropertyArray, TEXT("EnumPropertyArray"), RF_Public|RF_Transient|RF_Native) UByteProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UEnum_UnrealEd_PropertEditorTestEnum());
				UProperty* NewProp_ColorPropertyArray = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ColorPropertyArray"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(ColorPropertyArray, UPropertyEditorTestObject), 0x0000000000000001);
				UProperty* NewProp_ColorPropertyArray_Inner = new(EC_InternalUseOnlyConstructor, NewProp_ColorPropertyArray, TEXT("ColorPropertyArray"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FColor());
				UProperty* NewProp_LinearColorPropertyArray = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("LinearColorPropertyArray"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(LinearColorPropertyArray, UPropertyEditorTestObject), 0x0000000000000001);
				UProperty* NewProp_LinearColorPropertyArray_Inner = new(EC_InternalUseOnlyConstructor, NewProp_LinearColorPropertyArray, TEXT("LinearColorPropertyArray"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FLinearColor());
				UProperty* NewProp_ActorPropertyArray = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ActorPropertyArray"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(ActorPropertyArray, UPropertyEditorTestObject), 0x0000000000000001);
				UProperty* NewProp_ActorPropertyArray_Inner = new(EC_InternalUseOnlyConstructor, NewProp_ActorPropertyArray, TEXT("ActorPropertyArray"), RF_Public|RF_Transient|RF_Native) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UClass_AActor_NoRegister());
				UProperty* NewProp_ObjectPropertyArray = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ObjectPropertyArray"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(ObjectPropertyArray, UPropertyEditorTestObject), 0x0000000000000001);
				UProperty* NewProp_ObjectPropertyArray_Inner = new(EC_InternalUseOnlyConstructor, NewProp_ObjectPropertyArray, TEXT("ObjectPropertyArray"), RF_Public|RF_Transient|RF_Native) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UClass_UObject_NoRegister());
				UProperty* NewProp_RotatorPropertyArray = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("RotatorPropertyArray"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(RotatorPropertyArray, UPropertyEditorTestObject), 0x0000000000000001);
				UProperty* NewProp_RotatorPropertyArray_Inner = new(EC_InternalUseOnlyConstructor, NewProp_RotatorPropertyArray, TEXT("RotatorPropertyArray"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FRotator());
				UProperty* NewProp_Vector4PropertyArray = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Vector4PropertyArray"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(Vector4PropertyArray, UPropertyEditorTestObject), 0x0000000000000001);
				UProperty* NewProp_Vector4PropertyArray_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Vector4PropertyArray, TEXT("Vector4PropertyArray"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FVector4());
				UProperty* NewProp_Vector2PropertyArray = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Vector2PropertyArray"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(Vector2PropertyArray, UPropertyEditorTestObject), 0x0000000000000001);
				UProperty* NewProp_Vector2PropertyArray_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Vector2PropertyArray, TEXT("Vector2PropertyArray"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FVector2D());
				UProperty* NewProp_Vector3PropertyArray = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Vector3PropertyArray"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(Vector3PropertyArray, UPropertyEditorTestObject), 0x0000000000000001);
				UProperty* NewProp_Vector3PropertyArray_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Vector3PropertyArray, TEXT("Vector3PropertyArray"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FVector());
				UProperty* NewProp_TextPropertyArray = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("TextPropertyArray"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(TextPropertyArray, UPropertyEditorTestObject), 0x0000000000000001);
				UProperty* NewProp_TextPropertyArray_Inner = new(EC_InternalUseOnlyConstructor, NewProp_TextPropertyArray, TEXT("TextPropertyArray"), RF_Public|RF_Transient|RF_Native) UTextProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000);
				UProperty* NewProp_StringPropertyArray = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("StringPropertyArray"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(StringPropertyArray, UPropertyEditorTestObject), 0x0000000000000001);
				UProperty* NewProp_StringPropertyArray_Inner = new(EC_InternalUseOnlyConstructor, NewProp_StringPropertyArray, TEXT("StringPropertyArray"), RF_Public|RF_Transient|RF_Native) UStrProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000);
				UProperty* NewProp_BoolPropertyArray = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("BoolPropertyArray"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(BoolPropertyArray, UPropertyEditorTestObject), 0x0000000000000001);
				UProperty* NewProp_BoolPropertyArray_Inner = new(EC_InternalUseOnlyConstructor, NewProp_BoolPropertyArray, TEXT("BoolPropertyArray"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, 0, sizeof(bool), true);
				UProperty* NewProp_NamePropertyArray = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("NamePropertyArray"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(NamePropertyArray, UPropertyEditorTestObject), 0x0000000000000001);
				UProperty* NewProp_NamePropertyArray_Inner = new(EC_InternalUseOnlyConstructor, NewProp_NamePropertyArray, TEXT("NamePropertyArray"), RF_Public|RF_Transient|RF_Native) UNameProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000);
				UProperty* NewProp_FloatPropertyArray = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("FloatPropertyArray"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(FloatPropertyArray, UPropertyEditorTestObject), 0x0000000000000001);
				UProperty* NewProp_FloatPropertyArray_Inner = new(EC_InternalUseOnlyConstructor, NewProp_FloatPropertyArray, TEXT("FloatPropertyArray"), RF_Public|RF_Transient|RF_Native) UFloatProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000);
				UProperty* NewProp_BytePropertyArray = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("BytePropertyArray"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(BytePropertyArray, UPropertyEditorTestObject), 0x0000000000000001);
				UProperty* NewProp_BytePropertyArray_Inner = new(EC_InternalUseOnlyConstructor, NewProp_BytePropertyArray, TEXT("BytePropertyArray"), RF_Public|RF_Transient|RF_Native) UByteProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000);
				UProperty* NewProp_IntProperty32Array = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("IntProperty32Array"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(IntProperty32Array, UPropertyEditorTestObject), 0x0000000000000001);
				UProperty* NewProp_IntProperty32Array_Inner = new(EC_InternalUseOnlyConstructor, NewProp_IntProperty32Array, TEXT("IntProperty32Array"), RF_Public|RF_Transient|RF_Native) UIntProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000);
				UProperty* NewProp_EnumProperty = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("EnumProperty"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(EnumProperty, UPropertyEditorTestObject), 0x0000000000000001, Z_Construct_UEnum_UnrealEd_PropertEditorTestEnum());
				UProperty* NewProp_ColorProperty = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ColorProperty"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(ColorProperty, UPropertyEditorTestObject), 0x0000000000000001, Z_Construct_UScriptStruct_FColor());
				UProperty* NewProp_LinearColorProperty = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("LinearColorProperty"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(LinearColorProperty, UPropertyEditorTestObject), 0x0000000000000001, Z_Construct_UScriptStruct_FLinearColor());
				UProperty* NewProp_ClassProperty = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ClassProperty"), RF_Public|RF_Transient|RF_Native) UClassProperty(CPP_PROPERTY_BASE(ClassProperty, UPropertyEditorTestObject), 0x0000000000000001, Z_Construct_UClass_UObject_NoRegister());
				UProperty* NewProp_ObjectProperty = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ObjectProperty"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(ObjectProperty, UPropertyEditorTestObject), 0x0000000000000001, Z_Construct_UClass_UObject_NoRegister());
				UProperty* NewProp_RotatorProperty = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("RotatorProperty"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(RotatorProperty, UPropertyEditorTestObject), 0x0000000000000001, Z_Construct_UScriptStruct_FRotator());
				UProperty* NewProp_Vector4Property = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Vector4Property"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Vector4Property, UPropertyEditorTestObject), 0x0000000000000001, Z_Construct_UScriptStruct_FVector4());
				UProperty* NewProp_Vector2Property = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Vector2Property"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Vector2Property, UPropertyEditorTestObject), 0x0000000000000001, Z_Construct_UScriptStruct_FVector2D());
				UProperty* NewProp_Vector3Property = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Vector3Property"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Vector3Property, UPropertyEditorTestObject), 0x0000000000000001, Z_Construct_UScriptStruct_FVector());
				UProperty* NewProp_TextProperty = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("TextProperty"), RF_Public|RF_Transient|RF_Native) UTextProperty(CPP_PROPERTY_BASE(TextProperty, UPropertyEditorTestObject), 0x0000000000000001);
				UProperty* NewProp_StringProperty = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("StringProperty"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(StringProperty, UPropertyEditorTestObject), 0x0000000000000001);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(BoolProperty, UPropertyEditorTestObject, bool);
				UProperty* NewProp_BoolProperty = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("BoolProperty"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(BoolProperty, UPropertyEditorTestObject), 0x0000000000000001, CPP_BOOL_PROPERTY_BITMASK(BoolProperty, UPropertyEditorTestObject), sizeof(bool), true);
				UProperty* NewProp_NameProperty = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("NameProperty"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(NameProperty, UPropertyEditorTestObject), 0x0000000000000001);
				UProperty* NewProp_FloatProperty = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("FloatProperty"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(FloatProperty, UPropertyEditorTestObject), 0x0000000000000001);
				UProperty* NewProp_UnsignedInt64Property = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("UnsignedInt64Property"), RF_Public|RF_Transient|RF_Native) UUInt64Property(CPP_PROPERTY_BASE(UnsignedInt64Property, UPropertyEditorTestObject), 0x0000000000000001);
				UProperty* NewProp_UnsignedInt32Property = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("UnsignedInt32Property"), RF_Public|RF_Transient|RF_Native) UUInt32Property(CPP_PROPERTY_BASE(UnsignedInt32Property, UPropertyEditorTestObject), 0x0000000000000001);
				UProperty* NewProp_UnsignedInt16Property = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("UnsignedInt16Property"), RF_Public|RF_Transient|RF_Native) UUInt16Property(CPP_PROPERTY_BASE(UnsignedInt16Property, UPropertyEditorTestObject), 0x0000000000000001);
				UProperty* NewProp_ByteProperty = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ByteProperty"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(ByteProperty, UPropertyEditorTestObject), 0x0000000000000001);
				UProperty* NewProp_Int64Property = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Int64Property"), RF_Public|RF_Transient|RF_Native) UInt64Property(CPP_PROPERTY_BASE(Int64Property, UPropertyEditorTestObject), 0x0000000000000001);
				UProperty* NewProp_Int32Property = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Int32Property"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(Int32Property, UPropertyEditorTestObject), 0x0000000000000001);
				UProperty* NewProp_Int16roperty = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Int16roperty"), RF_Public|RF_Transient|RF_Native) UInt16Property(CPP_PROPERTY_BASE(Int16roperty, UPropertyEditorTestObject), 0x0000000000000001);
				UProperty* NewProp_Int8Property = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Int8Property"), RF_Public|RF_Transient|RF_Native) UInt8Property(CPP_PROPERTY_BASE(Int8Property, UPropertyEditorTestObject), 0x0000000000000001);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Editor/PropertyEditorTestObject.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/PropertyEditorTestObject.h"));
				MetaData->SetValue(NewProp_OnlyActorsAllowed, TEXT("Category"), TEXT("AssetPropertyTests"));
				MetaData->SetValue(NewProp_OnlyActorsAllowed, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/PropertyEditorTestObject.h"));
				MetaData->SetValue(NewProp_AnyMaterialInterface, TEXT("Category"), TEXT("AssetPropertyTests"));
				MetaData->SetValue(NewProp_AnyMaterialInterface, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/PropertyEditorTestObject.h"));
				MetaData->SetValue(NewProp_StaticMeshProp, TEXT("Category"), TEXT("AssetPropertyTests"));
				MetaData->SetValue(NewProp_StaticMeshProp, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/PropertyEditorTestObject.h"));
				MetaData->SetValue(NewProp_TextureProp, TEXT("Category"), TEXT("AssetPropertyTests"));
				MetaData->SetValue(NewProp_TextureProp, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/PropertyEditorTestObject.h"));
				MetaData->SetValue(NewProp_ArrayOfEditInlineNewSMCs, TEXT("Category"), TEXT("EditInlineProps"));
				MetaData->SetValue(NewProp_ArrayOfEditInlineNewSMCs, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_ArrayOfEditInlineNewSMCs, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/PropertyEditorTestObject.h"));
				MetaData->SetValue(NewProp_EditInlineNewStaticMeshComponent, TEXT("Category"), TEXT("EditInlineProps"));
				MetaData->SetValue(NewProp_EditInlineNewStaticMeshComponent, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_EditInlineNewStaticMeshComponent, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/PropertyEditorTestObject.h"));
				MetaData->SetValue(NewProp_ArrayOfStructs, TEXT("Category"), TEXT("StructTests"));
				MetaData->SetValue(NewProp_ArrayOfStructs, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/PropertyEditorTestObject.h"));
				MetaData->SetValue(NewProp_AssetReferenceCustomStructWithEditCondition, TEXT("Category"), TEXT("StructTests"));
				MetaData->SetValue(NewProp_AssetReferenceCustomStructWithEditCondition, TEXT("editcondition"), TEXT("bEditCondition"));
				MetaData->SetValue(NewProp_AssetReferenceCustomStructWithEditCondition, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/PropertyEditorTestObject.h"));
				MetaData->SetValue(NewProp_SimplePropertyWithEditCondition, TEXT("Category"), TEXT("AdvancedProperties"));
				MetaData->SetValue(NewProp_SimplePropertyWithEditCondition, TEXT("editcondition"), TEXT("bEditCondition"));
				MetaData->SetValue(NewProp_SimplePropertyWithEditCondition, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/PropertyEditorTestObject.h"));
				MetaData->SetValue(NewProp_bEditCondition, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/PropertyEditorTestObject.h"));
				MetaData->SetValue(NewProp_AssetReferenceCustomStructWithThumbnail, TEXT("Category"), TEXT("StructTests"));
				MetaData->SetValue(NewProp_AssetReferenceCustomStructWithThumbnail, TEXT("DisplayThumbnail"), TEXT("true"));
				MetaData->SetValue(NewProp_AssetReferenceCustomStructWithThumbnail, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/PropertyEditorTestObject.h"));
				MetaData->SetValue(NewProp_AssetReferenceCustomStruct, TEXT("Category"), TEXT("StructTests"));
				MetaData->SetValue(NewProp_AssetReferenceCustomStruct, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/PropertyEditorTestObject.h"));
				MetaData->SetValue(NewProp_StructWithMultipleInstances2, TEXT("Category"), TEXT("StructTests"));
				MetaData->SetValue(NewProp_StructWithMultipleInstances2, TEXT("editcondition"), TEXT("bEditCondition"));
				MetaData->SetValue(NewProp_StructWithMultipleInstances2, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/PropertyEditorTestObject.h"));
				MetaData->SetValue(NewProp_StructWithMultipleInstances1, TEXT("Category"), TEXT("StructTests"));
				MetaData->SetValue(NewProp_StructWithMultipleInstances1, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/PropertyEditorTestObject.h"));
				MetaData->SetValue(NewProp_ThisIsBrokenIfItsVisibleInADetailsView, TEXT("Category"), TEXT("SingleStruct"));
				MetaData->SetValue(NewProp_ThisIsBrokenIfItsVisibleInADetailsView, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/PropertyEditorTestObject.h"));
				MetaData->SetValue(NewProp_ThisIsBrokenIfItsVisibleInADetailsView, TEXT("ShowOnlyInnerProperties"), TEXT(""));
				MetaData->SetValue(NewProp_ObjectThatCannotBeChanged, TEXT("Category"), TEXT("AdvancedProperties"));
				MetaData->SetValue(NewProp_ObjectThatCannotBeChanged, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_ObjectThatCannotBeChanged, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/PropertyEditorTestObject.h"));
				MetaData->SetValue(NewProp_StringThatCannotBeChanged, TEXT("Category"), TEXT("AdvancedProperties"));
				MetaData->SetValue(NewProp_StringThatCannotBeChanged, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/PropertyEditorTestObject.h"));
				MetaData->SetValue(NewProp_IntThatCannotBeChanged, TEXT("Category"), TEXT("AdvancedProperties"));
				MetaData->SetValue(NewProp_IntThatCannotBeChanged, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/PropertyEditorTestObject.h"));
				MetaData->SetValue(NewProp_IntPropertyWithClampedRange, TEXT("Category"), TEXT("AdvancedProperties"));
				MetaData->SetValue(NewProp_IntPropertyWithClampedRange, TEXT("ClampMax"), TEXT("100"));
				MetaData->SetValue(NewProp_IntPropertyWithClampedRange, TEXT("ClampMin"), TEXT("0"));
				MetaData->SetValue(NewProp_IntPropertyWithClampedRange, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/PropertyEditorTestObject.h"));
				MetaData->SetValue(NewProp_IntPropertyWithClampedRange, TEXT("UIMax"), TEXT("50"));
				MetaData->SetValue(NewProp_IntPropertyWithClampedRange, TEXT("UIMin"), TEXT("0"));
				MetaData->SetValue(NewProp_FloatPropertyWithClampedRange, TEXT("Category"), TEXT("AdvancedProperties"));
				MetaData->SetValue(NewProp_FloatPropertyWithClampedRange, TEXT("ClampMax"), TEXT("100.0"));
				MetaData->SetValue(NewProp_FloatPropertyWithClampedRange, TEXT("ClampMin"), TEXT("0.0"));
				MetaData->SetValue(NewProp_FloatPropertyWithClampedRange, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/PropertyEditorTestObject.h"));
				MetaData->SetValue(NewProp_FloatPropertyWithClampedRange, TEXT("ToolTip"), TEXT("This is a custom tooltip that should be shown"));
				MetaData->SetValue(NewProp_FloatPropertyWithClampedRange, TEXT("UIMax"), TEXT("50.0"));
				MetaData->SetValue(NewProp_FloatPropertyWithClampedRange, TEXT("UIMin"), TEXT("0.0"));
				MetaData->SetValue(NewProp_StaticArrayOfIntsWithEnumLabels, TEXT("ArraySizeEnum"), TEXT("/Script/UnrealEd.ArrayLabelEnum"));
				MetaData->SetValue(NewProp_StaticArrayOfIntsWithEnumLabels, TEXT("Category"), TEXT("ArraysOfProperties"));
				MetaData->SetValue(NewProp_StaticArrayOfIntsWithEnumLabels, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/PropertyEditorTestObject.h"));
				MetaData->SetValue(NewProp_StaticArrayOfInts, TEXT("Category"), TEXT("ArraysOfProperties"));
				MetaData->SetValue(NewProp_StaticArrayOfInts, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/PropertyEditorTestObject.h"));
				MetaData->SetValue(NewProp_FixedArrayOfInts, TEXT("Category"), TEXT("ArraysOfProperties"));
				MetaData->SetValue(NewProp_FixedArrayOfInts, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/PropertyEditorTestObject.h"));
				MetaData->SetValue(NewProp_StructPropertyArray, TEXT("Category"), TEXT("ArraysOfProperties"));
				MetaData->SetValue(NewProp_StructPropertyArray, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/PropertyEditorTestObject.h"));
				MetaData->SetValue(NewProp_EnumPropertyArray, TEXT("Category"), TEXT("ArraysOfProperties"));
				MetaData->SetValue(NewProp_EnumPropertyArray, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/PropertyEditorTestObject.h"));
				MetaData->SetValue(NewProp_ColorPropertyArray, TEXT("Category"), TEXT("ArraysOfProperties"));
				MetaData->SetValue(NewProp_ColorPropertyArray, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/PropertyEditorTestObject.h"));
				MetaData->SetValue(NewProp_LinearColorPropertyArray, TEXT("Category"), TEXT("ArraysOfProperties"));
				MetaData->SetValue(NewProp_LinearColorPropertyArray, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/PropertyEditorTestObject.h"));
				MetaData->SetValue(NewProp_ActorPropertyArray, TEXT("Category"), TEXT("ArraysOfProperties"));
				MetaData->SetValue(NewProp_ActorPropertyArray, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/PropertyEditorTestObject.h"));
				MetaData->SetValue(NewProp_ObjectPropertyArray, TEXT("Category"), TEXT("ArraysOfProperties"));
				MetaData->SetValue(NewProp_ObjectPropertyArray, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/PropertyEditorTestObject.h"));
				MetaData->SetValue(NewProp_RotatorPropertyArray, TEXT("Category"), TEXT("ArraysOfProperties"));
				MetaData->SetValue(NewProp_RotatorPropertyArray, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/PropertyEditorTestObject.h"));
				MetaData->SetValue(NewProp_Vector4PropertyArray, TEXT("Category"), TEXT("ArraysOfProperties"));
				MetaData->SetValue(NewProp_Vector4PropertyArray, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/PropertyEditorTestObject.h"));
				MetaData->SetValue(NewProp_Vector2PropertyArray, TEXT("Category"), TEXT("ArraysOfProperties"));
				MetaData->SetValue(NewProp_Vector2PropertyArray, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/PropertyEditorTestObject.h"));
				MetaData->SetValue(NewProp_Vector3PropertyArray, TEXT("Category"), TEXT("ArraysOfProperties"));
				MetaData->SetValue(NewProp_Vector3PropertyArray, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/PropertyEditorTestObject.h"));
				MetaData->SetValue(NewProp_TextPropertyArray, TEXT("Category"), TEXT("ArraysOfProperties"));
				MetaData->SetValue(NewProp_TextPropertyArray, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/PropertyEditorTestObject.h"));
				MetaData->SetValue(NewProp_StringPropertyArray, TEXT("Category"), TEXT("ArraysOfProperties"));
				MetaData->SetValue(NewProp_StringPropertyArray, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/PropertyEditorTestObject.h"));
				MetaData->SetValue(NewProp_BoolPropertyArray, TEXT("Category"), TEXT("ArraysOfProperties"));
				MetaData->SetValue(NewProp_BoolPropertyArray, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/PropertyEditorTestObject.h"));
				MetaData->SetValue(NewProp_NamePropertyArray, TEXT("Category"), TEXT("ArraysOfProperties"));
				MetaData->SetValue(NewProp_NamePropertyArray, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/PropertyEditorTestObject.h"));
				MetaData->SetValue(NewProp_FloatPropertyArray, TEXT("Category"), TEXT("ArraysOfProperties"));
				MetaData->SetValue(NewProp_FloatPropertyArray, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/PropertyEditorTestObject.h"));
				MetaData->SetValue(NewProp_BytePropertyArray, TEXT("Category"), TEXT("ArraysOfProperties"));
				MetaData->SetValue(NewProp_BytePropertyArray, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/PropertyEditorTestObject.h"));
				MetaData->SetValue(NewProp_BytePropertyArray, TEXT("ToolTip"), TEXT("Byte"));
				MetaData->SetValue(NewProp_IntProperty32Array, TEXT("Category"), TEXT("ArraysOfProperties"));
				MetaData->SetValue(NewProp_IntProperty32Array, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/PropertyEditorTestObject.h"));
				MetaData->SetValue(NewProp_IntProperty32Array, TEXT("ToolTip"), TEXT("Integer"));
				MetaData->SetValue(NewProp_EnumProperty, TEXT("Category"), TEXT("BasicProperties"));
				MetaData->SetValue(NewProp_EnumProperty, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/PropertyEditorTestObject.h"));
				MetaData->SetValue(NewProp_ColorProperty, TEXT("Category"), TEXT("BasicProperties"));
				MetaData->SetValue(NewProp_ColorProperty, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/PropertyEditorTestObject.h"));
				MetaData->SetValue(NewProp_LinearColorProperty, TEXT("Category"), TEXT("BasicProperties"));
				MetaData->SetValue(NewProp_LinearColorProperty, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/PropertyEditorTestObject.h"));
				MetaData->SetValue(NewProp_ClassProperty, TEXT("Category"), TEXT("BasicProperties"));
				MetaData->SetValue(NewProp_ClassProperty, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/PropertyEditorTestObject.h"));
				MetaData->SetValue(NewProp_ObjectProperty, TEXT("Category"), TEXT("BasicProperties"));
				MetaData->SetValue(NewProp_ObjectProperty, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/PropertyEditorTestObject.h"));
				MetaData->SetValue(NewProp_RotatorProperty, TEXT("Category"), TEXT("BasicProperties"));
				MetaData->SetValue(NewProp_RotatorProperty, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/PropertyEditorTestObject.h"));
				MetaData->SetValue(NewProp_Vector4Property, TEXT("Category"), TEXT("BasicProperties"));
				MetaData->SetValue(NewProp_Vector4Property, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/PropertyEditorTestObject.h"));
				MetaData->SetValue(NewProp_Vector2Property, TEXT("Category"), TEXT("BasicProperties"));
				MetaData->SetValue(NewProp_Vector2Property, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/PropertyEditorTestObject.h"));
				MetaData->SetValue(NewProp_Vector3Property, TEXT("Category"), TEXT("BasicProperties"));
				MetaData->SetValue(NewProp_Vector3Property, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/PropertyEditorTestObject.h"));
				MetaData->SetValue(NewProp_TextProperty, TEXT("Category"), TEXT("BasicProperties"));
				MetaData->SetValue(NewProp_TextProperty, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/PropertyEditorTestObject.h"));
				MetaData->SetValue(NewProp_StringProperty, TEXT("Category"), TEXT("BasicProperties"));
				MetaData->SetValue(NewProp_StringProperty, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/PropertyEditorTestObject.h"));
				MetaData->SetValue(NewProp_BoolProperty, TEXT("Category"), TEXT("BasicProperties"));
				MetaData->SetValue(NewProp_BoolProperty, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/PropertyEditorTestObject.h"));
				MetaData->SetValue(NewProp_NameProperty, TEXT("Category"), TEXT("BasicProperties"));
				MetaData->SetValue(NewProp_NameProperty, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/PropertyEditorTestObject.h"));
				MetaData->SetValue(NewProp_FloatProperty, TEXT("Category"), TEXT("BasicProperties"));
				MetaData->SetValue(NewProp_FloatProperty, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/PropertyEditorTestObject.h"));
				MetaData->SetValue(NewProp_UnsignedInt64Property, TEXT("Category"), TEXT("BasicProperties"));
				MetaData->SetValue(NewProp_UnsignedInt64Property, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/PropertyEditorTestObject.h"));
				MetaData->SetValue(NewProp_UnsignedInt32Property, TEXT("Category"), TEXT("BasicProperties"));
				MetaData->SetValue(NewProp_UnsignedInt32Property, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/PropertyEditorTestObject.h"));
				MetaData->SetValue(NewProp_UnsignedInt16Property, TEXT("Category"), TEXT("BasicProperties"));
				MetaData->SetValue(NewProp_UnsignedInt16Property, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/PropertyEditorTestObject.h"));
				MetaData->SetValue(NewProp_ByteProperty, TEXT("Category"), TEXT("BasicProperties"));
				MetaData->SetValue(NewProp_ByteProperty, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/PropertyEditorTestObject.h"));
				MetaData->SetValue(NewProp_Int64Property, TEXT("Category"), TEXT("BasicProperties"));
				MetaData->SetValue(NewProp_Int64Property, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/PropertyEditorTestObject.h"));
				MetaData->SetValue(NewProp_Int32Property, TEXT("Category"), TEXT("BasicProperties"));
				MetaData->SetValue(NewProp_Int32Property, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/PropertyEditorTestObject.h"));
				MetaData->SetValue(NewProp_Int16roperty, TEXT("Category"), TEXT("BasicProperties"));
				MetaData->SetValue(NewProp_Int16roperty, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/PropertyEditorTestObject.h"));
				MetaData->SetValue(NewProp_Int8Property, TEXT("Category"), TEXT("BasicProperties"));
				MetaData->SetValue(NewProp_Int8Property, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/PropertyEditorTestObject.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UPropertyEditorTestObject(Z_Construct_UClass_UPropertyEditorTestObject, TEXT("UPropertyEditorTestObject"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UPropertyEditorTestObject);
	UClass* Z_Construct_UClass_UReplaceActorCommandlet_NoRegister()
	{
		return UReplaceActorCommandlet::StaticClass();
	}
	UClass* Z_Construct_UClass_UReplaceActorCommandlet()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UCommandlet();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UReplaceActorCommandlet::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000088;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Commandlets/ReplaceActorCommandlet.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Commandlets/ReplaceActorCommandlet.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Commandlet for replacing one kind of actor with another kind of actor, copying changed properties from the most-derived common superclass"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UReplaceActorCommandlet(Z_Construct_UClass_UReplaceActorCommandlet, TEXT("UReplaceActorCommandlet"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UReplaceActorCommandlet);
	UClass* Z_Construct_UClass_UResavePackagesCommandlet_NoRegister()
	{
		return UResavePackagesCommandlet::StaticClass();
	}
	UClass* Z_Construct_UClass_UResavePackagesCommandlet()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UCommandlet();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UResavePackagesCommandlet::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100088;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Commandlets/ResavePackagesCommandlet.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Commandlets/ResavePackagesCommandlet.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UResavePackagesCommandlet(Z_Construct_UClass_UResavePackagesCommandlet, TEXT("UResavePackagesCommandlet"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UResavePackagesCommandlet);
	UClass* Z_Construct_UClass_USceneThumbnailInfo_NoRegister()
	{
		return USceneThumbnailInfo::StaticClass();
	}
	UClass* Z_Construct_UClass_USceneThumbnailInfo()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UThumbnailInfo();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = USceneThumbnailInfo::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_OrbitZoom = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OrbitZoom"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(OrbitZoom, USceneThumbnailInfo), 0x0000000000000001);
				UProperty* NewProp_OrbitYaw = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OrbitYaw"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(OrbitYaw, USceneThumbnailInfo), 0x0000000000000001);
				UProperty* NewProp_OrbitPitch = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OrbitPitch"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(OrbitPitch, USceneThumbnailInfo), 0x0000000000000001);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("ThumbnailRendering/SceneThumbnailInfo.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/ThumbnailRendering/SceneThumbnailInfo.h"));
				MetaData->SetValue(NewProp_OrbitZoom, TEXT("Category"), TEXT("Thumbnail"));
				MetaData->SetValue(NewProp_OrbitZoom, TEXT("ModuleRelativePath"), TEXT("Classes/ThumbnailRendering/SceneThumbnailInfo.h"));
				MetaData->SetValue(NewProp_OrbitZoom, TEXT("ToolTip"), TEXT("The offset from the bounds sphere distance from the asset"));
				MetaData->SetValue(NewProp_OrbitYaw, TEXT("Category"), TEXT("Thumbnail"));
				MetaData->SetValue(NewProp_OrbitYaw, TEXT("ModuleRelativePath"), TEXT("Classes/ThumbnailRendering/SceneThumbnailInfo.h"));
				MetaData->SetValue(NewProp_OrbitYaw, TEXT("ToolTip"), TEXT("The yaw of the orbit camera around the asset"));
				MetaData->SetValue(NewProp_OrbitPitch, TEXT("Category"), TEXT("Thumbnail"));
				MetaData->SetValue(NewProp_OrbitPitch, TEXT("ModuleRelativePath"), TEXT("Classes/ThumbnailRendering/SceneThumbnailInfo.h"));
				MetaData->SetValue(NewProp_OrbitPitch, TEXT("ToolTip"), TEXT("The pitch of the orbit camera around the asset"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_USceneThumbnailInfo(Z_Construct_UClass_USceneThumbnailInfo, TEXT("USceneThumbnailInfo"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(USceneThumbnailInfo);
	UEnum* Z_Construct_UEnum_UnrealEd_EThumbnailPrimType()
	{
		UPackage* Outer=Z_Construct_UPackage_UnrealEd();
		extern uint32 Get_Z_Construct_UEnum_UnrealEd_EThumbnailPrimType_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("EThumbnailPrimType"), 0, Get_Z_Construct_UEnum_UnrealEd_EThumbnailPrimType_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EThumbnailPrimType"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("TPT_None")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("TPT_Sphere")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("TPT_Cube")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("TPT_Plane")), 3));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("TPT_Cylinder")), 4));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("TPT_MAX")), 5));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Regular);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/ThumbnailRendering/ThumbnailManager.h"));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("Types of primitives for drawing thumbnails of resources."));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_UnrealEd_EThumbnailPrimType_CRC() { return 2161658171U; }
	UScriptStruct* Z_Construct_UScriptStruct_FThumbnailRenderingInfo()
	{
		UPackage* Outer=Z_Construct_UPackage_UnrealEd();
		extern uint32 Get_Z_Construct_UScriptStruct_FThumbnailRenderingInfo_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("ThumbnailRenderingInfo"), sizeof(FThumbnailRenderingInfo), Get_Z_Construct_UScriptStruct_FThumbnailRenderingInfo_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ThumbnailRenderingInfo"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FThumbnailRenderingInfo>, EStructFlags(0x00000001));
			UProperty* NewProp_Renderer = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Renderer"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(Renderer, FThumbnailRenderingInfo), 0x0000000000000000, Z_Construct_UClass_UThumbnailRenderer_NoRegister());
			UProperty* NewProp_RendererClassName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("RendererClassName"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(RendererClassName, FThumbnailRenderingInfo), 0x0000000000000000);
			UProperty* NewProp_ClassNeedingThumbnail = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ClassNeedingThumbnail"), RF_Public|RF_Transient|RF_Native) UClassProperty(CPP_PROPERTY_BASE(ClassNeedingThumbnail, FThumbnailRenderingInfo), 0x0004000000000000, Z_Construct_UClass_UObject_NoRegister());
			UProperty* NewProp_ClassNeedingThumbnailName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ClassNeedingThumbnailName"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(ClassNeedingThumbnailName, FThumbnailRenderingInfo), 0x0000000000000000);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/ThumbnailRendering/ThumbnailManager.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Holds the settings for a class that needs a thumbnail renderer. Each entry\nmaps to a corresponding class and holds the information needed\nto render the thumbnail, including which object to render via and its\nborder color."));
			MetaData->SetValue(NewProp_Renderer, TEXT("ModuleRelativePath"), TEXT("Classes/ThumbnailRendering/ThumbnailManager.h"));
			MetaData->SetValue(NewProp_Renderer, TEXT("ToolTip"), TEXT("The instance of the renderer class"));
			MetaData->SetValue(NewProp_RendererClassName, TEXT("ModuleRelativePath"), TEXT("Classes/ThumbnailRendering/ThumbnailManager.h"));
			MetaData->SetValue(NewProp_RendererClassName, TEXT("ToolTip"), TEXT("The name of the class to load when rendering this thumbnail\nNOTE: This is a string to avoid any dependencies of compilation"));
			MetaData->SetValue(NewProp_ClassNeedingThumbnail, TEXT("ModuleRelativePath"), TEXT("Classes/ThumbnailRendering/ThumbnailManager.h"));
			MetaData->SetValue(NewProp_ClassNeedingThumbnail, TEXT("ToolTip"), TEXT("This is the class that this entry is for, i.e. the class that\nwill be rendered in the thumbnail views"));
			MetaData->SetValue(NewProp_ClassNeedingThumbnailName, TEXT("ModuleRelativePath"), TEXT("Classes/ThumbnailRendering/ThumbnailManager.h"));
			MetaData->SetValue(NewProp_ClassNeedingThumbnailName, TEXT("ToolTip"), TEXT("The name of the class that this thumbnail is for (so we can lazy bind)"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FThumbnailRenderingInfo_CRC() { return 3672834005U; }
	UClass* Z_Construct_UClass_UThumbnailManager_NoRegister()
	{
		return UThumbnailManager::StaticClass();
	}
	UClass* Z_Construct_UClass_UThumbnailManager()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UThumbnailManager::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000084;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_ThumbnailManagerClassName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ThumbnailManagerClassName"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(ThumbnailManagerClassName, UThumbnailManager), 0x0000080000004000);
				UProperty* NewProp_CheckerboardTexture = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CheckerboardTexture"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(CheckerboardTexture, UThumbnailManager), 0x0000000000002000, Z_Construct_UClass_UTexture2D_NoRegister());
				UProperty* NewProp_AmbientCubemap = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AmbientCubemap"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(AmbientCubemap, UThumbnailManager), 0x0000000000002000, Z_Construct_UClass_UTextureCube_NoRegister());
				UProperty* NewProp_FloorPlaneMaterial = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("FloorPlaneMaterial"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(FloorPlaneMaterial, UThumbnailManager), 0x0000000000002000, Z_Construct_UClass_UMaterial_NoRegister());
				UProperty* NewProp_EditorSkySphere = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("EditorSkySphere"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(EditorSkySphere, UThumbnailManager), 0x0000000000002000, Z_Construct_UClass_UStaticMesh_NoRegister());
				UProperty* NewProp_EditorPlane = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("EditorPlane"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(EditorPlane, UThumbnailManager), 0x0000000000002000, Z_Construct_UClass_UStaticMesh_NoRegister());
				UProperty* NewProp_EditorCylinder = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("EditorCylinder"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(EditorCylinder, UThumbnailManager), 0x0000000000002000, Z_Construct_UClass_UStaticMesh_NoRegister());
				UProperty* NewProp_EditorSphere = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("EditorSphere"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(EditorSphere, UThumbnailManager), 0x0000000000002000, Z_Construct_UClass_UStaticMesh_NoRegister());
				UProperty* NewProp_EditorCube = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("EditorCube"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(EditorCube, UThumbnailManager), 0x0000000000002000, Z_Construct_UClass_UStaticMesh_NoRegister());
				UProperty* NewProp_NotSupported = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("NotSupported"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(NotSupported, UThumbnailManager), 0x0000000000000000, Z_Construct_UScriptStruct_FThumbnailRenderingInfo());
				UProperty* NewProp_RenderableThumbnailTypes = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("RenderableThumbnailTypes"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(RenderableThumbnailTypes, UThumbnailManager), 0x0000080000004000);
				UProperty* NewProp_RenderableThumbnailTypes_Inner = new(EC_InternalUseOnlyConstructor, NewProp_RenderableThumbnailTypes, TEXT("RenderableThumbnailTypes"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000004000, Z_Construct_UScriptStruct_FThumbnailRenderingInfo());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->ClassConfigName = FName(TEXT("Editor"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("ThumbnailRendering/ThumbnailManager.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/ThumbnailRendering/ThumbnailManager.h"));
				MetaData->SetValue(NewProp_ThumbnailManagerClassName, TEXT("ModuleRelativePath"), TEXT("Classes/ThumbnailRendering/ThumbnailManager.h"));
				MetaData->SetValue(NewProp_ThumbnailManagerClassName, TEXT("ToolTip"), TEXT("Holds the name of the thumbnail manager singleton class to instantiate"));
				MetaData->SetValue(NewProp_CheckerboardTexture, TEXT("ModuleRelativePath"), TEXT("Classes/ThumbnailRendering/ThumbnailManager.h"));
				MetaData->SetValue(NewProp_AmbientCubemap, TEXT("ModuleRelativePath"), TEXT("Classes/ThumbnailRendering/ThumbnailManager.h"));
				MetaData->SetValue(NewProp_FloorPlaneMaterial, TEXT("ModuleRelativePath"), TEXT("Classes/ThumbnailRendering/ThumbnailManager.h"));
				MetaData->SetValue(NewProp_EditorSkySphere, TEXT("ModuleRelativePath"), TEXT("Classes/ThumbnailRendering/ThumbnailManager.h"));
				MetaData->SetValue(NewProp_EditorPlane, TEXT("ModuleRelativePath"), TEXT("Classes/ThumbnailRendering/ThumbnailManager.h"));
				MetaData->SetValue(NewProp_EditorCylinder, TEXT("ModuleRelativePath"), TEXT("Classes/ThumbnailRendering/ThumbnailManager.h"));
				MetaData->SetValue(NewProp_EditorSphere, TEXT("ModuleRelativePath"), TEXT("Classes/ThumbnailRendering/ThumbnailManager.h"));
				MetaData->SetValue(NewProp_EditorCube, TEXT("ModuleRelativePath"), TEXT("Classes/ThumbnailRendering/ThumbnailManager.h"));
				MetaData->SetValue(NewProp_EditorCube, TEXT("ToolTip"), TEXT("All these meshes/materials/textures are preloaded via default properties"));
				MetaData->SetValue(NewProp_NotSupported, TEXT("ModuleRelativePath"), TEXT("Classes/ThumbnailRendering/ThumbnailManager.h"));
				MetaData->SetValue(NewProp_NotSupported, TEXT("ToolTip"), TEXT("The render info to share across all object types when the object doesn't\nsupport rendering of thumbnails"));
				MetaData->SetValue(NewProp_RenderableThumbnailTypes, TEXT("ModuleRelativePath"), TEXT("Classes/ThumbnailRendering/ThumbnailManager.h"));
				MetaData->SetValue(NewProp_RenderableThumbnailTypes, TEXT("ToolTip"), TEXT("The array of thumbnail rendering information entries. Each type that supports\nthumbnail rendering has an entry in here."));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UThumbnailManager(Z_Construct_UClass_UThumbnailManager, TEXT("UThumbnailManager"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UThumbnailManager);
	UClass* Z_Construct_UClass_USceneThumbnailInfoWithPrimitive_NoRegister()
	{
		return USceneThumbnailInfoWithPrimitive::StaticClass();
	}
	UClass* Z_Construct_UClass_USceneThumbnailInfoWithPrimitive()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_USceneThumbnailInfo();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = USceneThumbnailInfoWithPrimitive::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_PreviewMesh = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("PreviewMesh"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(PreviewMesh, USceneThumbnailInfoWithPrimitive), 0x0000000000000001, Z_Construct_UScriptStruct_FStringAssetReference());
				UProperty* NewProp_PrimitiveType = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("PrimitiveType"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(PrimitiveType, USceneThumbnailInfoWithPrimitive), 0x0000000000000001, Z_Construct_UEnum_UnrealEd_EThumbnailPrimType());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("ThumbnailRendering/SceneThumbnailInfoWithPrimitive.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/ThumbnailRendering/SceneThumbnailInfoWithPrimitive.h"));
				MetaData->SetValue(NewProp_PreviewMesh, TEXT("Category"), TEXT("Thumbnail"));
				MetaData->SetValue(NewProp_PreviewMesh, TEXT("ModuleRelativePath"), TEXT("Classes/ThumbnailRendering/SceneThumbnailInfoWithPrimitive.h"));
				MetaData->SetValue(NewProp_PreviewMesh, TEXT("ToolTip"), TEXT("The custom mesh used when the primitive type is TPT_None"));
				MetaData->SetValue(NewProp_PrimitiveType, TEXT("Category"), TEXT("Thumbnail"));
				MetaData->SetValue(NewProp_PrimitiveType, TEXT("ModuleRelativePath"), TEXT("Classes/ThumbnailRendering/SceneThumbnailInfoWithPrimitive.h"));
				MetaData->SetValue(NewProp_PrimitiveType, TEXT("ToolTip"), TEXT("The type of primitive used in this thumbnail"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_USceneThumbnailInfoWithPrimitive(Z_Construct_UClass_USceneThumbnailInfoWithPrimitive, TEXT("USceneThumbnailInfoWithPrimitive"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(USceneThumbnailInfoWithPrimitive);
	UEnum* Z_Construct_UEnum_UnrealEd_EOrthoThumbnailDirection()
	{
		UPackage* Outer=Z_Construct_UPackage_UnrealEd();
		extern uint32 Get_Z_Construct_UEnum_UnrealEd_EOrthoThumbnailDirection_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("EOrthoThumbnailDirection"), 0, Get_Z_Construct_UEnum_UnrealEd_EOrthoThumbnailDirection_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EOrthoThumbnailDirection"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EOrthoThumbnailDirection::Top")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EOrthoThumbnailDirection::Bottom")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EOrthoThumbnailDirection::Left")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EOrthoThumbnailDirection::Right")), 3));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EOrthoThumbnailDirection::Front")), 4));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EOrthoThumbnailDirection::Back")), 5));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EOrthoThumbnailDirection::EOrthoThumbnailDirection_MAX")), 6));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/ThumbnailRendering/WorldThumbnailInfo.h"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_UnrealEd_EOrthoThumbnailDirection_CRC() { return 1085491704U; }
	UClass* Z_Construct_UClass_UWorldThumbnailInfo_NoRegister()
	{
		return UWorldThumbnailInfo::StaticClass();
	}
	UClass* Z_Construct_UClass_UWorldThumbnailInfo()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_USceneThumbnailInfo();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UWorldThumbnailInfo::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_OrthoDirection = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OrthoDirection"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(OrthoDirection, UWorldThumbnailInfo), 0x0000000000000001, Z_Construct_UEnum_UnrealEd_EOrthoThumbnailDirection());
				UProperty* NewProp_CameraMode = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CameraMode"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(CameraMode, UWorldThumbnailInfo), 0x0000000000000001, Z_Construct_UEnum_Engine_ECameraProjectionMode());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("ThumbnailRendering/WorldThumbnailInfo.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/ThumbnailRendering/WorldThumbnailInfo.h"));
				MetaData->SetValue(NewProp_OrthoDirection, TEXT("Category"), TEXT("Thumbnail"));
				MetaData->SetValue(NewProp_OrthoDirection, TEXT("ModuleRelativePath"), TEXT("Classes/ThumbnailRendering/WorldThumbnailInfo.h"));
				MetaData->SetValue(NewProp_OrthoDirection, TEXT("ToolTip"), TEXT("The direction of the camera when in Orthographic CameraMode"));
				MetaData->SetValue(NewProp_CameraMode, TEXT("Category"), TEXT("Thumbnail"));
				MetaData->SetValue(NewProp_CameraMode, TEXT("ModuleRelativePath"), TEXT("Classes/ThumbnailRendering/WorldThumbnailInfo.h"));
				MetaData->SetValue(NewProp_CameraMode, TEXT("ToolTip"), TEXT("The type of projection to use"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UWorldThumbnailInfo(Z_Construct_UClass_UWorldThumbnailInfo, TEXT("UWorldThumbnailInfo"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UWorldThumbnailInfo);
	UClass* Z_Construct_UClass_USequenceExporterT3D_NoRegister()
	{
		return USequenceExporterT3D::StaticClass();
	}
	UClass* Z_Construct_UClass_USequenceExporterT3D()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UExporter();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = USequenceExporterT3D::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000088;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Exporters/SequenceExporterT3D.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Exporters/SequenceExporterT3D.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_USequenceExporterT3D(Z_Construct_UClass_USequenceExporterT3D, TEXT("USequenceExporterT3D"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(USequenceExporterT3D);
	UClass* Z_Construct_UClass_USkeletalMeshExporterFBX_NoRegister()
	{
		return USkeletalMeshExporterFBX::StaticClass();
	}
	UClass* Z_Construct_UClass_USkeletalMeshExporterFBX()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UExporter();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = USkeletalMeshExporterFBX::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000088;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Exporters/SkeletalMeshExporterFBX.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Exporters/SkeletalMeshExporterFBX.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_USkeletalMeshExporterFBX(Z_Construct_UClass_USkeletalMeshExporterFBX, TEXT("USkeletalMeshExporterFBX"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(USkeletalMeshExporterFBX);
	UClass* Z_Construct_UClass_USoundClassGraph_NoRegister()
	{
		return USoundClassGraph::StaticClass();
	}
	UClass* Z_Construct_UClass_USoundClassGraph()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UEdGraph();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = USoundClassGraph::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("SoundClassGraph/SoundClassGraph.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/SoundClassGraph/SoundClassGraph.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_USoundClassGraph(Z_Construct_UClass_USoundClassGraph, TEXT("USoundClassGraph"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(USoundClassGraph);
	UClass* Z_Construct_UClass_USoundClassGraphNode_NoRegister()
	{
		return USoundClassGraphNode::StaticClass();
	}
	UClass* Z_Construct_UClass_USoundClassGraphNode()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UEdGraphNode();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = USoundClassGraphNode::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20880080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_SoundClass = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SoundClass"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(SoundClass, USoundClassGraphNode), 0x00020000000a0009, Z_Construct_UClass_USoundClass_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("SoundClassGraph/SoundClassGraphNode.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/SoundClassGraph/SoundClassGraphNode.h"));
				MetaData->SetValue(NewProp_SoundClass, TEXT("Category"), TEXT("Sound"));
				MetaData->SetValue(NewProp_SoundClass, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_SoundClass, TEXT("ModuleRelativePath"), TEXT("Classes/SoundClassGraph/SoundClassGraphNode.h"));
				MetaData->SetValue(NewProp_SoundClass, TEXT("ToolTip"), TEXT("The SoundNode this represents"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_USoundClassGraphNode(Z_Construct_UClass_USoundClassGraphNode, TEXT("USoundClassGraphNode"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(USoundClassGraphNode);
	UScriptStruct* Z_Construct_UScriptStruct_FSoundClassGraphSchemaAction_NewNode()
	{
		UPackage* Outer=Z_Construct_UPackage_UnrealEd();
		extern uint32 Get_Z_Construct_UScriptStruct_FSoundClassGraphSchemaAction_NewNode_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("SoundClassGraphSchemaAction_NewNode"), sizeof(FSoundClassGraphSchemaAction_NewNode), Get_Z_Construct_UScriptStruct_FSoundClassGraphSchemaAction_NewNode_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SoundClassGraphSchemaAction_NewNode"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), Z_Construct_UScriptStruct_FEdGraphSchemaAction(), new UScriptStruct::TCppStructOps<FSoundClassGraphSchemaAction_NewNode>, EStructFlags(0x00000201));
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/SoundClassGraph/SoundClassGraphSchema.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Action to add a node to the graph"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FSoundClassGraphSchemaAction_NewNode_CRC() { return 3824168456U; }
	UClass* Z_Construct_UClass_USoundClassGraphSchema_NoRegister()
	{
		return USoundClassGraphSchema::StaticClass();
	}
	UClass* Z_Construct_UClass_USoundClassGraphSchema()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UEdGraphSchema();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = USoundClassGraphSchema::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("SoundClassGraph/SoundClassGraphSchema.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/SoundClassGraph/SoundClassGraphSchema.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_USoundClassGraphSchema(Z_Construct_UClass_USoundClassGraphSchema, TEXT("USoundClassGraphSchema"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(USoundClassGraphSchema);
	UClass* Z_Construct_UClass_USoundCueGraph_NoRegister()
	{
		return USoundCueGraph::StaticClass();
	}
	UClass* Z_Construct_UClass_USoundCueGraph()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UEdGraph();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = USoundCueGraph::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("SoundCueGraph/SoundCueGraph.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/SoundCueGraph/SoundCueGraph.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_USoundCueGraph(Z_Construct_UClass_USoundCueGraph, TEXT("USoundCueGraph"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(USoundCueGraph);
	UClass* Z_Construct_UClass_USoundCueGraphNode_Base_NoRegister()
	{
		return USoundCueGraphNode_Base::StaticClass();
	}
	UClass* Z_Construct_UClass_USoundCueGraphNode_Base()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UEdGraphNode();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = USoundCueGraphNode_Base::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("SoundCueGraph/SoundCueGraphNode_Base.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/SoundCueGraph/SoundCueGraphNode_Base.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_USoundCueGraphNode_Base(Z_Construct_UClass_USoundCueGraphNode_Base, TEXT("USoundCueGraphNode_Base"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(USoundCueGraphNode_Base);
	UClass* Z_Construct_UClass_USoundCueGraphNode_NoRegister()
	{
		return USoundCueGraphNode::StaticClass();
	}
	UClass* Z_Construct_UClass_USoundCueGraphNode()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_USoundCueGraphNode_Base();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = USoundCueGraphNode::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20880080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_SoundNode = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SoundNode"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(SoundNode, USoundCueGraphNode), 0x00020000000a0009, Z_Construct_UClass_USoundNode_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("SoundCueGraph/SoundCueGraphNode.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/SoundCueGraph/SoundCueGraphNode.h"));
				MetaData->SetValue(NewProp_SoundNode, TEXT("Category"), TEXT("Sound"));
				MetaData->SetValue(NewProp_SoundNode, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_SoundNode, TEXT("ModuleRelativePath"), TEXT("Classes/SoundCueGraph/SoundCueGraphNode.h"));
				MetaData->SetValue(NewProp_SoundNode, TEXT("ToolTip"), TEXT("The SoundNode this represents"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_USoundCueGraphNode(Z_Construct_UClass_USoundCueGraphNode, TEXT("USoundCueGraphNode"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(USoundCueGraphNode);
	UClass* Z_Construct_UClass_USoundCueGraphNode_Root_NoRegister()
	{
		return USoundCueGraphNode_Root::StaticClass();
	}
	UClass* Z_Construct_UClass_USoundCueGraphNode_Root()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_USoundCueGraphNode_Base();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = USoundCueGraphNode_Root::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("SoundCueGraph/SoundCueGraphNode_Root.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/SoundCueGraph/SoundCueGraphNode_Root.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_USoundCueGraphNode_Root(Z_Construct_UClass_USoundCueGraphNode_Root, TEXT("USoundCueGraphNode_Root"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(USoundCueGraphNode_Root);
	UScriptStruct* Z_Construct_UScriptStruct_FSoundCueGraphSchemaAction_Paste()
	{
		UPackage* Outer=Z_Construct_UPackage_UnrealEd();
		extern uint32 Get_Z_Construct_UScriptStruct_FSoundCueGraphSchemaAction_Paste_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("SoundCueGraphSchemaAction_Paste"), sizeof(FSoundCueGraphSchemaAction_Paste), Get_Z_Construct_UScriptStruct_FSoundCueGraphSchemaAction_Paste_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SoundCueGraphSchemaAction_Paste"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), Z_Construct_UScriptStruct_FEdGraphSchemaAction(), new UScriptStruct::TCppStructOps<FSoundCueGraphSchemaAction_Paste>, EStructFlags(0x00000201));
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/SoundCueGraph/SoundCueGraphSchema.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Action to paste clipboard contents into the graph"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FSoundCueGraphSchemaAction_Paste_CRC() { return 2308172728U; }
	UScriptStruct* Z_Construct_UScriptStruct_FSoundCueGraphSchemaAction_NewComment()
	{
		UPackage* Outer=Z_Construct_UPackage_UnrealEd();
		extern uint32 Get_Z_Construct_UScriptStruct_FSoundCueGraphSchemaAction_NewComment_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("SoundCueGraphSchemaAction_NewComment"), sizeof(FSoundCueGraphSchemaAction_NewComment), Get_Z_Construct_UScriptStruct_FSoundCueGraphSchemaAction_NewComment_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SoundCueGraphSchemaAction_NewComment"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), Z_Construct_UScriptStruct_FEdGraphSchemaAction(), new UScriptStruct::TCppStructOps<FSoundCueGraphSchemaAction_NewComment>, EStructFlags(0x00000201));
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/SoundCueGraph/SoundCueGraphSchema.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Action to create new comment"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FSoundCueGraphSchemaAction_NewComment_CRC() { return 1147242516U; }
	UScriptStruct* Z_Construct_UScriptStruct_FSoundCueGraphSchemaAction_NewFromSelected()
	{
		UPackage* Outer=Z_Construct_UPackage_UnrealEd();
		extern uint32 Get_Z_Construct_UScriptStruct_FSoundCueGraphSchemaAction_NewFromSelected_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("SoundCueGraphSchemaAction_NewFromSelected"), sizeof(FSoundCueGraphSchemaAction_NewFromSelected), Get_Z_Construct_UScriptStruct_FSoundCueGraphSchemaAction_NewFromSelected_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SoundCueGraphSchemaAction_NewFromSelected"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), Z_Construct_UScriptStruct_FSoundCueGraphSchemaAction_NewNode(), new UScriptStruct::TCppStructOps<FSoundCueGraphSchemaAction_NewFromSelected>, EStructFlags(0x00000201));
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/SoundCueGraph/SoundCueGraphSchema.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Action to add nodes to the graph based on selected objects"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FSoundCueGraphSchemaAction_NewFromSelected_CRC() { return 1604403521U; }
	UScriptStruct* Z_Construct_UScriptStruct_FSoundCueGraphSchemaAction_NewNode()
	{
		UPackage* Outer=Z_Construct_UPackage_UnrealEd();
		extern uint32 Get_Z_Construct_UScriptStruct_FSoundCueGraphSchemaAction_NewNode_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("SoundCueGraphSchemaAction_NewNode"), sizeof(FSoundCueGraphSchemaAction_NewNode), Get_Z_Construct_UScriptStruct_FSoundCueGraphSchemaAction_NewNode_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SoundCueGraphSchemaAction_NewNode"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), Z_Construct_UScriptStruct_FEdGraphSchemaAction(), new UScriptStruct::TCppStructOps<FSoundCueGraphSchemaAction_NewNode>, EStructFlags(0x00000201));
			UProperty* NewProp_SoundNodeClass = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("SoundNodeClass"), RF_Public|RF_Transient|RF_Native) UClassProperty(CPP_PROPERTY_BASE(SoundNodeClass, FSoundCueGraphSchemaAction_NewNode), 0x0000000000000000, Z_Construct_UClass_UObject_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/SoundCueGraph/SoundCueGraphSchema.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Action to add a node to the graph"));
			MetaData->SetValue(NewProp_SoundNodeClass, TEXT("ModuleRelativePath"), TEXT("Classes/SoundCueGraph/SoundCueGraphSchema.h"));
			MetaData->SetValue(NewProp_SoundNodeClass, TEXT("ToolTip"), TEXT("Class of node we want to create"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FSoundCueGraphSchemaAction_NewNode_CRC() { return 4078730000U; }
	UClass* Z_Construct_UClass_USoundCueGraphSchema_NoRegister()
	{
		return USoundCueGraphSchema::StaticClass();
	}
	UClass* Z_Construct_UClass_USoundCueGraphSchema()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UEdGraphSchema();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = USoundCueGraphSchema::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("SoundCueGraph/SoundCueGraphSchema.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/SoundCueGraph/SoundCueGraphSchema.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_USoundCueGraphSchema(Z_Construct_UClass_USoundCueGraphSchema, TEXT("USoundCueGraphSchema"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(USoundCueGraphSchema);
	UClass* Z_Construct_UClass_USoundExporterOGG_NoRegister()
	{
		return USoundExporterOGG::StaticClass();
	}
	UClass* Z_Construct_UClass_USoundExporterOGG()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UExporter();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = USoundExporterOGG::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000088;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Exporters/SoundExporterOGG.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Exporters/SoundExporterOGG.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_USoundExporterOGG(Z_Construct_UClass_USoundExporterOGG, TEXT("USoundExporterOGG"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(USoundExporterOGG);
	UClass* Z_Construct_UClass_USoundExporterWAV_NoRegister()
	{
		return USoundExporterWAV::StaticClass();
	}
	UClass* Z_Construct_UClass_USoundExporterWAV()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UExporter();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = USoundExporterWAV::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000088;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Exporters/SoundExporterWAV.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Exporters/SoundExporterWAV.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_USoundExporterWAV(Z_Construct_UClass_USoundExporterWAV, TEXT("USoundExporterWAV"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(USoundExporterWAV);
	UClass* Z_Construct_UClass_USoundSurroundExporterWAV_NoRegister()
	{
		return USoundSurroundExporterWAV::StaticClass();
	}
	UClass* Z_Construct_UClass_USoundSurroundExporterWAV()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UExporter();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = USoundSurroundExporterWAV::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000088;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Exporters/SoundSurroundExporterWAV.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Exporters/SoundSurroundExporterWAV.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_USoundSurroundExporterWAV(Z_Construct_UClass_USoundSurroundExporterWAV, TEXT("USoundSurroundExporterWAV"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(USoundSurroundExporterWAV);
	UClass* Z_Construct_UClass_UStaticMeshExporterFBX_NoRegister()
	{
		return UStaticMeshExporterFBX::StaticClass();
	}
	UClass* Z_Construct_UClass_UStaticMeshExporterFBX()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UExporter();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UStaticMeshExporterFBX::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000088;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Exporters/StaticMeshExporterFBX.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Exporters/StaticMeshExporterFBX.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UStaticMeshExporterFBX(Z_Construct_UClass_UStaticMeshExporterFBX, TEXT("UStaticMeshExporterFBX"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UStaticMeshExporterFBX);
	UClass* Z_Construct_UClass_UStaticMeshExporterOBJ_NoRegister()
	{
		return UStaticMeshExporterOBJ::StaticClass();
	}
	UClass* Z_Construct_UClass_UStaticMeshExporterOBJ()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UExporter();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UStaticMeshExporterOBJ::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000088;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Exporters/StaticMeshExporterOBJ.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Exporters/StaticMeshExporterOBJ.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UStaticMeshExporterOBJ(Z_Construct_UClass_UStaticMeshExporterOBJ, TEXT("UStaticMeshExporterOBJ"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UStaticMeshExporterOBJ);
	UClass* Z_Construct_UClass_UDEPRECATED_TemplateMapMetadata_NoRegister()
	{
		return UDEPRECATED_TemplateMapMetadata::StaticClass();
	}
	UClass* Z_Construct_UClass_UDEPRECATED_TemplateMapMetadata()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UDEPRECATED_TemplateMapMetadata::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x22000280;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Editor/TemplateMapMetadata.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/TemplateMapMetadata.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UDEPRECATED_TemplateMapMetadata(Z_Construct_UClass_UDEPRECATED_TemplateMapMetadata, TEXT("UDEPRECATED_TemplateMapMetadata"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UDEPRECATED_TemplateMapMetadata);
	UEnum* Z_Construct_UEnum_UnrealEd_ETexAlign()
	{
		UPackage* Outer=Z_Construct_UPackage_UnrealEd();
		extern uint32 Get_Z_Construct_UEnum_UnrealEd_ETexAlign_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("ETexAlign"), 0, Get_Z_Construct_UEnum_UnrealEd_ETexAlign_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ETexAlign"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("TEXALIGN_None")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("TEXALIGN_Default")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("TEXALIGN_Box")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("TEXALIGN_Planar")), 3));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("TEXALIGN_Fit")), 4));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("TEXALIGN_PlanarAuto")), 5));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("TEXALIGN_PlanarWall")), 6));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("TEXALIGN_PlanarFloor")), 7));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("TEXALIGN_MAX")), 8));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Regular);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/TexAligner/TexAligner.h"));
			MetaData->SetValue(ReturnEnum, TEXT("TEXALIGN_Box.ToolTip"), TEXT("Aligns to best U and V axis based on polys normal."));
			MetaData->SetValue(ReturnEnum, TEXT("TEXALIGN_Default.ToolTip"), TEXT("No special alignment (just derive from UV vectors)."));
			MetaData->SetValue(ReturnEnum, TEXT("TEXALIGN_Fit.ToolTip"), TEXT("Fits texture to a polygon."));
			MetaData->SetValue(ReturnEnum, TEXT("TEXALIGN_None.ToolTip"), TEXT("When passed to functions it means \"use whatever the aligners default is\"."));
			MetaData->SetValue(ReturnEnum, TEXT("TEXALIGN_Planar.ToolTip"), TEXT("Maps the poly to the axis it is closest to laying parallel to."));
			MetaData->SetValue(ReturnEnum, TEXT("TEXALIGN_PlanarAuto.ToolTip"), TEXT("Special version of TEXALIGN_Planar."));
			MetaData->SetValue(ReturnEnum, TEXT("TEXALIGN_PlanarFloor.ToolTip"), TEXT("Special version of TEXALIGN_Planar."));
			MetaData->SetValue(ReturnEnum, TEXT("TEXALIGN_PlanarWall.ToolTip"), TEXT("Special version of TEXALIGN_Planar."));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("Alignment types."));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_UnrealEd_ETexAlign_CRC() { return 1412954373U; }
	UClass* Z_Construct_UClass_UTexAligner_NoRegister()
	{
		return UTexAligner::StaticClass();
	}
	UClass* Z_Construct_UClass_UTexAligner()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UTexAligner::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_Desc = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Desc"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(Desc, UTexAligner), 0x0000000000000000);
				UProperty* NewProp_VTile = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("VTile"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(VTile, UTexAligner), 0x0000000000000000);
				UProperty* NewProp_UTile = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("UTile"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(UTile, UTexAligner), 0x0000000000000000);
				UProperty* NewProp_TAxis = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("TAxis"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(TAxis, UTexAligner), 0x0000000000000000);
				UProperty* NewProp_DefTexAlign = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("DefTexAlign"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(DefTexAlign, UTexAligner), 0x0000000000000000, Z_Construct_UEnum_UnrealEd_ETexAlign());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("TexAligner/TexAligner.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/TexAligner/TexAligner.h"));
				MetaData->SetValue(NewProp_Desc, TEXT("ModuleRelativePath"), TEXT("Classes/TexAligner/TexAligner.h"));
				MetaData->SetValue(NewProp_Desc, TEXT("ToolTip"), TEXT("Description for the editor to display."));
				MetaData->SetValue(NewProp_VTile, TEXT("ModuleRelativePath"), TEXT("Classes/TexAligner/TexAligner.h"));
				MetaData->SetValue(NewProp_UTile, TEXT("ModuleRelativePath"), TEXT("Classes/TexAligner/TexAligner.h"));
				MetaData->SetValue(NewProp_TAxis, TEXT("ModuleRelativePath"), TEXT("Classes/TexAligner/TexAligner.h"));
				MetaData->SetValue(NewProp_DefTexAlign, TEXT("ModuleRelativePath"), TEXT("Classes/TexAligner/TexAligner.h"));
				MetaData->SetValue(NewProp_DefTexAlign, TEXT("ToolTip"), TEXT("The default alignment this aligner represents."));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UTexAligner(Z_Construct_UClass_UTexAligner, TEXT("UTexAligner"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UTexAligner);
	UClass* Z_Construct_UClass_UTexAlignerBox_NoRegister()
	{
		return UTexAlignerBox::StaticClass();
	}
	UClass* Z_Construct_UClass_UTexAlignerBox()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UTexAligner();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UTexAlignerBox::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("TexAligner/TexAlignerBox.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/TexAligner/TexAlignerBox.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UTexAlignerBox(Z_Construct_UClass_UTexAlignerBox, TEXT("UTexAlignerBox"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UTexAlignerBox);
	UClass* Z_Construct_UClass_UTexAlignerDefault_NoRegister()
	{
		return UTexAlignerDefault::StaticClass();
	}
	UClass* Z_Construct_UClass_UTexAlignerDefault()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UTexAligner();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UTexAlignerDefault::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("TexAligner/TexAlignerDefault.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/TexAligner/TexAlignerDefault.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UTexAlignerDefault(Z_Construct_UClass_UTexAlignerDefault, TEXT("UTexAlignerDefault"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UTexAlignerDefault);
	UClass* Z_Construct_UClass_UTexAlignerFit_NoRegister()
	{
		return UTexAlignerFit::StaticClass();
	}
	UClass* Z_Construct_UClass_UTexAlignerFit()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UTexAligner();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UTexAlignerFit::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("TexAligner/TexAlignerFit.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/TexAligner/TexAlignerFit.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UTexAlignerFit(Z_Construct_UClass_UTexAlignerFit, TEXT("UTexAlignerFit"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UTexAlignerFit);
	UClass* Z_Construct_UClass_UTexAlignerPlanar_NoRegister()
	{
		return UTexAlignerPlanar::StaticClass();
	}
	UClass* Z_Construct_UClass_UTexAlignerPlanar()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UTexAligner();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UTexAlignerPlanar::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("TexAligner/TexAlignerPlanar.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/TexAligner/TexAlignerPlanar.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UTexAlignerPlanar(Z_Construct_UClass_UTexAlignerPlanar, TEXT("UTexAlignerPlanar"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UTexAlignerPlanar);
	UClass* Z_Construct_UClass_UTextBufferExporterTXT_NoRegister()
	{
		return UTextBufferExporterTXT::StaticClass();
	}
	UClass* Z_Construct_UClass_UTextBufferExporterTXT()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UExporter();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UTextBufferExporterTXT::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000088;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Exporters/TextBufferExporterTXT.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Exporters/TextBufferExporterTXT.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UTextBufferExporterTXT(Z_Construct_UClass_UTextBufferExporterTXT, TEXT("UTextBufferExporterTXT"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UTextBufferExporterTXT);
	UClass* Z_Construct_UClass_UTextureCubeExporterHDR_NoRegister()
	{
		return UTextureCubeExporterHDR::StaticClass();
	}
	UClass* Z_Construct_UClass_UTextureCubeExporterHDR()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UExporter();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UTextureCubeExporterHDR::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100088;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Exporters/TextureCubeExporterHDR.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Exporters/TextureCubeExporterHDR.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UTextureCubeExporterHDR(Z_Construct_UClass_UTextureCubeExporterHDR, TEXT("UTextureCubeExporterHDR"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UTextureCubeExporterHDR);
	UClass* Z_Construct_UClass_UTextureExporterBMP_NoRegister()
	{
		return UTextureExporterBMP::StaticClass();
	}
	UClass* Z_Construct_UClass_UTextureExporterBMP()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UExporter();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UTextureExporterBMP::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000088;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Exporters/TextureExporterBMP.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Exporters/TextureExporterBMP.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UTextureExporterBMP(Z_Construct_UClass_UTextureExporterBMP, TEXT("UTextureExporterBMP"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UTextureExporterBMP);
	UClass* Z_Construct_UClass_UTextureExporterHDR_NoRegister()
	{
		return UTextureExporterHDR::StaticClass();
	}
	UClass* Z_Construct_UClass_UTextureExporterHDR()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UExporter();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UTextureExporterHDR::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100088;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Exporters/TextureExporterHDR.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Exporters/TextureExporterHDR.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UTextureExporterHDR(Z_Construct_UClass_UTextureExporterHDR, TEXT("UTextureExporterHDR"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UTextureExporterHDR);
	UClass* Z_Construct_UClass_UTextureExporterPCX_NoRegister()
	{
		return UTextureExporterPCX::StaticClass();
	}
	UClass* Z_Construct_UClass_UTextureExporterPCX()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UExporter();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UTextureExporterPCX::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000088;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Exporters/TextureExporterPCX.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Exporters/TextureExporterPCX.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UTextureExporterPCX(Z_Construct_UClass_UTextureExporterPCX, TEXT("UTextureExporterPCX"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UTextureExporterPCX);
	UClass* Z_Construct_UClass_UTextureExporterTGA_NoRegister()
	{
		return UTextureExporterTGA::StaticClass();
	}
	UClass* Z_Construct_UClass_UTextureExporterTGA()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UExporter();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UTextureExporterTGA::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100088;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Exporters/TextureExporterTGA.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Exporters/TextureExporterTGA.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UTextureExporterTGA(Z_Construct_UClass_UTextureExporterTGA, TEXT("UTextureExporterTGA"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UTextureExporterTGA);
	UClass* Z_Construct_UClass_UThumbnailRenderer_NoRegister()
	{
		return UThumbnailRenderer::StaticClass();
	}
	UClass* Z_Construct_UClass_UThumbnailRenderer()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UThumbnailRenderer::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080081;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("ThumbnailRendering/ThumbnailRenderer.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/ThumbnailRendering/ThumbnailRenderer.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UThumbnailRenderer(Z_Construct_UClass_UThumbnailRenderer, TEXT("UThumbnailRenderer"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UThumbnailRenderer);
	UClass* Z_Construct_UClass_UDefaultSizedThumbnailRenderer_NoRegister()
	{
		return UDefaultSizedThumbnailRenderer::StaticClass();
	}
	UClass* Z_Construct_UClass_UDefaultSizedThumbnailRenderer()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UThumbnailRenderer();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UDefaultSizedThumbnailRenderer::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080085;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_DefaultSizeY = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("DefaultSizeY"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(DefaultSizeY, UDefaultSizedThumbnailRenderer), 0x0000000000004000);
				UProperty* NewProp_DefaultSizeX = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("DefaultSizeX"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(DefaultSizeX, UDefaultSizedThumbnailRenderer), 0x0000000000004000);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->ClassConfigName = FName(TEXT("Editor"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("ThumbnailRendering/DefaultSizedThumbnailRenderer.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/ThumbnailRendering/DefaultSizedThumbnailRenderer.h"));
				MetaData->SetValue(NewProp_DefaultSizeY, TEXT("ModuleRelativePath"), TEXT("Classes/ThumbnailRendering/DefaultSizedThumbnailRenderer.h"));
				MetaData->SetValue(NewProp_DefaultSizeY, TEXT("ToolTip"), TEXT("The default height of this thumbnail"));
				MetaData->SetValue(NewProp_DefaultSizeX, TEXT("ModuleRelativePath"), TEXT("Classes/ThumbnailRendering/DefaultSizedThumbnailRenderer.h"));
				MetaData->SetValue(NewProp_DefaultSizeX, TEXT("ToolTip"), TEXT("The default width of this thumbnail"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UDefaultSizedThumbnailRenderer(Z_Construct_UClass_UDefaultSizedThumbnailRenderer, TEXT("UDefaultSizedThumbnailRenderer"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UDefaultSizedThumbnailRenderer);
	UClass* Z_Construct_UClass_UAnimBlueprintThumbnailRenderer_NoRegister()
	{
		return UAnimBlueprintThumbnailRenderer::StaticClass();
	}
	UClass* Z_Construct_UClass_UAnimBlueprintThumbnailRenderer()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UDefaultSizedThumbnailRenderer();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UAnimBlueprintThumbnailRenderer::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080084;


				OuterClass->ClassConfigName = FName(TEXT("Editor"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("ThumbnailRendering/AnimBlueprintThumbnailRenderer.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/ThumbnailRendering/AnimBlueprintThumbnailRenderer.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAnimBlueprintThumbnailRenderer(Z_Construct_UClass_UAnimBlueprintThumbnailRenderer, TEXT("UAnimBlueprintThumbnailRenderer"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAnimBlueprintThumbnailRenderer);
	UClass* Z_Construct_UClass_UAnimSequenceThumbnailRenderer_NoRegister()
	{
		return UAnimSequenceThumbnailRenderer::StaticClass();
	}
	UClass* Z_Construct_UClass_UAnimSequenceThumbnailRenderer()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UDefaultSizedThumbnailRenderer();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UAnimSequenceThumbnailRenderer::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080084;


				OuterClass->ClassConfigName = FName(TEXT("Editor"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("ThumbnailRendering/AnimSequenceThumbnailRenderer.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/ThumbnailRendering/AnimSequenceThumbnailRenderer.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAnimSequenceThumbnailRenderer(Z_Construct_UClass_UAnimSequenceThumbnailRenderer, TEXT("UAnimSequenceThumbnailRenderer"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAnimSequenceThumbnailRenderer);
	UClass* Z_Construct_UClass_UBlendSpaceThumbnailRenderer_NoRegister()
	{
		return UBlendSpaceThumbnailRenderer::StaticClass();
	}
	UClass* Z_Construct_UClass_UBlendSpaceThumbnailRenderer()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UDefaultSizedThumbnailRenderer();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UBlendSpaceThumbnailRenderer::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080084;


				OuterClass->ClassConfigName = FName(TEXT("Editor"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("ThumbnailRendering/BlendSpaceThumbnailRenderer.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/ThumbnailRendering/BlendSpaceThumbnailRenderer.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UBlendSpaceThumbnailRenderer(Z_Construct_UClass_UBlendSpaceThumbnailRenderer, TEXT("UBlendSpaceThumbnailRenderer"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UBlendSpaceThumbnailRenderer);
	UClass* Z_Construct_UClass_UBlueprintThumbnailRenderer_NoRegister()
	{
		return UBlueprintThumbnailRenderer::StaticClass();
	}
	UClass* Z_Construct_UClass_UBlueprintThumbnailRenderer()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UDefaultSizedThumbnailRenderer();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UBlueprintThumbnailRenderer::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080084;


				OuterClass->ClassConfigName = FName(TEXT("Editor"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("ThumbnailRendering/BlueprintThumbnailRenderer.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/ThumbnailRendering/BlueprintThumbnailRenderer.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UBlueprintThumbnailRenderer(Z_Construct_UClass_UBlueprintThumbnailRenderer, TEXT("UBlueprintThumbnailRenderer"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UBlueprintThumbnailRenderer);
	UClass* Z_Construct_UClass_UClassThumbnailRenderer_NoRegister()
	{
		return UClassThumbnailRenderer::StaticClass();
	}
	UClass* Z_Construct_UClass_UClassThumbnailRenderer()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UDefaultSizedThumbnailRenderer();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UClassThumbnailRenderer::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080084;


				OuterClass->ClassConfigName = FName(TEXT("Editor"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("ThumbnailRendering/ClassThumbnailRenderer.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/ThumbnailRendering/ClassThumbnailRenderer.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UClassThumbnailRenderer(Z_Construct_UClass_UClassThumbnailRenderer, TEXT("UClassThumbnailRenderer"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UClassThumbnailRenderer);
	UClass* Z_Construct_UClass_UDestructibleMeshThumbnailRenderer_NoRegister()
	{
		return UDestructibleMeshThumbnailRenderer::StaticClass();
	}
	UClass* Z_Construct_UClass_UDestructibleMeshThumbnailRenderer()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UDefaultSizedThumbnailRenderer();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UDestructibleMeshThumbnailRenderer::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080084;


				OuterClass->ClassConfigName = FName(TEXT("Editor"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("ThumbnailRendering/DestructibleMeshThumbnailRenderer.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/ThumbnailRendering/DestructibleMeshThumbnailRenderer.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UDestructibleMeshThumbnailRenderer(Z_Construct_UClass_UDestructibleMeshThumbnailRenderer, TEXT("UDestructibleMeshThumbnailRenderer"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UDestructibleMeshThumbnailRenderer);
	UClass* Z_Construct_UClass_ULevelThumbnailRenderer_NoRegister()
	{
		return ULevelThumbnailRenderer::StaticClass();
	}
	UClass* Z_Construct_UClass_ULevelThumbnailRenderer()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UDefaultSizedThumbnailRenderer();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = ULevelThumbnailRenderer::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000084;


				OuterClass->ClassConfigName = FName(TEXT("Editor"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("ThumbnailRendering/LevelThumbnailRenderer.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/ThumbnailRendering/LevelThumbnailRenderer.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_ULevelThumbnailRenderer(Z_Construct_UClass_ULevelThumbnailRenderer, TEXT("ULevelThumbnailRenderer"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(ULevelThumbnailRenderer);
	UClass* Z_Construct_UClass_UMaterialFunctionThumbnailRenderer_NoRegister()
	{
		return UMaterialFunctionThumbnailRenderer::StaticClass();
	}
	UClass* Z_Construct_UClass_UMaterialFunctionThumbnailRenderer()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UDefaultSizedThumbnailRenderer();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UMaterialFunctionThumbnailRenderer::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000084;


				OuterClass->ClassConfigName = FName(TEXT("Editor"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("ThumbnailRendering/MaterialFunctionThumbnailRenderer.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/ThumbnailRendering/MaterialFunctionThumbnailRenderer.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UMaterialFunctionThumbnailRenderer(Z_Construct_UClass_UMaterialFunctionThumbnailRenderer, TEXT("UMaterialFunctionThumbnailRenderer"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UMaterialFunctionThumbnailRenderer);
	UClass* Z_Construct_UClass_UMaterialInstanceThumbnailRenderer_NoRegister()
	{
		return UMaterialInstanceThumbnailRenderer::StaticClass();
	}
	UClass* Z_Construct_UClass_UMaterialInstanceThumbnailRenderer()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UDefaultSizedThumbnailRenderer();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UMaterialInstanceThumbnailRenderer::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000084;


				OuterClass->ClassConfigName = FName(TEXT("Editor"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("ThumbnailRendering/MaterialInstanceThumbnailRenderer.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/ThumbnailRendering/MaterialInstanceThumbnailRenderer.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UMaterialInstanceThumbnailRenderer(Z_Construct_UClass_UMaterialInstanceThumbnailRenderer, TEXT("UMaterialInstanceThumbnailRenderer"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UMaterialInstanceThumbnailRenderer);
	UClass* Z_Construct_UClass_USkeletalMeshThumbnailRenderer_NoRegister()
	{
		return USkeletalMeshThumbnailRenderer::StaticClass();
	}
	UClass* Z_Construct_UClass_USkeletalMeshThumbnailRenderer()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UDefaultSizedThumbnailRenderer();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = USkeletalMeshThumbnailRenderer::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080084;


				OuterClass->ClassConfigName = FName(TEXT("Editor"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("ThumbnailRendering/SkeletalMeshThumbnailRenderer.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/ThumbnailRendering/SkeletalMeshThumbnailRenderer.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_USkeletalMeshThumbnailRenderer(Z_Construct_UClass_USkeletalMeshThumbnailRenderer, TEXT("USkeletalMeshThumbnailRenderer"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(USkeletalMeshThumbnailRenderer);
	UClass* Z_Construct_UClass_USlateBrushThumbnailRenderer_NoRegister()
	{
		return USlateBrushThumbnailRenderer::StaticClass();
	}
	UClass* Z_Construct_UClass_USlateBrushThumbnailRenderer()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UDefaultSizedThumbnailRenderer();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = USlateBrushThumbnailRenderer::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080084;


				OuterClass->ClassConfigName = FName(TEXT("Editor"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("ThumbnailRendering/SlateBrushThumbnailRenderer.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/ThumbnailRendering/SlateBrushThumbnailRenderer.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_USlateBrushThumbnailRenderer(Z_Construct_UClass_USlateBrushThumbnailRenderer, TEXT("USlateBrushThumbnailRenderer"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(USlateBrushThumbnailRenderer);
	UClass* Z_Construct_UClass_UStaticMeshThumbnailRenderer_NoRegister()
	{
		return UStaticMeshThumbnailRenderer::StaticClass();
	}
	UClass* Z_Construct_UClass_UStaticMeshThumbnailRenderer()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UDefaultSizedThumbnailRenderer();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UStaticMeshThumbnailRenderer::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080084;


				OuterClass->ClassConfigName = FName(TEXT("Editor"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("ThumbnailRendering/StaticMeshThumbnailRenderer.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/ThumbnailRendering/StaticMeshThumbnailRenderer.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UStaticMeshThumbnailRenderer(Z_Construct_UClass_UStaticMeshThumbnailRenderer, TEXT("UStaticMeshThumbnailRenderer"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UStaticMeshThumbnailRenderer);
	UClass* Z_Construct_UClass_UWorldThumbnailRenderer_NoRegister()
	{
		return UWorldThumbnailRenderer::StaticClass();
	}
	UClass* Z_Construct_UClass_UWorldThumbnailRenderer()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UDefaultSizedThumbnailRenderer();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UWorldThumbnailRenderer::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000084;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bAllowWorldThumbnails, UWorldThumbnailRenderer, bool);
				UProperty* NewProp_bAllowWorldThumbnails = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bAllowWorldThumbnails"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bAllowWorldThumbnails, UWorldThumbnailRenderer), 0x0000000000004000, CPP_BOOL_PROPERTY_BITMASK(bAllowWorldThumbnails, UWorldThumbnailRenderer), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bUseUnlitScene, UWorldThumbnailRenderer, bool);
				UProperty* NewProp_bUseUnlitScene = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bUseUnlitScene"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bUseUnlitScene, UWorldThumbnailRenderer), 0x0000000000004000, CPP_BOOL_PROPERTY_BITMASK(bUseUnlitScene, UWorldThumbnailRenderer), sizeof(bool), true);
				UProperty* NewProp_GlobalOrbitYawOffset = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("GlobalOrbitYawOffset"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(GlobalOrbitYawOffset, UWorldThumbnailRenderer), 0x0000000000004000);
				UProperty* NewProp_GlobalOrbitPitchOffset = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("GlobalOrbitPitchOffset"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(GlobalOrbitPitchOffset, UWorldThumbnailRenderer), 0x0000000000004000);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->ClassConfigName = FName(TEXT("Editor"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("ThumbnailRendering/WorldThumbnailRenderer.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/ThumbnailRendering/WorldThumbnailRenderer.h"));
				MetaData->SetValue(NewProp_bAllowWorldThumbnails, TEXT("ModuleRelativePath"), TEXT("Classes/ThumbnailRendering/WorldThumbnailRenderer.h"));
				MetaData->SetValue(NewProp_bAllowWorldThumbnails, TEXT("ToolTip"), TEXT("If false, all world thumbnails rendering will be disabled"));
				MetaData->SetValue(NewProp_bUseUnlitScene, TEXT("ModuleRelativePath"), TEXT("Classes/ThumbnailRendering/WorldThumbnailRenderer.h"));
				MetaData->SetValue(NewProp_bUseUnlitScene, TEXT("ToolTip"), TEXT("If true, all world thumbnails will be rendered unlit. This is useful in games that have shared lighting in a common map"));
				MetaData->SetValue(NewProp_GlobalOrbitYawOffset, TEXT("ModuleRelativePath"), TEXT("Classes/ThumbnailRendering/WorldThumbnailRenderer.h"));
				MetaData->SetValue(NewProp_GlobalOrbitYawOffset, TEXT("ToolTip"), TEXT("Offset used to orient all worlds to face the camera in degrees when using a perspective camera. Individual thumbnail infos can provide additional offset."));
				MetaData->SetValue(NewProp_GlobalOrbitPitchOffset, TEXT("ModuleRelativePath"), TEXT("Classes/ThumbnailRendering/WorldThumbnailRenderer.h"));
				MetaData->SetValue(NewProp_GlobalOrbitPitchOffset, TEXT("ToolTip"), TEXT("Offset used to orient all worlds to show a more vertical camera, if necessary. Individual thumbnail infos can provide additional offset."));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UWorldThumbnailRenderer(Z_Construct_UClass_UWorldThumbnailRenderer, TEXT("UWorldThumbnailRenderer"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UWorldThumbnailRenderer);
	UClass* Z_Construct_UClass_USoundWaveThumbnailRenderer_NoRegister()
	{
		return USoundWaveThumbnailRenderer::StaticClass();
	}
	UClass* Z_Construct_UClass_USoundWaveThumbnailRenderer()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UThumbnailRenderer();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = USoundWaveThumbnailRenderer::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("ThumbnailRendering/SoundWaveThumbnailRenderer.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/ThumbnailRendering/SoundWaveThumbnailRenderer.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_USoundWaveThumbnailRenderer(Z_Construct_UClass_USoundWaveThumbnailRenderer, TEXT("USoundWaveThumbnailRenderer"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(USoundWaveThumbnailRenderer);
	UClass* Z_Construct_UClass_UTextureThumbnailRenderer_NoRegister()
	{
		return UTextureThumbnailRenderer::StaticClass();
	}
	UClass* Z_Construct_UClass_UTextureThumbnailRenderer()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UThumbnailRenderer();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UTextureThumbnailRenderer::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("ThumbnailRendering/TextureThumbnailRenderer.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/ThumbnailRendering/TextureThumbnailRenderer.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UTextureThumbnailRenderer(Z_Construct_UClass_UTextureThumbnailRenderer, TEXT("UTextureThumbnailRenderer"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UTextureThumbnailRenderer);
	UClass* Z_Construct_UClass_UFontThumbnailRenderer_NoRegister()
	{
		return UFontThumbnailRenderer::StaticClass();
	}
	UClass* Z_Construct_UClass_UFontThumbnailRenderer()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UTextureThumbnailRenderer();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UFontThumbnailRenderer::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("ThumbnailRendering/FontThumbnailRenderer.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/ThumbnailRendering/FontThumbnailRenderer.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UFontThumbnailRenderer(Z_Construct_UClass_UFontThumbnailRenderer, TEXT("UFontThumbnailRenderer"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UFontThumbnailRenderer);
	UClass* Z_Construct_UClass_UParticleSystemThumbnailRenderer_NoRegister()
	{
		return UParticleSystemThumbnailRenderer::StaticClass();
	}
	UClass* Z_Construct_UClass_UParticleSystemThumbnailRenderer()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UTextureThumbnailRenderer();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UParticleSystemThumbnailRenderer::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_OutOfDate = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OutOfDate"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(OutOfDate, UParticleSystemThumbnailRenderer), 0x0000000000000000, Z_Construct_UClass_UTexture2D_NoRegister());
				UProperty* NewProp_NoImage = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("NoImage"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(NoImage, UParticleSystemThumbnailRenderer), 0x0000000000000000, Z_Construct_UClass_UTexture2D_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->ClassConfigName = FName(TEXT("Editor"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("ThumbnailRendering/ParticleSystemThumbnailRenderer.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/ThumbnailRendering/ParticleSystemThumbnailRenderer.h"));
				MetaData->SetValue(NewProp_OutOfDate, TEXT("ModuleRelativePath"), TEXT("Classes/ThumbnailRendering/ParticleSystemThumbnailRenderer.h"));
				MetaData->SetValue(NewProp_NoImage, TEXT("ModuleRelativePath"), TEXT("Classes/ThumbnailRendering/ParticleSystemThumbnailRenderer.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UParticleSystemThumbnailRenderer(Z_Construct_UClass_UParticleSystemThumbnailRenderer, TEXT("UParticleSystemThumbnailRenderer"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UParticleSystemThumbnailRenderer);
	UClass* Z_Construct_UClass_USubsurfaceProfileRenderer_NoRegister()
	{
		return USubsurfaceProfileRenderer::StaticClass();
	}
	UClass* Z_Construct_UClass_USubsurfaceProfileRenderer()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UTextureThumbnailRenderer();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = USubsurfaceProfileRenderer::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("ThumbnailRendering/SubsurfaceProfileRenderer.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/ThumbnailRendering/SubsurfaceProfileRenderer.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_USubsurfaceProfileRenderer(Z_Construct_UClass_USubsurfaceProfileRenderer, TEXT("USubsurfaceProfileRenderer"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(USubsurfaceProfileRenderer);
	UClass* Z_Construct_UClass_UTextureCubeThumbnailRenderer_NoRegister()
	{
		return UTextureCubeThumbnailRenderer::StaticClass();
	}
	UClass* Z_Construct_UClass_UTextureCubeThumbnailRenderer()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UTextureThumbnailRenderer();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UTextureCubeThumbnailRenderer::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Factories/TextureCubeThumbnailRenderer.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Factories/TextureCubeThumbnailRenderer.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UTextureCubeThumbnailRenderer(Z_Construct_UClass_UTextureCubeThumbnailRenderer, TEXT("UTextureCubeThumbnailRenderer"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UTextureCubeThumbnailRenderer);
	UClass* Z_Construct_UClass_UTransBuffer_NoRegister()
	{
		return UTransBuffer::StaticClass();
	}
	UClass* Z_Construct_UClass_UTransBuffer()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UTransactor();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UTransBuffer::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100088;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Editor/TransBuffer.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Editor/TransBuffer.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UTransBuffer(Z_Construct_UClass_UTransBuffer, TEXT("UTransBuffer"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UTransBuffer);
	UScriptStruct* Z_Construct_UScriptStruct_FEditorKeyBinding()
	{
		UPackage* Outer=Z_Construct_UPackage_UnrealEd();
		extern uint32 Get_Z_Construct_UScriptStruct_FEditorKeyBinding_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("EditorKeyBinding"), sizeof(FEditorKeyBinding), Get_Z_Construct_UScriptStruct_FEditorKeyBinding_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EditorKeyBinding"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FEditorKeyBinding>, EStructFlags(0x00000001));
			UProperty* NewProp_CommandName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("CommandName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(CommandName, FEditorKeyBinding), 0x0000000000000000);
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Key"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Key, FEditorKeyBinding), 0x0000000000000000, Z_Construct_UScriptStruct_FKey());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bShiftDown, FEditorKeyBinding, uint8);
			UProperty* NewProp_bShiftDown = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bShiftDown"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bShiftDown, FEditorKeyBinding), 0x0000000000000000, CPP_BOOL_PROPERTY_BITMASK(bShiftDown, FEditorKeyBinding), sizeof(uint8), false);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bAltDown, FEditorKeyBinding, uint8);
			UProperty* NewProp_bAltDown = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bAltDown"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bAltDown, FEditorKeyBinding), 0x0000000000000000, CPP_BOOL_PROPERTY_BITMASK(bAltDown, FEditorKeyBinding), sizeof(uint8), false);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bCtrlDown, FEditorKeyBinding, uint8);
			UProperty* NewProp_bCtrlDown = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bCtrlDown"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bCtrlDown, FEditorKeyBinding), 0x0000000000000000, CPP_BOOL_PROPERTY_BITMASK(bCtrlDown, FEditorKeyBinding), sizeof(uint8), false);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/UnrealEdKeyBindings.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("An editor hotkey binding to a parameterless exec."));
			MetaData->SetValue(NewProp_CommandName, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/UnrealEdKeyBindings.h"));
			MetaData->SetValue(NewProp_Key, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/UnrealEdKeyBindings.h"));
			MetaData->SetValue(NewProp_bShiftDown, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/UnrealEdKeyBindings.h"));
			MetaData->SetValue(NewProp_bAltDown, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/UnrealEdKeyBindings.h"));
			MetaData->SetValue(NewProp_bCtrlDown, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/UnrealEdKeyBindings.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FEditorKeyBinding_CRC() { return 3035475467U; }
	UClass* Z_Construct_UClass_UUnrealEdKeyBindings_NoRegister()
	{
		return UUnrealEdKeyBindings::StaticClass();
	}
	UClass* Z_Construct_UClass_UUnrealEdKeyBindings()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UUnrealEdKeyBindings::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000084;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_KeyBindings = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("KeyBindings"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(KeyBindings, UUnrealEdKeyBindings), 0x0000000000004000);
				UProperty* NewProp_KeyBindings_Inner = new(EC_InternalUseOnlyConstructor, NewProp_KeyBindings, TEXT("KeyBindings"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000004000, Z_Construct_UScriptStruct_FEditorKeyBinding());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->ClassConfigName = FName(TEXT("EditorKeyBindings"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Preferences/UnrealEdKeyBindings.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/UnrealEdKeyBindings.h"));
				MetaData->SetValue(NewProp_KeyBindings, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/UnrealEdKeyBindings.h"));
				MetaData->SetValue(NewProp_KeyBindings, TEXT("ToolTip"), TEXT("Array of keybindings"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UUnrealEdKeyBindings(Z_Construct_UClass_UUnrealEdKeyBindings, TEXT("UUnrealEdKeyBindings"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UUnrealEdKeyBindings);
	UScriptStruct* Z_Construct_UScriptStruct_FClassPickerDefaults()
	{
		UPackage* Outer=Z_Construct_UPackage_UnrealEd();
		extern uint32 Get_Z_Construct_UScriptStruct_FClassPickerDefaults_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("ClassPickerDefaults"), sizeof(FClassPickerDefaults), Get_Z_Construct_UScriptStruct_FClassPickerDefaults_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ClassPickerDefaults"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FClassPickerDefaults>, EStructFlags(0x00000001));
			UProperty* NewProp_AssetClass = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("AssetClass"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(AssetClass, FClassPickerDefaults), 0x0000000000000000);
			UProperty* NewProp_ClassName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ClassName"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(ClassName, FClassPickerDefaults), 0x0000000000000000);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/UnrealEdOptions.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Default Classes for the Class Picker Dialog"));
			MetaData->SetValue(NewProp_AssetClass, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/UnrealEdOptions.h"));
			MetaData->SetValue(NewProp_AssetClass, TEXT("ToolTip"), TEXT("The name of the asset type being created"));
			MetaData->SetValue(NewProp_ClassName, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/UnrealEdOptions.h"));
			MetaData->SetValue(NewProp_ClassName, TEXT("ToolTip"), TEXT("The name of the class to select"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FClassPickerDefaults_CRC() { return 2714173744U; }
	UScriptStruct* Z_Construct_UScriptStruct_FEditorCommand()
	{
		UPackage* Outer=Z_Construct_UPackage_UnrealEd();
		extern uint32 Get_Z_Construct_UScriptStruct_FEditorCommand_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("EditorCommand"), sizeof(FEditorCommand), Get_Z_Construct_UScriptStruct_FEditorCommand_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EditorCommand"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FEditorCommand>, EStructFlags(0x00000001));
			UProperty* NewProp_Description = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Description"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(Description, FEditorCommand), 0x0000000000000000);
			UProperty* NewProp_ExecCommand = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ExecCommand"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(ExecCommand, FEditorCommand), 0x0000000000000000);
			UProperty* NewProp_CommandName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("CommandName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(CommandName, FEditorCommand), 0x0000000000000000);
			UProperty* NewProp_Parent = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Parent"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(Parent, FEditorCommand), 0x0000000000000000);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/UnrealEdOptions.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("A parameterless exec command that can be bound to hotkeys and menu items in the editor."));
			MetaData->SetValue(NewProp_Description, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/UnrealEdOptions.h"));
			MetaData->SetValue(NewProp_ExecCommand, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/UnrealEdOptions.h"));
			MetaData->SetValue(NewProp_CommandName, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/UnrealEdOptions.h"));
			MetaData->SetValue(NewProp_Parent, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/UnrealEdOptions.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FEditorCommand_CRC() { return 4110919844U; }
	UScriptStruct* Z_Construct_UScriptStruct_FEditorCommandCategory()
	{
		UPackage* Outer=Z_Construct_UPackage_UnrealEd();
		extern uint32 Get_Z_Construct_UScriptStruct_FEditorCommandCategory_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("EditorCommandCategory"), sizeof(FEditorCommandCategory), Get_Z_Construct_UScriptStruct_FEditorCommandCategory_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EditorCommandCategory"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FEditorCommandCategory>, EStructFlags(0x00000001));
			UProperty* NewProp_Name = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Name"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(Name, FEditorCommandCategory), 0x0000000000000000);
			UProperty* NewProp_Parent = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Parent"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(Parent, FEditorCommandCategory), 0x0000000000000000);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/UnrealEdOptions.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("A category to store a list of commands."));
			MetaData->SetValue(NewProp_Name, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/UnrealEdOptions.h"));
			MetaData->SetValue(NewProp_Parent, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/UnrealEdOptions.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FEditorCommandCategory_CRC() { return 433901024U; }
	UClass* Z_Construct_UClass_UUnrealEdOptions_NoRegister()
	{
		return UUnrealEdOptions::StaticClass();
	}
	UClass* Z_Construct_UClass_UUnrealEdOptions()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UUnrealEdOptions::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100084;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_NewAssetDefaultClasses = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("NewAssetDefaultClasses"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(NewAssetDefaultClasses, UUnrealEdOptions), 0x0000000000004000);
				UProperty* NewProp_NewAssetDefaultClasses_Inner = new(EC_InternalUseOnlyConstructor, NewProp_NewAssetDefaultClasses, TEXT("NewAssetDefaultClasses"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000004000, Z_Construct_UScriptStruct_FClassPickerDefaults());
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bExpandClassPickerClassList, UUnrealEdOptions, bool);
				UProperty* NewProp_bExpandClassPickerClassList = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bExpandClassPickerClassList"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bExpandClassPickerClassList, UUnrealEdOptions), 0x0000000000004000, CPP_BOOL_PROPERTY_BITMASK(bExpandClassPickerClassList, UUnrealEdOptions), sizeof(bool), true);
				UProperty* NewProp_EditorKeyBindings = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("EditorKeyBindings"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(EditorKeyBindings, UUnrealEdOptions), 0x0000000000000000, Z_Construct_UClass_UUnrealEdKeyBindings_NoRegister());
				UProperty* NewProp_EditorCommands = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("EditorCommands"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(EditorCommands, UUnrealEdOptions), 0x0000000000004000);
				UProperty* NewProp_EditorCommands_Inner = new(EC_InternalUseOnlyConstructor, NewProp_EditorCommands, TEXT("EditorCommands"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000004000, Z_Construct_UScriptStruct_FEditorCommand());
				UProperty* NewProp_EditorCategories = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("EditorCategories"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(EditorCategories, UUnrealEdOptions), 0x0000000000004000);
				UProperty* NewProp_EditorCategories_Inner = new(EC_InternalUseOnlyConstructor, NewProp_EditorCategories, TEXT("EditorCategories"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000004000, Z_Construct_UScriptStruct_FEditorCommandCategory());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->ClassConfigName = FName(TEXT("Editor"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Preferences/UnrealEdOptions.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/UnrealEdOptions.h"));
				MetaData->SetValue(NewProp_NewAssetDefaultClasses, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/UnrealEdOptions.h"));
				MetaData->SetValue(NewProp_NewAssetDefaultClasses, TEXT("ToolTip"), TEXT("The array of default objects in the blueprint class dialog *"));
				MetaData->SetValue(NewProp_bExpandClassPickerClassList, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/UnrealEdOptions.h"));
				MetaData->SetValue(NewProp_bExpandClassPickerClassList, TEXT("ToolTip"), TEXT("If true, the list of classes in the class picker dialog will be expanded"));
				MetaData->SetValue(NewProp_EditorKeyBindings, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/UnrealEdOptions.h"));
				MetaData->SetValue(NewProp_EditorKeyBindings, TEXT("ToolTip"), TEXT("Pointer to the key bindings object that actually stores key bindings for the editor."));
				MetaData->SetValue(NewProp_EditorCommands, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/UnrealEdOptions.h"));
				MetaData->SetValue(NewProp_EditorCommands, TEXT("ToolTip"), TEXT("Commands that can be bound to in the editor."));
				MetaData->SetValue(NewProp_EditorCategories, TEXT("ModuleRelativePath"), TEXT("Classes/Preferences/UnrealEdOptions.h"));
				MetaData->SetValue(NewProp_EditorCategories, TEXT("ToolTip"), TEXT("Categories of commands."));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UUnrealEdOptions(Z_Construct_UClass_UUnrealEdOptions, TEXT("UUnrealEdOptions"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UUnrealEdOptions);
	UClass* Z_Construct_UClass_UUpdateGameProjectCommandlet_NoRegister()
	{
		return UUpdateGameProjectCommandlet::StaticClass();
	}
	UClass* Z_Construct_UClass_UUpdateGameProjectCommandlet()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UCommandlet();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UUpdateGameProjectCommandlet::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000088;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Commandlets/UpdateGameProjectCommandlet.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Commandlets/UpdateGameProjectCommandlet.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UUpdateGameProjectCommandlet(Z_Construct_UClass_UUpdateGameProjectCommandlet, TEXT("UUpdateGameProjectCommandlet"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UUpdateGameProjectCommandlet);
	UScriptStruct* Z_Construct_UScriptStruct_FStructVariableDescription()
	{
		UPackage* Outer=Z_Construct_UPackage_UnrealEd();
		extern uint32 Get_Z_Construct_UScriptStruct_FStructVariableDescription_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("StructVariableDescription"), sizeof(FStructVariableDescription), Get_Z_Construct_UScriptStruct_FStructVariableDescription_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("StructVariableDescription"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FStructVariableDescription>, EStructFlags(0x00000001));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bEnable3dWidget, FStructVariableDescription, bool);
			UProperty* NewProp_bEnable3dWidget = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bEnable3dWidget"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bEnable3dWidget, FStructVariableDescription), 0x0000000000000000, CPP_BOOL_PROPERTY_BITMASK(bEnable3dWidget, FStructVariableDescription), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bDontEditoOnInstance, FStructVariableDescription, bool);
			UProperty* NewProp_bDontEditoOnInstance = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bDontEditoOnInstance"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bDontEditoOnInstance, FStructVariableDescription), 0x0000000000000000, CPP_BOOL_PROPERTY_BITMASK(bDontEditoOnInstance, FStructVariableDescription), sizeof(bool), true);
			UProperty* NewProp_ToolTip = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ToolTip"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(ToolTip, FStructVariableDescription), 0x0000000000000000);
			UProperty* NewProp_CurrentDefaultValue = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("CurrentDefaultValue"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(CurrentDefaultValue, FStructVariableDescription), 0x0000000000000000);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bInvalidMember, FStructVariableDescription, bool);
			UProperty* NewProp_bInvalidMember = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bInvalidMember"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bInvalidMember, FStructVariableDescription), 0x0000000000002000, CPP_BOOL_PROPERTY_BITMASK(bInvalidMember, FStructVariableDescription), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bIsArray, FStructVariableDescription, bool);
			UProperty* NewProp_bIsArray = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bIsArray"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bIsArray, FStructVariableDescription), 0x0000000000000000, CPP_BOOL_PROPERTY_BITMASK(bIsArray, FStructVariableDescription), sizeof(bool), true);
			UProperty* NewProp_SubCategoryObject = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("SubCategoryObject"), RF_Public|RF_Transient|RF_Native) UAssetObjectProperty(CPP_PROPERTY_BASE(SubCategoryObject, FStructVariableDescription), 0x0004000000000000, Z_Construct_UClass_UObject_NoRegister());
			UProperty* NewProp_SubCategory = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("SubCategory"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(SubCategory, FStructVariableDescription), 0x0000000000000000);
			UProperty* NewProp_Category = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Category"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(Category, FStructVariableDescription), 0x0000000000000000);
			UProperty* NewProp_DefaultValue = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("DefaultValue"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(DefaultValue, FStructVariableDescription), 0x0000000000000000);
			UProperty* NewProp_FriendlyName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("FriendlyName"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(FriendlyName, FStructVariableDescription), 0x0000000000000000);
			UProperty* NewProp_VarGuid = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("VarGuid"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(VarGuid, FStructVariableDescription), 0x0000000000000000, Z_Construct_UScriptStruct_FGuid());
			UProperty* NewProp_VarName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("VarName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(VarName, FStructVariableDescription), 0x0000000000000000);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/UserDefinedStructure/UserDefinedStructEditorData.h"));
			MetaData->SetValue(NewProp_bEnable3dWidget, TEXT("ModuleRelativePath"), TEXT("Classes/UserDefinedStructure/UserDefinedStructEditorData.h"));
			MetaData->SetValue(NewProp_bDontEditoOnInstance, TEXT("ModuleRelativePath"), TEXT("Classes/UserDefinedStructure/UserDefinedStructEditorData.h"));
			MetaData->SetValue(NewProp_ToolTip, TEXT("ModuleRelativePath"), TEXT("Classes/UserDefinedStructure/UserDefinedStructEditorData.h"));
			MetaData->SetValue(NewProp_CurrentDefaultValue, TEXT("ModuleRelativePath"), TEXT("Classes/UserDefinedStructure/UserDefinedStructEditorData.h"));
			MetaData->SetValue(NewProp_CurrentDefaultValue, TEXT("ToolTip"), TEXT("CurrentDefaultValue stores the actual default value, after the DefaultValue was changed, and before the struct was recompiled"));
			MetaData->SetValue(NewProp_bInvalidMember, TEXT("ModuleRelativePath"), TEXT("Classes/UserDefinedStructure/UserDefinedStructEditorData.h"));
			MetaData->SetValue(NewProp_bIsArray, TEXT("ModuleRelativePath"), TEXT("Classes/UserDefinedStructure/UserDefinedStructEditorData.h"));
			MetaData->SetValue(NewProp_SubCategoryObject, TEXT("ModuleRelativePath"), TEXT("Classes/UserDefinedStructure/UserDefinedStructEditorData.h"));
			MetaData->SetValue(NewProp_SubCategory, TEXT("ModuleRelativePath"), TEXT("Classes/UserDefinedStructure/UserDefinedStructEditorData.h"));
			MetaData->SetValue(NewProp_Category, TEXT("ModuleRelativePath"), TEXT("Classes/UserDefinedStructure/UserDefinedStructEditorData.h"));
			MetaData->SetValue(NewProp_Category, TEXT("ToolTip"), TEXT("TYPE DATA"));
			MetaData->SetValue(NewProp_DefaultValue, TEXT("ModuleRelativePath"), TEXT("Classes/UserDefinedStructure/UserDefinedStructEditorData.h"));
			MetaData->SetValue(NewProp_FriendlyName, TEXT("ModuleRelativePath"), TEXT("Classes/UserDefinedStructure/UserDefinedStructEditorData.h"));
			MetaData->SetValue(NewProp_VarGuid, TEXT("ModuleRelativePath"), TEXT("Classes/UserDefinedStructure/UserDefinedStructEditorData.h"));
			MetaData->SetValue(NewProp_VarName, TEXT("ModuleRelativePath"), TEXT("Classes/UserDefinedStructure/UserDefinedStructEditorData.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FStructVariableDescription_CRC() { return 779977598U; }
	UClass* Z_Construct_UClass_UUserDefinedStructEditorData_NoRegister()
	{
		return UUserDefinedStructEditorData::StaticClass();
	}
	UClass* Z_Construct_UClass_UUserDefinedStructEditorData()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UUserDefinedStructEditorData::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_NativeBase = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("NativeBase"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(NativeBase, UUserDefinedStructEditorData), 0x0000000000000000, UScriptStruct::StaticClass());
				UProperty* NewProp_ToolTip = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ToolTip"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(ToolTip, UUserDefinedStructEditorData), 0x0000000000000000);
				UProperty* NewProp_VariablesDescriptions = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("VariablesDescriptions"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(VariablesDescriptions, UUserDefinedStructEditorData), 0x0000000000000000);
				UProperty* NewProp_VariablesDescriptions_Inner = new(EC_InternalUseOnlyConstructor, NewProp_VariablesDescriptions, TEXT("VariablesDescriptions"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FStructVariableDescription());
				UProperty* NewProp_UniqueNameId = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("UniqueNameId"), RF_Public|RF_Transient|RF_Native) UUInt32Property(CPP_PROPERTY_BASE(UniqueNameId, UUserDefinedStructEditorData), 0x0000000400000000);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("UserDefinedStructure/UserDefinedStructEditorData.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/UserDefinedStructure/UserDefinedStructEditorData.h"));
				MetaData->SetValue(NewProp_NativeBase, TEXT("ModuleRelativePath"), TEXT("Classes/UserDefinedStructure/UserDefinedStructEditorData.h"));
				MetaData->SetValue(NewProp_NativeBase, TEXT("ToolTip"), TEXT("optional super struct"));
				MetaData->SetValue(NewProp_ToolTip, TEXT("ModuleRelativePath"), TEXT("Classes/UserDefinedStructure/UserDefinedStructEditorData.h"));
				MetaData->SetValue(NewProp_VariablesDescriptions, TEXT("ModuleRelativePath"), TEXT("Classes/UserDefinedStructure/UserDefinedStructEditorData.h"));
				MetaData->SetValue(NewProp_UniqueNameId, TEXT("ModuleRelativePath"), TEXT("Classes/UserDefinedStructure/UserDefinedStructEditorData.h"));
				MetaData->SetValue(NewProp_UniqueNameId, TEXT("ToolTip"), TEXT("the property is used to generate an uniqe name id for member variable"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UUserDefinedStructEditorData(Z_Construct_UClass_UUserDefinedStructEditorData, TEXT("UUserDefinedStructEditorData"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UUserDefinedStructEditorData);
	UClass* Z_Construct_UClass_UWrangleContentCommandlet_NoRegister()
	{
		return UWrangleContentCommandlet::StaticClass();
	}
	UClass* Z_Construct_UClass_UWrangleContentCommandlet()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UCommandlet();
			Z_Construct_UPackage_UnrealEd();
			OuterClass = UWrangleContentCommandlet::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000088;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Commandlets/WrangleContentCommandlet.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Commandlets/WrangleContentCommandlet.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UWrangleContentCommandlet(Z_Construct_UClass_UWrangleContentCommandlet, TEXT("UWrangleContentCommandlet"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UWrangleContentCommandlet);
	UPackage* Z_Construct_UPackage_UnrealEd()
	{
		static UPackage* ReturnPackage = NULL;
		if (!ReturnPackage)
		{
			ReturnPackage = CastChecked<UPackage>(StaticFindObjectFast(UPackage::StaticClass(), NULL, FName(TEXT("/Script/UnrealEd")), false, false));
			ReturnPackage->SetPackageFlags(PKG_CompiledIn | 0x00000000);
			FGuid Guid;
			Guid.A = 0xEE6BCC54;
			Guid.B = 0xA3608882;
			Guid.C = 0x00000000;
			Guid.D = 0x00000000;
			ReturnPackage->SetGuid(Guid);

		}
		return ReturnPackage;
	}
#endif

PRAGMA_ENABLE_DEPRECATION_WARNINGS
